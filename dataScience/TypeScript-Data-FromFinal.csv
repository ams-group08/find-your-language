,created_utc,num_comments,score,selftext,title
0,2016-12-31 20:32:10,5,6,,TIL typescript infers types when destructuring non-uniformly typed arrays
1,2017-01-03 20:57:32,5,2,"Hello, im just wondering, my friend have given me  project,  to make a currency converter with euro and dollars and he wants me to do it in typeScript,  but i then wonder how to begin. i can do it in javaScript but, typScript? i dont get why to use typeScript? any tips?",JavaScript/typescript
2,2017-01-06 21:31:27,6,7,"Hi all,

I wrote the API client for the platform I've been building, [Cycle](https://cycle.io) in Typescript. I've been a huge fan of the language since v1.4, and have implemented some of the latest features of 2.1.4 into this release (Partials) with more to come. 

https://github.com/cycleplatform/api-client-nodejs

I'd like to get the community's thoughts on the way I do error handling here. I've been thinking about writing a blog about it. 
Anyway, instead of using exceptions everywhere, the only time I use exceptions are if there is a configuration error (no token loaded when trying to make a request, etc). For the API responses themselves, I use a tagged union interface with 3 values: ok, error, and value.

What I like about this method is, in order to check the value/error, you first MUST check the value of ok. If it is true, then the logic flow will conclude it must be a success interface and therefore will have a value. If it's not, it will determine it to be an error interface and the error value then becomes available to check.

I have a lot of issues with using exceptions, although I understand why javascript has them and why they can be useful assuming this kind of type safety isn't available. But I think with this approach you are able to get the best of both worlds: Forcing devs to handling logic flow in the case of an error (like exceptions enforce...unless you ignore them and your program crashes from some mysterious place), and the inline readability of error codes (which are bad if you aren't forced to check the return value).

I was inspired heavily by golang's methodologies, as I've been working with that a lot as well over the last couple years. Would be great to hear what the TS community's thoughts are. May not be applicable for non-library things, but I think it's a good fit here.



P.S. If you would like to try out the platform/library, here's a code for $50 in credits to use it (Disclaimer, I'm the CTO...but if you're doing work with docker it's a great solution to deploying your typescript webapps!): [M25JBA](https://portal.cycle.io/signup?code=M25JBA) -- the portal is also written in typescript :)",API Client written in Typescript
3,2017-01-07 18:11:48,1,0,"In our company, we've been migrating to typescript on our angular1 project for a while. We've found the type-safety an invaluable help given the scale of our app; but that did not help us at all with the views, which are still untyped HTML. So I wrote this app, which can extract the code from the views and in effect enables type-checking for the views as well: https://github.com/emmanueltouzery/ng-typeview",ng-typeview: type-safety for angular1 views if you use typescript (xpost /r/angularjs)
4,2017-01-14 20:29:14,0,4,"I'm the developer of [Calendario](https://github.com/deviprsd21/Calendario), not the one who created it at first but the one who developed it from v1 to v5 becasue the original was a [Codrops article](https://tympanus.net/codrops/2012/11/27/calendario-a-flexible-calendar-plugin/) where it was just suppose to be an inspiration and they had no plans to extend it further. 

I have 29 stars for this repo, and another developer has adapted it for wordpress. It is also being used by many in their websites. So first and foremost I want people reading this to check it out and give their feedback, any critical ones are more than appreciated, go deep coding wise (complexity, architecture), though I'm aware of some faults. 

Secondly, I want developers who will want to work on this project and take it further, I'm currently with the mindset to deprecate this in favor of CalendarioFX (still in planning stage), which will leverage typescript, npm, ESNext features and modular architechture with an extensive extendable system which in overall can be considered equal or better than the professional Calendars out there. Thank you for reading this and any feedback is appreciated. ",Calendario - A jQuery calendar plugin for creating flexible calendars
5,2017-01-19 14:38:27,4,7,"Hi guys,

So I'm very new to typescript and I know very little about it. But with a lot of pain and effort I was able to get it to work with VueJS.

[Here's the template that I built.](https://github.com/Evertt/vue-ts-template)

One of the things I desperately wanted and which took me a long time to accomplish is to make it so that I don't need to import Vue or any type decorators like `Component` in every freaking component that I make. As you can see in [this particular vue file](https://github.com/Evertt/vue-ts-template/blob/master/src/components/Hello.vue) I'm extending Vue and using many different type decorators and yet I don't have to import them. That is just so nice on the eyes for me.

However, the way I accomplished that isn't all that beautiful. I basically just copied the type definitions of all those things into [this folder](https://github.com/Evertt/vue-ts-template/tree/master/types). This sucks, because as soon as any of those packages change their type definitions, my template starts to break down.

However, I found that if I tried to simply import those type definitions (I tried a number of ways) then they aren't globally available in all my `.vue` files.

I'd like to know, is it possible to simply import those type definitions in one place and make them available to all my `.vue` files? If so, can anybody tell me how to do it? If this works out I'll be so happy. I really worked for days on getting this to work as much as I did.",Is there a way I can ditch the copies of type definitions I made to make them public?
6,2017-01-22 15:50:42,0,1,,Canvas Layout — Typescript Layout Algorithms [my first typescript project]
7,2017-01-22 19:23:49,31,12,"For a full stack experience. In the java world you can now use Scala and Kotlin on the jvm and in the browser. It would be awesome if  typescript were to run on .NET or the jvm . I know you can write nodejs services but if you want to tap in to the .NET or Jvm ecosystems then you currently have to use another language.

Typescript.NET would be a nice idea.",What is stopping Microsoft from making a typescript compiler that targets .NET
8,2017-01-26 20:59:20,0,0,[deleted],How can I use metismenu with typescript?
9,2017-01-30 13:41:41,3,1,,Use TypeScript Generics to Build a Simple Yet Strongly Typed Cache Utility (xposted to /r/typescript)
10,2017-02-01 23:38:52,5,3,As the title says my technical interview tomorrow will include some typescript questions. I have some experience with typescript but haven't gone through a technical interview for it. Can you all give me some questions I might be asked so I can check how much I know?,"I have an interview tomorrow that involves writing typescript (especially for angular), Can people give me some common interview questions for prep?"
11,2017-02-03 18:38:27,14,2,"I prefer more fully-built out IDEs over editors (like vscode), so I'm curious what people's experiences have been with using Visual Studio? Currently trying to work out how to integrate NPM and the 50k+ other tools that are needed for a TS project.",Working in typescript in Visual Studio?
12,2017-02-06 07:48:12,11,3,"Hi guys,

I'm new to typescript so my question can be auckward but I could not find any clear answer. I saw that modules and namespaces as of typescript definition should be avoided in favour of ES6 modules. Typescript documentation does not talk about it but tslint has a rule that forbid namespaces and modules by default.
So should I avoid using namespaces and why?",[Question] About modules and namespaces
13,2017-02-07 19:03:19,5,2,"My team and I work in React and have been using TypeScript to write some of the larger applications we work on. I really enjoy using it and as long as we stay disciplined to not using `any` it has produced very easy to work with, maintainable projects.

A new application we are brainstorming about right now involves a lot of real-time data. We would like to continue with TypeScript, but are discussing using Immutable.js for performance reasons. Because we will be receiving data often we will likely be triggering many re-renders inside components. Having a performant equality comparison from immutable seems very valuable for use in `shouldComponentUpdate`.

The problem here being that once you create an Immutable.Map/List, types go out the window. Any tooling based on TS will essentially be rendered useless on Immutable objects. We are concerned this will lead to ""corruption"" of the application type system with more and more components losing the tooling advantages of TypeScript as they come in contact with Immutable.

I was wondering if anyone had any experience with these trade-offs. Better to use 100% typescript and no immutable? Just use immutable and not bother with TS?

Is there a middle ground maybe? Using most of the application with normal TS and only keeping real-time data as Immutable objects?",TypeScript &amp; Immutable.js?
14,2017-02-09 11:33:02,2,5,"Hi,
I needed for studies to implement l-systems. Instead of doing simple program to generate raw l-system I tried to build something that can be easily add rules and axioms to generate every l-system. 

https://github.com/thegrymek/typescript-l-systems

I used there bootstrap, jquery and jquery turtle. 
I'm new with typescript and generally in js world.

Have fun!",I made L-systems website using typescript!
15,2017-02-13 15:14:15,8,16,,es7-typescript-starter: A starter typescript project for node projects &amp; libraries
16,2017-02-13 17:57:49,1,3,,ES7/typescript starter for building javascript libraries: exposes CommonJS &amp; tree-shakable ES6 module
17,2017-02-21 07:03:41,1,0,"I cant build my ionic 2 App. Serving works after changing a file.

On ionic serve, I get the following error message: 


    [07:36:10]  ionic-app-scripts 1.0.0 
    [07:36:10]  watch started ... 
    [07:36:10]  build dev started ... 
    [07:36:10]  clean started ... 
    [07:36:10]  clean finished in 1 ms 
    [07:36:10]  copy started ... 
    [07:36:10]  transpile started ... 
    [07:36:15]  build dev failed: Maximum call stack size exceeded 
    [07:36:15]  dev server running: http://localhost:8100/ 

Then when I change a *.ts file the app is built and can be used

    [07:37:32]  build started ... 
    [07:37:32]  transpile started ... 
    [07:37:39]  build finished in 6.81 s 

When I run ionic build the following error message is displayed:

    [07:40:40]  transpile started ... 
    [07:40:44]  build dev failed: Maximum call stack size exceeded 
    [07:40:44]  ionic-app-script task: ""build"" 
    [07:40:44]  RangeError: Maximum call stack size exceeded 
    RangeError: Maximum call stack size exceeded
        at Object.binarySearch (/Users/huli/Documents/leseschlauapp/node_modules/typescript/lib/typescript.js:1327:26)
        at computeLineAndCharacterOfPosition (/Users/huli/Documents/leseschlauapp/node_modules/typescript/lib/typescript.js:4070:29)
        at Object.getLineAndCharacterOfPosition (/Users/huli/Documents/leseschlauapp/node_modules/typescript/lib/typescript.js:4089:16)
        at emitPos (*/node_modules/typescript/lib/typescript.js:35556:36)
        at emitStart (*/node_modules/typescript/lib/typescript.js:35598:13)
        at emitNodeWithSourceMap (*/node_modules/typescript/lib/typescript.js:44266:21)
        at emitNodeConsideringCommentsOption (*/node_modules/typescript/lib/typescript.js:44258:21)
        at emit (*/node_modules/typescript/lib/typescript.js:44240:17)
        at emitPropertyAccess (*/node_modules/typescript/lib/typescript.js:39200:17)
        at emitJavaScriptWorker (*/node_modules/typescript/lib/typescript.js:44393:32)
    
    npm ERR! Darwin 16.1.0
    npm ERR! argv ""/usr/local/bin/node"" ""/usr/local/bin/npm"" ""run"" ""ionic:build"" ""--""
    npm ERR! node v7.4.0
    npm ERR! npm  v4.0.5
    npm ERR! code ELIFECYCLE
    npm ERR! ionic-hello-world@ ionic:build: `ionic-app-scripts build`
    npm ERR! Exit status 1

Here is my package.json if this might help

    {
      ""name"": ""ionic-hello-world"",
      ""author"": ""Ionic Framework"",
      ""homepage"": ""http://ionicframework.com/"",
      ""private"": true,
      ""scripts"": {
        ""ionic:build"": ""ionic-app-scripts build"",
        ""ionic:serve"": ""ionic-app-scripts serve""
      },
      ""dependencies"": {
        ""@angular/common"": ""2.2.1"",
        ""@angular/compiler"": ""2.2.1"",
        ""@angular/compiler-cli"": ""2.2.1"",
        ""@angular/core"": ""2.2.1"",
        ""@angular/forms"": ""2.2.1"",
        ""@angular/http"": ""2.2.1"",
        ""@angular/platform-browser"": ""2.2.1"",
        ""@angular/platform-browser-dynamic"": ""2.2.1"",
        ""@angular/platform-server"": ""2.2.1"",
        ""@ionic/storage"": ""1.1.7"",
        ""dragula"": ""^3.7.2"",
        ""ionic-angular"": ""2.0.0"",
        ""ionic-native"": ""2.2.11"",
        ""ionicons"": ""3.0.0"",
        ""ng2-dragula"": ""^1.2.2-0"",
        ""rxjs"": ""5.0.0-beta.12"",
        ""zone.js"": ""0.6.26""
      },
      ""devDependencies"": {
        ""@ionic/app-scripts"": ""1.0.0"",
        ""typescript"": ""2.0.9""
      },
      ""cordovaPlugins"": [
        ""cordova-plugin-whitelist"",
        ""cordova-plugin-statusbar"",
        ""cordova-plugin-console"",
        ""cordova-plugin-device"",
        ""cordova-plugin-splashscreen"",
        ""ionic-plugin-keyboard""
      ],
      ""cordovaPlatforms"": [
        ""ios"",
        {
          ""platform"": ""ios"",
          ""version"": """",
          ""locator"": ""ios""
        }
      ],
      ""description"": ""leseschlauapp: An Ionic project""
    }

 

",ionic 2 build fails
18,2017-02-21 09:31:19,0,5,"Do you have a very interactive app with lots of shortcuts? ShortcutJS is an Open Source project that makes defining all your shortcuts very easy, by defining **Combos** bound to **Actions**. Even better, you can define them all **in JSON file**.

**Checkout the github repo**: [https://github.com/coosto/ShortcutJS](https://github.com/coosto/ShortcutJS)

Looking forward to receive some feeback about it. Hope the community finds it helpful.

*Example*

In a file `shortcuts.json`

    [
      {
        ""combo"": ""ctrl a"",
        ""action"": ""selectAll""
      },
      {
        ""combo"": ""ctrl alt f"",
        ""action"": ""find""
      }
    ]

In your code:

    // --&gt; main.js
    import { shortcutJS } from 'shortcutjs'
    import shortcuts from './shortcuts.json'

    // optional debug param
    shortcutJS.fromJson(shortcuts, { debug: true })


    // --&gt; yourComponent.js (any other file)
    import { shortcutJS } from 'shortcutjs'

    // Subscribe to the action created from the json
    shortcutJS.subscribe('selectAll', ev =&gt; console.log('ctrl a have been triggered!', ev))","ShortcutJS: Keyboard manager for javascript and typescript, made for humans 😎"
19,2017-02-21 10:59:13,1,7,"ShortcutJS is an Open Source project that makes defining all your shortcuts very easy, by defining **Combos** bound to **Actions**. Even better, you can define them all **in JSON file**.

**Checkout the github repo**: [https://github.com/coosto/ShortcutJS](https://github.com/coosto/ShortcutJS)

I'd appreaciatte **feedback** on the project to see what the community needs from it ;).



*Example*

In a file `shortcuts.json`

    [
      {
        ""combo"": ""ctrl a"",
        ""action"": ""selectAll""
      },
      {
        ""combo"": ""ctrl alt f"",
        ""action"": ""find""
      }
    ]

In your code:

    // --&gt; main.js
    import { shortcutJS } from 'shortcutjs'
    import shortcuts from './shortcuts.json'

    // optional debug param
    shortcutJS.fromJson(shortcuts, { debug: true })


    // --&gt; yourComponent.js (any other file)
    import { shortcutJS } from 'shortcutjs'

    // Subscribe to the action created from the json
    shortcutJS.subscribe('selectAll', ev =&gt; console.log('ctrl a have been triggered!', ev))","ShortcutJS: Keyboard manager for javascript and typescript, made for humans 😎"
20,2017-02-21 18:17:17,2,1,"Where i work, we have been having problems to deploy node.js (written in typescript and javascript) apps into production effectively. 


I noticed that projects such as [angular-cli](https://github.com/angular/angular-cli) use environments which, in my opinion, is a bit excessive for terminal-only programs.



I think my best attempt was with [nconf](https://github.com/indexzero/nconf). But the project seems unmaintained and does weird things with defaults and command arguments.


I noticed alot of different projects trying to solve this problem such as: 

* [confit](https://www.npmjs.com/package/confit)
* [configstore](https://www.npmjs.com/package/configstore)
* [dotenv](https://github.com/motdotla/dotenv)
* [confeta](https://www.npmjs.com/package/confeta)
* [configvention](https://www.npmjs.com/package/configvention)


My ideal configuration solution should follow the following principles:

- no copy paste .json files or text around
- must not be committed
- should be generated depending on the environment
- cross platform
- least modifications needed to run as possible
- production must run straight out of download with `$npm start`
- follow the convention static values -&gt; args -&gt; environment variables -&gt; file and if not defined already -&gt; default


What do you suggest to solve my problems? Do you guys now any other alternatives? ",How to properly define the configuration file in your node project?
21,2017-02-23 19:27:26,9,0,Extending the object doesn't work for me. Is there any solution?,How can I extend every object in typescript?
22,2017-02-27 22:11:49,5,0,"Ok so I am jumping in headfirst to a bunch of things this week: node.js, express, pug, and typescript. I'm seeing if I can just re-create my .NET database access class into typescript and node with the [node-mssql module](http://patriksimek.github.io/node-mssql/). I got up and running with some code and connected to my database pretty simply, but the code is a mess and I want to write something a class to help keep things clean and simple later.
    
    let sql = require(""mssql"");
    class Dba {
        connectionObj: object;
        connection: object;
        query: string;
        request: object;
    
        constructor(sqlConfig: object, sqlQuery: string) {
            this.connectionObj = sqlConfig;
            this.query = sqlQuery;
            try {
                this.connection = new sql.Connection();
                this.request = new sql.Request(this.connection);
            } catch (ex) {
                console.log(ex);
            }
        }
    
        addParams(params: object) {
            Object.keys(params).forEach(function(key, index) {
                this.request.input(key, sql.NVarChar);
                this.request.output(params[key], sql.NVarChar);
            });
        }
    
        executeReader(params: object) {
            this.addParams(params);
            this.request.query(this.query, function(err, recordset) {
                if (err) {
                console.log(err);
                } else {
                    return recordset;
                }
            });
        }
    }

It's just a rough start, I'm sure there's a lot wrong in there already, but what I really need help with are the properties I have setup for request and connection. I'm trying to have them reference the module's methods/objects (not sure which actually) sql.Connection() and sql.Request(). Is this where Interfaces come in? Am I doing this whole thing wrong, or am I at least close? Any help would be appreciated.","objects, classes, parameters. I have something simple I am trying to accomplish and I just cannot figure it out. Any guidance?"
23,2017-03-01 10:17:21,21,21,"Hello, just here to show a simple chat application I wrote. It uses web sockets to connect the client with the server. Written with swift/kitura on the server, and typescript for the client part.

Source: https://bitbucket.org/drk4/chat/src

You can try it out here: http://chat4321.herokuapp.com/

As usual, feedback is always welcome. 
Cheers!",Show chat application
24,2017-03-01 12:19:23,5,5,"I would like to know if the typescript decorators can be used to help build forms.

could I have decorators above my model properties like this:

@displayOrder(1)

@label(""The title of the post"")

@controlType(""SIMPLETEXT"")

@minLength(20)

@maxLength(140)

title: string;

Then I can have a custom component (my formbuilder) take in the instance of the model, and dynamically build the form accordingly by looking at the metadata?

Im looking at examples and nearly all the blog spam out there just implement some logger which is not helping.

Also, rather than have 5 separate decorators like above, is it possible to have one decorator that took in multiple parameters

eg 

@form({ displayOrder: 1, label: ""xxx"", controlType: ""TEXTAREA"", minlength: 10, maxLength: 20})

somefield: string;

Thanks for any insight on this! and also if there is already a library that does this very thing, please let me know!

",Use case for decorators - building forms?
25,2017-03-01 13:54:03,4,0,"So I'm importing Vue and a whole bunch of vue-related decorators in the global namespace. Maybe you think it's a bad idea, but I won't change it until I run into problems with it.

Anyhow, the way I'm doing it now does create a hell of a lot of repetition in my `bootstrap.ts` file:

    import {
        Vue       as _Vue,
        Mix       as _Mix,
        prop      as _prop,
        Mixin     as _Mixin,
        watch     as _watch,
        state     as _state,
        getter    as _getter,
        action    as _action,
        filter    as _filter,
        mutation  as _mutation,
        resultOf  as _resultOf,
        lifecycle as _lifecycle,
        namespace as _namespace,
        Component as _Component,
    } from 'vue-typescript-decorators'

    // This part is necessary so that these decorators
    // are actually added to the window object
    declare const global: any

    global.Vue       = _Vue
    global.Mix       = _Mix
    global.prop      = _prop
    global.Mixin     = _Mixin
    global.watch     = _watch
    global.state     = _state
    global.getter    = _getter
    global.action    = _action
    global.filter    = _filter
    global.mutation  = _mutation
    global.resultOf  = _resultOf
    global.lifecycle = _lifecycle
    global.namespace = _namespace
    global.Component = _Component

    // This part is necessary so that typescript understands
    // that these decorators are globally available
    declare global {
        const Vue       : typeof _Vue
        const Mix       : typeof _Mix
        const prop      : typeof _prop
        const Mixin     : typeof _Mixin
        const watch     : typeof _watch
        const state     : typeof _state
        const getter    : typeof _getter
        const action    : typeof _action
        const filter    : typeof _filter
        const mutation  : typeof _mutation
        const resultOf  : typeof _resultOf
        const lifecycle : typeof _lifecycle
        const namespace : typeof _namespace
        const Component : typeof _Component
    }

Does anybody know how to minimize all this repetition?",I finally found a way to make stuff globally available in typescript. But how do I minimize this repetition I have now?
26,2017-03-01 16:02:54,7,1,"I am using the [TypeWriter](https://github.com/frhagn/Typewriter) tool and it can create the typescript models from the c# models. An issue I have ran into is that if the c# model is a complex object, the typescript model will not import the model that is within the c# model.

    class Person {
      public string Name {get;set;}
      public Address Address {get;set;}
    }

Now another class for the Address object

    class Address {
          public string City {get;set;}
          public string State {get;set;}
        }

I would expect the typescript model to have:

    import { Address } from './model';
    
    export class Person{
      public name: string;
      public address: Address;
    }

I'm sure there has to be a way and there is some customizing of the template but I can't seem to figure it out.",Using TypeWriter visual studio tool
27,2017-03-01 18:40:19,5,0,"I am confused about the first two: 1- I understand ES6 is a next gen for plain JS, but it will take a while for it to be everywhere, and yet many experts are talking about it as if. I am not trying to be cutting edge, just HTML5 stuff, should i worry about ES6 or ignore??, 2- typescript, I understand it is not a dynamically typed language ( bad thing IMO), and pushed by MS, why is it important and what is in it that makes appealing or must have? thanks in advance.","ES6, typescript, or plain JS"
28,2017-03-03 10:23:34,12,8,"Hi there. I made some sample implementations for dependency injection for typescript with typechekable.
Samples there. https://github.com/brn/typescript-mixin-di-sample.git
Please tell me your thoughts.",Typescript Dependency Injection samples by class Mixin introduces in 2.2.0
29,2017-03-04 23:21:41,0,5,"Hi everyone, I shared my repo with single exercises from scratch for developers who need learn the typescript basis, If do you want to help me translating the exercises You're welcome! :)

https://github.com/andru255/typescript-exercises",Exercises in spanish
30,2017-03-05 16:42:07,13,2,"Do I need something like webpack to use features like async/await. Also how do I go about using the es6 module pattern? I was seeing exports/require errors in console. Lastly, how do I go about using modules in node_modules?",Integrating es6+ with typescript?
31,2017-03-08 03:45:42,2,7,"Hey, typescripters!
I'm using ""react-navigation"" and I had to manually convert TypeDefinition.js to react-navigation.d.ts And you know what? The differences are minimal. It would be awesome if there was a tool. Maybe someone has already implemented it. Does anybody know?
",Is there a Flow to TS definitions conversion tool?
32,2017-03-09 09:41:08,0,12,"I started writing Alexa skills recently, but found the official SDK really annoying to use from TypeScript, so I decided to roll my own SDK: https://www.npmjs.com/package/alexa-ts

This is my first TypeScript project, so would love some feedback/constructive criticisms on what's idiomatic/best practice etc or what would be helpful if you were to use it.

The main aims were to:
* Improve type safety - helping typescript highlight problems
* Support promises throughout instead of using callbacks
* Allow composable middleware components

Also, here's the GitHub repo: https://github.com/o2Labs/alexa-ts",Building Alexa skills in TypeScript
33,2017-03-10 11:35:51,9,7,"My vendor chunk is over 4 mb, and it takes webpack more than 30 seconds to build the whole thing. I want to build only my typescript and leave the vendor chunk as is. How can I do that?

relevant typescript:
    
    import ""syncfusion-javascript/scripts/ej/common/ej.unobtrusive.min.js"";
    import ""syncfusion-javascript/scripts/ej/web/ej.tab.min"";
    import ""syncfusion-javascript/scripts/ej/web/ej.slider.min"";
    import ""syncfusion-javascript/scripts/ej/web/ej.grid.min"";
    import ""syncfusion-javascript/scripts/ej/web/ej.schedule.min"";
    import ""syncfusion-javascript/scripts/ej/web/ej.fileexplorer.min"";
    import ""syncfusion-javascript/scripts/ej/web/ej.excelfilter.min"";
    import ""syncfusion-javascript/scripts/ej/web/ej.editor.min"";
    
    import ""syncfusion-ej-global-all/i18n/ej.culture.nl-NL.min"";
    import ""syncfusion-ej-global-all/i18n/ej.culture.en-US.min"";
    import ""syncfusion-ej-global-all/i18n/ej.culture.es-ES.min"";
    import ""syncfusion-ej-global-all/i18n/ej.culture.de-DE.min"";
    import ""syncfusion-ej-global-all/i18n/ej.culture.it-IT.min"";
    
    import ""syncfusion-ej-global-all/l10n/ej.localetexts.nl-NL.min"";
    import ""syncfusion-ej-global-all/l10n/ej.localetexts.en-US.min"";
    import ""syncfusion-ej-global-all/l10n/ej.localetexts.es-ES.min"";
    import ""syncfusion-ej-global-all/l10n/ej.localetexts.de-DE.min"";
    import ""syncfusion-ej-global-all/l10n/ej.localetexts.it-IT.min"";
    
    import ""syncfusion-javascript/Content/ej/web/ej.widgets.core.office-365.min.css"";
    import ""syncfusion-javascript/Content/ej/web/office-365/ej.theme.min.css"";
    
    require('tinymce/tinymce');

And in my webpack config I have these plugins:

        new copyWebpackPlugin([
            { from: '../node_modules/tinymce/plugins', to: './tinymce/plugins' },
            { from: '../node_modules/tinymce/themes', to: './tinymce/themes' },
            { from: '../node_modules/tinymce/skins', to: './tinymce/skins' },
        ]),
        new webpack.optimize.CommonsChunkPlugin({
            name: 'vendor',
            filename: 'vendor.bundle.js',
            minChunks(module, count) {
                var context = module.context;
                return context &amp;&amp; context.indexOf('syncfusion') &gt;= 0 || context &amp;&amp; context.indexOf('tinymce') &gt;= 0;
            },
        }),
",How do I prevent rebuilding of my vendor chunk?
34,2017-03-12 06:21:17,2,2,"What are best practices for learning Typescript in webstorm? My primary motivation is that it is a prerequisite for both Ionic 2 &amp; Angular 2.

I will be starting with the Typescript quickstart before I move onto the angular quickstart. I want to make a web app in angular 2.

I seem to be on the right track so far, but then I saw the settings regarding es6 vs es5. 

What do you people do? How many of you are actually writing typescript with es6 and babel?

I assume that typescript and es5 is what I will see in the ionic and angular tutorials and sample code? ",Typescript dev env. config help in webstorm
35,2017-03-12 20:25:18,4,0,"I just finished this library for DI, IoC, AOP stuff. 

Could you guys, review this?

https://github.com/k1r0s/kaop#method-advices

https://github.com/k1r0s/kaop-ts (typescript bro)

Here are some examples about its capabilities

https://github.com/k1r0s/asv-pokedex/blob/master/server/Controller.js

https://github.com/k1r0s/kir/blob/master/src/tag/k-include.js

Thanks!",new JS library for OOP/AOP stuff
36,2017-03-12 20:35:55,0,2,,JSVerify 0.8.0 has typescript typings
37,2017-03-14 21:14:34,6,1,"can I get one? this is what I have, but I'm getting a red squiggly line:

            let button = &lt;HTMLElement&gt;document.body.querySelector("".btn"");
             button.addEventListener(""click"", () =&gt;{});",example of HTMLElement.addEventListener in typescript?
38,2017-03-15 20:00:49,7,0,"First time dabbling in TypeScript, writing a VScode extension. Have coded in a purely-functional language for the past few months exclusively and already I'm wishing for a pattern here that ""compiles"" (TS to JS) but raises an ""undefined"" error. For example, consider first this properly-working function:

    function printLines (values: string[]) {
        values.map( (val) =&gt; vsOutput.appendLine(val) )
    }

What I'd *really* like to do is:

    function printLines (values: string[]) {
        values.map( vsOutput.appendLine )
    }

(In this simple example one wouldn't gain much but one quickly reaches more involved code-paths where this is a boon to readability and compactness.)

This ""compiles"", but at runtime it errors out with `cannot read property 'append' of undefined`.

^((*Of course appendLine just transfers to append, hence..*)^)

With ""normal"" functions (rather than such OO-style ""methods"" as above in dot-notation where the left-hand side denotes some kind of `this` binding) this isn't an issue of course in both JS and TS. ""First-class functions"" / functions-as-values work perfectly fine and have for years. But not so for ""methods on this-very object""-as-values, it would seem.

Perfectly OK too, so why am I asking this in the /r/typescript subreddit? Simple reason, I'm just wondering whether TS provides syntax-sugar as this could be easily transformed in a (verbose-to-write, painful to read, but otherwise perfectly correct &amp; adequate) closure on (in the above case) `vsOutput`. Simply think, when you're already transforming TS to JS, maybe the fine language gurus at MS added a few ""goodies"" over the past few years, at least those that are trivial and cheap and risk-free?

Otherwise, do you know of a good helper function for helping out with such cases that's kinda favoured by the ""functional JS"" (TS) crowd out there, if any? I know vaguely that those scripters tend to love to have a little helper toolbelt for currying, composition etc.. BUT here we're talking about expressing OOP-methods (in this case coming from our vscode APIs) in a functional style, so I haven't quite managed to whip something up off-the-top-of-my-head that actually works","Does TS offer syntax-sugar for ""first-class methods""?"
39,2017-03-16 10:32:06,9,20,,A type-safe typescript immutable library
40,2017-03-20 16:38:39,10,4,"Hi, I'm trying to learn typescript by working on a side project and I want to use functions from a [library](https://github.com/bestiejs/platform.js/)  but I can't find a .ts / .d.ts version.

So how do i import a JS file and call it's functions in my .ts file?

Thanks",Using Javascript Library in Typescript
41,2017-03-23 12:48:54,10,8,"Running typescript + mocha + gulp and looking for a code coverage tool/library. 
I've looked at a few but they all seem to come back to istanbul.
But Istanbul has out of date dependencies and hasn't been updated since august.

Are there other tools out there that work with typescript or does anyone know if istanbul is still an active project?",Typescript + Mocha + Code Coverage?
42,2017-03-24 11:49:59,6,0,"So I am trying to build a bunch of classes in typescript many of which extend each other. I want to build constructors for each of them. I have tried to do this in a couple of ways but I want to make sure whoever uses these sends the proper values to the constructor so I wanted to pass an interface into each as well.

The problem I am having is the second layer doesnt like the interface which disallows the use of an interface in Feature the extended class. anyhow anyone know who to do this correctly?

    export class Experiment extends Feature {

    public constructor(children: IExperimentOptions)
    {
        super(children)
        if (children) Object.assign(this, children);
    }

    Outcome: Outcome[];
    TrialCount: number;
    }

    interface IExperimentOptions {
        Outcome: Outcome[];
        TrialCount: number;
    }

The error is of coarse 

Severity	Code	Description	Project	File	Line	Suppression State
Error	TS2345	Argument of type 'IExperimentOptions' is not assignable to parameter of type 'IFeautre'.
  Property 'EnabledForPercentage' is missing in type 'IExperimentOptions'.	
",Quick question about class constructors in extended classes
43,2017-03-29 06:50:40,0,0,,Typescript Interface For more typescript tutorial visit tutorialsdojo.com and do not forget to subscribe!
44,2017-04-02 06:28:39,0,1,,Have you started Typescript. AngularJS 2 has good support. #Coding #codingalien #typescript #javascript #angularjs2
45,2017-04-05 20:12:18,2,2,,Is it possible to update the version of typescript VS2017 is using?
46,2017-04-08 03:13:39,4,2,"Hello, I am a fairly new programmer(a few years). I have been researching typescript and it looks really cool, being able to do classes and what not would be really nice to have.  Then I saw that java-script already has classes? https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes#Sub_classing_with_extends
So is it worth learning typescript in your opinion?  Or just sticking with vanilla. Hope I don't start something... Thanks for the replies:)",Javascript verses Typescript
47,2017-04-13 17:08:41,0,1,,Testing typescript classes with Jest and Jest Mocks
48,2017-04-18 01:08:17,19,6,"I was never that experienced with JavaScript and only just started with typescript so when people said classes should be avoided I just took their word for it

Now I have the following to consider, which is confusing:

- Classes have lots of support in typescript indicating Microsoft believes they are not to be avoided
- Anything done with classes can be done with interfaces and factories instead; this is arguably more composable and easier to deal with and really the same effort to write

----

Follow up question:  is my understanding correct that the main benefit of classes in typescript is being able to use public/private on members, and shortcuts to defining properties?",Is the idea that classes are bad still relevant?
49,2017-04-19 06:59:21,2,5,,Just a little typescript project a wrote six months ago and forgot about
50,2017-04-19 12:24:22,10,4,"I have been wondering now for ages why the behavior in typscript regarding inheritance is like described in this report: https://github.com/Microsoft/TypeScript/issues/1617

Anyone any idea's? ( i mean on why, i understand how it works)

EDIT:

Thx for all the various feedback! I think i have a better idea of why this is the way it is.",Having real trouble to grasp unwillingness of typescript to budge on inheritance
51,2017-04-19 13:41:23,1,2,,Quick Demo: I wrote this using typescript a while back and thought you guys might like to dissect it.
52,2017-04-24 03:39:17,3,2,"I know you can use rest params, but sometimes they make the code needlessly verbose.

The case `function someFunc(param1: number | number[])` is obviously simplified.  I can imagine a more realistic case, like `function doSomethingWith(target: someType, value: number | number[], options: optionsType)`

Is there a nice typescript way to handle this?","Besides rest params, how would you implement something like: function someFunc(param1: number | number[])"
53,2017-04-24 13:20:54,0,2,"I am working on a project using Promises and targeting ES5.  In my .csprog, I have an xml tag of:

       &lt;TypeScriptLib&gt;ES6,ES5,DOM&lt;/TypeScriptLib&gt;

This has been working fine for, well forever until today.  Today I open up VS and I cant publish the project because of this build error:

    An async function or method must return a 'Promise'. Make sure you have a declaration for 'Promise' or include 'ES2015' in your `--lib` option

So I changed my .csproj tag to:

        &lt;TypeScriptLib&gt;ES6,ES5,DOM,ES2015&lt;/TypeScriptLib&gt;

and I'm still receiving the same error.  And this happens on publish only, it builds fine and all the typescript files compile as well (debugging works too), these errors only show up on publish.

edit: I moved to a tsconfig.json file and the errors went away, BUT the compile on save doesn't generate a js file even though it indicates successful generation.  

I now moved the compilation to use gulp-typescript and it works fine.","VS2017 error: ""Must include ES2015"", but it already is"
54,2017-04-26 06:26:41,11,3,"Hi,

I am used to use ES6 in my day-to-day job and now my company integrated typescript so I need to use that from now on. Are there any up to date resources specifically those ppl who migrates from ES6. Because usually tutorials use var or let and I don't yet know if I can use e.g const or string interpolation etc.. Or I can use any ES6 feature and ts will recognize them?!

Thanks","ES6 user, company recently switched to ts, need good resources"
55,2017-04-26 07:28:52,3,1,"What is the best approach when dealing with a dictionary type express routes?

Example:

Dictionaries -  MovieType, MovieGenre


All these dictionaries are the same, they only have a 'Name' property

What is the best way in typescript and express to create the CRUD routes for these dictionaries? How do you handle them without repeating the same code?",Best approach for a repeating express route pattern
56,2017-04-26 14:34:38,1,3,"Hey, I've got a project with many (~hundreds) HTML pages. Currently, requirejs is used as dependency management.

I'd like to use typescript but I'm not sure what to use, since I was unsuccessful with webpack in this case.

Can gulp do it? Or something else?

Thanks.",Is heavily multipage webapp a good candidate for build step? What should I use?
57,2017-04-26 23:48:27,0,1,[deleted],Show r/typescript: Compile JSONSchema to TypeScript
58,2017-04-26 23:58:36,0,1,,Show r/typescript: JSONSchema to TypeScript compiler
59,2017-04-27 03:13:35,3,16,,Show r/typescript: JSONSchema to TypeScript compiler
60,2017-04-28 14:25:46,3,1,"Hello - (this may be a duplicate, I'm not sure if the original post was successfully submitted) - I am experimenting with the compiler API, and having some trouble actually getting modifications I am making to a source file to save in the output JS file, and was wondering if anyone had experience with the API to help me.  My code:

    /// &lt;reference path=""../node_modules/\@types/node/index.d.ts"" /&gt;
    
    import * as path from ""path"";
    import * as fs from ""fs"";
    import * as ts from ""typescript"";
    
    function compile(files: string[], options: ts.CompilerOptions): void {
        files.forEach(f =&gt; {
            let fsplit = f.split(path.sep);
            let fname = fsplit[fsplit.length-1];
            let file = ts.createSourceFile(f, fs.readFileSync(f).toString(), ts.ScriptTarget.ES5);
    
            modify(file);
            write(file);
        });
    
        function modify(node: ts.Node) {
            if (node.kind === ts.SyntaxKind.ImportDeclaration) {
                let id = &lt;ts.ImportDeclaration&gt;node;
                let exp = &lt;ts.Expression&gt;id.moduleSpecifier;
    
                exp[""text""] = ""TEST"";
            }
    
            ts.forEachChild(node, modify);
        }
    
        function write(node: ts.SourceFile) {
            fs.writeFileSync(node.fileName, fs.readFileSync(node.fileName), ""utf8"");
        }
    
        let program = ts.createProgram(files, options);
        let emitResult = program.emit();
        process.exit(emitResult.emitSkipped ? 1 : 0)
    }
    
    const binPath = fs.realpathSync(""bin"");
    const binDir = fs.readdirSync(binPath);
    
    let files = [];
    
    for (let dir of binDir) {
        let rootPath = path.join(binPath, dir);
        let rootDir = fs.readdirSync(rootPath);
    
        for (let mod of rootDir) {
            let modPath = path.join(rootPath, mod);
            let modDir = fs.readdirSync(modPath);
    
            for (let file of modDir) {
                let fullFilePath = path.join(modPath, file);
                files.push(fullFilePath);
            }
        }
    }
    
    console.log("""");
    console.log(""Compiling..."");
    compile(files, {
        module: ts.ModuleKind.CommonJS,
        target: ts.ScriptTarget.ES5,
        moduleResolution: ts.ModuleResolutionKind.NodeJs,
        skipLibCheck: true,
        emitDecoratorMetadata: true,
        experimentalDecorators: true,
        noImplicitAny: false,
        noImplicitReturns: true,
        removeComments: true,
        outDir: ""dist""
    });
",[Help] Compiler API
61,2017-04-28 18:48:13,3,2,"I'm trying to find the best data structure for visualize this UI: https://i.stack.imgur.com/pulZv.png

I'm using javascript/typescript with Angular and I should be able to add/remove/update items. Please consider also that I will have lot of rows and columns and up to 100 non-repeated items in each cell. So far I'm considering this data structure:

var data = new Map&lt;string, Map&lt;string, Set&lt;Item&gt;&gt;&gt;();
where the strings are rowKeyN and columnKeyN and Set contains the items in each cell.

This kind of datastructure seems a bit complicated to use but is the best that I found in terms of performance. What do you think? Thank you ",Best data-structure for high performance table
62,2017-04-29 00:38:34,8,5,"First things first:  I'm not even exactly sure what the term for this is, so I'm having trouble googling.  ""prototype overloading""?  ""something something injection""?

I'm having trouble wrapping my brain around extending prototypes.  Just adding something new is easy, but changing something seems to be a PITA.  Hopefully I'm just missing something simple.

Example Scenario:

External JS module `A` with typescript typings, with member function `doA(arg1, arg2, arg3)`

I want to inject some minor functionality into `A.doA`, so that when it is is called, my code runs, and then the original `doA` runs.

This is the best I have so far:
    
    export function InjectDoA() {
        const oldDoA = A.prototype.doA;
        A.prototype.talk = function newDoA(arg1, arg2, arg3) {
          // do something here, like:
          console.log(""I was injected!"");
          return oldDoA.call(this, arg1, arg2, arg3);
        }
     }   

----
    
    import { injectDoA } from ""somefile"";
    
    injectDoA();

Problems:

1.  I'm not sure if this is the recommended way or not
2.  It's a PITA to hand write the types for the external functions, especially if they are complicated.  Plus frustrating, since the original functions have already been typed
3.  The `oldDoA` and `newDoA` shenanigans seems silly
4.   I'm not confident that using `.call(this, args...)` is the best way
5.   Why doesn't the line `A.prototype.talk = function...` work correctly with a fat arrow?
","Is there an elegant way to wrap external JS module's function, inject something, and return control to original function?"
63,2017-04-29 14:32:22,0,1,[deleted],https://medium.com/@amcdnl/revisiting-why-im-not-a-typescript-fan-one-year-later-ad87ee287e33
64,2017-05-01 11:52:24,5,1,"I've just started out with typescript whilst learning vuejs, I have put together a basic sample which I actually broken at the moment because I have hit a wall with how I am supposed to be using typescript. One thing that concerns me is the lack of interfaces, yet I don't know where I should be using them! The broken code is when I try and implement Vuex in index.ts line 23 and then the respective files in  /src/store.

https://github.com/jakeam/vue-test

If I could get any pointers I would extremely grateful!",[Help] Am I using typescript all wrong?
65,2017-05-04 08:35:57,2,6,"Hi everyone,

I'm new to TypeScript and I'd like to create typings definitions for [a library](https://github.com/Yomguithereal/mnemonist) I'd like to use in a project.

I have a background in ActionScript 3 (ECMAScript-based, strongly typed) as well as C#. I have read the TypeScript documentation, created toy TS applications to get the feel of it. I have read the [tutorial on codeplex](https://typescript.codeplex.com/wikipage?title=Writing%20Definition%20%28.d.ts%29%20Files) for writing definitions, but I have to admit, I'm still missing something (or a few things).

I can't seem able to wrap my mind around how to write typings definitions. I'm feeling very dumb. Could someone enlighten me with some answers or relevant documentation that I've probably missed?

- **How do I test out the typings `.d.ts` file as I'm writing it?** I have tried to include the `///&lt;reference path= ... /&gt;` within the source files of the lib I'm working on, hoping to see some relevant autocompletion in VSCode, but to no avail.

The lib I'm using spans between several files. One just export util functions while the other modules export constructor functions and build upon prototype inheritance. 

- **How do I reason about this in terms of namespace, modules, etc?** Should I declare a namespace under which several modules lie? Should I export the lib name as a single module? ... 

Thanks in advance!",ELI5 custom typings definitions?
66,2017-05-05 13:01:28,7,2,,My project uses Emscripten+typescript+webGL to let you paint with fluid dynamics
67,2017-05-08 09:34:36,2,2,"Hello. It's a week since I started typescript and I'm nearly insane - I'm trying to use a 3rd party lib in my application but I don't understand what this beast want from me. I can't more sleep, eat.

First I created a `tsconfig.json`:

    {
        ""compilerOptions"": {
            ""target"": ""es5"",
            ""module"": ""amd"",
            ""sourceMap"": true
        }
    }

Next I installed 3rd party library:

    npm install gl-matrix --save

Next I installed a definition for it:

    npm install @types/gl-matrix --save

In `app.ts` I wrote:

    import {vec2} from ""gl-matrix""
    let v:vec2 = vec2.create();

Also I installed `requrejs`:

    npm install requirejs --save

The project compiles without errors, vscode intellisence working. But when I run the code in browser I have:

&gt;Error: Script error for ""gl-matrix"", needed by: app
&gt;http://requirejs.org/docs/errors.html#scripterror
&gt;    at makeError (/home/nc/code/tests/typescript/third_party_lib/node_modules/requirejs/require.js:168:18)
&gt;    at HTMLScriptElement.onScriptError (/home/nc/code/tests/typescript/third_party_lib/node_modules/requirejs/require.js:1738:37)

And `index.html`:

    &lt;script data-main=""app"" type=""text/javascript"" src=""node_modules/requirejs/require.js""&gt;&lt;/script&gt;

How does declaration file know that it needs to use specific js file, which can be in arbitrary folder? I tried to put my `gl-matrix.d.ts` (notice that I renamed it from `index.d.ts`) file near `gl-matrix.js` and use full path to it in `import`.

The sample project is [here](https://github.com/nikitablack/typescript_sample).",How to use 3rd party libraries with 3rd party declaration files?
68,2017-05-08 15:20:28,1,0,"Hi,

I've been working on my own web framework for a bit, meant to be a more lightweight alternative to express.js and such for smaller applications.

I just added a feature to run a preprocessor at runtime instead of adding a build step. A short explanation, and an example, is here: https://git.mort.coffee/mort/webframe#transformations---apptransformextension-mime-function

What do you guys think? Is it a terrible idea? If so, why? Is there anything about the implementation or API I should change?",Compiling typescript/sass into javascript/css without a build step - what do you guys think of this idea? (x-post /r/webdev)
69,2017-05-08 17:28:50,4,0,"So, I'm new in Typescript, and I'm having so many questions when writing my own library. Right now I'm able to use *webpack* to output my library to UMD, Typescript to output to *es5* with *commonJS* modules and *es6* modules so everyone can use it with the benefit of tree-shaking when using it with Webpack or Rollup.

My repo is: https://github.com/AlgusDark/bulma-jsx

So, my problem is:
I have a file called 'interfaces.ts', when I compile everything, there is a interfaces.js empty file, my first tough is that this is wrong. My seccond attempt was to create a file mymodule.d.ts with a *declare namespace ...* and everything was really smooth, I was able to use my namespace like ""nameSpace.MyInterface"", but when I compile, there is no mymodule.d.ts in the build.

My question is:
What is the best practice when I need a file with only interfaces?
I was trying to use something similar from DefinitelyTyped *.d.ts files, but without success.

Also, If you have time, can you give me some feedback on how I use typescript? I mean, I'm extending from external interfaces, how I can achieve that?

Thanks.",[Question] Best Practices when creating a library?
70,2017-05-09 22:46:03,41,16,"I am absolutely blown away. I realize that all languages have OPTIONS in the form of implementations/version, frameworks, defining libraries, etc.

I am actually finding it quite hard to know where to start on one of my new Javascript pet projects.

I know how to do Angular 1, Ionic 1, and Express. I am quite satisfied with this stuff, but tech moves fast and I don't want to miss out on faster UI performance (angular 2 ui components are fast for desktop and mobile?).

Should I just pick up TS, Angular 2, Ionic 2, and learn it for great good?

The only reason I am holding back is that I worry about TS quirks and issues, I worry about Angular 2 being overly complicated, I worry about TS becoming obsolete, and I worry about essential non-types JS libs will be unusable.

Can I at least use all of my favorite JS libraries on my express server if I use TS?

Any tinkerers have advice for me on what would be the best little stack to learn? The ionic2/angular2 that I mentiond seems nice, but I would love some insight from others who also find all the noise out there to be overwhelming.

**Edit:** I got into typescript and they have a github called definitelytyped where we can download the so called ""type definitions"" for the interfaces of the libraries. And if they don't exist we can contribute. Cool. ",Absolutely overwhelmed by the front end JS ecosystem
71,2017-05-13 13:38:17,4,1,"See title. I'm trying to get Karma for unit testing (because I want to test in a real browser); while Webpack appears to be compiling my TypeScript code, it seems that the compile code is not being passed back to Karma &amp; Karma attempts to load the original TypeScript file, causing a syntax error on the `import` keyword.

Versions:

- Karma: 1.7.0
- TypeScript: 2.3.2
- Webpack: 2.5.1
- Awesome TypeScript Loader: 3.1.3
- Karma-Webpack 2.0.3


Relevant files:

webpack.config.js

    const path = require('path')
    module.exports = {
    	entry: path.resolve(__dirname, 'src/main.ts'),
    
    	output: {
    		filename: '[name].bundle.js',
    		path: path.resolve(__dirname, 'dist')
    	},
    
    	resolve: {
    		extensions: ['.ts', '.js']
    	},
    
    	module: {
    		rules: [
    			{
    				test: /\.tsx?$/,
    				loader: 'awesome-typescript-loader'
    			}
    		]
    	}
    };

karma.conf.js

    // Karma configuration
    // Generated on Sat May 13 2017 13:56:47 GMT+0100 (IST)
    
    module.exports = function(config) {
      config.set({
    
        // base path that will be used to resolve all patterns (eg. files, exclude)
        basePath: '',
    
    
        // frameworks to use
        // available frameworks: https://npmjs.org/browse/keyword/karma-adapter
        frameworks: ['jasmine'],
    
    
        // list of files / patterns to load in the browser
        files: [
          'test/**/*.test.ts',
          'test/**/*.test.tsx'
        ],
    
    
        // list of files to exclude
        exclude: [
        ],
    
    
        // preprocess matching files before serving them to the browser
        // available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor
        preprocessors: {
          'src/**/*.test.ts': ['webpack'],
          'src/**/*.test.tsx': ['webpack'],
        },
    
        mime: {
          'text/x-typescript': ['ts','tsx']
        },
    
        // test results reporter to use
        // possible values: 'dots', 'progress'
        // available reporters: https://npmjs.org/browse/keyword/karma-reporter
        reporters: ['progress'],
    
    
        // web server port
        port: 9876,
    
    
        // enable / disable colors in the output (reporters and logs)
        colors: true,
    
    
        // level of logging
        // possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG
        logLevel: config.LOG_INFO,
    
    
        // enable / disable watching file and executing tests whenever any file changes
        autoWatch: false,
    
    
        // start these browsers
        // available browser launchers: https://npmjs.org/browse/keyword/karma-launcher
        browsers: ['Chrome'],
    
    
        // Continuous Integration mode
        // if true, Karma captures browsers, runs the tests and exits
        singleRun: false,
    
        // Concurrency level
        // how many browser should be started simultaneous
        concurrency: Infinity,
    
        webpack: require('./webpack.config')
      })
    }
   
tsconfig.json

    {
      ""compilerOptions"": {
        ""module"": ""commonjs"",
        ""target"": ""es5"",
        ""types"": []
      }
    }
    
test/example.test.ts

    import 'jasmine'
    
    describe('example test', () =&gt; {
      it('should work', () =&gt; {
        expect(2).toBe(2)
      })
    })
    ",Has anyone gotten TypeScript working with Webpack 2 &amp; Karma?
72,2017-05-15 14:37:58,13,2,"I created a basic shooter style game similar to Galactica which i'm now evolving and having fun with. I'm using typescript with webpack so it's all bundled into a single JS file.. I've decided to avoid any frameworks. Is there a way to easily port this to be usable on mobile, or even package it as a mobile app?",Created a desktop 2d-canvas game with pure JS.. is there an easy way to wrap this for mobile?
73,2017-05-15 18:39:41,6,2," If I have a library 'myLib', with three ""namespaces"" (semantically grouped areas of code) Geometry, Display and Color, which exist as directories `src/geometry/`, `src/display/`, and `src/color/`  and wish to be able to import like `import { Shape } from 'myLib/geometry'`, `import { Color } from 'myLib/color'`, and `import { Display } from 'myLib/display', what must I do to achieve this?

I'm referring to consuming this library from an external project which has installed it with npm (`npm install myLib`).


Edit: I am not asking how to generate declaration files. I am saying that I want to be able to import from SOURCE-RELATIVE subdirectories of my library without specifying 'dist' in the import path ***from a consuming project, not from within the package***. 

For instance, if I want to import the class ""Shape"", then I have two options right now: 
`import { Shape } from 'mylib/dist/geometry'`
`import { Shape } from 'mylib'`

What I would like to achieve is the following. Note the difference: I'm not specifying dist, but I'm still crawling the directories of the library's source. 
`import { Shape } from 'mylib/geometry'`.

to be ***EXTRA*** clear, `geometry` is simply an example of a top-level subdirectory of my project's source with geometry-related code in it.",How to manage import paths of typescript npm libraries?
74,2017-05-18 14:06:32,0,1,[removed],firebase backend with react &amp; redux in typescript on the frontend. Not a template just an example. :… https://t.co/YayA7FkndL
75,2017-05-21 00:41:23,12,1,"I recently started developing using typescript and for the most part I've been able to troubleshoot most issues I've been having, but for some reason I can't put my finger on what's going on with the following error.

&amp;nbsp;


Error image: [http://imgur.com/KtgRS7X](http://imgur.com/KtgRS7X)

My project is using create-react-app with typescript mods. I have a jumbotron component that's a Class component and I'm trying to pass that component as a component property for react-router-dom's Route component. 

&amp;nbsp;

    &lt;Route exact={true} path=""/"" component={Jumbotron} /&gt;

With typescript out of the picture, this works flawlessly, but with typescript I got the errors mentioned above. I tried searching around but I haven't found a resource that can explain why this error is happening. Does anybody have a clue as to what's going on?",My Component is not assignable to type 'IntrinsicAttributes &amp; IntrinsicClassAttributes&lt;Route&gt;
76,2017-05-31 19:36:05,2,3,"Hi guys, I'm happy to present you my little pet project **BrickyEditor**.
It's WYSIWYG editor, based on predefined templates.
If someone once tried to give editors the ability to edit articles themselves (in WYSIWYG editors like CKEditor),
you know that result was awfull sometimes. Especially, if they tried to do something by themself inside html code.
I try to solve this problem, in my editor the person who writes an article, will be limited by the set of prepared blocks.
It could be text, image blocks or embed blocks from social networks. You could see what I mean in this demo page: [demo page](http://brickyeditor.info/examples.html).

Another benifit of this editor - you can save all block data in JSON format. So you can change your html views anytime. And if you have mobile clients, for example, you can display your views natively, by representation of article JSON, without using of webview. Your longreads and articles will be solid and have the same view through all your apps.

At current moment I create few block templates, based on bootstrap 4 for demo purposes. 
But current architecture isn't limited to any framework, templates loaded dynamically and you can configure them by yourself.

The project was built on typescript and sass.
Currently it's not convenient to use BrickyEditor from mobile, need some UI fixes.
Now it's in alpha stage and I will be grateful for any feedback.
Also, I would be happy, if someone, who interested in such kind of WYSIWYG editor will participate in this project.

[GitHub Repo](https://github.com/yakovlevga/brickyeditor)

[Demo Page](http://brickyeditor.info/examples.html)","WYSIWYG editor, based on predefined templates. Need feedback and advice."
77,2017-05-31 22:26:30,2,1,"I'm trying to use React Router v4 with typescript and I keep getting an error about an implicit any I have within a component. 

    const PrivateRoute = ({ component: Component, ...rest }) =&gt; (
      &lt;Route {...rest} render={props =&gt; (
        fakeAuth.isAuthenticated ? (
          &lt;Component {...props}/&gt;
        ) : (
          &lt;Redirect to={{
            pathname: '/login',
            state: { from: props.location }
          }}/&gt;
        )
      )}/&gt;
    )

Where you see `{component: Component, ...rest}` is where I'm getting the error. The error says, ""Binding element 'Component' implicitly has an 'any' type"". I'm just not sure how to add explicitly any to the component field. Anybody know how to do this?","How do I explicitly declare ""any"" for field within object?"
78,2017-05-31 23:05:58,14,4,"I absolutely love typescript and flowtype in the javascript ecosystem. For me the benefit is mostly about enhanced editor tools (auto completion, method lookup, quick docs, refactoring etc.)

Editors like webstorm, vscode use typescript to give a better experience coding.

Is there something like this in the php ecosystem? A tool that for example tells me statically (not at runtime) that Im making type errors? And is there something like definitely typed? A repo with typehints for popular libraries? ","Talking about typehints, is there something like typescript or flowtype for php"
79,2017-06-01 18:23:21,0,8,,Learn typescript step by step from basics with examples(Part 1)
80,2017-06-03 04:42:47,4,6,,I wrote some simplified design patters in typescript
81,2017-06-03 21:40:38,0,5,,Learn typescript step by step with suitable examples(Part 2)
82,2017-06-06 08:29:51,58,22,"I'm working with a legacy JSP-based application. There are many hundred JSPs that were generated according to a template and tweaked by hand, using lots of JSP includes.

As you can imagine, maintenance and adding new features is a nightmare.

I'd just like to get some other opinions and perspectives on this before I dig ourselves another hole.

Going forward, I would like to modernize the UI part for better maintainability and make different bad decisions than what went into architecturing the JSPs. As long as we don't do temporal coupling in a session-scoped bean that is used many times in all JSPs, we're already better off :)

## Requirements

The application is heavy on forms. Essentially it's a CRUD application with business rules that are processed in the background based on a queue of tasks.

I'd need to be able to whip up a new page for a new entity quickly and be able to customize it easily. 

Also, I wouldn't want styling to be hardcoded into the new page as it is now with the 

I'm not dead set on these two approaches, but we don't currently have the capacity to redo large parts of the backend, so it would have to integrate with our current hand-rolled ""ORM"" easily and rest of the application easily. So I don't think ""just use Spring"" will work.

## Options

* **JSF**

A big unknown for me. I have worked with some simple examples.

It seems straight forward to get a forms-heavy application to work without much effort on my part. 

OTOH, it appears to be quite complex. I'm worried about what I do if the ""magic"" behind JSF doesn't do or can't do what I want. I read that it ""breaks HTTP"" and that it can be difficult to integrate things that would be a piece of cake in a plain HTML/JS application.

I found lots of negative articles about JSF, but most of these appear rather outdated and it's difficult to sort through the noise.

* **REST (Jersey) with a TypeScript/React frontend**

This would would allow me to do a regular web application with minimal ties to the backend. 

I would only have to ensure that there is no mismatch between the server and client-side format for the JSON exchange. ([typescript-generator](https://github.com/vojtechhabarta/typescript-generator) maybe?)

Getting it to do what I want seems fairly simple, since it's ""just"" HTML and I don't have to worry about server-side state management and all the roundtrips to the server. Instead, most thing would happen client-side and communicate with a simple REST backend for the CRUD operations.

Also, building out ""custom elements"" with React means that I can easily reuse components across different pages.

Further, since this is entirely client-side, it seems to be easier to test without the entire backend in place.

TypeScript should be obvious: We want to catch as many bugs as possible in the editor and not at runtime, also this gets us some refactoring support.


----------

Thoughts?",JSF vs REST/TypeScript/React frontend for CRUD business application
83,2017-06-07 10:44:55,9,8,"Hi all,

What's the official label for a function like this:

    const myFunc = (someParam) =&gt; { return someParam; }

I usually call them lambda functions. I see at least one reference to ""template function"". The typescriptlang web site just seems to call them ""arrow functions"".

TIA.
",Arrow / Lambda / Template function - what's the right label?
84,2017-06-09 10:47:32,1,1,,"very basic Introduction (""IN HINDI"") of typescript visual studio file, 1) use constructor 2) pass two textbox value and display alert"
85,2017-06-09 11:47:28,0,1,,How to use typescript with node
86,2017-06-09 16:28:35,4,8,"I like [Bulma](http://bulma.io) and I started [Bloomer](http://bloomer.js.org), a set of react stateless components as a library written with typescript. This is my first open source project written with React or Typescript. Any help, tips or comments are welcome.

I'm still working on the Docs, so expect some updates with examples of ussage in the near future.",Bloomer — A set of React Stateless components for Bulma
87,2017-06-10 17:20:16,0,10,,An awesome typescript graphql webpack server starter kit
88,2017-06-12 17:30:41,0,2,"So I have a process right now that involves creating a tsconfig in a directory for each ""dashboard"". The tsconfig explicitly specifies files for that directory scope and outputting a single js file that is loaded by the page in question.

I would like to have a process where I can use regular importing of modules and the build process will compile the files appropriately and output the combined js file that I can load for each individual dashboard.

An example tsconfig for one of these dashboards:

    {
        ""compilerOptions"": {
            ""allowSyntheticDefaultImports"": true,
            ""noImplicitAny"": false,
            ""downlevelIteration"":  true,
            ""noEmitOnError"": true,
            ""removeComments"": true,
            ""alwaysStrict"": true,
            ""strict"":  true,
            ""sourceMap"": true,
            ""target"": ""es5"",
            ""module"": ""none"",
            ""outFile"": ""../Dashboard1.js"",
            ""lib"": [ ""es5"", ""dom"", ""es2015"", ""es2015.promise"" ]
        },    
      ""compileOnSave"": true,
      ""exclude"": [
        ""node_modules"",
        ""wwwroot""
      ],
        ""files"": [
            ""Dashboard1.ts"",
            ""Charts.ts"",
            ""Scripts/node_modules/jquery.d.ts""
        ]
    }

Any improvement to this would be lovely. I am decent with typescript itself, but the module thing still seems a little hard to grok.",How to integrate modules with Asp.net webforms/mvc in VS2015?
89,2017-06-13 19:43:28,0,1,,Are you a typescript fan?. TypeScript is a syntactical superset of Javascript. #codingalien #coding #javascript #typescript #vbscript
90,2017-06-14 17:30:18,16,2,"I have seen this kind of code quite a bit:

    let this_ = this;
    array.forEach((val) =&gt; {this_.someThing(val)});

Its kinda silly to have to declare a this whenever you want to iterate with foreach. Is there a better approach? Whatabout in typescript?

Thanks",Array.forEach and this
91,2017-06-15 12:04:37,0,0,,Property does not exist on type using typescript?
92,2017-06-16 12:10:47,0,1,,TypeScript Notes #codingalien #coding #programming #javascript #typescript
93,2017-06-20 22:14:12,2,3,"Is there a way I can find exported classes/types/functions/etc. that are never used inside my project?

I have a medium sized project (~10k loc) typescript/react project. Sometimes I write small proof-of-concept react components, try them out, and then leave the code because ""maybe I'll use it later"". But I never do. I should probably be using separate git branches or something. But this made me wonder: are there any static code analysis tools for finding unused typescript exports in a project? I do not mean dead code elimination during bundling.

There's a pretty awesome tool for go projects called [unused](https://github.com/dominikh/go-tools). By running `unused -exported ./...` at the root directory, it goes through all folders and looks for exported objects that are not imported from somewhere else.

Also, does anyone know of a static import-cycle-detector? I wrote my own incredibly crude one (regexp the file for import statements and do a quick DFS). It works fine I think, but it'd be neat to see if there was better solutions. There was a plugin for tslint at one point I think, but I never got it working.

Thanks for your time!",Finding unused code in a project
94,2017-06-22 06:11:40,0,6,,typescript with implicitis (type classes)
95,2017-06-22 13:14:59,0,1,,very basic intro for beginners-import and export typescript
96,2017-06-22 15:39:43,4,2,"consider

    function createSquare(config: SquareConfig): {color: string; area: number} { ...} 

Why didn't the typescript implementers choose something easier on the eyes such as haskell type defs?

    createSquare :: (SquareConfig) --&gt; {color: string; area: number}
    function createSquare(config) { ... }",Why are function defs and typedefs infused?
97,2017-06-26 01:37:12,4,4,"So I went through the official typescript with react tutorial: [here](https://github.com/Microsoft/TypeScript-React-Starter#typescript-react-starter).
The part of it that I'm having trouble understanding is in these snippets:


    export const INCREMENT_ENTHUSIASM = 'INCREMENT_ENTHUSIASM';
    export type INCREMENT_ENTHUSIASM = typeof INCREMENT_ENTHUSIASM;
    export const DECREMENT_ENTHUSIASM = 'DECREMENT_ENTHUSIASM';
    export type DECREMENT_ENTHUSIASM = typeof DECREMENT_ENTHUSIASM;

It's used right after it's created to create interfaces for action creators (used for redux):
import * as constants from '../constants';

    export interface IncrementEnthusiasm {
        type: constants.INCREMENT_ENTHUSIASM
    }

    export interface DecrementEnthusiasm {
        type: constants.DECREMENT_ENTHUSIASM
    }

    export type EnthusiasmAction = IncrementEnthusiasm | DecrementEnthusiasm;

    export function incrementEnthusiasm(): IncrementEnthusiasm {
        return {
            type: constants.INCREMENT_ENTHUSIASM
        };
    }

    export function decrementEnthusiasm(): DecrementEnthusiasm {
        return {
            type: constants.DECREMENT_ENTHUSIASM
        };
    }

This seems really ambiguous to me. I have a couple questions.

`export type INCREMENT_ENTHUSIASM = typeof INCREMENT_ENTHUSIASM;`

What does this type actually amount to?  It looks like it's just creating a type with the result of typeof being `string`.

When creating one of those two interfaces, is the constants.INCREMENT_ENTHUSIASM referring to the string declared INCREMENT_ENTHUSIASM, or the type declared INCREMENT_ENTHUSIASM?  What does the actual shape of both of those interfaces look like?

Similar to the question above, but is each function when using constants.INCREMENT_ENTHUSIASM is it referring to the string or type declared earlier?

I see all this ambiguity and it really confuses me.  I tried googling for it for quite a while but still no solid answer.",Noob question about interfaces and vars with the same name in redux action creators
98,2017-07-03 17:27:51,0,4,,"Invariants, typescript, and redux"
99,2017-07-08 06:06:55,27,0,"
1) I was wondering what was the main differences between Angular2 and 4 and if they are better than React or Ember ? which is the best framework to learn today ?



2) Why programmer hated angular2 compared to angular1 is it because of typescript or the way they try to make it OO like C#, JAVA or no backward compatibility between the 2 ?



3) When it's better to use a framework compared to implement in plain vanilla JS like old time ? When a framework or a library become too opinionated ?



4) Which frameworks, library and dev env you guys are using and why ? (React, Vue, Angular, Ember)",Is Angular 4 better than React ? How they compete with Ember ?
100,2017-07-09 21:11:08,8,15,,Starting an open source typescript game engine
101,2017-07-11 17:35:20,5,3,"I can't for the life of me figure out how to setup the debugger in vscode to step through the typescript compiler.

I can setup and debug projects with Typescript code just fine but with the typescript compiler that setup doesn't work. I think because the source and the output folder structure are different.
I can point to the compiled js and step through that but I want to step through the ts code.

Would appreciate if someone could share their launch.json",Debug TypeScript compiler with VSCode?
102,2017-07-14 21:49:40,0,1,[deleted],Show r/typescript: Options in TypeScript
103,2017-07-14 22:41:21,4,7,,Show r/typescript: Options (like in Scala)
104,2017-07-16 07:36:09,12,5,"I dont understand why we have an option to set up a project in TS and have no way to avoid the relative path hell. 

Import { whatever} from ""../../../../../myfile"";

Is this really an option for anyone when working with large projects?
Also why cant the transplier just find a file that contains the export in a directory?

Been looking to use typescript for so long but its been many years now and this is still annoying that we can't set up import rules for our project and so that typescript would transform the import path appropriately. I understand that its not typescripts job to do but node or the target platform with its importing but still whats the point adding the paths in the tsconfig.json as an option and why it cant be done with absolute paths. Or am i missing something?",Project and relative path hell.
105,2017-07-19 20:27:20,5,8,"I'm new to Angular and have been playing around with the  [official tutorial](https://angular.io/tutorial). I've gotten a pretty good feel for it using Visual Studio Code (which is great btw), now I would like to integrate it (the completed tutorial project) into a .NET Core project using Visual Studio (2017). I start out by using [this guide](https://long2know.com/2017/04/net-core-angular-vs2017-templates/), which is fine. From there I remove the existing Angular stuff that came with the template and move the (tutorial) Angular project into the ClientApp folder. The issue that I keep running into is that when I build and run the project, the changes I make to the typescript files are not getting ""compiled"" into the corresponding JS files, they are staying the same.

I've tried the suggestion of exiting Visual Studio, deleting the JS files, re-opening the solution, clean &amp; re-build, but the JS files refuse to update. I've tried other suggestions too that come up from a simple google search, but I still can't get this to work, yet Visual Studio Code has no issue when just working with the Angular portion. At this point I have wasted so much time trying to get this to work that I'm questioning whether it's even worth continuing.

Has anyone gotten this to work seamlessly in Visual Studio 2017?",.NET Core and Angular 2+ integration issues
106,2017-07-21 08:03:48,6,11,"    const current = (options = {} as PositionOptions): Promise&lt;PositionPromise&gt; =&gt; {  };

I really don't understand what this means and I could do with some help. Thanks.

**EDIT** Thank you all. I had no idea it was typescript because our inherited build process trans-piles this. Makes sense now. ",Can someone please explain this syntax to me
107,2017-07-21 11:48:53,3,5,,How many user has typescript currently?
108,2017-07-23 00:15:41,7,5,"I'm writing an app with angular 4 and nativescript to generate a web, ios, and android client. I have been using c# and web api to run the backend, but the context switching between the languages is starting to wear on me.

I would like to try typescript on the full stack so there are a few things I'm looking for to getting going:

1- Something to serve the restful api. So far express seems to be the clear choice

2- A db driver / orm  that supports PostgreSql - TypeOrm looks promising.

3- A Di Container - Inversify looks like a good option

Anyone with any other suggestions?",Replacing C# on the backend with typescript
109,2017-07-24 10:23:47,3,0,"I have a requirement need to pass windows user id as a parameter from type script file to service in angular 2 .
Please guide me to get windows username .",Retrive the windows username in typescript
110,2017-07-24 14:13:58,9,16,,Convert JSON data to typescript interfaces
111,2017-07-25 10:50:10,26,38,"For the past 7 years I've been working as a full stack web developer (php, js/es6/typescript, nodejs, etc.), having learned pretty much everything on my own or on the job (don't have any degree in CS or similar).


I will have to leave the company I currently work for in about 2 months and want to move away from pure web dev. Also, there seem to be a ton of open java developer positions in my area, so that's kind of where I'm headed right now.


The basics of Java aren't that much different from other languages I have experience with, so writing simple programs is not an issue.
However, I'm not sure what exactly potential employers/recruiters look for the most, i.e. what I should be learning for the next few weeks. 


Should I be focusing on details and more complex topics of the language itself? I.e. nested classes, reflection, generics, multithreading,...? 


Or is experience with the most common frameworks/libraries/tools (spring, hibernate, maven/gradle, etc.) more important?


Also, most companies seem to be using Java EE, so I guess I'll best dig into that right away, instead of starting with SE?

I know the answers to those questions will vary from company to company, but is there a general... consensus on what's most important when learning a new language, specifically Java?

Edit: formatting",Web Developer moving to Java - how to impress potential employers/recruiters?
112,2017-07-26 06:00:38,0,1,,mockstorage: A mock localstorage for nodejs (with full typescript support)
113,2017-07-28 13:19:23,3,0,"In this code


    const i = iterator.next();

    if (i.done) {
        return;
    }

I am getting the following error:

    join.ts(13,11): error TS2339: Property 'done' does not exist on type 'IteratorResult&lt;string&gt;'.`

`Ctrl + click` revealed two definitions for `IteratorResult&lt;string&gt;`

In `node_modules/@types/node`

    interface IteratorResult&lt;T&gt; {}

In `VSCode-linux-x64/resources/app/extensions/node_modules/typescript/lib/lib.es6.d.ts`

    interface IteratorResult&lt;T&gt; {
        done: boolean;
        value: T;
    }

Is the definition in `@types/node` a mistake?

Obs.:

    ""typescript"": ""^2.4.2""
    ""@types/node"": ""^8.0.17""
 ",Strange error with iterator
114,2017-07-30 22:04:19,1,2,"I came across this kind of class. How do i assign some error to this object? I am new to typescript

export class Errors {
  errors: {[key:string]: string} = {};
  }

myErrors: Errors;
 
myErrors.errors = ""some fake error"" ???",Need example of how to assign to this object.
115,2017-07-31 06:26:09,1,2,"Here is the link to my new article:

http://blog.devcanvas.org/how-to-create-a-new-typescript-project-using-webpack-3/",Create a typescript app using webpack 3.
116,2017-08-02 13:40:16,0,0,,Create a new typescript project using webpack 3 and WebStorm
117,2017-08-05 03:08:17,5,0,"Why should I use typescripe instead of Babel? 

I would prefer to work ""framework-less"" and create SPA's using the new HTML template tag, minimal front end router, minimal data binding, etc. (i.e: not angular or react.)

I have a babel project and typescript project running in webstorm. Help me decide which to use and which to scrap. ","Quick question, quick answer: TS vs Babel"
118,2017-08-11 22:59:38,1,0,,typescript is now smart enough to deduce the appropriate quote symbol
119,2017-08-14 06:05:54,33,2,First it's important whether I need to learn typescript. But what makes me shiver is would it make harder for me to use node modules. ,Would learning typescript make my life more difficult.
120,2017-08-14 16:56:38,50,17,"Currently evaluating JS application frameworks for use on the UI side of a travel site. Using ember now, and looking at the usual slew of view libraries vs application frameworks. I used angular 1 and liked it but I've heard angular 2 is a different beast. I've also used React, but the amount of things I would have to tack on to get what is frustrating which is why I'm leaning towards a true application framework vs a view library.

Unsure what they're calling it now, but has anyone tried or used the new Angular JS in production? Thoughts on it? Pros/Cons?

I really like the move to typescript and 1 way data bindings, but I'm also put off by its whirlwind development cycle, low adoption, and churn.",Thoughts on new Angular framework?
121,2017-08-16 05:17:48,4,1,"
1) Are you guys afraid of a overflow of js programmer in the future since everyone wanna jump in the webdev train ? lets say compared to Java or C# or C++ programmer.... could this create a race to the bottom for salary or career growth things like that ?


2) How large is the gap between a junior and a senior JS programmer or a guy who do just frontend compared to a full stack dev who has 10years + ?


3) Do you guys think that the industry will standardize on a framework 1 day or things will keep getting opinionated ? like all on React compared to guys who do Ember for example or Ang2 on typescript etc or standardize the dev env (or the build process) like Visual Studio did back in the days etc


",Are you guys afraid of a overflow of JS programmer in the future ?
122,2017-08-22 14:48:56,31,1,"Seriously though. I just went looking for more non-bias non-evangelical information about typescript and the top comment started off by saying

""I think you really need to consider programming in a non-trivial system.""

This sentiment is simply a tired old slur employed by programming bigots. I know. I was one of them. I used to exist in bloated java land with immense hierarchies and simply judged JS as crappy mainly because it was just that. Total crap. But that's because I started in the 90s when it was crap so I simply presumed the lack of classes/interfaces/etc was all just a weakness by the poor programmers who made it and it lacked all the 'advanced features' I relied on every day to deliver real programs in real enterprise languages.

Then ES5 came out and V8 came out. I remained a bigot. Oh if you're making a 'real' system... then I started a job 5 or so years ago doing real javascript. Then I got into angular. And now? I look at that bloat every time I step back into java to support our legacy and feel the immense weight of it's technical debt on every task I need to do.

That's not to say there isn't a place for java, there is, but people have got to stop pretending that javascript it only used for micky mouse projects. It's not the same as java and it's loose typing is easily one  of it's most powerful features that immensely aids maintainability under changing requirements.

Typescript I'm sure has it's uses, but to me, it's biggest purpose is to simply provide a comfort zone to programmer who like me, were not comfortable accepting change and felt entitled to keep doing things the way they always did rather than learn something new.

The above is debatable and I fully acknowledge that. But the idea that ""if you designed non-trivial systems you'd know what I know"" is just a slur of a motif. I make non-trivial systems in javascript. Billions of dollars pass through them. They run huge institutions like hospitals. They run insurance companies and big data companies.

The above phrase is just a go to excuse people make to dismiss valid arguments against typing in JS and is categorically a veiled ad hominem attack against the person and not the argument taking a shot at their career assuming the bigot is just a higher class of programmer and if lowly dynamic typed people only were to work on real projects they'd understand.

It's a bunch of bullshit. It should stop.

/rant","can we stop using the pejorative ""non-trivial system"" when talking about typescript"
123,2017-08-22 22:19:12,0,1,,How to call method on react-bootstrap-table element in typescript?
124,2017-08-23 07:26:38,2,4,,Pts.js - A new typescript library to compose and visualize points
125,2017-08-24 14:43:33,4,5,"I did a small project with typescript before, but it was planned from the start that ts will be an integral part. So I kind of know the tsconfigs and the webpacks and coding in general, but definitely not an expert.

I'm usually floating around .NET MVC projects where everything is done with @Html helpers to death, and when something ""fancy"" is required such as ajax or dynamic UI, it's dumped in the view.

This always bugged me that I'm not able to better this situation. Just slap in a ts folder, implement the strongly-typed solution and reference it from the view. 

I can't see past some issues like do I need more than 1 tsconfig, do I need to compile to a single ""app.js"" or can I keep things file-by-file with references intact. And how much overhead will all this introduce?

I know this question is pretty .NET-specific but I hope some tutorial exists out there from someone who went through the same issue and how to overcome it.",How do you introduce TS to an existing project?
126,2017-08-25 07:05:39,0,4,,"A simple FRP library in typescript - light alternative to baconjs, rxjs etc"
127,2017-08-26 04:51:23,20,7,"I'm trying to deal with cases for type decs where I can expect either of 2 types. I looked into Union from here: https://www.typescriptlang.org/docs/handbook/advanced-types.html

using this syntax: Type1 | Type2

Downstream code complains with various errors (TS2339, TS2349 etc)  depending on the context. Using any or not declaring avoids errors, but what if I want to catch errors if using a type that's not one of the two?",How to accept either of two types
128,2017-08-27 08:30:32,6,3,"I'd like an opinion on how to go about creating typed redux async actions and eliminating as much boilerplate as possible.


I feel my example gist code is unmaintainable in the long run. 
https://gist.github.com/mjstewart/bb37775089017a448f18392c38617d20


Basically the concept is all about using discriminated unions, with a namespace per 'async action group' that contains all the REQUEST, SUCCESS, ERROR ceremony.

I like the concept of incorporating discriminated unions but am doubting whether its worth it due to having a massive Action union/enum string literals containing 100's of REQUEST, SUCCESS, ERROR types that will be hard to read long term.

Thoughts?

ps: Shoutout to https://rjzaworski.com/2016/09/typescript-redux-async-actions as most of my thoughts on the topic are from here.",Advise on maintainable typed redux async actions
129,2017-08-28 15:45:00,8,6,"Hey everyone,

I know my fair share of Javascript and would like to code up a pretty simple, multi-platform smartphone app as a hobby project. The only system functionalities I would need (and can think of right now) are:

* use the system clock
* be able to notify (vibrate/alarm/..)

So that sounds like a pretty good usecase for a javascript-based app. The problem is that there seem to be at least a dozen frameworks one can use and I feel in no position to judge which would be the best for me. Some quick research got me e.g.:

* Ionic
* NativeScript
* ReactNative

So maybe a couple of additional requirements for the framework:

* should use vanilla JS (not e.g. typescript)
* should have an S-shaped learning curve - i.e. doing simple things should be simple (I really don't want anything fancy in my app so I don't want to learn their entire UI philosophy first before I can create a simple view)
* should work flawlessly on linux and compile easily to both android and iOS

So if anyone who has some experience in that field could give me a couple of hints based on my requirements that would be great.
Thanks in advance.","best JS framework for a simple, multi-platform smartphone app"
130,2017-08-31 05:17:20,9,0,"Thoughts on performance of MEAN Stack applications running angularjs vs typescript angular 2/4/whatever it is going to be called next. 

What do you feel is easier to get up and running? With a lot of companies running angularjs in their mean applications, seems like it'll be a while before most adopt angular 4 as a default.",MEAN Stack Angularjs vs Angular 4
131,2017-09-10 08:35:29,2,4,"I've been experiencing high cpu usage in webstorm and blamed webstorm (because the problem sort of went away in power-saving mode), but now I've tried atom/vscode and at some point (maybe after a few hours) they suffer from exactly the same exact problem (very high cpu usage, even when I'm not even changing big parts of the code, from some worker process, in vscode case it was a process called ""Code Helper"").

I think all these editors are working with the typescript language server, even when checking javascript? I had this problem in pure JS projects as well.

Is anyone else experiencing this problem?","High CPU usage from multiple editors, could it be the language server?"
132,2017-09-13 11:49:18,16,4,"I'm working mainly with nodejs (typescript), php (symfony) and some time in the past I used django.
I'm actually considering to switch to some stack with static typed language and some enterprise solutions like language and tools (php is symfony + doctrine + sonata admin/easy admin; python is django + django orm + django admin; nodejs is express + typeorm + well... something admin, maybe even forest admin as outside admin panel).

I love languages with static type system and very eager to switch to one of them. I stopped with Java because I think it's the best solution if you are using vagrant/docker for deploying and there are numerous tools which are very familiar for me as symfony user (hibernate - doctrine, spring boot admin - sonata admin, spring core + spring mvc as I believe - symfony)

PHP of course does not have out of the box solution for some daemonized processes. Node has. Don't know about Django, did not
need those at the moment.

Could you possibly tell me your experience in our modern days with those mentioned solutions?

Thank you!","What is your opinion on Spring as full-stack backend solution with some processes in background, database work and admin panel for web-services, web-applications?"
133,2017-09-22 21:08:34,1,6,"I was wondering if anyone had a working example of debugging jest tests that are written in typescript. 

My current setup I'm using won't break on breakpoints or even using the debugger statement. I searched around and found [this](https://github.com/kulshekhar/ts-jest/issues/170) GitHub issue, where one user mentions he got it working with [this](https://github.com/jcgillespie/webhdfs-client) repo.  However like another commenter in that thread, I can't get his example to work with node 8 (haven't tried 7 yet). 

Currently I have the tests processed on the fly by ts-jest, but am willing to use tsc to compile them, and have jest test the JavaScript files instead. But I'd like to find a working example before I change the workflow of my project. 

So any tips, links, or examples would be great!",Debugging jest with ts-jest and VSCode
134,2017-09-23 18:53:25,0,12,,full stack (with tests) typescript example
135,2017-09-26 04:52:57,22,0,"Short read regarding Options in TypeScript.

Edit: the link I forgot https://medium.com/@AndersCan/say-no-to-undefined-with-typescript-4b8b14cb9324",If you are using TypeScript you should not be using `undefined`
136,2017-09-26 17:45:42,6,6,"Okay, maybe I'm grasping at straws and can't tell if this is or isn't a problem for me, but I'm trying to reduce file sizes and I've noticed something in my compiled ts outputs, but I don't know if it is a problem I can fix. 

Whenever I use async/await, typescript compiles some boilerplate shim output to the top of my compiled js file (`var __decorate = ...` or `var __awaiter = ...`, etc.). Same goes for things like decorators, generators, or anything else that requires a shim to work correctly in ES5. I have hundreds of modules where they're used, and I worry that maybe one of the reasons my file sizes are so bloated is every module ends up including this boilerplate independently. 

Since I'm completely inept at understanding minified output of webpack, I can't tell if it gets deduplicated somehow during minification. Does anyone else know if this gets deduplicated, and if not, how can I do that?  
",Can you deduplicate boilerplate output from ES(6|7) -&gt; ES5 compilation?
137,2017-09-28 06:42:57,4,2,"I have installed Sublime Text 3, Microsoft's TypScript Plugin and created an application with react-create-app. Then I open the application folder with Sublime &gt; **Sublime Text: Show error list**.

Then I get errors from some React stuff:

    /.../programming/typescript/my-app/node_modules/@types/react/index.d.ts [446 errors]
    (72, 26) ',' expected.
    (72, 28) '&gt;' expected.
    (72, 30) ';' expected.
    (72, 32) Expression expected.
    (72, 52) '(' expected.
    (72, 75) '(' expected.
    (274, 27) ',' expected.
    (274, 29) '&gt;' expected.
    (274, 31) Declaration or statement expected.
    (274, 41) Expression expected.
    (300, 27) ',' expected.

I can't find a way for TSLint(?) to only check my source files. There seems to be a way to exclude files from TSLint when using the CLI with --exclude flag. But I don't know how to do that with Sublime Text.",Sublime Text + TypeScript + React: How to ignore errors in type files in error list
138,2017-10-01 13:53:29,20,4,"I use PHP on the server. I love writing JavaScript too, but I always miss the loose enforcement tools PHP offers like interfaces, method/function type hints and abstract classes.

I've been reading up on TypeScript and it's implementation of those in particular seems perfect. I'm not interested in accounting for vendor type definitions or backporting my existing code. I'm also hesitant to switch my build process from webpack since I know it so well.

My questions: 

Can I turn off the features I don't want in the configuration?

Can I ignore type safety in vendor files and non .ts files?

Is using typescript just for interfaces, abstract classes and method/function typing overkill?

Will I be adding a layer of complexity that will make it harder for other developers to approach my code?

Am I going to fall down the typescript rabbit hole and want to use all of its features eventually?",Is using Typescript just for interfaces overkill?
139,2017-10-02 04:13:40,4,6,"What's the best way to write a library that will be published on NPM and used in the browser? I'm currently trying to setup a combination of webpack (with UMD, ESM, and uglified distributions versions), testing via jest, while using typescript and tslint. I'm curious what you like!",What tools and patterns do you use to write NPM libraries?
140,2017-10-02 20:41:59,0,1,"[I have posted on SO](https://stackoverflow.com/questions/46533398/typescript-css-modules-will-break-compilation-in-mocha), but I'll repeat the question here too in case it's simpler for someone.

I have a component using react-css-modules and I run my tests with mocha and ts-node, which results in my test breaking because it can't find the module `foo.css`. How could I accomplish this?

The specific command I run for my test is: `./node_modules/.bin/mocha --compilers ts:ts-node/register,tsx:ts-node/register -r tsconfig-paths/register test/unit/**/*.test.*`

I think my ideal solution would simply be to ignore `.css` imports and return a mock object, this way the `styleName` prop in my components would stay the same and asserting would be easy, but I'm open to any solution that will let me run my tests.
",[Help] CSS modules will break compilation in Mocha with ts-node
141,2017-10-06 18:06:20,29,21,"Strict types is the big one. Other than that what else is there? It seems like ES6+ and a hearty ESLint config will cover pretty much everything else.

Is Typescript still worth using?","With ESLint and ES6+, does typescript become much less useful?"
142,2017-10-08 04:59:40,5,0,"I wrote [this application test](http://test.codebot.org) relatively quickly using only typescript, html, and css using no frameworks. Although it's not finished, and I need to add user login/logout, I thought I'd just throw it out there and ask for some feedback.

In brief, the first purpose of the application test is to allow people to view the auction status of property I am selling on their behalf. People being grandmas and non computer geeks who have stuff around their house that they are going to throw away, but I can convert into money through online secondhand markets. The second purpose is to just build something that acts like a traditional desktop application, but created with just typescript. html, and css, no frameworks.

Feedback wanted with regards to typescript and my application's design. Thanks.",TypeScript test feedback requested
143,2017-10-12 08:35:52,5,4,"Hi!
I'm quite new to typescript and I'd like to understand how I should reason with it.

When running the following:
`ts-node -e 'let numbers: Array&lt;number&gt; = [101, 1, 11]; console.log(numbers.sort());'
`

I get `[ 1, 101, 11 ]` as output, rather than getting an error or warning about mismatching types.
How would I go about correcting this behaviour, so that I get a warning or error?",[Newbie] Why does TypeScript cast my numbers to strings implicitly?
144,2017-10-13 17:47:19,16,0,"I'm at a complete loss here. Google, StackOverflow isn't helping.

How does typescript not know about a primitive that is in every programming language ever?

I don't know if I should say this but Typescript, Webpack, and Angular2 is basically Cerberus. I really hope they go away very soon. Documentation is shit, coordination is shit, things work one day, randomly stop working the next. ",Cannot find name 'string'
145,2017-10-15 18:41:08,2,1,"Trying to learn TypeScript as my JS projects are starting to get large with multiple contributors and constantly getting burned with weak typings.  

Anyways.  Is there a way to use the import statement with a variable name?  My use case is a ""startup"" directory which contains different checks that need to be complete before the express app will start listening.  

In plain JS is looked something like this:

    async.each(fs.readdirSync(__dirname), function (startupFile, callback) {
        
        if (startupFile === 'index.js' || startupFile === 'startServer.js') {
            
            return callback();

        }

        require('./'+startupFile)(callback);

    }, function (err) {

        if (err) {
            
            log.error('Error on startup checks. ', err);
            process.exit();

        }

        log.info('Startup checks complete');
        require('./startServer')(app);        

    });

This way you can add as many files to the startup directory as you like and you dont have to require them individually. However with TypeScript it seems you cant do this.  I could still just call the require but this doesnt seem to be the typescript way.  

From my viewpoint I have 2 options:

1. just use require in TypeScript
2. Explicitly load each check 

Any help would be mucho appreciated.  Thanks!",import with variable instead of string?
146,2017-10-16 09:50:20,5,4,"I am working on a project that requires Typescript to be dynamically generated and run, much like in the Typescript Playground (https://www.typescriptlang.org/community/index.html). Any suggestions for any libraries which can do this or known performance issues? 

Context: We are building a visual programming based learning tool for computational thinking called Mobius (http://phtj.github.io/mobius/), and want the generated code to be in Typescript because of the static checking features etc. ",Running Typescript in the browser
147,2017-10-17 17:08:57,8,3,"Our company is currently using ASP.Net MVC with KnockoutJS and TypeScript.

We want to move to a newer framework and aren't huge Knockout fans.  Would like to have cleaner TypeScript and ViewModels.

Our big things features we are looking for:

 * non-spa use:  lots of MVC projects that can only partially convert.
 * We make alot of custom form inputs (signatures, map controls, etc)
 * Alot of grid/table views like Datatables.Net stuff.
 * TypeScript support

So far have looked at Angular, ReactJS, Aurelia.  

* Angular -  looks too complicated and not good for non-spa usage.
* React - not big fans of JSX and building forms in React seems like a kludge.
* Aurelia - really like templating, typescript support.  Not sure how easy to do a non-spa app and if its mature enough.

",What framework would work best in my situation?
148,2017-10-18 23:24:19,3,3,"Hi everyone, I am new to typescript. I am using webpack and have `declaration: true` in my tsconfig. Webpack is generating multiple declaration files per file, however this is contrary to my end goal. I would like to have all declarations in one file so I can use that file for `types` in package.json. Is there a simple way of accomplishing this I am overlooking? I can not seem to figure out a solution",Combining declaration files
149,2017-10-29 01:37:59,6,12,,"Show r/typescript: Babydux, a paper-thin, 100% typesafe Redux for babies"
150,2017-10-31 11:51:10,0,2,,Show r/typescript: N-d array in typescript
151,2017-10-31 17:50:21,2,1,"We're using typescript for our react/redux project at work and some dislike it, others want to use it. I'm one of the ones that want to use it, but for certain cases (ex. we have a big nested structure for certain classes, and there's no way that I would want to work with it without types). It could get up to 10 levels deep alternating with arrays and objects.

When it comes to typescript for actual react components, I'm seeing more of a hindrance than help. Higher ordered components are a pain. I'd rather just use the normal React components instead of the generic one. ex. React.Component instead of React.Component<any, any>. 

I thought doing that and taking off no implicit any would make things truly optional, but typescript still gives errors. I have a file with maybe one type in it, and that's just a random cssproperties variable, but it still complains about the onclick methods not matching up. I'd rather not have to always do the object literal hack to get around passing props.

Is there any other options(s) I should adjust to get to where I want the settings to be?",Is there a way to make Typescript truly optional in a project?
152,2017-10-31 23:51:19,7,2,"Hello /r/typescript,
Today I updated to the new TypeScript 2.6 release and decided to try out the new 'strictFunctionTypes' compiler flag. My project has all the other 'strictX' compiler flags on, so I figured I should add this one as well.

As I expected, there were several new errors in my code. Most of them I have been able to fix. However, I'm currently running into an issue with this:

    class A {
        
        private readonly callback: (this: A, value: number) =&gt; void;
        
        constructor(callback: (this: A, value: number) =&gt; void) {
            this.callback = callback;
        }
        
    }
    
    class B extends A {
        
        private b: number;
        
        constructor(callback: (this: B, value: number) =&gt; void) {
            super(callback);
            this.b = 0;
        }
        
    }

In class B, I cannot pass the 'callback' variable to the super constructor because the types are incompatible. I understand *why* the error is happening but I don't know how to define the types to resolve the error.
Since B extends A, if A invokes the callback then a B object will be passed.",Help regarding new 'strictFunctionTypes' compiler flag
153,2017-11-01 19:55:01,6,5,"I maintain a typescript library that has examples in the `README.md` file.

It would be great if VS Code would tell me that my examples are out of date. Is it possible?",Possible to type check my TS within README.md?
154,2017-11-02 08:47:21,7,1,"When using typescript in webstorm, the ide doesn't recognise es6 imports. It doesn't autocomplete and it marks it down as a ""module not found"" error.

Does anyone know how to fix this? In the language settings for javascript I can tell the IDE where my libraries are--so for .js files it will work correctly.","Anyone using webstorm, typescript and react? Need help"
155,2017-11-02 18:48:14,5,17,,prelude.ts -- a new typescript library with FP constructs and immutable collections
156,2017-11-04 19:07:48,7,1,"I've been a front end dev for several years. I started when angular 1.x exploded. All the companies I've worked for in my area have used angular 1.x. None have used react or angular 2/4. Consequently I only have experience writing angular 1.x

For those who have had heavy experience writing with other javascript frameworks, do you have any strong opinions?

I'm asking this in the typescript subreddit, because I believe typescript is an absolute must, regardless of what framework you choose, and I want responses coming from that same mindset. Maybe thats irrelevant to this question though. TSX is a thing these days anyway, after all..",Assume you have to write a very complex SPA. What framework would you choose and why?
157,2017-11-10 08:34:31,0,1,,A NPM CLI to start a TypeScript project with Unit Tests preconfigured using Webpack (emyann/typescript-webpack-starter)
158,2017-11-11 16:16:10,0,22,,Helpful decorators for typescript projects
159,2017-11-12 08:16:26,10,1,"I want to get a job as a javascript job so I want to focus on learning a version and start doing projects in it.

Typescript and ea6 are really nice to use but I'm thinking Es5 is still needed in most jobs.

Am I right in thinking i should try to master Es5 first because es6 and typescript will be easier to pickup after?

Cheers.",Es5 es6 or Typescript for a job
160,2017-11-13 12:49:21,0,1,,Helpful decorators for typescript projects
161,2017-11-13 20:45:16,1,3,"I'd like to create an Eclipse project with a node.js back-end and an angular front-end, both using typescript and sharing code between them, but have not been able to find a guide to creating that type of setup. I'm not sure if one should start with Angular IDE or Nodeclipse and install plugins for the other or if there's a better way. If there is a boiler-plate app already setup, that would work as well.",Eclipse set up for sharing Typescript between front and back end
162,2017-11-14 06:36:14,7,49,"I wrote up a cheat sheet comparing C# LINQ with TypeScript for those who are making the jump into web development (by choice or by force :)

https://decembersoft.com/posts/typescript-vs-csharp-linq/

What challenges have you faced trying to get into TypeScript?",Going from C# to TypeScript
163,2017-11-15 07:53:02,65,39,"I did a little C/C++ 15 years ago, I am a sysadmin, I want to get back into programming...  I still remember my concept variables, class, pointers etc etc...

1) I wanted to know if its better to learn vanilla JS for a month or two (once your solid in Html5, Css3) to understand under the hood how everything work before jumping into the latest frameworks or typescript or ES6 etc etc or you'll learn bad habits like old Jquery ways ?


2) I bought some books like Javascript definitive guide etc but it seem to be ES5 have a few others too like Eloquent and the you dont know series etc wasn't sure if it wasn't better to just learn the latest in tutorials online or go with books etc ?


3) is React the best frameworks to learn today once your solid in JS ? some ppl I talked too are saying Ember is solid and Angular 2 doesn't have much momentum compared Ang1 etc why is that ? is Vscode + extensions the best editors or its Atom ? Sublime ? How long does it take to learn Node ?

4) How fast is JS now compared the best of C# or JAVA or others ? been told it doesn't scale well and node is single threaded is that still true ? Why twitter switched to Java ?


I can study like 10-12 hrs a day if I want mostly nothing else to do so was wondering how long it could take to reach around junior frontend position etc

",Do you guys recommend learning vanilla JS before ES6 or React ?
164,2017-11-18 04:10:32,8,3,"Is there a way to make TypeScript throw an error on an implicit type conversion? Seems to me like all the implicit type conversions in JavaScript are one of the larger sources of bugs in the language, so I'd like a way for something like the following code:

    let h = (n: number): number =&gt; {
        let f = () =&gt; 0 
        return -f
    }

to let me know it will be implicitly converting the function type to a number via the `-` operator, and thus always returning `NaN`.

This is all from my stack overflow post:
https://stackoverflow.com/questions/47361859/typescript-error-on-implicit-type-conversion?noredirect=1#comment81676967_47361859",Any way to warn on implicit type conversions?
165,2017-11-20 16:57:44,6,19,,"tj/node-prune - prune unnecessary files from node_modules, such as markdown, typescript source files"
166,2017-11-26 07:31:38,0,1,[removed],typescript ne demek typescript Türkçe
167,2017-11-27 18:46:51,29,75,"I used to work with C++ in my fulltime job and I considered myself good at it. Now I'm working almost all the time with NodeJs+typescript for 3 years now and I feel like I'm getting rusty :)
For example, it's not natural to use and remember aspects of the STL anymore.
How can I maintain my sharpness without working daily with C++?
I may be getting old too :)",How can I keep myself good at C++ without working daily with it?
168,2017-11-29 10:25:01,5,5,For example only targeting last 2 versions of browsers,Is there any way to tell typescript compiler to do something like babel/preset-env does?
169,2017-12-07 13:18:42,14,0,"Was wondering does typescript have a way to smartly determine what I pass in to constructor and auto magically set their respective properties? For example if I have a car class that has color, numWheels, manufacturer and I pass the first and third but not last?",Is there any way to auto magically set properties?
170,2017-12-07 18:41:09,8,4,"I'm trying out some typescript and for some reason have a hard time googling anything about this. Do I have to use this. every single time I want to refer a member variable within a class?

For example : 

    class Basic {
        value : number; 
    }

If I wanna access number here wherever in the class, I'm forced to use this.?
",Accessing properties/members with less this?
171,2017-12-10 06:45:10,7,1,"I am trying to sort an array in typescript case insensitively. In javascript, that could be accomplished with  

    ist.sort(function (a, b) {
      return a.toLowerCase().localeCompare(b.toLowerCase());
    });  

In typescript the sort looks like  

    list.sort((a, b) =&gt; {
      if (a &gt; b) {
        return 1;
      }
      if (a &lt; b) {
        return -1;
      }
      return 0;
    });  

Starting with [F, E, D, c, b, a] I expect to get [a, b, c, D, E, F]  

The javascript sort delivers the expected results, but the typescript sort returns [D, E, F, a, b, c]. How do I make the typescript sort case insensitive?  

EDIT: the reason I can't use the javascript method is because in typescript a and b are boolean and don't have ,toLowerCase() method",Need help with case insensitive sort of an array of strings
172,2017-12-11 20:28:28,0,1,"I created a tutorial how to deploy NPM packages using TypeScript, CircleCI v2 Workflows, and GitHub Releases:

https://sbstjn.com/boilerplate-for-typescript-npm-package-with-circleci-v2-workflows.html

1.	How do you ensure an easy and reliable way to publish new versions on NPM?
2.	Do you have any suggestions to enhance the demonstrated flow?

I would love to hear your feedback!","Tutorial: Publish NPM packages with TypeScript, CircleCI v2, and GitHub"
173,2017-12-13 14:48:01,18,11,"So I wrote a small test game in JS. It spans about 7 or 8 files. It's only for me to practice game development, so I am not concerned at all about best-practices for production hosting. 

I wanted to perform the exercise of porting this game to typescript. My assumption that I could do a build with typescript and run the output in a browser SIMPLY, has been shattered. I've been trying for several days and am about to give up. 

What I've tried: using commonjs, system, amd, and umd modules. These were all challenging because I was completely new to these modules and didn't know how to actually load the modules until recently (with systemjs). The whole time I've been using 'outFile' because a single file is attractive to me. 

So I just figured out how to load modules using systemjs, but I can't help but feel disappointed. It's too complex. I thought typescript compiled to plain javascript? Why must I use module loaders, etc. 

Also, I am reading that using outFile is bad (https://basarat.gitbooks.io/typescript/docs/tips/outFile.html). So I'm deflated that I have to go back to the drawing board again and work with many JS and bring in some app like browserify to make a single file.

Question for you: What is the easiest, most minimal way, to make classes and interfaces across ts files, output to a single file, and use those classes in the browser? All locally. 

Really simplified (more for myself): Typescript to browser as easy as possible. How?

Please and thank you. If this came off as mean, it's really not. I sincerely am a bit frustrated by this, but I'm actually looking forward to understanding this better.",Jumping through hoops just to run in browser. Looking for minimal tool chain.
174,2017-12-13 15:23:21,9,0,Can we consider typescript as a full fledged object oriented language as Java or is it just some sort of syntactic sugar on top of Js ?,is Ts pure oop language or just syntactic sugar ?
175,2017-12-13 17:01:01,2,1,"Hi, I've been trying to learn TypeScript lately and today I decided to rewrite Vue's HackerNews clone in TypeScript as practice.

Microsoft's already given a simple example demonstrating how to make Vue work with TypeScript, but I think a HackerNews app is better and more practical, since it can showcase more complex builds and features, especially SSR. (https://github.com/Microsoft/TypeScript-Vue-Starter)

Everything works exactly the same, however, since I only spent one day working on it so a lot of the code are not on par, especially I used a lot of '&lt;any&gt;' to fool the compiler. So I'll keep working on it and welcome anyone who's interested to help making it better.

Check it out: https://github.com/kevguy/vue-hackernews-2.0-typescript",Vue's Hackernews 2.0 app in Typescript
176,2017-12-14 02:38:08,5,5,"Hi, I've been trying to learn TypeScript lately and today I decided to rewrite Vue's HackerNews clone in TypeScript as practice.

Microsoft's already given a simple example demonstrating how to make Vue work with TypeScript, but I think a HackerNews app is better and more practical, since it can showcase more complex builds and features, especially SSR. (https://github.com/Microsoft/TypeScript-Vue-Starter)

Everything works exactly the same, however, since I only spent one day working on it so a lot of the code are not on par, especially I used a lot of '&lt;any&gt;' to fool the compiler. So I'll keep working on it and welcome anyone who's interested to help making it better.

Check it out: https://github.com/kevguy/vue-hackernews-2.0-typescript",Vue's Hackernews 2.0 app in Typescript
177,2017-12-14 23:44:29,9,2,I'm trying to understand the difference between Babel and Typescript.  Typescript is a programming language which fully supports ES6 standards and transpiles into js which can be used in browsers back to IE9.  Does Babel essentially provide an ES6 polyfill for older non-compliant browsers?  Or is Babel designed to provide functions or capabilities beyond this?,differences between babel and typescript?
178,2017-12-18 13:25:32,5,6,"so, my colleagues and me are discussing our definition of new and strict code style rules for our existing project that's going to be groundup-overhauled. there are a lot of opinions for and against default exports - kyle simpson and airbnb seem to be in favor of them: 
&gt; Though you can clearly use export multiple times inside a module's definition, ES6 definitely prefers the approach that a module has a single export, which is known as a default export. In the words of some members of the TC39 committee, you're ""rewarded with simpler import syntax"" if you follow that pattern, and conversely ""penalized"" with more verbose syntax if you don't.

[AirBnB on GitHub](https://github.com/airbnb/javascript)
while it seems that google tries to avoid it (e.g. with [Angular](https://github.com/angular/angular/blob/master/aio/src/main.ts)). there are also a few blogs that you can read about this topic ([1], [2], [3]), but a lot of their opinions are worthless for when you're working with typescript. what's reddit's stance on this topic?

[1] https://blog.neufund.org/why-we-have-banned-default-exports-and-you-should-do-the-same-d51fdc2cf2ad

[2] https://medium.com/@timoxley/named-exports-as-the-default-export-api-670b1b554f65

[3] https://basarat.gitbooks.io/typescript/docs/tips/defaultIsBad.html",default exports or no default exports - that's the question!
179,2017-12-19 12:52:00,3,4,"Let's say I have a set of data like this with a row for each minute in the last 4 hours:

[
{ X:1000, Y:2000, Z:3000, DateTime: 12/15/2018 12:00  },
{ X:998, Y:2011, Z:3020, DateTime: 12/15/2018 12:01  },
]

 I need to filter the dataset above to only return the property names whose values are within a 20% variance for all rows. So if Y and Z above meet this criteria but X does not then the output should be an array like this:

[Y, Z]

What typescript code could I use to do this?

",how to filter a set of data by variance in typescript?
180,2017-12-27 14:52:34,1,0,"Hey, so I just finished up patching up this [Frankenstein](https://github.com/cantux/typescript-react-redux-reselect-immutablejs). I don't enjoy looking at it. Working with it will also be no easy task...

My first concern is with reselect. I am not entirely sure if I am properly using memoization. Reselect is basically there so that I don't leak immutableJs getters to my react components.

I had problems with changing the structure of my store/data/schema with redux. I started off with a counter and then wanted to switch to a list of counters. Normalization bit me pretty well. I had to add ids to every list item. Spending this effort for every endpoint would build up. I will give normalizr a chance, hope it also has an inverse function as well...

Typescript and ImmutableJS definitely doesn't get along very well. ImmutableJS contributors openly admit that typescript is not their main focus and that they will not sacrifice performance for typing, which only makes sense but lack of a well-tested/production-ready typescript wrapper for immutablejs makes one apply hacky solutions.

This project is glued together with redux-immutable... I would have never sensed I would need a different combineReducers function with the native errors I got from redux.

I always thought the added benefit of using Typescript is to increase readability. At least that was what I experienced with stateful react and angular. Looking at this monster, I wonder if typescript is just a burden. I found myself inclined to using any's and going back and forth at the @types/*. I just dropped a library with a decent looking API just because I didn't want to create wrappers for its functions... I just don't know if it's worth using typescript for this sort of stack.",It Ain't Pretty... Typescript Redux-Reselect-ImmutableJs [Request For Issues/Comments/PRs]
181,2017-12-27 15:03:42,6,4,"Hey, so I just finished up patching up this [Frankenstein](https://github.com/cantux/typescript-react-redux-reselect-immutablejs). I don't enjoy looking at it. Working with it will also be no easy task...

My first concern is with reselect. I am not entirely sure if I am properly using memoization. Reselect is basically there so that I don't leak immutableJs getters to my react components.

I had problems with changing the structure of my store/data/schema with redux. I started off with a counter and then wanted to switch to a list of counters. Normalization bit me pretty well. I had to add ids to every list item. Spending this effort for every endpoint would build up. I will give normalizr a chance, hope it also has an inverse function as well...

Typescript and ImmutableJS definitely doesn't get along very well. ImmutableJS contributors openly admit that typescript is not their main focus and that they will not sacrifice performance for typing, which only makes sense but lack of a well-tested/production-ready typescript wrapper for immutablejs makes one apply hacky solutions.

This project is glued together with redux-immutable... I would have never sensed I would need a different combineReducers function with the native errors I got from redux.

I always thought the added benefit of using Typescript is to increase readability. At least that was what I experienced with stateful react and angular. Looking at this monster, I wonder if typescript is just a burden. I found myself inclined to using any's and going back and forth at the @types/*. I just dropped a library with a decent looking API just because I didn't want to create wrappers for its functions... I just don't know if it's worth using typescript for this sort of stack.",It Ain't Pretty... Typescript Redux-Reselect-ImmutableJs [Request For Issues/Comments/PRs]
182,2017-12-29 03:28:40,8,1,"I've been working with typescript (in react native) for a few months now and I can't get my head around most of the javascript code out there.

Regardless of that, I have been testing different libraries and is quite common (in react native) that the library is missing the type definition so I proceed to generate it for my project, but I am never sure I am doing it correctly and at this stage I am basically writing something I think it will work, test it (it does not) then try again. 

Eventually, I get something to work and I am not quite sure what was wrong and what made it work.

Can any of you share your experience and try to enlight me on how to tackle it in the future?",Learning the proper way to generate type definitions for different projects... what is the right way?
183,2018-01-02 19:16:47,11,1,"As far as I can tell, typescript, purescript, etc need to be converted/compiles/transpiled to js via the command line, usually through npm. 

I would like my users to interactively try out code in the browser without any backing server (which is what apparently many repl services use).

I’m trying to see what options are available other than JavaScript itself.",Are there any languages which can be transpiled to js in the browser?
184,2018-01-02 21:37:07,13,6,"String literal union types and string enums are great for clearly limiting what string values are possible for a method param or property of some object/interface. But that's only half of the picture. 

In code that processes the value of one of these types, I struggled for a while to come up with a simple foolproof pattern for ensuring that I write code to handle all possible values. I want the compiler to fail if I forget to handle a possible value, or if I have a typo and accidentally include handling for a value that is not possible. This makes the code much more robust against future refactoring that adds/removes/renames possible values. I also want the compiler error messages to be as clear as possible, telling me exactly what value I forgot to handle, or what extra value I included.

There are some patterns that can be followed that take advantage of the ""never"" type in TypeScript, but these patterns require some boilerplate code that you must remember to add, and it's not entirely clear why the extra code exists unless you are familiar with the pattern. 

After playing around with several ideas, I finally came up with a fairly simple collection of generic typescript types/methods that allow you to implement a visitor pattern for any string literal union type or string enum. It looks like this:

    import visitString from ""ts-string-visitor"";
    
    // A string literal union type
    type RGB = ""r"" | ""g"" | ""b"";

    // A value to visit
    const color: RGB = ""g"";

    // result === ""Green""
    const result = visitString(color).with({
        ""r"": () =&gt; {
            return ""Red"";
        },
        ""g"": () =&gt; {
            return ""Green"";
        },
        ""b"": () =&gt; {
           return ""Blue"";
        }
    });

It's also overloaded to handle all combinations of the value being potentially null or undefined to make sure you don't forget to handle those values. 

I put it up on GitHub and released it as an NPM module for all to enjoy. 

Here's a link to the README on GitHub with more details: https://github.com/UselessPickles/ts-string-visitor/blob/master/README.md

Or jump straight to the source if you want to see how I did it: https://github.com/UselessPickles/ts-string-visitor/tree/master/src",Using a visitor pattern to ensure that you handle all possible values of a string literal union type or string enum.
185,2018-01-07 12:42:05,5,31,,Flowmaker- A JS code to Flowchart generation built under typescript
186,2018-01-08 15:43:32,2,3,"I'm creating a tsc command in my package.json file and all I want to do is specify a wildcard pattern so that it will compile all *.ts files (recursively) under the src folder; unfortunately using ./src/**/*.ts results in an error indicating ""file not found : *.ts"". 

Some links claim that wildcards are supported :
http://blog.teamtreehouse.com/getting-started-typescript

Others claim it isn't :
http://www.primordialcode.com/blog/post/typescript-command-line-compiler

All I know is that no matter what I do it doesn't seem to work and I have to resort to using find and piping it to tsc. 

Am I missing something? Why doesn't this work for me?

OS : Windows 10
Shell : Git (bash)
Tsc : v2.3.4",Typescript CLI - does it support globs or not?
187,2018-01-13 07:42:56,9,55,"Hi everyone!

I wrote the standart TodoMVC app with Typescript, Vuex  and webpack behind.

I saw none typescript-vue app exists so I made one from Evan You app!

[Link to repo](https://github.com/victorgarciaesgi/Vue-Typescript-TodoMvc)

I don't consider myself a pro in Vue or typescript or even webpack so any feedback on bad pratices is really appreciated :)",TodoMVC - Vue/Typescript/Vuex
188,2018-01-17 02:48:54,4,5,"I am using Typescript 2.5 and trying to setup my vue code in typescript.

I am not using any packages like browserify or webpack  yet.

After reading these 2 links

[https://github.com/Microsoft/TypeScript/wiki/What%27s-new-in-TypeScript#wildcard-character-in-module-names](https://github.com/Microsoft/TypeScript/wiki/What%27s-new-in-TypeScript#wildcard-character-in-module-names)

[https://stackoverflow.com/questions/46503615/import-html-from-typescript-with-webpack](https://stackoverflow.com/questions/46503615/import-html-from-typescript-with-webpack)

I tried writing my code like this 

html-shim.d.ts

    declare module ""*!text"" {
        const Content: string;
        export default Content;
    }
my view.ts file

    import Vue from 'vue'
    import Component from 'vue-class-component'
    import * as Template from '../Detail/detail.html!text';
   
    export default class App extends Vue {
        el: string = ""#app"";
        template: Template;
    }

I tried multiple ways of phrasing the import.  No matter what the template: Template; line gives me the error Cannot find name 'Template'

Any ideas what I am doing wrong?",How do I import text (.html) for vue in Typescript?
189,2018-01-22 08:13:46,0,7,,Modern javascript/typescript validation with decorator support
190,2018-01-22 21:48:51,4,2,"Hi all,

I just started to learn typescript.I have some knowledge of javascript but not much at all, I'm mainly programming in python. So I'm looking for your advice on the best tutorials/documentation/website to read for learning it and also the best ""quality of life"" tools to use with it (I'm using VS code without specific plugins for the moment, I can't use VS or Webstorm).

Thanks !",Essentials reads and tools to know for learning and using Typescript
191,2018-01-23 00:23:19,35,3,"If you don't know what functional programming is.
https://www.youtube.com/watch?v=oB8jN68KGcU


for those on the app

[Git Hub Gist](https://gist.github.com/shavyg2/61dbb12d79b6111aa53dd5e5d0881ff2)


    function _switch(statements){
        //gaurd

        if(statements.length % 2 !=0){
            throw new Error(""uneven switch statements"")
        }
        function _internal(_case,[test,_return,...rest]){
            return test(_case)? _return(_case): rest.length? _internal(_case,rest):undefined;     
        }

        return function(_case:any){
            return _internal(_case,statements);
        }
    }


    const my_test_switch = [
        x=&gt;x===""yoda"",
        x=&gt;'hmm me is yoda',

        x=&gt;x===""han solo"",
        x=&gt;""chewie, ready the ship"",

        x=&gt;true,
        x=&gt;`who the hell are you? ${x}? nope, no friend of mine`
    ]


    let test = _switch(my_test_switch);

    console.log(test('yoda'))
    console.log(test('han solo'))
    console.log(test('rey'))


it prints what you would expect.

============update==============.
I have gotten some good feed back from this post and it's been helpful.

Here is my point of view at this point in time.

Addressing it's ugly.
I was talking about the implementation i used some simple arrow functions to not have different functions on the page. How would i actually use this.

    const isYoda = x=&gt;x===""yoda"";
    const getYodaPhrase = x=&gt;'hmm me is yoda'

    const isHanSolo = x=&gt;x===""han solo""
    const getHanSoloPhrase = x=&gt;""chewie, ready the ship"",

    const getUnknownPersonPhrase  =x=&gt;`who the hell are you? ${x}? nope, no friend of mine`
    
    //i don't think it's ugly
    const test  =_switch([
      isYoda,getYodaPhrase,

      isHanSolo,getHanSoloPhrase,
      //my default
      ()=&gt;true,getUnknownPersonPhrase
    ])

    console.log(test('yoda'))
    console.log(test('han solo'))
    console.log(test('rey'))


2. the distinction between predicate and action. Yes this is a much bigger issue.
it would have to be used as such. This can easily be typed in typescript and is prolly the best idea.

    const isYoda = x=&gt;x===""yoda"";
    const getYodaPhrase = x=&gt;'hmm me is yoda'

    const isHanSolo = x=&gt;x===""han solo""
    const getHanSoloPhrase = x=&gt;""chewie, ready the ship"",

    const getUnknownPersonPhrase  =x=&gt;`who the hell are you? ${x}? nope, no friend of mine`

    const test  =_switch([
      [isYoda,getYodaPhrase],

      [isHanSolo,getHanSoloPhrase],
      //my default
      [()=&gt;true,getUnknownPersonPhrase]
    ])

    console.log(test('yoda'))
    console.log(test('han solo'))
    console.log(test('rey'))


3. The throw or the return undefined.
I still don't know what i would do here. in functional programming you not throw. However, it's not a full functional language to begin with. I am just trying to make it closer to get some of the benefits.

It's like some of the syntax that babel, flow or typescript brought. They also weren't features of the language but they did it to get some of the benefits from other languages.

still unsure about this point. I think if i had to choose i would use the undefined.

it's what ramda uses for the cond operator.
https://www.npmjs.com/package/ramda


lastly i got an implementation of it that was actually pretty sweet.

    function cond(pairs) {
      return value =&gt; {
        for (const [condition, action] of pairs) {
          if (condition(value)) {
            return action(value);
          }
        }
        return value;
      };
    }
i would just return undefined here. so that an or operator can be used with it. I know it's not 100% functional, but neither is the language to start. You make due to get the best of the situation i feel.


here is the Ramda usage btw

    var fn = R.cond([
      [R.equals(0),   R.always('water freezes at 0°C')],
      [R.equals(100), R.always('water boils at 100°C')],
      [R.T,           temp =&gt; 'nothing special happens at ' + temp + '°C']
    ]);
    fn(0); //=&gt; 'water freezes at 0°C'
    fn(50); //=&gt; 'nothing special happens at 50°C'
    fn(100); //=&gt; 'water boils at 100°C'

","Functional Switch? anything inherently wrong with this, just trying to think functional."
192,2018-01-23 18:00:08,10,3,"(Duplicate of Stack Overflow Question: https://stackoverflow.com/questions/48408003/in-typed-js-typescript-flowtype-how-do-you-handle-normalized-objects)

Working on a project.  I'm starting with flow type because it's easier to implement piecemeal but eventually I plan to convert from flow to Typescript when we move from ""proof of concept"" into ""prototype"".  However, a solution to this problem in either should work in both flow or TS. 

I'm writing a backend API which makes queries to a database. 

Now, my query to the DB gives me this:

    type OneMeeting = {
      location: string
      participants: Array&lt;string&gt;
    }
    
    const RawDataFromDB: Array&lt;OneMeeting&gt; = await getDataFromDB();

Here's the problem: 

I want to consolidate that data, so that if all participants are identical, the zip codes are combined.  

So, I want this: 

    type Meeting = {
      locations: Array&lt;string&gt;
      participants: Array&lt;string&gt;
    } 

    const RawDataFromDB: Array&lt;OneMeeting&gt; = [
      {
        location: ""Trump Tower"",
        participants: [""Kushner"", ""Trump Jr."", ""Manifort"", ""Veselnitskaya""]
      },
      {
        location: ""Mar A Lago"",
        participants: [""Kushner"", ""Trump Jr."", ""Manifort"", ""Veselnitskaya""]
      },
      { 
        location: ""Mar A Lago"",
        participants: [""Trump Sr."", ""Abramovich""]
      }
    ]

    const WhatIWantAtTheEnd: Array&lt;Meeting&gt; = [
      { 
        locations: [""Trump Tower"", ""Mar A Lago""], 
         participants: [""Kushner"", ""Trump Jr."", ""Manifort"", ""Veselnitskaya""]
      }, 
      { 
        locations: [""Mar A Lago""],
        participants: [""Trump Sr."", ""Abramovich""]
      }
    ] 

Now, the way I had been converting from Raw Data to What I want was basically to sort() the participants in each meeting, create an object where the key is the JSON.stringified version of the participants array, and push the location values.  So there's an intermediate step where, instead of an array of meetings, there's an intermediate Object with an unknown number of keys, where the names of those keys cannot be determined in advance.  

And for the life of me, I can't figure out how to type out that intermediate Object so that it doesn't throw a type error, without making it an ""any"" - which will then throw errors if I try to .sort() on an ""any"" value. 

So, typescripterinos, how would you approach this?  ",How do you handle normalized objects?
193,2018-01-24 18:49:06,1,2,"Briefly: Is there a way to setup TypeScript to emit code with semantic / type errors, but noEmit when there are syntax errors?

I was surprised to learn that tsc will emit JS even if the TS has syntax errors that make it look nonsensical.  For example:

    const foo: interface whatever {
        hello!.foo: string;
    }

compiles into:

    var foo = whatever, _a = void 0, _b = _a.hello, hello = _b === void 0 ? !.foo : _b, string = _a.string;

This is problematic because TSC is transforming code that should never execute into code that will.  Instead of the JavaScript runtime saying ""syntax error"" and refusing to parse the code, it'll actually runs!

In some situations, it makes sense to fail a build on type errors.  In others, the build should continue even if there are errors.  Depends on the project and team.  I prefer to live with type errors while prototyping, then fix them before committing.

TSC has a `noEmit` flag which blocks `.js` emit when there are any errors.  The API has a `transpile` method which completely skips typechecking.  awesome-typescript-loader has an `errorsAsWarnings` option that allows webpack builds to continue even in the presence of type errors.

However, is there an option to fail a build and/or noEmit when there are **syntax errors**, but not when there are **semantic/type** errors?  Does the compiler API expose this distinction in the diagnostics API?  Could I theoretically submit a PR to projects like awesome-typescript-loader that enables this behavior?  I think this requires compiler support.","Differentiate between syntax errors and semantic errors, block emit only for former?"
194,2018-01-30 13:40:57,9,1,,Why you always should use typescript!
195,2018-01-31 11:37:53,1,1,[removed],HELP NEEDED (JAVASCRIPT AND TYPESCRIPT)
196,2018-01-31 19:54:43,5,0,"My friend made a monero miner which mine on heroku server, he was making us deploy servers for him for less than half of the cut. I want to know what he wrote but I am just beginning to learn JS, I was hoping if someone fluent in them could decode it for me. If it works, you can be making hundreds a day from it!

https://github.com/GloriousYellow/heroku-benchmark https://github.com/Yellowiki/monero-miner",HELP NEEDED (JAVASCRIPT AND TYPESCRIPT)
197,2018-02-04 15:40:21,0,12,,I built a typescript module to make pages talk (simplified HTML5 speech synthesis wrapper).
198,2018-02-06 22:53:50,2,5,"Firstly; if this is not the place to post questions like this, please guide me to somewhere more suitable. I've already [posted this to stackoverflow](https://stackoverflow.com/questions/48653252/explanation-of-action-creator-and-extraction-of-types-from-them), but if I know the folks over there right, it will probably be down-voted to oblivion and then some.

Thanks.
__________________________________

I'm putting together a little app using typescript, react and redux, and I came across this little thing called an action creator.

The code for the action creator class is as following, original creator, and props goes to github@plotrwitek;

    export class ActionCreator&lt;T, P&gt; {
      readonly type: T;
      readonly payload: P;
    
      constructor(type: T) {
        this.type = type;
      }
    
      create = (payload: P) =&gt; ({
        type: this.type,
        payload
      });
    }

Now, in the reducer, I'm instantiating these action creators, and extracting the different types as following;

    export const ActionCreators = {
      TestAction: new ActionCreator&lt;'TestAction', string&gt;('TestAction'),
    };

The reason I'm using `Partial&lt;...&gt;` under is because it would complain about a missing `create` property, which is present on the class, but not on what is returned from the `create` method.

    export type Action = Partial&lt;typeof ActionCreators[keyof typeof ActionCreators]&gt;;

What I'm wondering is the following; could someone please provide an explanatin as to how the `typeof ...[keyof typeof ...]` works, and if possible; provide an alternative solution to this that accounts for the missing `create` property - a type that only contains the possible returns from the `create` method.

Thanks.",Explanation of action creator and extraction of types from them
199,2018-02-08 08:11:48,2,3,,prelude.ts -- a typescript/javascript library with FP constructs and immutable collections
200,2018-02-09 00:08:55,0,1,https://github.com/vichyssoise/graphql-typescript,Try 'npm install -S graphql-typescript'. I just make a library generating graphql schema using typescript.
201,2018-02-09 14:39:34,25,3,"Guys hi,

As the title says we are moving from jquery, we do not need react/angular/vue for our site. So i wonder if we should keep our code base in es6 or typescript.

Right now the code base is small, so would like to start from a right foot and in future proof direction. 

p.s. It's relatively small travel ecommerce site, but a long term project. ",Moving our code base from jquery. Should we go es6 or typescript?
202,2018-02-11 19:07:43,9,1,,Making typescript exceptions type safe
203,2018-02-12 18:51:17,0,2,,Type-Driven Development with TypeScript (x-post r/typescript)
204,2018-02-12 20:55:28,0,0,,Type-Driven Development with TypeScript (x-post r/typescript)
205,2018-02-14 16:08:00,0,1,"**Figured it out!**

Initially, I was trying to import my module like this:


    const qml = require('quill-marking-logic')
    const { checkSentenceCombining, checkSentenceFragment, checkDiagnosticQuestion, checkFillInTheBlankQuestion, ConceptResult } = qml

because I got a `TS2307: Cannot find module 'quill-marking-logic' ` error when I tried to use

`import { checkSentenceCombining, checkSentenceFragment, checkDiagnosticQuestion, checkFillInTheBlankQuestion, ConceptResult } from 'quill-marking-logic'`

This was because I was using `""module"": ""es6""` in my importing app's tsconfig, which by default sets the `moduleResolution` option to `Classic`. By explicitly setting it to `node`, I was able to use the `import` syntax and get my interfaces!

**Original post**

I've built a node module using Typescript that I am using as a dependency in another app. I have a couple of interfaces in the module that I am trying to export from the its entry point so that I can use them in my other app, but they are erased after compilation. I understand that this is part of Typescript's design,  because the interfaces are used for runtime analysis, but I'm wondering if there's a way to get around it so I don't have to define them again in my other app and have to maintain the same code in two places. I'm using rollup as my bundler.

This is what the .d.ts version of my entry point looks like:


    export { checkSentenceCombining } from './libs/graders/sentence_combining';
    export { checkDiagnosticQuestion } from './libs/graders/diagnostic_question';
    export { checkSentenceFragment } from './libs/graders/sentence_fragment';
    export { checkFillInTheBlankQuestion } from './libs/graders/fill_in_the_blank';
    export { Response, PartialResponse, ConceptResult, FocusPoint, IncorrectSequence, FeedbackObject, GradingObject, WordCountChange } from './interfaces/index';


That last line of exports is where the interfaces should be coming through.

Here is my tsconfig:

    {
        ""compilerOptions"": {
            ""target"": ""es5"",
            ""module"": ""CommonJS"",
            ""moduleResolution"": ""node"",
            ""allowSyntheticDefaultImports"": true,
            ""sourceMap"": false,
            ""noImplicitAny"": false,
            ""lib"": [
                ""dom"",
                ""es7""
            ],
            ""typeRoots"": [
                ""node_modules/@types/""
            ],
            ""declaration"": true
        }
    }

Here is my tsconfig for the app I'm trying to import this in to:

    {
        ""compilerOptions"": {
            ""outDir"": ""./dist/"",        // path to output directory
            ""sourceMap"": true,          // allow sourcemap support
            ""strictNullChecks"": true,   // enable strict null checks as a best practice
            ""module"": ""es6"",            // specifiy module code generation
            ""jsx"": ""react"",             // use typescript to transpile jsx to js
            ""target"": ""es6"",            // specify ECMAScript target version
            ""allowJs"": true,            // allow a partial TypeScript and JavaScript codebase
            ""lib"": [""ES2017"", ""DOM""],            //
            ""allowSyntheticDefaultImports"": true // Allow import React from 'react'
        }
    }


And I'm pointing to the generated .d.ts file in the ""typings"" key in my package.json:

      ""name"": ""quill-marking-logic"",
      ""version"": ""0.1.22"",
      ""description"": ""Shared Quill logic for grading and contextualizing student writing."",
      ""main"": ""./dist/lib"",
      ""module"": ""./dist/lib"",
      ""typings"": ""./dist/src/main.d.ts"",
      ""types"": ""./dist/src/main.d.ts"",


",How do I export Typescript interfaces from a node module?
206,2018-02-19 20:19:27,22,0,"I'm thinking of asking my boss for a new computer as waiting for webpack to hot reload every time I make a change to my code is I think slow enough to invest in a new computer. The problem is I'm working in typescript (you can guess the framework) and also had to write a custom base library that must also be compiled with rollup.js in the hot reload process. It's just kind of slow and I think the work I do is valuable enough that a new computer is in order.

It basically needs to be a mac imo I guess I'm just wondering if a big GPU would make a real difference here? Obviously if you have your dev tools open as well and it parsing your redux state container and all this stuff can be really slow as well.",What's are some things to look for in buying a computer that will really speed up a frontend development environment?
207,2018-02-21 10:30:35,4,5,"I am trying to use MS Fabric UI in a react project. All/most of the fabric examples ar TS but I have been told that I should use ES6. I am not smart enough to manually convert TS to JS (JS newb). I guess I could use tsc on the command line. But I would prefer it to be automated (webpack).

So I have configured typescript to target ES6 and then Babel to convert to ES5 for the browser.It works. But I do not see the (TS) ES6 files anywhere in the project. Are they in memory (using hot reload)?  I would like to look at them and possibly use them as my source code going forward as TS is not allowed. Anyone know how?

",How to see TS as ES6?
208,2018-02-22 14:35:18,0,1,[deleted],Created a solution for mono-repos with multiple typescript projects (integrates with vscode)
209,2018-02-23 20:37:35,1,1,[deleted],A type-safe html template tool for typescript
210,2018-02-28 02:31:11,0,2,"javascript example: https://codesandbox.io/s/5w62vmplq4  


typescript example: https://codesandbox.io/s/v3jm0lpl00

",An example of how decorators can be used to make component-level state management more ergonomic in react.
211,2018-03-02 13:51:15,0,0,,vue typescript starter kit with daptin headless cms
212,2018-03-03 16:33:09,18,0,"I'm aware there is [Basarat Collection](https://github.com/basarat/typescript-collections) but I can't be the only who wants to do this :

    let users : ArrayList&lt;User&gt;
    users.add(new User())

and

    users.where( user =&gt; user.id == 10 )
    users.removeAt(0)

Without having to ""import * from xxx"" , and wish Typescript had augmented the default Array of Javascript.

Edit: Issue resolved via hidden dependencies with webpack . No need for further comments Thanks :).

 ",I'm the only Fed Up of not having collections built-in Typescript itself ?
213,2018-03-03 18:39:20,12,5,"Hello everybody,

typescript/javascript beginner here. 
I apologize in advance if the question turns out to be stupid or unnecessary.

I want to have function which takes in a function and applies try/catch on it, so that I don't forget it/ have to do it myself every time.

That's what I came up with so far.

    // the obligatory adt
    type Response&lt;T&gt; =
      | {
          readonly isSuccess: false;
          readonly errorMessage: string;
        }
      | {
          readonly isSuccess: true;
          readonly data: T;
        }
    
    // represents the maximal number of parameters
    // all paramters are optional and so undefined if not used
    // it's not necessary, but I thought it might be nice for better readability  
    interface IFuncParams&lt;P1, P2, P3&gt; {
      readonly p1?: P1;
      readonly p2?: P2;
      readonly p3?: P3;
    }
    
    // the function that calls a function and wraps it in a try/catch clause
    // 'R' is the return type, everything else are the paramter types
    // 'func' takes the function to execute, variadic parameter because number of arguments is not known beforehand
    // 'params' does hold the supplied parameter values
    // I then use the 'Object.values' method with destructuring to gain access to all values in the right order
    // last but not least I return the correct respone
    public async failable&lt;R, P1 = any, P2 = any, P3 = any&gt;(
        func: (...param: any[]) =&gt; R,
        params: IFuncParams&lt;P1, P2, P3&gt;
      ): Promise&lt;Response&lt;R&gt;&gt; {
    
        try {
          const result = await func(...Object.values(params));
    
          return { isSuccess: true, data: result };
        } catch (error) {
          return { isSuccess: false, errorMessage: error };
        }
      }

I just want to know whether this is a good approach or if there are better solutions.

I appreciate every answer, thank you!

","[Q] beginner - is the following ""concept"" a good way of making try/catch more generic"
214,2018-03-05 15:20:29,12,2,,I just rewrote this library I wrote a while ago to typescript Basically it's a helper function that receives an object with a promise in each property and returns a promise that resolves to an object with the same properties and the resolved values of the promises. Enjoy.
215,2018-03-05 15:36:59,0,1,,I just rewrote this library I wrote a while ago to typescript Basically it's a helper function that receives an object with a promise in each property and returns a promise that resolves to an object with the same properties and the resolved values of the promises. Enjoy.
216,2018-03-05 21:11:54,0,1,,Create graphql schema with typed typescript class
217,2018-03-08 11:10:15,8,11,"I'm trying to get my head around Redux, and from the documentation, it's unclear to me whether the 'state' and 'action' passed to reducers is a subset of the global state and all possible actions, or whether the whole app's state is passed and any action might be passed too  (hence the 'default' clause when switching on `action.type`). This kind of problem meets me at every turn when trying to integrate Redux into a TypeScript project.

Unfortunately, all GitHub examples and blog posts (even ones specifically talking about adding typings) I can find skirt over these aspects. The best guide I've found so far is [Piotr Witek's React-Redux-TypeScript Guide](https://github.com/piotrwitek/react-redux-typescript-guide#typing-reducer), and I will be exploring his own repos later, but still I'd like to see something that uses this typing guidance in a full project such as a counter.","Are there any opensource projects with ReactJS &amp; Redux demonstrating FULL typings - e.g. noImplicitAny, with accurate typings in reducers and stores?"
218,2018-03-12 23:56:06,7,15,,typescript-starter CLI: quickly generate new libraries and Node.js projects
219,2018-03-13 22:58:31,10,22,,typescript-starter CLI – quickly generate a new TypeScript library or Node.js project
220,2018-03-14 20:43:23,0,1,[deleted],typescript-starter interactive CLI: generate a new JS library or Node.js project and get started in 30 seconds
221,2018-03-14 21:31:31,0,1,[deleted],typescript-starter interactive CLI: generate a new JS library or Node.js project and get started in 30 seconds
222,2018-03-15 09:44:57,0,2,,"Simple starter project with karma, typescript and little more for building utility npm modules"
223,2018-03-15 11:33:46,1,1,[deleted],deciding between Kotlin or typescript: going to base it on learning resources. what's the most helpful learning material on the web?
224,2018-03-16 16:48:11,0,1,"Here's a repo that shows my issue

https://github.com/prozacgod/reimagined-octopus

I have a complex existing webapp that is ... poorly designed and we've decided to start implementing pieces of it in react, so we may ultimately replace it.

It's a bit fragile, so changing the tsconfig's module rules may be difficult, I think it would be using the default which is ""classic"" import rules. 

The problem seems to be that react's Definitely Typed typings do not declare a module, just a namespace.  jQuery's typings and lodash's typings declare modules, and can be imported.

The error I get when I act as if react is global, and just use React.Component is ""React refers to a umd global, but the current file is a module. consider using an import instead""  ( Clear as mud btw :P )

when I try to import  the module, the error moves to the module import as ""cannot find module react""

now I'm not presenting typescript with a lodash or jquery source file, I assume the same would be true of the react import.  The files are presented to requirejs as part of the web application's loading step.

I'm kinda at a loss for my next steps.",Issue with an existing typescript webapp and importing react in a UMD/Require.JS environment
225,2018-03-18 12:17:52,0,1,,what-is-typescript
226,2018-03-24 22:57:56,11,2,"This is a proposal for my idea: to add optional typing to JS. This idea is based on my rudimentary understanding of JS from a background in C#, which, to be honest, is only marginally less rudimentary. When I initially started programming in JS, I was intrigued by the fact that I could only declare a variable without explicitly specifying its type, as that was my only option. Even though the interpreter is able to infer the type based on the values, I think it would be fair to say that I was a bit disappointed that it was not an option for me to declare a variable with an explicit type.

My idea is that the existing keywords in JavaScript such as `let`, `var`, `const` should maintain their respective functions. During the implementation, they may have to be modified slightly but they should ultimately be able to behave as they do now. Meanwhile, keywords such as `bool`, `int`, `float`, `string` should be added to explicitly set the type of the variable. Others before me have already tried to discuss this and push for its implementation, such as the [ES8 Proposal: Optional Static Typing](https://esdiscuss.org/topic/es8-proposal-optional-static-typing) sent to the [es-discuss](https://mail.mozilla.org/listinfo/es-discuss) mailing list, [Do you think ES7 will add optional static typing?](https://www.reddit.com/r/javascript/comments/31qwfa/do_you_think_es7_will_add_optional_static_typing/) posted on this [javascript subreddit](https://www.reddit.com/r/javascript/), or [proposal-optional-type by samuelgoto](https://github.com/samuelgoto/proposal-optional-types) that can be found on [GitHub](https://github.com/). These existing texts are all well-written and contain useful insight, but I would just like to add to them in my proposal and start another discussion around this topic.

There could be many reasons as to why someone may want to specify a variable's type explicitly, such as improving readability and allowing the interpreter to check the type before running the code, giving the programmer greater control over how their program functions. This can promote better workflow and stricter programming practices.

Consider the following lines of code:

    let foo = 0;
    int foo = 0;

In this case, in terms of the code's readability, there is no apparent advantage to either method. However, consider the following lines of code:

    let foo = MyFunction();
    int foo = MyFunction();

In this case, the readability is evidently impacted by whether or not the type is explicitly specified. Where the `let` keyword is used, the person who has to read the code will have no idea what type `foo` will be unless they find the function `MyFunction` and read through it to see what it returns. Of course, internal documentation, in the form of comments, can be added to delineate the same information, however having the type explicitly stated is arguably more efficient documentation. So in this instance, having an explicit type would help with readability. It has been argued that dynamic typing saves the programmer from typing as much as if the language were static typed. This can be refuted because programmers tend to add more documentation in the form of comments when the type is not explicitly specified.

Allowing the programmer to specify the type for a variable could also be of use to the interpreter, where it can check during compile-time and throw errors if it catches any. Consider the following scenario:

*HTML*

    &lt;input type=""number"" id=""num1""&gt;
    &lt;input type=""number"" id=""num2""&gt;
    
    &lt;button onclick=""AddNumbers();""&gt;Add Numbers&lt;/button&gt;

*JS*

    function AddNumbers() {
        let num1 = document.getElementById('num1').value;
        let num2 = document.getElementById('num2').value;
        
        alert(num1 + num2); // Concatenates the strings instead of summing the numbers.
    }

In this case, the plus sign becomes the concatenation operator instead of the addition operator. Clearly the intention of the programmer was to output the sum of the two numbers inputted, however due to not being able to specify the type of the variables, the algorithm has become invalid. If the variable types were specified, the interpreter could have thrown an error when we try to set the variables to strings. This situation is very common, especially with inexperienced programmers and beginners. For example, I personally see this happen in my software class all the time.

Another example of where non-explicit typing could cause some trouble is shown below:

    let foo = ""123/bar"";
    let fooParts = foo.split(""/"");
    
    let fooNumbers = fooParts[0];
    alert(typeof fooNumbers); // Output is 'string'.
    
    if (fooNumbers === 123) {
        MyFunction();
    }

This will not execute the function MyFunction as the programmer intends. The if statement will not return `true` because the variable `fooNumbers` is the wrong type. Although the value of `fooNumbers` is `123`, it is stored as a `string`. This is an example of where lacking explicitly typed variables can cause unforeseen problems in the program that don't get logged as errors in the console. This is an example of how a logic error could be formed and this particular logic error remains invisible because of the lack of explicitly typed variables. If the variable foo were explicitly typed, the interpreter could have either identified the error or implicitly converted the value.

The examples show how explicitly typing could help the programmer gain more control over the programs they write. Giving the programmer the option to set types for the variables they create gives them much of that control. Strongly typed code, where types are explicitly specified, are likely to be more predictable than weakly typed code. In addition, strongly typed programming languages force the programmer to consider the data types, thus they it would encourage them to have actually designed the algorithm more thoroughly before they implement it.

I have consulted my software teacher, who has a rich background in this area, about the implications of such a system as the one I am proposing. I asked about the impact of optional typing, the advantages and the disadvantages. The general response was that the advantages are in line with what I have outlined above and that the disadvantages would be insignificant. He points out that one disadvantage would be the extra steps involved in interpreting and executing the code, but this is minor. In response, he also mentions two examples of existing solutions that already aim to solve the same problems I have addressed. He explains that having explicit typing would also help to keep the code manageable in larger projects in large development teams. This will help to decrease the likelihood of errors in the programs.

One such example of an existing solution to the lack of typing in Javascript is [TypeScript](http://www.typescriptlang.org/), an open-source programming language that was developed by Microsoft to include optional static typing. I feel that there isn't a reason why JavaScript couldn't integrate optional typing and support it natively.

Another workaround, as it is not exactly a solution, is to use JavaScript linters to check your code. I call it a workaround because it does not really solve the problem which I think adding optional typing could fix. Linters like [JSHint](http://jshint.com/) and [JSLint](https://www.jslint.com/) are examples of existing JavaScript linters that check your code and report different metrics and possible problems. [Flow](https://flow.org/) is another existing solution that tracks the types as data moves through your code. Flow gives fast feedback as you program by incrementally rechecking your code as you make changes.

I think implementing optional typing to JS would be advantageous. This is my proposal for adding optional keywords to allow typing in JavaScript. I am looking for feedback and any thoughts on this topic. What do you think of it? Do you agree or disagree with my proposal?",Proposal: Optional Typing for JS
227,2018-03-25 11:37:03,0,0,,Static typescript client for controller actions.
228,2018-03-25 19:58:07,0,1,[deleted],Translating JavaScript to typescript
229,2018-03-25 22:11:02,31,0,"I am learning typescript (attending a course on EDX). one thing which annoys me very much is that typescript needs a ; at the end of every line.

That's really stupid and no modern programming language forces you to use ; to mark line end.

I wonder what stupidity drove the creators of typescript for mandate the ; ???? is this the 1980? or 1990?
",Why does TS need a ; at the end of every line?
230,2018-03-27 21:47:09,3,1,"Code example:
[here](http://www.typescriptlang.org/play/#src%3Dclass%2520Greeter%2520%257B%250D%250A%2520%2520%2520%2520greeting%253A%2520string%253B%250D%250A%2520%2520%2520%2520constructor%28message%253A%2520string%29%2520%257B%250D%250A%2520%2520%2520%2520%2520%2520%2520%2520this.greeting%2520%253D%2520message%253B%250D%250A%2520%2520%2520%2520%257D%250D%250A%2520%2520%2520%2520greet%28%29%2520%257B%250D%250A%2520%2520%2520%2520%2520%2520%2520%2520return%2520%2522Hello%252C%2520%2522%2520%252B%2520this.greeting%253B%250D%250A%2520%2520%2520%2520%257D%250D%250A%250D%250A%2520%2520%2520%2520public%2520static%2520standardGreeting%28%29%2520%257B%250D%250A%2520%2520%2520%2520%2520%2520%2520%2520return%2520this.getStandardGreeting%28%29%253B%250D%250A%2520%2520%2520%2520%257D%250D%250A%250D%250A%2520%2520%2520%2520private%2520getStandardGreeting%28%29%2520%257B%250D%250A%2520%2520%2520%2520%2520%2520%2520%2520return%2520%2522Hello%252C%2520World%2522%250D%250A%2520%2520%2520%2520%257D%250D%250A%257D%250D%250A%250D%250A%250D%250A%250D%250Alet%2520button%2520%253D%2520document.createElement%28%27button%27%29%253B%250D%250Abutton.textContent%2520%253D%2520%2522Say%2520Hello%2522%253B%250D%250Abutton.onclick%2520%253D%2520function%28%29%2520%257B%250D%250A%2520%2520%2520%2520alert%28Greeter.standardGreeting%28%29%29%253B%250D%250A%257D%250D%250A%250D%250Adocument.body.appendChild%28button%29%253B).

I am trying to access a private function from a static function in general, but cannot.  Can someone explain to me why this fails?

I tried copying and pasting the transpiled code into a javascript console and it worked fine.


The linter complains saying: ""Property 'getStandardGreeting' does not exist on type 'typeof Greeter'."".",Accessing private functions from a static function
231,2018-03-28 12:36:58,6,2,"    interface A { a: string; b: string }
    interface B { c: number; d: number }

    function f(a: number): A &amp; B | A  {
        if (a)
            return { a: 'asd', b: 'zxc', c: 2, d: 4 };
        else
            return { a: 'qwe', b: 'zxc', c: 3 };
    }

http://www.typescriptlang.org/play/index.html#src=interface%20A%20%7B%20a%3A%20string%3B%20b%3A%20string%20%7D%0D%0Ainterface%20B%20%7B%20c%3A%20number%3B%20d%3A%20number%20%7D%0D%0A%0D%0Afunction%20f(a%3A%20number)%3A%20A%20%26%20B%20%7C%20A%20%20%7B%0D%0A%20%20%20%20if%20(a)%20return%20%7B%20a%3A%20'asd'%2C%20b%3A%20'zxc'%2C%20c%3A%202%2C%20d%3A%204%20%7D%20%3B%0D%0A%20%20%20%20else%20return%20%7B%20a%3A%20'qwe'%2C%20b%3A%20'zxc'%2C%20c%3A%203%20%7D%0D%0A%7D%0D%0A%0D%0Af(0)%0D%0A

So my expectation is that the second return statement will throw error in typescript because `{a: string, b: string, c: number}` type doesn't exists neither in `A &amp; B` type nor in `A` type, but ts doesn't throw error.",Is it possible to restrict what exactly the function can return?
232,2018-03-28 22:40:51,6,16,"Such an amazing release - was playing with conditional types, looking at http://koerbitz.me/posts/a-look-at-typescripts-conditional-types.html and came up with a fairly comprehensive DeepReadonly implementation:

(well, comprehensive in that tuples are supported up to 5 levels deep :-) )

Pastebin: https://pastebin.com/Z8YSdThR

    // DeepReadonly
    type DeepReadonly&lt;T&gt; =
      T extends [infer U]                                     ? DeepReadonlyObject&lt;[U]&gt; :
      T extends [infer U, infer V]                            ? DeepReadonlyObject&lt;[U, V]&gt; :
      T extends [infer U, infer V, infer X]                   ? DeepReadonlyObject&lt;[U, V, X]&gt; :
      T extends [infer U, infer V, infer X, infer Y]          ? DeepReadonlyObject&lt;[U, V, X, Y]&gt; :
      T extends [infer U, infer V, infer X, infer Y, infer Z] ? DeepReadonlyObject&lt;[U, V, X, Y, Z]&gt; :
      T extends Array&lt;infer U&gt;        ? ReadonlyArray&lt;DeepReadonlyObject&lt;U&gt;&gt; : // putting DeepReadonlyObject here is weird (I think it should be DeepReadonly) but avoids circular reference error which is probably a bug in the type check code
      T extends Map&lt;infer U, infer V&gt; ? ReadonlyMap&lt;DeepReadonlyObject&lt;U&gt;, DeepReadonlyObject&lt;V&gt;&gt; :
      T extends Set&lt;infer U&gt;          ? ReadonlySet&lt;DeepReadonlyObject&lt;U&gt;&gt; :
      T extends object                ? DeepReadonlyObject&lt;T&gt; :
      T

    type DeepReadonlyObject&lt;T&gt; = { readonly [K in keyof T]: DeepReadonly&lt;T[K]&gt; }
    
    type DeepTestType = DeepReadonly&lt;{
      a: string
      b: number[]
      c: { d: string, e: number[], f: [number, { g: string, h: number }] }
      i: [number, string, boolean]
      j: { id: number, name: string }[]
      k: Set&lt;number&gt;
      l: Map&lt;{ id: number, name: string }, { age: number }&gt;
    }&gt;

    const record = { id: 123, name: 'zxc' }

    const deepTest: DeepTestType = {
      a: 'asdf',
      b: [123, 234],
      c: { d: 'zxc', e: [1, 2, 3], f: [1, { g: 'iop', h: 789 }] },
      i: [1, 'a', true],
      j: [{ id: 1, name: 'c' }],
      k: new Set([1, 2, 3]),
      l: new Map([
        [record, { age: 789 }]
      ])
    }
    deepTest.b[0] = 789 // fail :-)
    deepTest.c.d = 'zxc' // fail :-)
    deepTest.c.f[0] = 'asd' // fail :-)
    deepTest.c.f[1].g = 'zxc' // fail :-)
    deepTest.i[1] = 'zxc' // fail :-)
    deepTest.j[0].id = 789 // fail :-)
    deepTest.l.get(record).age = 1 // fail :-)
    for (let key of deepTest.l.keys()) {
      key.name = 'zxc' // fail :-)
    } 

    function output(a: DeepReadonly&lt;{id: number, name: string}&gt;): void {
      a.id = 789 // fail :-)
      console.log(a.id, a.name)
    }
    output({ id: 123, name: 'zxc' })
",DeepReadonly recursive conditional type in TypeScript 2.8
233,2018-03-29 14:40:19,9,3,"For some reason, typescript compiles the following code without errors. I expect the last line to result in an error. Is this a bug or is there something wrong with my code?

    class Foo { ... }
    class Bar { ... }
    
    interface FooStatic
    {
        new(): Foo;
    }
    
    function whatever(x: FooStatic) { ... }
    
    whatever(Foo);
    whatever(Bar); // &lt;--- typescript compiles without error
    
I'm trying to do the following:

    class Something { ... }
    class Foo extends Something { ... }
    class Bar { ... }
    
    interface SomethingClass&lt;T extends Something&gt;
    {
        new(...args: any[]): T
    }
    
    function whatever&lt;T extends Something&gt;(x: SomethingClass&lt;T&gt;) { ... }
    
    whatever(Foo); // ok
    whatever(Bar); // I want the compiler to catch this mistake

Using typescript 2.7.2

Anyone know how I can properly constrain an argument to be a class that extends another? Currently typescript happily accepts any class.",Trying to restrict the classes that can be passed in as arguments
234,2018-04-03 07:49:04,1,1,[deleted],"Different projects, same terminal profile, same typescript version, almost identical config, yet somehow the timestamp is in a different format?"
235,2018-04-04 15:14:55,2,0,"Hello everyone,

I'm in some need of assistance as I've come up short understanding how to include a simple library into my browser based TypeScript project. Concretely I'm having some real issues use the GSAP tweening library with typescript despite googling solutions and following blog posts.

TL;DR = Installed GSAP and GSAP types using npm. Compiled project to seperate build folder. Tried bundling the GSAP library as gsap.js and loading via require.js. Can't get it to work.

I'm new to TypeScript so I think I'm missing a key piece of knowledge which is hindering me from solving this issue myself but I'll list out what I've done so far as I feel that I must be very close. 

Luckily some kind soul has already made the types file for gsap so it should be a case of just slotting it into my project... so I thought.

My project is written entirely in TypeScript and the compiler is set to build to a seperate folder (   ""outDir"": ""../build"" set in tsconfig.json). The module loader I'm using is require.js and whole project is run in a browser.

Steps taken so far..

npm install --save @types/gsap
npm install --save gsap

in my class I added: 
import { TweenLite } from ""gsap"";

In my constructor of my class I added a console log to see if I could see a reference to the class in the chrome debug console:
console.log(""%o"", TweenLite);

Compiled and ran my project and require.js output that it couldn't find gsap.js
require.js:1961 GET http://localhost/myproject/build/gsap.js net::ERR_ABORTED

O.K that was to be expected... so how to get that node module into my project. As the GSAP module is a folder containing many files I guessed I needed to group these together so after googling I found that browserify was the tool for the job (right?) and that I need to 'bundle' them together.

browserify node_modules\gsap -o gsap.js

I moved the gsap.js file to the root of build folder because that's where requirejs seemed to be looking for it (Not sure if I can change the default path but I just want it to work so I don't care right now)

Ran the project again and it appears to have loaded my gsap.js file using requirejs but the project threw an error at the console log....
Uncaught TypeError: Cannot read property 'TweenLite' of undefined
I thought it might be because TweenLite is a class name so I tried logging TweenLite.to too but that didn't work.

in the debug console I typed 'TweenLite' and it output the function into the console which means 'TweenLite' has been loaded and is a global object so it's like it's there but typescript can't see it.

I tried explicitly loading gsap.js using a script tag but that didn't do much else.

I tried importing TweenMax from gsap just in case but that didn't work either.

From my understanding the compiler checks that the module exists in 'node_modules' during development otherwise it'll throw a compile time error like this:
error TS2307: Cannot find module 'blaablaa'. After compilation it's up to me to copy the libraries over to the build folder which should be done by a build script (grunt?)

I'm loving TypeScript but adding a common library has left me feeling like a bit stupid. Am I using require.js correctly? Is my build folder supposed to contain a node_modules folder the same as my source? Am I not supposed to bundle libraries individually? Do I have to bundle my whole project? would that mess up mappings during development?

Any help would be most appreciated!

Thanks :-)


",Trouble using GSAP in TypeScript in a browser environment
236,2018-04-05 15:28:07,4,2,"Dealing with promise data. Trying to access data.path.pieces_, but getting the error, property 'pieces_' does not exist on type 'string' ... but when I print typeof data.path I get object, so if I try to parse it as JSON I also get an error. any thoughts or point me to a place where I can get some help? Kind of like this:

this.firebasestuff.push(stuff).then(data =&gt; {
     store data.path.pieces_",Beginner question on typescript
237,2018-04-10 05:57:37,6,2,"I have a react/typescript project at work, and I'm trying to set a prop in an interface to be only be from a select group of strings, but the strings are set as values of an object.

We have a Classes object that stores all the classnames on our project which is quite large, and we use Classes.&lt;CLASS_NAME&gt; to assign to react components.

The idea is I need to restrict a prop to accept only a certain few of these classes.

But I've ran into issues trying to set an Enum with the values, or just using a plain JS object and trying to assign a type to it.

It would be really handy to use the classes object here instead of typing the classnames out as strings as we have a lot of devs working on this and the room for error is quite large - hence why this classes object exists in the first place.

A contrived example [here!](https://www.typescriptlang.org/play/#src=const%20classes%20%3D%20%7B%0D%0A%20%20%20%20Add%3A%20'pr-add'%2C%0D%0A%20%20%20%20Edit%3A%20'pr-edit'%2C%0D%0A%20%20%20%20Delete%3A%20'pr-delete'%0D%0A%7D%3B%0D%0A%0D%0Aenum%20Classes%20%7B%0D%0A%20%20%20%20ADD%20%3D%20classes.Add%2C%0D%0A%20%20%20%20EDIT%20%3D%20classes.Edit%2C%0D%0A%20%20%20%20DELETE%20%3D%20classes.Delete%2C%0D%0A%7D%0D%0A%0D%0Ainterface%20IProps%20%7B%0D%0A%20%20%20%20prClasses%3A%20%3CRESTRICTED%20CLASSES%20HERE%3E%0D%0A%7D%0D%0A%0D%0A)",Restrict a prop in an interface to of a group of variables/values of object?
238,2018-04-17 21:02:10,3,2,"Hello guys I have released a new version of my project template. I have tried to use the best practises of NodeJS and TypeScript. Let me know what I can improve and if you are interested in a template generator.

https://github.com/Talento90/typescript-node

Feature List:

Language - TypeScript
REST API Framework - koa2
Graceful Shutdown &amp; HealthCheck Pattern
SQL Database &amp; Migrations - knex
Authentication and Authorization - JWT Tokens
Validation - Joi
Testing - Mocha Chai + Sinon + NYC Coverage
Code Style - Prettier
Git Hooks - Husky",TypeScript + NodeJS = Awesome
239,2018-04-17 21:48:58,7,19,"Hello guys I have released a new version of my project template. I have tried to use the best practises of NodeJS and TypeScript. Let me know what I can improve and if you are interested in a template generator.

https://github.com/Talento90/typescript-node

Feature List:

Language - TypeScript
REST API Framework - koa2
Graceful Shutdown &amp; HealthCheck Pattern
SQL Database &amp; Migrations - knex
Authentication and Authorization - JWT Tokens
Validation - Joi
Testing - Mocha Chai + Sinon + NYC Coverage
Code Style - Prettier
Git Hooks - Husky",TypeScript + NodeJS = Awesome
240,2018-04-18 15:07:19,2,0,"Hi,    
  
I want to begin experimenting with node.js and socket.io to make a really simple game and I'm looking for a nice client drawing library.  
  
I'm used to Angular so i like typescript, but setting up phaser.io with typescript seemed to be a pain so i gave up. I'm really looking for something straightforward to get me started in less than an hour.  
What would be the most suited library ? I checked [p5js](https://p5js.org/) and [phaser.io](https://phaser.io/) for now.  
Any advice would be appreciated:)  
  
Cheers","Simple 2D JerryScript/Typescript library to make a small game similar to agar.io, p5js ? phaser.io ?"
241,2018-04-19 16:10:19,10,10,"To celebrate the launch of my new book http://www.learningtypescript.com  in just over a week, I'm going to give away 1 book per week for 10 weeks. Retweet [this tweet](https://twitter.com/RemoHJansen/status/986994962578493441) for a chance to win the first book on the 27th of April",I'm giving away 10 TypeScript books to celebrate the lunch of my new book
242,2018-04-19 22:27:23,8,3,"i'm reading a book on angular and am sort of learning typescript as i read. i ran across the following method:


    static convertFtoC(temp: any): string {
            let value: number;
            if ((temp as number).toPrecision) {
                value = temp;
            } else if ((temp as string).indexOf) {
                value = parseFloat(&lt;string&gt;temp);
            } else {
    value = 0; }
            return ((parseFloat(value.toPrecision(2)) - 32) / 1.8).toFixed(1);
        }

the number.toPrecision and string.indexOf functions are really throwing me off. i thought those functions were supposed to have arguments? thanks in advance for the help",question from a beginner
243,2018-04-21 19:08:37,11,11,,What are the situations where I would need webpack + typescript? What benefits does webpack add?
244,2018-04-22 22:05:09,4,2,"Hi,
i just released the first version of the best (so far) Typescript Nodejs Docker Container project template on Github. It's made for easy dev and production environments because i was not able to find a neat solution for ts on nodejs. 
What do you think of entrypoint.sh? 

https://github.com/redplant3d/best_typescript_nodejs_docker_container",Best Typescript Nodejs Docker Container Project Template
245,2018-04-26 01:22:50,0,4,,simple http client for icanhazdadjoke service written in typescript
246,2018-04-26 15:49:08,25,13,"I have a Vue project that has a bunch typescript modules.  Several of the pages import a ton of components that could be bundled into common namespaces/libraries.  

Basically the files are littered with 

    import PrefixDateTimeControl from '../../../components/prefixdatetimecontrol/prefixdatetimecontrol'

Is it better practice to make a module that imports all common modules and re-exports them, then import that module.  Or should I make an index.d.ts type  file.",What is the correct way to consolidate a bunch of modules to reduce imports?
247,2018-04-28 19:03:34,38,10,,Question: How common are typescript jobs that don't involve angular
248,2018-05-08 14:59:08,1,1,,Static typescript client for controller actions.
249,2018-05-08 21:26:57,8,1,"Is this

```typescript
export const foo = async (): Promise&lt;number&gt; =&gt; {
  return new Promise&lt;number&gt;((resolve) =&gt; resolve(42));
}
```

same as this,

```typescript
export const bar = (): Promise&lt;number&gt; =&gt; {
  return new Promise&lt;number&gt;((resolve) =&gt; resolve(42));
}
```

in terms of performance ?

The `foo` function runs asynchronously and returns a Promise.
The `bar` function runs synchronously and returns a Promise.

However returning a Promise is quite quick, so aren't both the functions kind of the same ?

(**note**: of course in the provided example both functions run fast because they just resolve a number but my question applies in a context where the body is quite large and complexity occurs).",A question about async and performance.
250,2018-05-12 10:44:03,8,5,"Hi there,

I want to create multiple repositories containing typescript code. I want to import modules from other repos including their types.

I dont really know how and where to start. Could anyone provide me with relevant documentation?

I also want the type hints to work in VS Code and/or Atom",Sharing types between private modules
251,2018-05-13 20:14:05,0,3,"Hi Everyone. I recently started trying to contribute to the typescript compiler project, but I have come across issues / errors when attempting to debug my test. I created this Stackoverflow question with the details and errors, but it doesn't look like anyone is going to comment on it. Thus, my last chance is to reach out to the typescript community on reddit. I really want to get into open-source contributing, and I loved learning about the typescript compiler internals, but I have been so frustrated with these issues that I'm on the brink of giving up, and finding a different open-source project.

Here is the SO link: https://stackoverflow.com/questions/50317393/unable-to-debug-tests-for-compiler

Any and all help is very much appreciated.",Unable to debug tests for compiler
252,2018-05-14 00:44:37,0,3,,a typescript spreadsheet (simple online excel)
253,2018-05-17 16:38:53,4,2,"Hi, I am just testing the new conditional types introduced in typescript 2.8.

I often need to create objects of a certain type locally, send them to a database process the retrieved models. To gather the inputs for the model creation I create a basetype containing all the attributes used for the creation of the model, and a ""metadata""-type containing database-specific things like `id` or `createdAt`-Timestamps. 

If I retrieve the models from the api again I just combine the basetype with the ""metadata""-type using the `&amp;` operator. This works fine until the model has relations, that also contain timestamps and have an id.

My solution using Typescript 2.8 looks something like this:
        
    interface RetrievableFromDatabase {
    	/** 
    	 * Ignore this property. It is only used to identify Models that could be
    	 * loaded from the DB. 
    	 */
      __retrievableFromDataBase: never;
    }
    
    // Shared metadata for all models stored in a db
    interface BaseModel {
      id: string;
      updatedAt: Date;
      deletedAt: Date | null;
    }
    
    // Model interfaces
    
    // Not an Entity but a Subpart of Category so no id and timestamps here
    interface Bar {
    	something: string;
    }
    
    // A sample model
    interface Category extends RetrievableFromDatabase {
      name: string;
      color: string;
      foo: Bar;
    }
    
    // Another related sample model
    interface Item extends RetrievableFromDatabase {
      name: string;
      price: number;
      category: Category;
    }
    
    // Decorate our type with metadata from BaseModel (recursively for all relations)
    declare type FromDB&lt;T&gt; = T extends object 
    	? {
    	  [K in keyof T]: T[K] extends RetrievableFromDatabase ? FromDB&lt;T[K]&gt; : T[K]; 
    	} &amp; BaseModel
    	: T;
    
    let localCopy: Item; // = createLocalCopy()
    
    // Normal attributes from local copy can be accessed
    localCopy.category.name
    
    // Attributes that are set by the server/api/db are not yet present
    localCopy.id // error: Property 'id' does not exist on type 'Item'
    
    // Lets pretend we fetch a specific model from the server/api/db
    let itemFromDB: FromDB&lt;Item&gt;; // = await getItemFromDb({ id: 123 })
    
    // Normal attributes from remote copy can be accessed
    itemFromDB.category.name
    
    // As well as all the metadata
    itemFromDB.id
    
    // This is also true for all relations that inherit from RetrievableFromDatabase
    itemFromDB.category.updatedAt
    
    // But not for objects that don't inherit from RetrievableFromDatabase
    itemFromDB.category.foo.id // error: Property 'id' does not exist on type 'Bar'.
    
To test the implementation you can copy &amp; paste the code into the[ live demo of the monaco editor](https://microsoft.github.io/monaco-editor/index.html) to get a sense for the autocompletion and type checks `FromDB&lt;T&gt;` offers (I was unable to create a demo on stackblitz, as they are using an older version of typescript that does not support conditional types yet).

The solution works pretty well, but the interface `RetrievableFromDatabase`, which only defines a useless property to have a unique structure, seems pretty hacky to me.

Are there any better alternatives to distinguish or annotate Interfaces for a functionality like this?
","""Unique"" Interfaces to hint a specific functionality"
254,2018-05-19 16:38:21,15,26,"Implementation of LINQ for TypeScript using sync and async iterators. Targets TS 2.8 and modern ECMAScript.

**Installation**

`npm i linq-to-typescript`

**Links**

* [GitHub](https://github.com/arogozine/LinqToTypeScript)
* [NPM](https://www.npmjs.com/package/linq-to-typescript)
* [Examples](https://github.com/arogozine/LinqToTypeScript/blob/master/EXAMPLES.md)
* [Type Doc](https://arogozine.github.io/linqtotypescript/)

Comment and feedback welcome.",Release - LINQ To TypeScript
255,2018-05-20 17:04:02,1,2,"I learn best from videos and I haven't found any good videos for using typescript with React, maybe ya'll have run into some that I haven't ran into yet ? Thanks.",Suggestions for learning resources using typescript with React ?
256,2018-05-21 15:43:37,3,5,,"Feedback Request: A simple typescript framework for express applications. The goal is to keep your code modular and testable. Uses patterns from Angular and Spring Boot frameworks. Please let me know what you think, if you have any suggestions, feedback, etc."
257,2018-05-21 15:53:43,0,1,,"Feedback Request: A simple typescript framework for express applications. The goal is to keep your code modular and testable. Uses patterns from Angular and Spring Boot frameworks. Please let me know what you think, if you have any suggestions, feedback, etc."
258,2018-05-21 18:56:07,25,2,"From [here](https://basarat.gitbooks.io/typescript/docs/types/exceptions.html), I get that having a function return:

    const foo = () =&gt; {
       if (false) {
         return {
          error: 'You had a problem;
        }
      }
      return {
        error: null;
      } 
    }

over throwing an exception is a good idea because then the consumer can do:


    import { foo } from 'bar';
    const { error } = foo();
    if (error) {
      console.log(`Had an error: ${error}`);
    } else {
      console.log('Good to go');
    }

but why not just fake a Promise instead?

    const foo = () =&gt; {
      if (false) {
        return Promise.reject('You had a problem');
      }
      return Promise.resolve();
    }

so that way the consumer can use it as:

    import { foo } from 'bar';
    foo().then(() =&gt; {
      console.log('Good to go');
    }.catch((err) =&gt; {
      console.log(`Had an error: ${error}`);
    }

I can see an argument of the sense that `foo()` is not really async, so why treat it that way. But is there any performance implications here?

The reason I ask too is that promises are so inherently ingrained in the Javascript ecosystem that it feels natural to use them over constructing an arbitrary format.",Error handling in Typescript
259,2018-05-23 17:48:07,2,3,,"Noob here. Any way to conditionally compile (#if, #ifdef etc) in typescript?"
260,2018-05-23 23:09:13,4,8,"Had a discussion and we both came out not exactly sure what would be the correct behavior.
 
sample code in typescript

https://jsfiddle.net/p05q5xmr/1/

I saw this code and I was like ... dang man why is it so complicated, cause isn't the property Jobs just a single object ? it seemed a lot easier if Jobs = resultant Object, instead of a property that references a function that returns the object utilizing another function.

I asked my lead and he wasn't exactly sure why the coded was created this way, could be legacy. However, he mentioned that it MIGHT be that there was some race conditions since the abstract class Helpers was being created and its properties being created so there were edge cases where saviors.jobs is actually helpers.jobs or something like that. I am not sure. 

so the question, finally is:

1.) does helper.jobs get created when 'new Savior()' ? this matters because we don't want to create additional objects, especially since jobs calls new on each job types (police, fireman, nurse). 

2.) I have a feeling number 1 would be true and our concern would be right in creating so many unnecessary object, is there a way to code it so the consequence does not happen? 

3.) please see the comment in the fiddle, I just thought of it as I am making it lol .",question about object creation with prototype/inheritance
261,2018-05-26 10:38:18,3,8,"Is it possible to use decorators to add functionality to a class? For instance I want a @serializable decorator, adding serialise and deserialize functions to it. 

They seem to work, however typescript does not seem to pick this up? 
Also can I control the order of decorators being exported somehos? If i, for instance, want to make sure class decorators are being ran before function or property decorators.",Decorators to add functionality to class
262,2018-05-26 13:09:41,4,0,"Hi Guys This Udemy Course Free Today For limited time. I hope you like it.It is a great course\[100 &amp;#37; OFF\]

Introduction to TypeScript

✅ Learn to supercharge your web\-applications with the powerful typed language from Microsoft!

🗣️Very informative &amp; useful for someone not knowing typescript before🔥🔥

My overall experience with this course was good. This course is very helpful for those who wanted to start learning Typescript from Scratch.

Very helpful for beginners.

[https://deal5star.com/introduction\-to\-typescript/](https://deal5star.com/introduction-to-typescript/)",Introduction to TypeScript
263,2018-05-28 08:16:06,14,6,"Hello,

I'm currently learning typescript and converting some old Javascript to Typescript. I have this piece of code where we have a reusable component, let's call it Book.

When instantiating this book we can add some data to it like so:

```

new Book({data:data});

interface BookSettings{
data:any;
}

```

The object we give to book is a type of BookSettings and in it data is defined as type any (as you should be able to add any type of data to it).

Now if I want to add anything to data I want to type it like so:

```

interface SomeData{
page: number;
author: string;
}


const bookData: SomeData = {page:1,author: 'Someone'}
const book = new Book({data:bookData});

book.data.page = 'Some string' //This should not be possible as page is defined as a number

```

How can I make sure typescript knows book.data.page is a number and should not be a string, without giving away the freedom that the developer using this should work  with a standard data format?

Is this even possible?



Thanks!
 ",Learning Typescript and have a question about variable types.
264,2018-06-01 16:43:50,40,99,"[https://github.com/ry/deno](https://github.com/ry/deno)

It looks like he's building a ""new node"" from scratch, but this time, the language target isn't javascript, but typescript.","Ryan Dahl is building a ""TypeScript runtime"""
265,2018-06-14 14:54:03,0,2,"I'm working on a small project to test the waters, and I cannot get code coverage to report correct results. It seems to be taking source maps into account, and then proceeds to drop Line, Statement, and Function coverage to 0%. 

Right now, I'm using Webstorm IDE (mandatory at work) which auto creates .js and .js.map files when you create a new typescript file. 

My .nycrc file looks like this

     {
         ""require"": [
              ""ts-node/register""
          ],
          ""extension"": [
              "".ts"",
              "".tsx""
          ],
          ""check-coverage"": true,
         ""lines"": 100,
         ""branches"": 100,
         ""statements"": 100,
         ""functions"": 100,
         ""include"": [
             ""src/**/*.ts""
         ],
         ""exclude"": [
             ""**/*.d.ts"",
             ""**/*.js"",
             ""**/*.js.map""
        ],
         ""reporter"": [
             ""html"",
             ""text""
         ],
         ""all"": true
     }

I have only 1 file ""index.js"", which reads as follows...

     export function hello () {
          return 'Hello, World!';
     }

And my one test file is this...

     import { expect } from './expect';
     import { hello } from './../src/index';
     import 'mocha';

     describe('This is a something test', () =&gt; {
         it('it should just pass', () =&gt; {
             expect(hello()).to.equal('Hello, World!');
         });
     });

---

npm test script runs ""nyc mocha""

I can see mocha output the statement This is a something test with a green checkmark and it should pass so I know mocha is hitting my test code and it's passing. But the output of the code coverage in html shows up as if the return 'Hello, World!' in the source code is never hit.

Any ideas would be greatly appreciated as I've been searching for hours now and I cannot find a single person that has an answer.
",Code Coverage with Instanbul command line
266,2018-06-15 07:44:39,0,1,,Building a TypeScript REST API with MongoDB [X-Post /r/typescript]
267,2018-06-17 13:11:34,0,1,,When developers of typescript also know that javascript is *ass*.
268,2018-06-18 06:08:48,36,13,"I know this topic is delicate and it can attract a lot of trolls, but I am asking with a clear intention and that is to capture the honest opinions of those working with javascript, dealing with js developer and the discussion between ""I don't want types because X, I prefer types because of Y or I prefer flow because it allows me to do both...""

To give you a bit more context about this topic:

Yesterday I was having a chat with a friend of mine, discussing the future of a project when I asked him: ""Have you got anything out of this project?""

His reply was: ""I got to learn typescript... I still think Flow is better because at the end of the day, I am still writing javascript and it does not need a compiler to work... I think TS is for those who do not know how to work with their code while javascript and Flow are for those who know how to work with their code...""

This resonated with me and bothered me but I couldn't immediately pinpoint why, until today. I feel the proponents of just javascript (and sometimes Flow) focus on the ideal: ""I know my code and my code works, why do I need to prove it to somebody else?""

This is a very selfish/individualistic view that I feel strongly across the JS community, I can be completely wrong but I come from an environment that code constantly changes owners and having to study the entire code because ""I know what I am doing"" is something that does not apply. I've written code that after 6 months I got no idea what it does.

Does anybody have a pure opinion about this? Is there something else that bothers you and maybe we can improve that behaviour?",Honest question: what bothers you about the js community?
269,2018-06-20 00:19:31,1,2,,Util for casting any object to specified model with typescript type inference
270,2018-06-21 19:29:19,4,0,"I'm working on a node project that has a CLI and I want to incorporate some kind of type system. One of the major aspects of this tool is it needs to load and execute '.js' files from the current working directory. Which files and whether or not they exist is not known at compile time. Currently I'm just passing glob results to require.

Is this kind of thing possible when using typescript? I spent a few minutes trying to get it working but kept running into issues where typescript didn't recognize require as a valid function.",Dynamic import/require in node?
271,2018-06-25 14:57:53,0,0,,How to Actually Improve Type Safety with the TypeScript Strict Flags (x-post /r/typescript)
272,2018-06-27 21:41:00,3,13,,I made a voxel-based metaverse using babylon.js and typescript
273,2018-06-28 22:08:11,4,8,"I want to make a small board game web application and on the way to learn a new language, 
I'm already familiar with React and js (ES6,7,8). 

I'm leaning toward Scala.js because I want to be employed in a job that requires it eventually but I read that it has large overheads when importing standard libraries and I don't want to FOMO on cooler/better languages. 

So which of these languages is the most functional, has real world companies that use it (FB using Reason doesn't count), is more future proof and simpler to use with libraries that don't have its types files? (or whatever the typescript type files equivalent).",Bucklescript vs Scala.js vs ReasonML with React
274,2018-06-29 17:30:30,0,1,"https://github.com/jinhduong/lazee

I just finished the simple and lightweight autocomplete library which written by `typescript`(help me easy to maintain and update in the future). Hope it is useful library. Thanks
","The simple, lightweight autocomplete written by typescript"
275,2018-06-30 15:04:13,0,33,,Advanced TypeScript Types with Examples • r/typescript
276,2018-07-03 17:07:17,8,5,"Recently I've been put in charge of maintaining an older project, which is basically one big poorly written javascript file (1300+ lines). By poorly written I mean that there is ussage of global state everywhere, methods (yep, there are classes) with some crazy sideeffects (who would have guessed that a getter would create 4 HTML elements and added them somewhere into DOM), very little documentation, undescriptive function/class names etc... The guy who is responsible for this mess left the company some time ago, so there is very little for me to do - may the source be with me. I've decided to refactor it into proper typescript project and give this thing a logical structure and a buildsystem.

Do you have any tips that could help me?  (particularly connected to getting rid of global state abuse of such scale)",Refactoring big JS file into proper TS project.
277,2018-07-04 20:18:30,33,2,"From my understanding, the two both give you ES6 features but typescript also gives you strict static type checking, interfaces, etc. If you have to go through the effort of rigging up your project to use ES6 features, why would anyone choose babel over typescript?",Why would anyone use Babel over Typescript?
278,2018-07-05 19:55:39,0,1,"[Dinoloop ](https://github.com/ParallelTask/dinoloop)is an [ExpressJs](https://expressjs.com/) library, completely written in Typescript project designed to build REST APIs. Dinoloop adds syntactic sugar to expressjs enabling C#/Java programmers to easily switch to Nodejs with zero or less learning curve. You can reuse OOP, SOLID principles, Controllers, Services, Well-Proven OOP Design Patterns in Nodejs while developing REST APIs using Dinoloop.

## Prerequisites

* node 8.10.x or higher
* express 4.x.x or higher

## Getting Started

Dinoloop has been designed from the start for gradual adoption and you can use as little or as much dinoloop as you need. Perhaps you only want to develop some ""REST APIs"" using dinoloop and other REST APIs can be developed using [expressjs](https://expressjs.com/). In this section, we will show how to create dinoloop REST API to an existing or newly created express app.

#### Step 1: Add HomeController (file: home.controller.ts)

    import { ApiController, Controller, HttpGet, SendsResponse } from 'dinoloop';  
    
    @Controller('/home') 
    export class HomeController extends ApiController {  
        
        @HttpGet('/get')     
        get(): string {         
            return 'Hello World!';     
        }
    
        // Value injection framework, injects segments into action-args
        @SendsResponse()
        @HttpGet('/download/file/:id')
        name(id: string): void {
            // this.request is express.request object
            let headers = this.request.headers;
    
            // this.response is express.response object
            this.response.download('file.txt');
        } 
    }

#### Step 2: Mount dinoloop and bind to express instance (file: app.ts)

    import { Dino } from 'dinoloop';
    import express = require('express');
    
    const app = express(); 
    
    // Dino requires express instance and base-Uri
    const dino = new Dino(app, '/api');  
    
    // Dino requires express router too 
    dino.useRouter(() =&gt; express.Router());  
    
    // Register controller 
    dino.registerController(HomeController);  
    
    // Bind dino to express 
    dino.bind(); 
    
    // These are your normal express endpoints 
    app.get('/home', (req, res, next) =&gt; {  res.status(200).json('Hello World!'); });  
    app.get('/about', (req, res, next) =&gt; {  res.status(200).json('Hello World!'); });  
    
    // Start your express app 
    app.listen(8088, () =&gt; console.log('Server started on port 8088'));

Dinoloop is mounted on `/api` and all of the controller routes/endpoints which are registered with dinoloop are also mounted on `/api`. Dinoloop will handle `/api/home/get` requests since it is mounted on `/api.` The other end points `/home` and  `/about` which are created by expressjs are not handled by dinoloop, this way you can slowly migrate your existing express app to dinoloop or you can start writing your new REST APIs using dinoloop with express. 

## Features

* Super easy set-up, git clone your taste of starter project and start building right away.
* Supports express middlewares, completely express compatible.
* Heavily influenced by MVC pattern.
* Configurable Dependency injection support, Works with and Without DI.
* Proper isolation of controllers and services.
* Middlewares, ActionFilters, ExceptionFilters, ResultFilters at controller level.
* Robust Sync/Async middlewares to handle es6 async-await pattern.
* UserIdentity principal across request.

## Motivation

Typescript (*Javascript now*) supports object oriented programming, these features are great with SOLID design principles. Dinoloop has simple motto, to apply SOLID principles and reuse similar coding skills of Java and C# in Nodejs.

## Philosophy

Dinoloop lets user to freely upgrade/downgrade expressjs. Installing dinoloop won't install express. You can install your own version of express. All you have to provide is express app, express router instance to dinoloop.

## Questions raised by our community

### Dinoloop looks pretty new, Should I use it?

As a contributor, we would definitely request you to give it a try (May be your personal or mini sized projects). The way expressjs does not abstract you from node, Dinoloop does not abstract you from expressjs. You are free to use/mix node, express and dinoloop in your development. Indeed 99&amp;#37; of code you write would be purely node, typescript and express. Dinoloop is a library at server-side (like [Reactjs](https://reactjs.org/), we love what Reactjs does at client-side). You can either develop entire application in Dinoloop or part of it or gradually migrate expressjs to Dinoloop. The first principle of Dinoloop is to provide architecture shift to developers and not to create a complete huge framework because we do not want our developers to run into issues because of dinoloop, we love and support pluggable architecture.

### Typescript for Node, Seems pretty new?

We love Typescript and it provides great tooling to develop enterprise applications. [Angular](https://angular.io/) promotes typescript and now it is hard to imagine npm packages without types. If you are a lover of angular (like us), we highly suggest you to use Dinoloop to maintain single Typescript codebase for [MEAN](http://mean.io/) application.

# Reference Links:

* [Dinoloop github repository](https://github.com/ParallelTask/dinoloop)
* [Dinoloop wiki](https://github.com/ParallelTask/dinoloop/tree/master/wiki)

I appreciate your time on reading this article, Give it a try for your personal projects and let me know your valuables thoughts on it. Pull Requests and Contributors are always welcome :).",Dinoloop - REST API Expressjs library for Nodejs powered by Typescript with OOP and SOLID principles
279,2018-07-05 20:18:26,4,1,"[Dinoloop ](https://github.com/ParallelTask/dinoloop)is an [ExpressJs](https://expressjs.com/) library, completely written in Typescript project designed to build REST APIs. Dinoloop adds syntactic sugar to expressjs enabling C#/Java programmers to easily switch to Nodejs with zero or less learning curve. You can reuse OOP, SOLID principles, Controllers, Services, Well-Proven OOP Design Patterns in Nodejs while developing REST APIs using Dinoloop.

## Prerequisites

* node 8.10.x or higher
* express 4.x.x or higher

## Getting Started

Dinoloop has been designed from the start for gradual adoption and you can use as little or as much dinoloop as you need. Perhaps you only want to develop some ""REST APIs"" using dinoloop and other REST APIs can be developed using [expressjs](https://expressjs.com/). In this section, we will show how to create dinoloop REST API to an existing or newly created express app.

## Step 1: Add HomeController (file: home.controller.ts)

    import { ApiController, Controller, HttpGet, SendsResponse } from 'dinoloop';  
    @Controller('/home') 
    export class HomeController extends ApiController {  
       @HttpGet('/get')     
       get(): string {         
           return 'Hello World!';     
       }
       // Value injection framework, injects segments into action-args
       @SendsResponse()
       @HttpGet('/download/file/:id')
       name(id: string): void {
           // this.request is express.request object
           let headers = this.request.headers;
           // this.response is express.response object
           this.response.download('file.txt');
       } 
    }

## Step 2: Mount dinoloop and bind to express instance (file: app.ts)

    import { Dino } from 'dinoloop';
    import express = require('express');
    const app = express(); 
    // Dino requires express instance and base-Uri
    const dino = new Dino(app, '/api');  
    // Dino requires express router too 
    dino.useRouter(() =&gt; express.Router());  
    // Register controller 
    dino.registerController(HomeController);  
    // Bind dino to express 
    dino.bind(); 
    // These are your normal express endpoints 
    app.get('/home', (req, res, next) =&gt; {  res.status(200).json('Hello World!'); });  
    app.get('/about', (req, res, next) =&gt; {  res.status(200).json('Hello World!'); });  
    // Start your express app 
    app.listen(8088, () =&gt; console.log('Server started on port 8088'));

Dinoloop is mounted on /api and all of the controller routes/endpoints which are registered with dinoloop are also mounted on /api. Dinoloop will handle /api/home/get requests since it is mounted on /api. The other end points /home and  /about which are created by expressjs are not handled by dinoloop, this way you can slowly migrate your existing express app to dinoloop or you can start writing your new REST APIs using dinoloop with express.

## Features

* Super easy set-up, git clone your taste of starter project and start building right away.
* Supports express middlewares, completely express compatible.
* Heavily influenced by MVC pattern.
* Configurable Dependency injection support, Works with and Without DI.
* Proper isolation of controllers and services.
* Middlewares, ActionFilters, ExceptionFilters, ResultFilters at controller level.
* Robust Sync/Async middlewares to handle es6 async-await pattern.
* UserIdentity principal across request.

## Motivation

Typescript (*Javascript now*) supports object oriented programming, these features are great with SOLID design principles. Dinoloop has simple motto, to apply SOLID principles and reuse similar coding skills of Java and C# in Nodejs.

## Philosophy

Dinoloop lets user to freely upgrade/downgrade expressjs. Installing dinoloop won't install express. You can install your own version of express. All you have to provide is express app, express router instance to dinoloop.

## Questions raised by our community

## Dinoloop looks pretty new, Should I use it?

As a contributor, we would definitely request you to give it a try (May be your personal or mini sized projects). The way expressjs does not abstract you from node, Dinoloop does not abstract you from expressjs. You are free to use/mix node, express and dinoloop in your development. Indeed 99&amp;#37; of code you write would be purely node, typescript and express. Dinoloop is a library at server-side (like [Reactjs](https://reactjs.org/), we love what Reactjs does at client-side). You can either develop entire application in Dinoloop or part of it or gradually migrate expressjs to Dinoloop. The first principle of Dinoloop is to provide architecture shift to developers and not to create a complete huge framework because we do not want our developers to run into issues because of dinoloop, we love and support pluggable architecture.

## Typescript for Node, Seems pretty new?

We love Typescript and it provides great tooling to develop enterprise applications. [Angular](https://angular.io/) promotes typescript and now it is hard to imagine npm packages without types. If you are a lover of angular (like us), we highly suggest you to use Dinoloop to maintain single Typescript codebase for [MEAN](http://mean.io/) application.

# Reference Links:

* [Dinoloop github repository](https://github.com/ParallelTask/dinoloop)
* [Dinoloop wiki](https://github.com/ParallelTask/dinoloop/tree/master/wiki)

I appreciate your time on reading this article, Give it a try for your personal projects and let me know your valuables thoughts on it. Pull Requests and Contributors are always welcome :). ",Dinoloop - REST API Expressjs library for Nodejs powered by Typescript with OOP and SOLID principles
280,2018-07-05 22:56:46,6,0,"I need to use some array methods that are not supported by IE, such as Array.find.  When I transpile from ts to es5, will the Array.find method be polyfilled by typescript as part of the transpiling process?",typescript and polyfill
281,2018-07-06 07:20:31,1,1,"This post might seem duplicate compared to previous [dinoloop](https://github.com/ParallelTask/dinoloop) [article](https://www.reddit.com/r/javascript/comments/8vp696/rest_api_framework_for_nodejs_powered_by/) but the earlier post was very vague and not explained in detail. Sorry for making it too vague and I have created a new article explaining in detail. Please spend your time on it and let me know your thoughts on it.

[Dinoloop ](https://github.com/ParallelTask/dinoloop)is an [ExpressJs](https://expressjs.com/) library, completely written in Typescript project designed to build REST APIs. Dinoloop adds syntactic sugar to expressjs enabling C#/Java programmers to easily switch to Nodejs with zero or less learning curve. You can reuse OOP, SOLID principles, Controllers, Services, Well-Proven OOP Design Patterns in Nodejs while developing REST APIs using Dinoloop.

## Prerequisites

* node 8.10.x or higher
* express 4.x.x or higher

## Getting Started

Dinoloop has been designed from the start for gradual adoption and you can use as little or as much dinoloop as you need. Perhaps you only want to develop some ""REST APIs"" using dinoloop and other REST APIs can be developed using [expressjs](https://expressjs.com/). In this section, we will show how to create dinoloop REST API to an existing or newly created express app.

## Step 1: Add HomeController (file: home.controller.ts)

    import { ApiController, Controller, HttpGet, SendsResponse } from 'dinoloop'; 
    
    @Controller('/home') 
    export class HomeController extends ApiController {  
       
       @HttpGet('/get')     
       get(): string {         
          return 'Hello World!';     
       }
       
       // Value injection framework, injects segments into action-args
       @SendsResponse()
       @HttpGet('/download/file/:id')
       name(id: string): void {
         
         // this.request is express.request object
         let headers = this.request.headers;
         
         // this.response is express.response object
         this.response.download('file.txt');
       } 
    }

## Step 2: Mount dinoloop and bind to express instance (file: app.ts)

    import { Dino } from 'dinoloop';
    import express = require('express');
    
    const app = express(); 
    
    // Dino requires express instance and base-Uri
    const dino = new Dino(app, '/api');  
    
    // Dino requires express router too 
    dino.useRouter(() =&gt; express.Router());  
    
    // Register controller 
    dino.registerController(HomeController);  
    
    // Binds dino to express 
    dino.bind(); 
    
    // These are your normal express endpoints 
    app.get('/home', (req, res, next) =&gt; {  res.status(200).json('Hello World!'); });  
    app.get('/about', (req, res, next) =&gt; {  res.status(200).json('Hello World!'); });  
    
    // Start your express app 
    app.listen(8088, () =&gt; console.log('Server started on port 8088'));

Dinoloop is mounted on /api and all of the controller routes/endpoints which are registered with dinoloop are also mounted on /api. Dinoloop will handle /api/home/get requests since it is mounted on /api. The other end points /home and  /about which are created by expressjs are not handled by dinoloop, this way you can slowly migrate your existing express app to dinoloop or you can start writing your new REST APIs using dinoloop in combination with express.

## Features

* Super easy set-up, git clone your taste of starter project  and start building right away. We want our developers to have freedom whether to use DI or not. You can develop API without using DI framework.

1. Without DI framework [dinoloop-starter-without-DI](https://github.com/ParallelTask/dinoloop-starter)
2. With DI framework [dinoloop-starter-with-DI](https://github.com/ParallelTask/dinoloop-inversify-starter)

* Supports express middlewares, completely express compatible.
* Heavily influenced by MVC pattern.
* Configurable Dependency injection support, Works with and Without DI. You can choose your favorite DI framework [InversifyJs](http://inversify.io/), [peppermint-di](https://www.npmjs.com/package/peppermint-di) and [more](https://www.npmjs.com/search?q=DI) to work with.
* Proper isolation of controllers and services.
* Middlewares, ActionFilters, ExceptionFilters, ResultFilters at controller level.
* Robust Sync/Async middlewares to handle es6 async-await pattern.
* UserIdentity principal across request.

## Motivation

Typescript (*Javascript now*) supports object oriented programming, these features are great with SOLID design principles. Dinoloop has simple motto, to apply SOLID principles and reuse similar coding skills of Java and C# in Nodejs.

## Philosophy

Dinoloop lets user to freely upgrade/downgrade expressjs. Installing dinoloop won't install express. You can install your own version of express. All you have to provide is express app, express router instance to dinoloop.

## Questions raised by our community

## Dinoloop looks pretty new, Should I use it?

As a contributor, we would definitely request you to give it a try (May be your personal or mini sized projects). The way expressjs does not abstract you from node, Dinoloop does not abstract you from expressjs. You are free to use/mix node, express and dinoloop in your development. Indeed 99&amp;#37; of code you write would be purely node, typescript and express. Dinoloop is a library at server-side (like [Reactjs](https://reactjs.org/), we love what Reactjs does at client-side). You can either develop entire application in Dinoloop or part of it or gradually migrate expressjs to Dinoloop. The first principle of Dinoloop is to provide architecture shift to developers and not to create a complete huge framework because we do not want our developers to run into issues because of dinoloop, we love and support pluggable architecture.

## Typescript for Node, Seems pretty new?

We love Typescript and it provides great tooling to develop enterprise applications. [Angular](https://angular.io/) promotes typescript and now it is hard to imagine npm packages without types. If you are a lover of angular (like us), we highly suggest you to use Dinoloop to maintain single Typescript codebase for [MEAN](http://mean.io/) application.

# Reference Links:

* [Dinoloop github repository](https://github.com/ParallelTask/dinoloop)
* [Dinoloop wiki](https://github.com/ParallelTask/dinoloop/tree/master/wiki)

I appreciate your time on reading this article, Give it a try for your personal projects and let me know your valuable thoughts on it. Pull Requests and Contributors are always welcome :).

We appreciate the simplicity of javascript and we do not want to enter a debate with functional javascript programmers. The motto of Dinoloop is to help some community of developers to switch NodeJs easily and reuse existing coding skills and we are not trying to make every Nodejs developer as OOP programmer, we are providing the same architecture for the java/c# and mostly OOP minded programmers. We love javascript the way it is &lt;3. ",Dinoloop - REST API Expressjs library for Nodejs powered by Typescript with OOP and SOLID principles
282,2018-07-06 08:34:00,43,23,"This might seem off-topic to C# programmers but I really appreciate your time to look into it, Most of the C# programmers who would like to start learning Node/Express, they might find it difficult to pick up (like I was earlier). I have created a library to solve this problem (learning curve) faced by many of the C# developers like me.It was all started when I have chose [MEAN](http://mean.io/) development for my self project. It was pretty tough for me to understand the simplicity of Node/Express. The main problems I have faced

1. No strong typing with javascript (compile time errors missed).
2. No classes, interfaces, abstract classes (I am favorite of OOP and functional as well).
3. No architecture to follow while developing express application.
4. Requires understanding of javascript fundamentals for seperation of concerns and creating scalable architecture.
5. No concept of controllers and services (preferably MVC, You can create your own architecture).
6. No SOLID principles and Dependency Injection in javascript world.
7. Unable to Reuse my strong OOP skills and Well-Proven OOP design patterns in Node.
8. Testing was quite difficult to understand in initial days using fakes, spies and stubs in javascript world.

Having seen the pain points of using express/node, I have created [Dinoloop](https://github.com/ParallelTask/dinoloop). ExpressJs is great, we love its simplicity for creating REST APIs but scaling your enterprise application with expressjs might end up difficult for inexperienced developers. Dinoloop solves the problems I have discussed above. You also have great support for testing through Mocks and Dependency Injection. Adding to that Dinoloop is heavily inspired by [Asp.Net](https://Asp.Net) WebAPI, most of the syntax is similar/represents WebAPI and its concepts.

# How Dinoloop solves the problem?

[Dinoloop ](https://github.com/ParallelTask/dinoloop)is an [ExpressJs](https://expressjs.com/) library, completely written in Typescript project designed to build REST APIs. Dinoloop adds syntactic sugar to expressjs enabling C#/Java programmers to easily switch to Nodejs with zero or less learning curve. You can reuse OOP, SOLID principles, Controllers, Services, Well-Proven OOP Design Patterns in Nodejs while developing REST APIs using Dinoloop.

## Prerequisites

* node 8.10.x or higher
* express 4.x.x or higher

## Getting Started

Dinoloop has been designed from the start for gradual adoption and you can use as little or as much dinoloop as you need. Perhaps you only want to develop some ""REST APIs"" using dinoloop and other REST APIs can be developed using [expressjs](https://expressjs.com/). In this section, we will show how to create dinoloop REST API to an existing or newly created express app.

## Step 1: Add HomeController (file: home.controller.ts)

    import { ApiController, Controller, HttpGet, SendsResponse } from 'dinoloop'; 
    
    @Controller('/home') 
    export class HomeController extends ApiController {  
    
      @HttpGet('/get')     
      get(): string {         
         return 'Hello World!';     
      }
    
      // Value injection framework, injects segments into action-args
      @SendsResponse()
      @HttpGet('/download/file/:id')
      name(id: string): void {
    
         // this.request is express.request object
         let headers = this.request.headers;
    
         // this.response is express.response object
         this.response.download(id + 'file.txt');
      } 
    }

## Step 2: Mount dinoloop and bind to express instance (file: app.ts)

    import { Dino } from 'dinoloop';
    import express = require('express');
    
    const app = express(); 
    
    // Dino requires express instance and base-Uri
    const dino = new Dino(app, '/api');  
    
    // Dino requires express router too 
    dino.useRouter(() =&gt; express.Router());  
    
    // Register controller 
    dino.registerController(HomeController); 
    
    // Binds dino to express 
    dino.bind(); 
    
    // These are your normal express endpoints 
    app.get('/home', (req, res, next) =&gt; {  res.status(200).json('Hello World!'); });  
    app.get('/about', (req, res, next) =&gt; {  res.status(200).json('Hello World!'); });  
    
    // Start your express app 
    app.listen(8088, () =&gt; console.log('Server started on port 8088'));

Dinoloop is mounted on /api and all of the controller routes/endpoints which are registered with dinoloop are also mounted on /api. Dinoloop will handle /api/home/get requests since it is mounted on /api. The other end points /home and  /about which are created by expressjs are not handled by dinoloop, this way you can slowly migrate your existing express app to dinoloop or you can start writing your new REST APIs using dinoloop in combination with express.

## Features

* Super easy set-up, git clone your taste of starter project  and start building right away. We want our developers to have freedom whether to use DI or not. You can develop API without using DI framework.

1. Without DI framework [dinoloop-starter-without-DI](https://github.com/ParallelTask/dinoloop-starter)
2. With DI framework [dinoloop-starter-with-DI](https://github.com/ParallelTask/dinoloop-inversify-starter)

* Supports express middlewares, completely express compatible.
* Heavily influenced by MVC pattern.
* Configurable Dependency injection support, Works with and Without DI. You can choose your favorite DI framework [InversifyJs](http://inversify.io/), [peppermint-di](https://www.npmjs.com/package/peppermint-di) and [more](https://www.npmjs.com/search?q=DI) to work with.
* Proper isolation of controllers and services.
* Middlewares, ActionFilters, ExceptionFilters, ResultFilters at controller level.
* Robust Sync/Async middlewares to handle es6 async-await pattern.
* UserIdentity principal across request.

## Motivation

Typescript (*Javascript now*) supports object oriented programming, these features are great with SOLID design principles. Dinoloop has simple motto, to apply SOLID principles and reuse similar coding skills of Java and C# in Nodejs.

## Philosophy

Dinoloop lets user to freely upgrade/downgrade expressjs. Installing dinoloop won't install express. You can install your own version of express. All you have to provide is express app, express router instance to dinoloop.

## Questions raised by our community

## Dinoloop looks pretty new, Should I use it?

As a contributor, we would definitely request you to give it a try (May be your personal or mini sized projects). The way expressjs does not abstract you from node, Dinoloop does not abstract you from expressjs. You are free to use/mix node, express and dinoloop in your development. Indeed 99&amp;#37; of code you write would be purely node, typescript and express. Dinoloop is a library at server-side (like [Reactjs](https://reactjs.org/), we love what Reactjs does at client-side). You can either develop entire application in Dinoloop or part of it or gradually migrate expressjs to Dinoloop. The first principle of Dinoloop is to provide architecture shift to developers and not to create a complete huge framework because we do not want our developers to run into issues because of dinoloop, we love and support pluggable architecture.

## Typescript for Node, Seems pretty new?

We love Typescript and it provides great tooling to develop enterprise applications. [Angular](https://angular.io/) promotes typescript and now it is hard to imagine npm packages without types. If you are a lover of angular (like us), we highly suggest you to use Dinoloop to maintain single Typescript codebase for [MEAN](http://mean.io/) application.

# Reference Links:

* [Dinoloop github repository](https://github.com/ParallelTask/dinoloop)
* [Dinoloop wiki](https://github.com/ParallelTask/dinoloop/tree/master/wiki)

I appreciate your time on reading this article, Give it a try for your personal projects and let me know your valuable thoughts on it. Pull Requests and Contributors are always welcome :).

We appreciate the simplicity of javascript and we do not want to enter a debate with functional javascript programmers. The motto of dinoloop is to help some community of developers to switch NodeJs easily and reuse existing coding skills and we are not trying to make every Nodejs developer as OOP programmer, we are providing the same architecture for the java/c# and mostly OOP minded programmers. We love javascript the way it is &lt;3. ",Dinoloop - Convinces an experienced C# developer to easily learn/switch to Node/Express
283,2018-07-06 09:57:55,3,9,"I'm running into a little problem setting up my authentication middleware with typescript. 

Basically, Express has a number of pre-built types from @types/express; one of those is the 'Request' type, one which you often use in the callbacks of the routes, i.e, 

    app.get('/endpoint', (req: Request, res: Response) =&gt; {...})

So, here's the thing, I'm using JSON web tokens to verify that the user is correctly logged in.  But I do need access to the decoded data from the token in order to get the right data for the end user.  (For example, I look up a user by username which is encoded in the token and can be retrieved from the token.) 

So here's my code: 

    import jwt from 'jsonwebtoken';
    import { IAppAndRoutes } from './api';
    
    export const createAuthenticationMiddleware = ({
      app,
      apiRoutes,
    }: IAppAndRoutes): IAppAndRoutes =&gt; {
      apiRoutes.use((req, res, next) =&gt; {
        // get token from body, query, or headers;
        const token: string | undefined =
          req.body.token || req.query.token || req.headers['x-access-token'];
    
        // return status 403 if no token provided;
        if (!token) {
          return res.status(403).send({
            success: false,
            message: 'No token provided',
          });
        }
        // verify
        jwt.verify(token, app.get('superSecret'), (err, decoded) =&gt; {
          if (err) {
            return res.status(403).send({
              success: false,
              message: 'Failed to authenticate token',
            });
          } else {
            // if everything went well, save this to the request for use in other routes;
            /* THIS IS THE LINE CAUSING ME TROUBLE */
            req.decoded = decoded;
            /* [ts] Property 'decoded' does not exist on type Request */
            next();
          }
        });
      });
      return { app, apiRoutes };
    };
    
    export default createAuthenticationMiddleware;

So it's a Javascript property that you can add a property to an object without much ado, but in this case, I want to save the  data.  I could just add it to ""req.body.decoded"" as req.body has an ""any"" type, but I don't know if I like the idea of modifying the body when this is really metadata. ",Could use some help with modifying Express.Request
284,2018-07-06 17:28:41,48,15,"I see a lot of people / companies switching to use typescript in their applications, and I’ve done a lot of reading about it and some playground experimenting and i understand the concepts and idea behind the implementation. My questions for any TS lovers (or not) out there are: 

What do you feel it is not giving you in the area of flexibility? I feel like sometimes the beauty of JS is the flexibility of variables / parameters.

What overall pain points do you run into in large scale projects using TS?

anything you wish TS supported that it does not?

Any other feedback? 

Thanks! ","Typescript. The bad, the worse, and the ugly."
285,2018-07-10 04:10:16,0,1,"Does anyone in here use Neovim with Neomake for linting?  I am trying to set it up and I'm seeing weird behavior.  I was hoping I could just use whatever the standard config for this is.  I have it currently working with the tsc and tslint makers, but it only runs a make when I change one of my two files.  When it runs, it runs on both files each time.  I'm not sure if it matters, but I'm also using 'HerringtonDarkholme/yats.vim' for typescript highlighting.",Neomake settings for .ts and .tsx
286,2018-07-15 07:14:14,6,0,"I'm new to TypeScript.  It seams great.  I'm getting hung up on my inability to make truly private members.  I'm used to closures where I can obscure data at runtime.  Short of mixing closures and typescript in the same project I don't see anyway to achive runimte privacy.

Is this a big deal?

I can imagine issues occuring if scripts are written outside typescript that mess with private members.  Is this even a concern for Typescript projects you have worked on?",Should I be concerned about TypeScripts lack of runtime privacy?
287,2018-07-17 11:44:20,23,11,"Hi guys, I need some help from more experienced programmers. 

Next week I'll have my first ever interview for a position in a startup. Their stack includes typescript / es6 and MySQL.

My ES6 is quite good but I know nothing about typescript but I'm not very concerned about it as the interviewer mentioned he cares more about problem solving. 

I don't know much about algorithms, I studied them on Khan Academy, played some challenges on code wars but didn't dive much into it.

 I already have the book ""cracking the coding interview"" but I was wondering if you knew some resources to quickly grasp some of the hardest and most important concepts to ace an interview.

If you are wondering why I didn't prepare before applying, well...it's because I didn't apply, I simply got an offer out of the blue.

Thanks for the help ! ",Tips for first interview as front end developer.
288,2018-07-17 13:02:56,0,1,"I'm a begnnier. Currently I compile all my typescript files with ""tsc &lt;name of file&gt;"". This is bad because it ignores the tsconfig.json file I've setup.

What's the correct way to compile my files? I'm using VS Code. Also my project is only one file. ",Basic question
289,2018-07-20 14:01:59,5,1,"
There is a definition for ReadableStream in the `node_modules/@types/node/index.d.ts`. There is another, different one defined in `&lt;program files&gt;\Microsoft VS Code\resources\app\extensions\node_modules\typescript\lib\lib.dom.d.ts`, contained in vscode system modules. 

The obvious answer is one is for the dom, but I wasted a lot of time because vscode auto-added the wrong one.




","Two definitions for ReadableStream, why?"
290,2018-07-25 09:50:00,4,1,"I'm having problems with my TypeScript build. My source code makes use of features of such as promises, and ES6 classes.

My tsconfig.json file is as follows:

```
{
  ""compilerOptions"": {
    ""allowSyntheticDefaultImports"": true,
    ""noImplicitAny"": true,
    ""noUnusedLocals"": true,
    ""declaration"": false,
    ""module"": ""commonjs"",
    ""target"": ""es5"",
    ""jsx"": ""react"",
    ""allowJs"": false,
    ""moduleResolution"": ""node"",
    ""lib"": [""dom"", ""es2015"", ""es2016"", ""es2017""],
    ""emitDecoratorMetadata"": true,
    ""experimentalDecorators"": true,
    ""resolveJsonModule"": true
  }
}
```

To my understanding my source code should be able to make use of all ES2015, ES2016 and ES2017 features, and my source code should be outputted as ES5.

Despite this my source code has the class keyword within it (within the vendor code split file at least). 

How can I get my code outputted to work with IE11, I am using Webpack and awesome-typescript-loader if that makes any difference?",Compiled code using ES6 features such as classes despite having target set to ES5?
291,2018-07-26 09:55:29,1,0,[https://launchpass.com/fullstacktypescript](https://launchpass.com/fullstacktypescript),Want to talk about TypeScript? Join this slack group!
292,2018-07-27 07:13:00,5,22,"I am long time back end dev in dot net, and after going through clr via c# I found a lot of new stuff and how stuff works behind.

I am developing apps in angular (2,4,5,6) and I am self tought so there is a lot of room for improvement in typescript. I am looking for a book where I could go through from the beginning, learn new stuff, best practices and more theory with examples. There are few on amazon but I am not sure which one should I use. I would love to also learn newest es6/2017 typescript if that makes sense.

Thanks",What book to sharpen Typescript?
293,2018-07-27 08:19:56,16,2,"I'm not having object oriented programming experience, and my question is related to that. We have immediately invoicing functions in JavaScript, which usually all libraries use that to involved themselves for the first time. No need to function call, and when you include the library, it is ready! 

But in typescript, we make a class, let's say ""Main"" class. 

Class Main{
// Using some imported methods from utils...
// We works happened here
// Some more works
}

Now is it fine to just ""new"" this class as I expect the immediately invoking function? 

Like const main=new Main()
Now the library user must use ""const main"" as the function?

Isn't there any better way?",How to make the main class work in typescript?
294,2018-07-28 14:09:57,21,10,"At our current org, we are planning to add typescript type definitions (using external .d.ts file) to a existing large JavaScript project. Is there any guide / blog post related to how any project/org attempted to do this - how it went, outcomes, anything like that? (All I could find were regarding converting completely to ts files)

More context: 

I have worked on few ts projects from scratch and know the steps of setting up one, but wanted to understand how it differs for projects using external typedefs. If possible, some social proof regarding this will also be very helpful in convincing the team.

I would expect much less type coverage with this process (simply because you can't add typedef  for symbols that exist only within inner scopes, from external files), but what other differences should I keep in mind? Any of your personal experience will be helpful.",Any guide to adding typescript definitions to a large js codebase?
295,2018-07-30 08:25:51,4,1,"Can someone do me a huge favour and explain how the following type declaration is working;

(from the [Intersection Docs](https://www.typescriptlang.org/docs/handbook/advanced-types.html))  
 `(&lt;any&gt;result)[id] = first[id];`

specifically I don't yet understand how the `(&lt;any&gt;variable)` syntax is working and why it is needed, it looks a bit hacky",prefixed type declaration
296,2018-07-30 16:19:05,3,0,"I am liking what the optional typescript checking in VSCode is giving me on my JS, but it is one problem after another. I don't want to learn typescript, but a nice guide for a basic understand of common problems would be amazing!

For example, I have this code to create a FSM using symbols:

`const SCREEN = {`  
 `TITLE_SCREEN: Symbol('TITLE_SCREEN'),`  
 `GAME_SCREEN: Symbol('GAME_SCREEN'),`  
 `GAMEOVER_SCREEN: Symbol('GAMEOVER_SCREEN'),`  
`};`

so it would be nice if typescript would warn me if did a typo on the object key... but when I hover over SCREEN I get:

`const SCREEN: {`

`[x : string ] any;`

`TITLE_SCREEN: Symbol`  
`GAME_SCREEN: Symbol`  
`GAMEOVER_SCREEN: Symbol`

**what the hell is the** `[x : string ] any;` **about?** now I can't get any typo error correction or proper hints, why has it added this mysterious nonsense?

with this code below I added the JSDOC and it seems to act as expected and all is well, but I can't find ANY official docs to tell me what to do or if this the correct use of `@param {KeyboardEvent}` for this situation.

`/**`  
 `*`  
 `* @param {KeyboardEvent} event`  
 `*/`  
`function keyHandler(event) {`  
 `switch (true) {`  
 `case currentScreen === SCREEN.TITLE_SCREEN &amp;&amp; event.code === 'KeyS':`  
 `currentScreen = SCREEN.GAME_SCREEN;`  
 `break;`  
 `case currentScreen === SCREEN.GAME_SCREEN &amp;&amp; event.code === 'KeyF':`  
 `firePressed = event.type === 'keydown';`  
 `break;`  
 `case currentScreen === SCREEN.GAME_SCREEN &amp;&amp; event.code === 'ArrowLeft':`  
 `leftPressed = event.type === 'keydown';`  
 `break;`  
 `case currentScreen === SCREEN.GAME_SCREEN &amp;&amp; event.code === 'ArrowRight':`  
 `rightPressed = event.type === 'keydown';`  
 `break;`  
 `case currentScreen === SCREEN.GAMEOVER_SCREEN:`  
 `break;`  
 `// no default`  
  `}`  
`}`

`addEventListener('keydown', keyHandler);`  
`addEventListener('keyup', keyHandler);`","Is there a guide to using typescript type checking on Javascript in VSCode? Also, a couple of questions."
297,2018-08-01 19:55:26,9,5,"Ok for some context first I have this type and it works like I want it to:

    export type inputsObs&lt;T&gt; = {
        [M in keyof T]?: Observable&lt;T[M]&gt;;
    }

So what that does for me is given a type:

    export class Foo {
        bar: string;
        biz: boolean;
    }

I can then define an object like:

    const inTest: inputsObs&lt;Foo&gt; = {
        bar: new Observable&lt;string&gt;(),
        biz: new Observable&lt;boolean&gt;()
    }

And there if I used a type other than string for bar's Observable or boolean for biz's Observable a type error is thrown informing me that the generic type must match the type based on the shape of the generic parameter.

So that all works exactly like I want it to.

Now, this is the hard part that I can't figure out.  I want another type very similar to my first type up there but instead of allowing any key in the generic I want to only allow keys in the generic where the value at that key is a specific type.  I want to constrain where T[M] is valid.

    export type outputCallbacks&lt;T&gt; = {
        [M in keyof T **where T[M]: EventEmitter** ]?: ()=&gt;void;
    }

So I bolded the part there where I don't know how to define it, or even if it is possible.  I don't know how to constrain which keys are valid.

For what I am trying to achieve, given a very similar definition for Foo from above:

    export class Foo {
        bar: string;
        biz: boolean;
        buzz: EventEmitter&lt;number&gt;;
    }

So for this object shape what I would like is to be able to do:

    const outTest: outputCallbacks&lt;Foo&gt; = {
        // this should work because buzz is type 
        // EventEmitter inside Foo
        buzz: () =&gt; {},
        // this should throw an error because bar 
        // is not of type EventEmitter inside Foo 
        bar: () =&gt; {}  
    }

I've looked through the typescript documentation on indexer types and anything else that looked promising and haven't found anything so far.  Also my random google searches have failed me.  

Does anyone know how to constrain the validity of an indexer based on the value of the indexed value of the generic parameter?  

Or does anyone know if this just isn't possible to describe currently with typescript?

Thanks.",How to constrain a generic indexer's value type?
298,2018-08-03 03:18:49,5,5,"[https://github.com/nestjs/nest/blob/master/packages/common/interfaces/modules/forward-reference.interface.ts](https://github.com/nestjs/nest/blob/master/packages/common/interfaces/modules/forward-reference.interface.ts)

After reading the typescript generic documentation, there is no mention of this syntax.

\`\`ForwardReference&lt;T = any&gt;\`\`

I've tried to resonate and test with my idea that it must of type any, but the type is with a colon.

Example:

[Typescript playground example](http://www.typescriptlang.org/play/index.html#src=interface%20WithAName%20%7B%0D%0A%20%20%20%20name%3A%20string%3B%0D%0A%7D%0D%0A%0D%0Ainterface%20ForwardReference%3CT%20%3D%20WithAName%3E%20%7B%0D%0A%20%20forwardRef%3A%20T%3B%0D%0A%7D%0D%0A%0D%0Aclass%20X%20implements%20WithAName%20%7B%0D%0A%20%20%20%20constructor(public%20name%3A%20string)%20%7B%0D%0A%0D%0A%20%20%20%20%7D%0D%0A%7D%0D%0A%0D%0Aclass%20Y%20implements%20WithAName%20%7B%0D%0A%20%20%20%20constructor(public%20name%3A%20string)%20%7B%0D%0A%0D%0A%20%20%20%20%7D%0D%0A%7D%0D%0A%0D%0Ainterface%20Animal%20%7B%0D%0A%20%20%20%20age%3A%20number%3B%0D%0A%7D%0D%0A%0D%0Alet%20myAnimal%3A%20Animal%20%3D%20%7B%20age%3A%202%20%7D%3B%0D%0A%0D%0Alet%20myX%3A%20X%20%3D%20new%20X('X')%3B%0D%0Alet%20myY%3A%20Y%20%3D%20new%20Y('Y')%3B%0D%0Alet%20myZ%3A%20WithAName%20%3D%20%7B%20name%3A%20'Z'%7D%3B%0D%0A%2F%2F%20Animal%20is%20not%20of%20type%20or%20doesn't%20implement%20the%20interface%20WithAName%0D%0A%2F%2F%20I%20expected%20to%20see%20an%20error%0D%0Alet%20a%3A%20ForwardReference%3CAnimal%3E%20%3D%20%7B%0D%0A%20%20%20%20forwardRef%3A%20myAnimal%0D%0A%7D)

So, what does the equality sign do here?",Why does this Interface use an equal sign in their generic definition?
299,2018-08-03 06:24:27,7,1,"I need to migrate an existing Javascript VS2017 solution to Typescript.

Does anybody know to change the project type from node.js to typescript?",Need help on migrating existing Visual Studio 2017 Javascript solution/project to Typescript
300,2018-08-03 12:46:23,3,0,,Can flow/typescript fully replace React propTypes?
301,2018-08-04 13:14:47,8,7,"Hi all,

In my previous thread I provided a short demo of my new framework ([Link to part 1](https://www.reddit.com/r/typescript/comments/91qw4e/share_your_opinion_about_my_new_ui_framework/)). In this thread I would like to show you the `Checkbox` and the `RadioButton` components.

I will post new screens as the development of BlendSDK progresses.

Thank you.

*Processing img 97div8rws2e11...*

*Processing video xy7s8fmzs2e11...*",Share your opinion about my new UI framework (part2)
302,2018-08-05 09:56:26,2,0,"Hi all,

I am developing a new UI framework. It is based on typescript.

I would like to hear your opinion.

[Link to Part 1](https://www.reddit.com/r/typescript/comments/91qw4e/share_your_opinion_about_my_new_ui_framework/)

[Link to Part 2](https://www.reddit.com/r/typescript/comments/94j1aw/share_your_opinion_about_my_new_ui_framework_part2/)

Thank you for your time.",Share your opinion about my new UI framework
303,2018-08-07 10:01:28,10,8,"Hi guys. How do you document your code?

I tried using \`typedoc\` but it is old and some things do not work also it lacks many features.

After hours of googling I cannot find anything definite.

Maybe there is some way to use jsdoc with ts files?",How do you document your typescript codebase in 2018?
304,2018-08-08 16:11:59,0,7,,AWS Cloud reporting tool written in typescript
305,2018-08-11 22:05:19,0,1,,How to debug the typescript source code of angular2?
306,2018-08-12 19:36:48,0,1,,How to debug the typescript source code of angular2?
307,2018-08-14 20:12:47,0,1,,milesj/babel-plugin-typescript-to-proptypes
308,2018-08-15 13:50:35,3,0,"I have written a file with over 700 lines and now have to pass it off to other devs to use. I am new to development, but I can see the problems that could arise from this situation. I am trying to make this better for them by modularizing this. I am wanting to split this file up into several files and import these several files into a main file and just call on these from main to run the entire application flow. I have been unsuccessful at importing and exporting these typescript files and I am thinking I'm on the right track, but I am hitting a blocker. This is my unworking attempt as an example:
&amp;nbsp;
&amp;nbsp;

I have this test case (test1.spec.ts):
&amp;nbsp;
&amp;nbsp;
   export class login { 
        var userCred = require('./accounts.json')

        describe('angularjs homepage', function () {

        beforeEach(async function () {
          browser.ignoreSynchronization = true;
          await browser.get('');
        });
  
  
        it('should log in and register a user', async function () {
          browser.isElementPresent(by.xpath('//*[@id=""username""]'));
          await element(by.xpath('//*[@id=""username""]')).sendKeys(userCred.admin.username);
          await element(by.xpath('//*[@id=""password""]')).sendKeys(userCred.admin.username);
      
          await element(by.tagName('button')).click();
          browser.sleep(5000);
     
        });
    
       });
    }

and in main.spec.ts, I would have:
&amp;nbsp;
&amp;nbsp;
    import { Login } from ""./test1.spec"";

    let login = new Login();

    login();


&amp;nbsp;
&amp;nbsp;
This is obviously not working. Does anyone know how I can achieve what I am trying to do here?",Exporting protractor test as typescript files and importing into a main typescript protractor test file.
309,2018-08-16 20:04:13,0,1,,Lemoncode/react-typescript-samples
310,2018-08-19 01:18:42,3,1,"Im looking for a sort of hangout chatroom for programmers to just shoot the shit, bounce ideas off one another, show off progress, get opinions and such. I have/had one such channel but it was specific to a single library so it was hard to keep people there and now its basically dead. looking for a new home, any suggestions? I dont care what platform, gitter/irc/anything

currently im working on a 3d engine and IDE all from scratch as part of me learning javascript/typescript and would love to be able to chat with others about design and such","looking for a kind of ""hangout"" chatroom...."
311,2018-08-20 07:13:17,18,12,"Basically i am working with a lot of JSON data. However since this service needs to be the guardian against bad data (since the next layer is Elasticsearch, which is quite dynamic). 

When i was working with C# Newtonsoft.Json supported a ton of things i am looking for like the ability to mark JSON properties as required, ability to define the path of the actual JSON field, and support for massaging of types. 

I was wondering is there an equivalent to something like that for typescript/js? ",What is the recommended library for handling JSON serialization and deserialization?
312,2018-08-21 04:21:40,4,4,"I don't have much experience with web development ecosystem.
I'm coming from iOS development and looking to do React Native with typescript.
I've implemented simple counter following some tutorial, then converted it using `redux` and `typesafe-actions`.
It works fine but I feel like it doesn't leverage typescript's type system fully.
Are there any libraries similar to `redux` that work better with typescript or do I need to use redux style at all?
I really like the idea to keep app's state in one place.",What libraries do you use with React/React Native?
313,2018-08-22 02:25:27,1,1,"I'm new to typescript. I've been stuck on this problem for a few days. Hopefully someone can help. I have 2 repositories. Repository A generates a library. Repository B has repository A installed in node\_modules. 

&amp;#x200B;

In repository A:

I use `tsc` to generate my type declaration files. In one of the generated type declaration files, the compiler generates a triple slash directives that look like  `/// &lt;reference path=""../../../node_modules/@types/angular-mocks/index.d.ts"" /&gt;`.

&amp;#x200B;

In repository B:

 I then need to use repository A's compiled types and js in repository B. However, because the path is relative, when the compiler tries to import the new project, the relative paths are incorrect and results in the compiler trying to find angular-mocks in `/User/zacharilius/dev/project-name/node_modules/node_modules/@types/angular-mocks/index.d.ts`. How can I cause the compiler to generate the correct triple slash directive?",Problem exporting project to be used as a library.
314,2018-08-23 14:01:39,6,1,"Hello,

i just started using Typescript but i run into a Problem, i cant solve.

I am using nodejs and gulp to compile my typescript files into js files. I want to use es6 modules or just put all into one file, without the use of modules in JavaScript.

Is it possible to get from two Typescript files, where one is importing a class from the other file, either one js file, containing the exported class and the Content of the file, importing the class or to compile the ts files into JavaScript with es6 modules, but with the .js file extensions in the include Statements, to that my browser can use the.

Or can i tell the Browser to use the include Statements from JavaScript without the .js file extensions?

&amp;#x200B;

Thanks for help and please ignore typos / grammatic mistakes, i am not a native Speaker :)",Need help with Compiler
315,2018-08-23 20:03:27,1,1,"I write mainly back-end JavaScript (a.k.a Node.js).  However, I pick up various open source projects and contribute to them in different ways.  Having one set-up that works for all was important for me, writing vanilla JavaScript is important too.  

TL;DR

I got the following tools to work together to make the ultimate JavaScript ""IDE"" (for me):

* TypeScript TypeChecker;
* ESLint;
* JSDoc;
* Prettier; and
* VS Code helps too.

Here is the detailed write-up: [Using TypeScript TypeChecker, ESLint, JSDoc and Prettier to write JavaScript](https://medium.com/@psiphi75/using-typescript-typechecker-eslint-jsdoc-and-prettier-to-write-javascript-205a2f07a4f3). 

&amp;#x200B;

Would be glad to hear your comments, what works for you.  The above works for me.  

&amp;#x200B;

&amp;#x200B;",I spent some time figuring out the best tools to help me write JavaScript better and faster
316,2018-08-23 21:48:44,17,84,,"Deno, a typescript runtime, has been rewritten in rust and released v0.1"
317,2018-08-24 20:12:53,2,5,"I'm trying to test a function I have where I'm making a request and subscribing to it. Apparently, testing a function with a subscribe is very difficult and I cannot find any documentation on it, but it has to be done, because the code would simply not work if I never subscribed. Thank you in advance for any hints on how to do this.

Stackoverflow link: [https://stackoverflow.com/questions/51989243/testing-a-typescript-function-with-a-subscribe-in-it](https://stackoverflow.com/questions/51989243/testing-a-typescript-function-with-a-subscribe-in-it)

I have a feeling this will be a comment.. Even if I put the observable in a service, when I use the subscribe is the component, it's still red and not tested.","Reddit, please help! How to test a typescript function with a subscribe in it"
318,2018-08-26 19:52:04,0,1,,sw-yx/react-typescript-cheatsheet
319,2018-08-28 01:28:15,2,0,"My typescript code is compiled into build/dist. Then, I run `aws cloudformation package --template-file ./template.yaml --output-template-file ./build/sam-output.yaml --s3-bucket my-s3-bucket` and use aws SAM to deploy to lambda. However, my dependencies are not included in the lambda deployments (ie. when I call the lambda function, it errors with ""some-dependency not found"").

CodeUri is `./build/dist`

I do not copy node_modules into build/dist or zip, instead, I am executing the `package` command immediately after the `tsc build`",AWS SAM package command using Typescript... where did all my node_modules go?
320,2018-09-01 14:01:17,13,9,"So I was looking at [this SO question](https://stackoverflow.com/questions/52127082/ensure-existance-of-optional-property-in-typescript-interface/52127625?noredirect=1#comment91206233_52127625) and was wondering why TypeScript would not consider code like this correct

    interface Test {
        prop?: string;
    }
    
    function someFunction(data: { prop: string }) {
        console.log(data.prop);
    }
    
    function otherFunction(data: Test) {
        if (data.prop) {
            //someFunction(data); //error Argument of type Test is not assignable to { prop: string }
            someFunction({ prop: data.prop }); //TS is happy
        }
    }

Now I can think of this implementation that will not actually conform to the interface but it is still able to cheat the type checker in the second case


    class TestImplementation implements Test {
        private _counter = 0;
        get prop() {
            this._counter++;
            return this._counter % 2 == 0 ? undefined : 'test';
        }
    }

Does anyone know why the TypeScript team have not implemented a mechanism to treat data as { prop: string } after the check? I can't find a GitHub issue on the topic (maybe I don't search correctly) but I assume someone thought of that already and there is a reason it is not in.",Checking properties for undefined/null does not change the type of the object
321,2018-09-02 17:48:40,0,1,,Using new Babel 7 and preset-typescript to compile Angular 6 app
322,2018-09-06 15:00:11,5,7,"Hey reddit. I'm a typescript noob, and I'm currently working on creating a definition file (d.ts) to describe a third party's API. There is one function which I'm stuck on:

 

&gt;MessageBox(message: string, title: string, type: number): number  
&gt;  
&gt;**Description**  
&gt;  
&gt;Displays a message box with a variety of buttons and return values depending on user’s button selection  
&gt;  
&gt;**Return Values**  
&gt;  
&gt;Refer to the type parameter description below  
  
&gt;  
&gt;**Parameters**  
&gt;  
&gt;m*essage*  
The string to be displayed in the Message Box  
&gt;  
&gt;t*itle*  
The string to be displayed in the title bar of the Message Box  
&gt;  
&gt;t*ype*  
Dictates button types. Refer to the table below

&amp;#x200B;

|type|buttons displayed|return value|
|:-|:-|:-|
|0|ok|ok = 1|
|1|ok/cancel|ok=1, cancel=2|
|2|abort/retry/ignore|abort=3, retry=4, ignore=5|
|3|yes/no/cancel|yes=6, no=7, cancel=2|
|4|yes/no|yes=6, no=7|
|5|retry/cancel|retry=4, cancel=2|
|6|cancel/try again, continue|cancel=2, try again=10, continue=11|

&amp;#x200B;

Is there a way for me to document the types and possible return values?",Need help with my definition file
323,2018-09-07 12:02:21,16,12,"Hello TypeScript community!

I'm writing typings for a framework, I'm specifically interested in strongly typing these functions for the typings (let's also call it a learning exercise) and I'm using TypeScript 3.0 FYI. I have the following problems, I think it is currently not possible in TypeScript to achieve what I want to do. Maybe one of you wizards can prove me wrong? :)

&amp;#x200B;

\###  valuesOf(obj)

The JavaScript implementation:

\`\`\`javascript

values (obj) {

return \_.keys(obj).map(key =&gt; obj\[key\]);

}

\`\`\`

I want to make this type-safe, so that the return type can be inferred as a type literal:

\`\`\`typescript

declare function values&lt;Obj&gt;(obj: Obj): \[ ??? \];

&amp;#x200B;

const valuesOfResult = values({ prop1: 1, prop2: 2, prop3: 3 }); // Should infer return type as type literal \[ 1, 2, 3 \];

\`\`\`

&amp;#x200B;

I'm pretty sure you can't do this, my first thoughts were creating a mapped type to grab just the object values, but that would return an object, not the array of type literal values.

&amp;#x200B;

\###  Object.assign

This ones more of a curiosity. The standard lib has the following signature for Object.assign.

\`\`\`typescript

assign&lt;T, U&gt;(target: T, source: U): T &amp; U;

\`\`\`

However it seems we can do a bit better than that with a conditional type:

\`\`\`typescript

export type Assign&lt;Source extends object, Target extends object&gt; = {

  \[Key in keyof (Source &amp; Target)\]: Key extends keyof Source &amp; keyof Target ? Target\[Key\] : Key extends keyof Target ? Target\[Key\] : Key extends keyof Source ? Source\[Key\] : never;

}

&amp;#x200B;

// Can be used like so

const assignResult = assign({ testOne: 1, testTwo: 1 }, { testThree: 3, testTwo: """" });

/\*\* Return type is {

testOne: number;

testTwo: string;

testThree: number;

} \*/

\`\`\`

How come the standard libs implementation is ""T &amp; U"" ? The conditional type version appears to have better inference so is there any benefit to the ""T &amp; U"" version?

&amp;#x200B;

\###  isObjectEmpty(obj)

&amp;#x200B;

I've checked everywhere and it seems this isn't possible yet in TypeScript, but I'm looking for  a fully type safe isObjectEmpty(obj) function. The JavaScript implementation.

&amp;#x200B;

\`\`\`javascript

isObjectEmpty (obj) {

return \_.keys(obj).length === 0;

}

\`\`\`

&amp;#x200B;

How I would like to be implemented in TypeScript, again returning a type literal.

\`\`\`

\`\`\`typescript

declare function isObjectEmpty&lt;Obj&gt;(obj: Obj): obj is {}; // Doesn't work as expected

&amp;#x200B;

const isObjectEmptyResult = isObjectEmpty({}); // Should return boolean type literal 'true'

const isObjectEmptyResult2 = isObjectEmpty({ test: 1 }); // Should return boolean type literal 'false';

const isObjectEmptyResult3 = isObjectEmpty(1234); // Should return boolean type literal 'false'

\`\`\`

&amp;#x200B;","TypeScript - Is it possible in TypeScript 3.0 to strongly type these functions? (Object.assign, valuesOf, isObjectEmpty)"
324,2018-09-07 12:32:49,5,3,"I'm working on a personal project that is premised around searching/""scraping"" (the source could only have html, or it could offer JSON, XML or RSS responses) informational DB's and then normalizing the results into a single result set. 

I'd like to make this app so it can easily accept plugins from the end user for a couple of things...

&amp;#x200B;

Agents: Agents are essentially DB/Site specific. They handle defining what information is supported by the target and how to fetch it (build the search URI, selectors for getting information from the returned result, etc.). For example, lets say this is an app that gets music information, there might be agents for AllMusic, MusicBrainz and Discogs. The app will have some built agents, but assuming you have some development experience, i'd like to make it so you can add additional agents outside the main codebase so that when SomeCoolMusicSite launches, someone could relatively easily make an agent for that and use it in addition to the others.

&amp;#x200B;

Adapters: There could be a number of things that support adapters, but currently this is only the ""crawler"". These things would be static and probably require setting a configuration value. Right now the only adapter is for Osmosis, and the interface mimics its API, but if someone wanted to use some other crawler/scraper, I'd like that to be able to make an adapter and specify it via configuration.

&amp;#x200B;

Are there any best practices for supporting things like this? I do plan to use Inversify as an IoC container, but that is not set in stone. ",What is the best way to allow plugins in a typescript application (or nodejs app more generally)?
325,2018-09-09 19:21:03,0,1,,Using new Babel 7 and preset-typescript to compile Angular 6 app
326,2018-09-10 18:17:01,1,3,"Hello fellow coders!  


I'm currently working on a RESTful API backend using nodejs with typescript where I need to gather information from multiple different APIs and parse the result and pass on the parsed information to the frontend.  


Right now I'm working on a API route where I gather information from two different external API routes, I gather the data from there with https. I send the data onward to my Objecthandler in the form \[object Object\],\[object Object\] because I push the response from my first http call into an array and my second http response into another array which I then push onto a third array that is the combined data from both responses.

`const first: object []  = [`  
`];`  
 `const second: object [] = [`  
`];`  
 `const combined: object [] = [`  
`];`

&amp;#x200B;

My object handler code looks like this:  


`function ObjectHandlerAvainsanat(obj: any): object[] {`  
 `const keywords: object [] = [`  
`];`  
 `if (obj instanceof Array) {`  
 `obj.forEach((e: any) =&gt; {`  
 `const results = e.results.map((x: any) =&gt; x);`  
 `const vals = {`  
 `localname: results.localname,`  
 `prefLabel: results.prefLabel,`  
 `altLabel: results.altLabel,`  
`};`  
 `keywords.push(vals);`  
`});`  
 `return keywords;`  
`}`

`}`

&amp;#x200B;

However, I get the error that               

`const results = e.results.map((x) =&gt; x);`

`^`

&amp;#x200B;

`TypeError: Cannot read property 'map' of undefined`

&amp;#x200B;

&amp;#x200B;

The actual data inside the http response looks like this, where I want the values from inside the results object array:

`{`

`""@context"": {`

`""skos"": ""`[`http://www.w3.org/2004/02/skos/core#`](http://www.w3.org/2004/02/skos/core#)`"",`

`""isothes"": ""`[`http://purl.org/iso25964/skos-thes#`](http://purl.org/iso25964/skos-thes#)`"",`

`""onki"": ""`[`http://schema.onki.fi/onki#`](http://schema.onki.fi/onki#)`"",`

`""uri"": ""@id"",`

`""type"": ""@type"",`

`""results"": {`

`""@id"": ""onki:results"",`

`""@container"": ""@list""`

`},`

`""prefLabel"": ""skos:prefLabel"",`

`""altLabel"": ""skos:altLabel"",`

`""hiddenLabel"": ""skos:hiddenLabel"",`

`""@language"": ""FI""`

`},`

`""uri"": """",`

`""results"": [`

`{`

`""uri"": ""`[`http://www.yso.fi/onto/yso/p22020`](http://www.yso.fi/onto/yso/p22020)`"",`

`""type"": [`

`""skos:Concept"",`

`""`[`http://www.yso.fi/onto/yso-meta/Concept`](http://www.yso.fi/onto/yso-meta/Concept)`""`

`],`

`""localname"": ""p22020"",`

`""prefLabel"": ""pyydystä ja päästä -kalastus"",`

`""lang"": ""fi"",`

`""altLabel"": ""catch and release -kalastus"",`

`""vocab"": ""yso""`

`},`

`{`

`""uri"": ""`[`http://www.yso.fi/onto/yso/p22337`](http://www.yso.fi/onto/yso/p22337)`"",`

`""type"": [`

`""skos:Concept"",`

`""`[`http://www.yso.fi/onto/yso-meta/Concept`](http://www.yso.fi/onto/yso-meta/Concept)`""`

`],`

`""localname"": ""p22337"",`

`""prefLabel"": ""CATCH-22"",`

`""lang"": ""fi"",`

`""vocab"": ""yso""`

`}`

&amp;#x200B;

Does anyone here know what I'm doing wrong? Thanks in advance for all the help,

Br,

Victor",Combining two objects from different APIs and parsing the result.
327,2018-09-10 20:59:45,4,1,"Hey folks,

I'm a TypeScript newbie. I hope this question isn't too dumb. I appreciate all the help I can get!

I'm trying to create a class, `Config`. This class should have the same type as a config I'm pulling
in from disk. The clincher is that **I don't know the type of the config until runtime**. I do want it to be in a class though so I can do some fancy stuff that I'm not including in the basic example below. Otherwise I'd just export the object read from disk and be happy.

```js
// grab the variable config from disk. At coding time, I don't know what's in here.
// For the sake of this example though, let's assume it looks like this:
// { CONFIG_VALUE: 'schwifty' }
const configFromDisk = fs.readFileSync('./config'); // not exact code, but you get the idea

// Create a type based on whatever was in that config. This works in other places
// in my code and I love the ability to do this.
type TConfig = typeof configFromDisk;

// Now I want to make a class that implements that type. If this were vanilla JS, this'd work
// fine because of the `Object.assign` bit. But here in TypeScript world, the line declaring the
// class throws a compile error saying ""Class 'Config' incorrectly implements interface 'TConfig'"",
// complaining about how CONFIG_VALUE is missing from type Config.
class Config implements TConfig {
  constructor() {
    Object.assign(this, configFromDisk)
    console.log(this.CONFIG_VALUE)
  }
}
```

So my question is, how can I tell typescript that I want this class to be the same type as an object I have? Thanks for all your help!",Help! With runtime assignable class shape.
328,2018-09-11 18:23:27,298,874,,"after 4 long years typescript has it: call, apply, bind are statically typed!"
329,2018-09-12 01:40:58,25,79,"I was doing some research whether I should use arrow functions or functions with bind(this). I have a class that will be instantiated multiple times (x1000) in some specific scenarios.

Google seems to return results related to react only which is not my case.The only valid info I found was this one [https://medium.com/@charpeni/arrow-functions-in-class-properties-might-not-be-as-great-as-we-think-3b3551c440b1](https://medium.com/@charpeni/arrow-functions-in-class-properties-might-not-be-as-great-as-we-think-3b3551c440b1) \+ some stackoverflow answers stating the exact opposite so I decided to do my own tests.

I do care about the instantiation of classes, not so much about calling of the functions itself (as it will be rare in my case)

I wrote this simple typescript (compiled to ES6) to do some tests

    class FuncClass {
      val = 5;
      constructor() { this.func = this.func.bind(this); }
      func() { return this.val; }
    }
    
    class ArrowClass {
      val = 5;
      arrow = () =&gt; this.val;
    }
    
    const outterCount = 20;
    const count = 100000;
    
    const fc = [];
    export function funcClassTest() {
      for (let out = 0; out &lt; outterCount; out++) {
        console.time('funcClass');
        for (let index = 0; index &lt; count; index++) {
          const x = new FuncClass();
          //x.func();
          //fc.push(x);
        }
        console.timeEnd('funcClass');
      }
    }
    
    const ac = [];
    export function arrowClassTest() {
      for (let out = 0; out &lt; outterCount; out++) {
        console.time('arrowClass');
        for (let index = 0; index &lt; count; index++) {
          const x = new ArrowClass();
          //x.arrow();(
          //ac.push(x);
        }
        console.timeEnd('arrowClass');
      }
    }

My observations:

1. Arrow functions are easier to write (obviously :))
2. Constructing the objects is same in both cases (100k instances takes \~0.2ms on my laptop)
3. Constructing and calling a function is a big difference (uncomment the arrow/func call, increase the counter for bigger difference). Arrow function is 1.5-2x slower then bound function.I tried also doing all calls on single instance, and the difference is almost zero.
4. Uncoment the push call to see some memory info. This is where the biggest surprise comes. Classes with arrow function increase the heap size by \~350MBs. Bound function test needs ""only"" \~200MBs of heap.

**My conslusion**

This was obviously very simple test. I ignored the first run and run it couple times to get some averages. The results might be different with other JS engine or HW. It aimed to test my specific scenario where bound functions seem to be a winner (because of less memory usage).

The number of instances in this is test is extreme 20x100k so in real app it probably does not matter.

&amp;#x200B;

Do you have a similar/opposite experience?",Bound function vs arrow function performance
330,2018-09-14 14:47:45,2,1,"I was developing a [library](https://github.com/ksxnodemodules/typescript-tuple) but when I add [certain generics](https://github.com/ksxnodemodules/typescript-tuple/blob/bug-report-tsc/index.ts#L302-L342), and then TSC [crashed](https://travis-ci.org/ksxnodemodules/typescript-tuple/builds/428650700):

```
TypeError: Cannot read property 'kind' of undefined
```

I also filed an issue: https://github.com/Microsoft/TypeScript/issues/27092",HELP: TypeError: Cannot read property 'kind' of undefined
331,2018-09-17 18:24:54,0,1,,typescript-fromdrag - StackBlitz
332,2018-09-18 05:41:15,4,4,"If you are using back-end TypeScript with NodeJS for web-server development and are currently or considering using ExpressJS as web-server, please consider giving my library OvernightJS a try. It's just a library to add TypeScript decorators to Express routes so you don't have to use router objects and long list of app.use()  
 statements. It only takes about 10 minutes to learn if you already know express (even if you only know it a little bit). There are some other libraries like ts-express-decorators and NestJS but these are massive frameworks built on top of Express with huge amounts of documentation. Overnight is quick and easy. All the links below contain tutorials on how to use it.

* Here the [npm](https://www.npmjs.com/package/@overnightjs/core) link.
* Here's the [Github](https://github.com/seanpmaxwell/overnight/tree/master/src/core) link.
* Medium article [here](https://medium.com/@seanpmaxwell1/overnightjs-the-best-way-to-use-expressjs-with-typescript-35d71941aade).",OvernightJS is the best way to use ExpressJS with TypeScript!
333,2018-09-19 15:15:07,8,17,"Define controllers and routes with @Controller, @Get, @Post, @Put, @Delete decorators. Makes your express server setup cleaner and more terse. I know that there are some frameworks out there like *ts-express-decorators* and *NestJS,* which can add decorators to express routes, but these are massive frameworks with huge amounts of documentation. OvernightJS is clean, simple and meant to be used the same way you would interact with any normal express instance. You basically have the option of using Controller and Route decorators instead of express.Router objects. It also allows you to pass in our own custom router objects such as *express-promise-router*.

&amp;#x200B;

Here's the [npm](https://www.npmjs.com/package/@overnightjs/core) link.

Here's the [GitHub](https://github.com/seanpmaxwell/overnight) link with source code and samples.

Here's a link to the [medium](https://medium.com/@seanpmaxwell1/overnightjs-the-best-way-to-use-expressjs-with-typescript-35d71941aade) article.","If you're using ExpressJS and TypeScript, add decorators to your routes with OvernightJS!"
334,2018-09-21 18:08:34,0,1,"Is there a way to globally reference (instead of having `/// &lt;reference path='/path/to/file.d.ts' /&gt;` on each file) in a project where I'm not actually using TypeScript?  


The definitions are for Phaser, and I'm not using TS on this project, but I still would like to have auto complete working without having to reference the definitions on top of each js file I create (I'm using a bundler, so my code has a lot of modules).","""Globally"" referencing types in a non-typescript project"
335,2018-09-22 11:49:13,0,1,"[Playground link](http://www.typescriptlang.org/play/index.html#src=type%20fNumberOrString%20%3D%20(x%3A%20number%7Cstring)%20%3D%3E%20number%3B%0D%0A%0D%0Aconst%20ffNumberOrString%20%3D%20(f%3A%20fNumberOrString)%20%3D%3E%20f('hi%20its%20me%20a%20string')%3B%0D%0A%0D%0Aconst%20result%20%3D%20ffNumberOrString((x%3A%20number)%20%3D%3E%20x%20%2B%201)%3B%0D%0A%0D%0Aconsole.log(result)%3B).

So, I declare a function type that accepts string or number and returns number.

Then I declare a function that accepts function of aforementioned type and calls it with a string argument. Everything is fine so far.

But then I call that function but as an argument I am passing a function that only accepts number as an argument. Here I am expecting to get an error telling me that x is possibly a string.

But I don't.

Doesn't it kinda defeats the whole purpose of typescript? What am I doing wrong or misunderstanding here?",Why am I allowed to do this?
336,2018-09-22 17:50:57,0,0,,garybernhardt/preact-typescript-component-wont-build
337,2018-09-22 17:55:56,0,13,,sw-yx/react-typescript-cheatsheet
338,2018-09-24 20:26:38,0,0,,Setting paths in tsconfig.json does not work · Issue #98 · wmonk/create-react-app-typescript
339,2018-09-26 23:06:42,3,3,"For those who haven't seen it... Babel 7 supports transforming TypeScript into JavaScript. It doesn't do any type checking, but you can still use the normal `typescript` package for that.

There are [some minor missing features](https://blogs.msdn.microsoft.com/typescript/2018/08/27/typescript-and-babel-7/), but that shouldn't affect the vast majority of TypeScript code.

Previously a lot of people were using both the TypeScript compiler and Babel together due to the lack of configurability in TypeScript's output, so there were two complete compiler passes every build. Now you can just do it all in one. Faster and simpler, with a very small downside.

Seems pretty cool, right? Is everyone just going to switch to Babel now? Will TypeScript be used more like Flow, as a type checker and not a compiler? Is this another nail in the coffin for Flow?",What do you guys think about TypeScript in Babel 7?
340,2018-09-27 19:14:33,0,1,,Response models generated as any · Issue #314 · Azure/autorest.typescript
341,2018-09-28 21:51:28,27,45,"Hello. I have weird problem. Dev-ops and frontend folks convinced my management, that I should put more comments, names and stuff in JSON's fetched by my application XHR requests. This way everyone can look in chrome inspector and ""say what this stuff is for"".

I think that right place for documentation are c# view-model, Open-API (swagger) artifacts, typescript models and doxygen artifacts.

By ""documentation"" I mean ""what this field is for"". Just what you generally put in &lt;summary&gt; tags. Sometimes You have multiple ""price""'s placed in different contexts, so just field name is not enough, and one needs additional insights to reason about where to put things.

Am I right? If so, what arguments can I use?",How to convince management that classes XHR is not right place for docs?
342,2018-09-30 00:08:48,3,3,,Serverless Client Application -- Converted to Typescript -- Give it a try to learn typescript!
343,2018-10-03 11:19:33,1,1,I am working on a PR for Microsoft/typescript. Issue is regarding changing better error messages. I changed their [diagnosticMessages.json](https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json) file. Now I want to update tests for it. Is there any command that updates tests automatically for file changed. Like in jest there is snapshot. Example `jest --updateSnapshot.` Please help.,run tests for microsoft/typescript repo
344,2018-10-06 17:25:33,0,1,,Using new Babel 7 and preset-typescript to compile Angular 6 app
345,2018-10-07 06:32:03,0,1,"Hey there,

I wrote small [react-redux-typescript-boilerplate](https://github.com/Meemaw/react-redux-typescript-boilerplate) that comes with strongly typed (opinionated approach to fetching) that I found very useful in my projects. As I am new to typescript I would like your feedback and possible improvements.

&amp;#x200B;",[TS] Opinionated approach to fetching
346,2018-10-07 19:55:30,0,1,,Rewrote codebase in typescript by dmtrKovalenko · Pull Request #674 · dmtrKovalenko/material-ui-pickers
347,2018-10-07 20:04:56,0,1,,Using new Babel 7 and preset-typescript to compile Angular 6 app
348,2018-10-09 19:02:56,0,1,,Rewrote codebase in typescript by dmtrKovalenko · Pull Request #674 · dmtrKovalenko/material-ui-pickers · GitHub
349,2018-10-10 21:30:28,8,1,"I've created an interface for a class, and I want to define the signature to the constructor.

    export interface IEzCrudService{
       someFunction(someVar: string): string;
       constructor(app: DeApp, resourceUri: string, queryParams: { [key: string]: string; });
    }


Is this not possible in typescript? When I try to use this interface, it says:

    TS2420: Class 'EzCrudService' incorrectly implements interface 'IEzCrudService'.   Types of property 'constructor' are incompatible.     Type 'Function' is not assignable to type '(app: DeApp, resourceUri: string, queryParams: { [key: string]: string; }) =&gt; IEzCrudService'.       Type 'Function' provides no match for the signature '(app: DeApp, resourceUri: string, queryParams: { [key: string]: string; }) =&gt; IEzCrudService'. 


Any ideas? Considering other languages, this should be a trivial thing...",How do you define a constructor signature in an interface?
350,2018-10-13 15:28:11,7,1,"So, I've been trying to TSLint costum rules to work, but no matter what I do I can't seem to get it to work. 

I've wrote this custom rule, compiled it and put it in the corresponding folder:
    //filename is interfacePascalCaseAndPrefixRule.ts
    import * as Lint from ""tslint"";
    import * as ts from ""typescript"";
    
    export class Rule extends Lint.Rules.AbstractRule {
      static FAILURE_STRING =
        ""Interfaces have to be Pascal cased and prefixed with an I (first two letters are capitalized)."";
    
      public apply(sourceFile: ts.SourceFile): Lint.RuleFailure[] {
        return this.applyWithWalker(new Walk(sourceFile, this.getOptions()));
      }
    }
    
    class Walk extends Lint.RuleWalker {
      protected visitInterfaceDeclaration(node: ts.InterfaceDeclaration) {
        this.addFailureAtNode(node, Rule.FAILURE_STRING);
        super.visitInterfaceDeclaration(node);
      }
    }

To my understanding, this should raise an error for every interface declaration it finds. (Ignore the fact that this is pointless and the file name does not correspond to it's supposed function, this is for pure testing purposes.)

I've put the resulting *interfacePascalCaseAndPrefixRule.ts* in the *rules/* - folder of a TypeScript project. The *tslint.json* looks like:

    {
      ""defaultSeverity"": ""error"",
      ""rulesDirectory"": [
        ""rules/""
      ],
      ""rules"": {
        ""interface-pascal-case-and-prefix"": true, // &lt;-- This is the costum rule that doesn't do shit
        ""class-name"": true, //Enforces pascal case for classes eg. ""MyClass""
        ""indent"": [
          true,
          ""spaces"",
          4
        ], //4 spaces as indents (is probably broken)
        ""align"": [
          true,
          ""statements"",
          ""members""
        ], //aligns things. (might be broken as well)
        ""encoding"": true //encoding is UTF-8
      }
    }

The tsconfig.json looks like:

    {
      ""compileOnSave"": true,
      ""compilerOptions"": {
        ""outDir"": ""dist"",
        ""module"": ""commonjs"",
        ""target"": ""es6"",
        ""sourceMap"": true,
        ""strictNullChecks"": true
      },
      ""include"": [""src/**/*""]
    }

And when I run tslint, literally nothing happens (even though it definitely should raise some errors). The console output looks like:

    :~/Desktop/bubblesbot$ tslint -p .
    :~/Desktop/bubblesbot$ 

TSLint appears to be in working conditions as it does raise a bunch of errors when I add the line

    ""extends"": ""tslint:recommended""

to my tslint.json.

The implementation for the rule seems also the be found, since it raises an error when I purposely misspell it in the *tslint.json* file.

Any idea why this behaves the way it does? Any help would be greatly appreciated.

",TSLint costum rules not doing anything?
351,2018-10-14 11:18:35,8,1,"New to typescript workflows. When working with node + JS, I usually have a `dev` script of the form: `nodemon index.js`. With typescript I see I have 2 options:

1. `nodemon --exec ""ts-node index.ts""`
2. `concurrently ""tsc -w"" ""nodemon dist/index.js""`

Which one is used more often in the typescript community? What are the implications?",ts-node vs compiling for development
352,2018-10-14 23:30:38,8,1,,Oldschool demo effects in typescript
353,2018-10-15 01:28:30,4,1,"As the answer on [this SO thread](https://stackoverflow.com/questions/40249906/using-a-generic-type-argument-with-typeof-t) point that generic `typeof T` does not work. Because there's `InstanceType` so i just wonder why people don't add `ConstructorType` for this or is there anything like this already have in Typescript?

```typescript
interface ConstructorType&lt;T&gt; {
   new (...args: any[]): T
}
```",ConstructorType in Typescript
354,2018-10-16 12:50:10,2,1,,jointz: a zero dependency typescript alternative to joi for validation
355,2018-10-16 15:26:53,9,1,"Hello,

I've got a `data` JSON object defined on `window` from a server that renders HTML. What is the correct way to define `data` on the `window` object?

It seems like there's two options (maybe there's more?):

**Define globally** (as [illustrated here](https://www.reddit.com/r/typescript/comments/5fieja/how_do_i_add_a_property_to_window_in_typescript_2/))
```
declare global {
  interface Window {
    data: {
      foo: string;
    };
  }
}

((data) =&gt; {
  ReactDOM.render(
    &lt;App data={data} /&gt;,
    document.getElementById('app'),
  );
})(window.data);
```

Alternatively, it seems like there's another solution that extends the `Window` interface:

```
interface WindowWithData extends Window {
  data: {
    foo: string;
  };
}

((data) =&gt; {
  ReactDOM.render(
    &lt;App data={data} /&gt;,
    document.getElementById('app'),
  );
})((window as WindowWithData).data);
```

Both of these approaches compile for me, but it's unclear to me which method is preferable.

`data` is only ever used to hydrate the App at the top level, which makes me think solution 2 is preferable; on the other hand, it is a globally defined variable, which makes me think solution 1 is preferable.

What are your thoughts?",Correct way to define a global data element on window
356,2018-10-17 00:40:15,11,1,"Hi there,

[This was originally a comment here](https://www.reddit.com/r/typescript/comments/9oon9o/correct_way_to_define_a_global_data_element_on/) but thought it'd be better as it's own post.

I'm trying to import type definitions in `global.d.ts`. Importing seems to mark the typing file as locally scoped ([as is pointed out here](https://basarat.gitbooks.io/typescript/docs/project/modules.html)).

Aka, this fails for me:

```
import {
  Foo,
} from './types';

declare module '*.json' {
  const value: any;
  export default value;
}

interface Window {
  data: {
    foo: Foo;
  };
}
```

If I move my window definition to `window.d.ts` and explicitly declare global, that works:

```
import {
  Foo,
} from './types';

declare global {
  interface Window {
    data: {
      foo: Foo;
    };
  }
}
```

However, I would like to leave my window definition in `global.d.ts`, while also importing relevant types.

Is there a way to explicitly mark a file as a global typing file?","How to explicitly mark typings file as global, despite imports?"
357,2018-10-18 07:13:16,9,1,"I recently found it necessary to be able to pass the property of an object by reference. For example, in simple JavaScript:
```javascript
const person = {
	name: ""Foo"",
	score: 5,
};

delayedIncrement(person, ""score""); 

function delayedIncrement(object, key) {
	const oldValue = object[key];
	setTimeout(() =&gt; object[key] = oldValue + 1);
}
```
This is, however, very far from being type-safe.

What I eventually came up with was [ObjectValue.ts](https://gist.github.com/AlexVallat/5423ac89039f9c40420dda2e324c47d2) which wraps the object and the key together in a checked, type-safe way, allowing:

```typescript
delayedIncrement(new ObjectValue(person, ""score""));

function delayedIncrement(objectValue: IObjectValue&lt;number&gt;) {
	const oldValue = objectValue.get();
	setTimeout(() =&gt; objectValue.set(oldValue + 1));
}

// Type safety:

delayedIncrement(new ObjectValue(person, ""scre"")); // error TS2345: Argument of type '""scre""' is not assignable to parameter of type '""name"" | ""score""'.

delayedIncrement(new ObjectValue(person, ""score"")); // error TS2345: [...] Type 'number' is not assignable to type 'string'
```
The type checker validates that the key exists on the object, and that the value of the property of that key on the type of the object is of the expected value. Nice.

I hope this might come in useful to others.",Type-safe object property reference passing - sharing a useful pattern
358,2018-10-19 22:11:56,13,1,"I'm working on a weekend side-project more out of curiosity but if it works i'll probably bring it to production. My goal is to implement Scala's ""\_"" (underscore) syntax in Typescript. I have a rough plan of how to do this but am seeking advice on how to do the more complicated parts so if anyone could shed some light it would be greatly appreciated.  


My plan is to create a ""custom-transformer"" following typescripts own documentation and implement it into my webpack build to scan the AST and understand that this.....   \[1,2,3\].map(\_ + 5) needs to become \[1,2,3\].map((x) =&gt; x + 5) and.... this.... \[{name: ""test""}\].map(\_.name) is  \[{name: ""test""}\].map((x) =&gt; [x.name](https://x.name))  


However i need it to type-check in my IDE (Webstorm) where \_'s type needs to change depending on the AST context above are some simple examples but there are more complicated use cases that simply cant' be achieved with typescripts declare syntax.  


Typescripts own documentation around altering the language server through plugins doesn't seem to work for me in VsCode and Webstorm but even if it did it says that the language server API cannot be used to customize the type system so that is also a no-go.  


  
TL;DR:  
Need way to change type of ""\_"" in typescript in the AST in IDE and at compile time, not interested in declare syntax or typescript language server unless there's a way to get around the fact it can't change types.

&amp;#x200B;

  
",Typescript - Altering the AST in-editor and at compile time. Possible?
359,2018-10-22 12:52:15,25,1,"I'm new to typescript (previous experience with flow though) and I was wondering : 

Given that : 
- typescript already has some compiler options like noUnusedLocals that used to be part of the ""linting scope"" 
- and prettier fixes most of the formatting issues for me

Do you still consider tslint really useful for you typescript projects ?",Do you still use tslint ?
360,2018-10-22 18:48:38,3,1,,matchkin: Statically checked exhaustive matching for TypeScript [x-post from /r/typescript]
361,2018-10-22 19:38:07,0,1,,Microsoft/vscode-typescript-tslint-plugin
362,2018-10-22 19:43:06,0,1,,pbuda/heroku-typescript
363,2018-10-24 15:18:21,0,1,,Made with typescript for typescript :-)
364,2018-10-24 19:40:49,0,1,"I am trying to use [@babel/preset-typescript](https://babeljs.io/docs/en/babel-preset-typescript) instead of tsc to compile a certain app. 

In the docs it just says to add the preset to my .babelrc, however I get some errors (unexpected token { ) I am assuming this is supposed to be used with @babel/preset-env? If so why don't the docs mention this?",Babel's typescript preset
365,2018-10-24 23:25:22,1,1,"Hi All,

Short background: long time (3+ years) professionally (7+ years) personally python user. Not a webdev (mostly using python, pandas, numpy  but also some flask, js, pyspark). **I'm mostly happy** but also sometimes get frustrated (refactoring dynamic code, other's people code, lack of static analysis in python tools, deploying, devops work). I've been looking at Scala but it's soo hard because I can't use it at work and whenever I write personal project in Scala I quickly switch to python (can't bear frustration of its stdlib, sbt, inefficiencies, etc. even though Scala is nicer language in few ways. I could deal with those things if I'm getting paid for my scala work). 

&amp;#x200B;

I'm getting bit scared as I'm approaching 30 in few years and don't really have anything else in my portfolio. I know demand for python and javascript is strong but it still feels unsafe. I'm also fearful that I'm missing out but don't really want to take leap of faith switching. I don't want to end up with JS focused role, neither C++ or pure Java. There doesn't seem to be *that* strong demand for Scala engineers (assuming decent pay; in Zurich and London) - it's hard for me to get interview for scala roles but I can turn down python offers (and currently working as one).

My current idea is to perhaps go deeper  in typescript (assuming I can get it for work project), do more in-depth dive into CPython, pypy, optimization, etc. or come up with good open source project (e.g. be able to get talk at Tier 1 conference) or create profitable side-project.

Have you experienced something similar? Please share!",I've been happily using python almost exclusively for years commercially. FOMO not using other languages but scared to switch. (+bonus question: anyone went from python to scala?)
366,2018-10-24 23:37:21,27,1,"&amp;#x200B;

Hi All,

Short background: long time (3+ years) professionally (7+ years) personally python user. Not a webdev (mostly using python, pandas, numpy but also some flask, js, pyspark). **I'm mostly happy** but also sometimes get frustrated (refactoring dynamic code, other's people code, lack of static analysis in python tools, deploying, devops work). I've been looking at Scala but it's so hard because I can't use it at work and whenever I write personal project in Scala I quickly switch to python (can't bear frustration of its stdlib, sbt, inefficiencies, etc. even though Scala is nicer language in few ways. I could deal with those things if I'm getting paid for my scala work).

I'm getting bit scared as I'm approaching 30 in few years and don't really have anything else in my portfolio. I know demand for python and javascript is strong but it still feels unsafe. I'm also fearful that I'm missing out but don't really want to take leap of faith switching. I don't want to end up with JS focused role, neither C++ or pure Java. There doesn't seem to be *that* strong demand for Scala engineers (assuming decent pay; in Zurich and London) - it's hard for me to get interview for scala roles but I canafford to turn down python offers (and currently working as one).

My current idea is to perhaps go deeper in typescript (assuming I can get it for work project), do more in-depth dive into CPython, pypy, py/pandas speed optimization, etc. or come up with good open source project (e.g. be able to get talk at Tier 1 conference) or create profitable side-project.

&amp;#x200B;

Have you experienced something similar? Please share",I've been happily using python almost exclusively for years commercially. FOMO not using other languages but scared to switch. (+bonus question: do you regret voluntarily switching away from python?)
367,2018-10-25 00:26:20,0,1,,"REST API using Node with typescript, KOA framework. TypeORM for SQL. Middlewares JWT (auth), CORS, Winston Logger, Error, Response"
368,2018-10-26 15:03:08,1,1,,Canvas node graph in typescript
369,2018-10-26 15:04:54,0,1,,Canvas node graph in typescript - diagram js engine
370,2018-10-27 16:29:46,3,1,"Hello!

**TL;DR How can I change the absolute paths when compiling from TS to JS, to also work in the generated JS files too.**

I'm learning typescript and trying to migrate it into my React Native project.

My current problem is that when i'm using the `baseUrl` and `paths` compilerOptions in `tsconfig.json` to import modules like `import ... from ""components/Screen""` instead of `import ... from ""../../src/components/Screen`, the paths no longer works in the compiled files.

The project's structure:

```
./
 src/ &lt;- Everything TS
 build/ &lt;- Compiled JS
```

So what I'd like to achieve is when i import from one of the file in src folder an another file also from src folder, after compilation it should look for the imported file in the build folder

Eg.:
In the src folder:

index.tsx

`import List from ""components/List""` &lt;- Actual path is src/dummy_folder/components/List.tsx

When I compile the src folder, the index.js file in the build folder should look for the `./build/dummy_folder/components/List.js` file.",Resolve absolute paths in build folder
371,2018-10-28 11:03:15,10,1,"The following es6 works:

	class PromiseWithLog extends Promise{
		log() {
			return this.then(val =&gt; { 
				console.log(val)
				return val
			})
		}
	}
	PromiseWithLog.resolve(1).log() // log 1
	PromiseWithLog.resolve(Promise.resolve(1)).log() //log 1
	const x = PromiseWithLog.resolve(1)
	x.log().log() // log 1 two times

But why this typescript doesn't work?

	class PromiseWithLog&lt;T&gt; extends Promise&lt;T&gt;{
		log() {
			return this.then(val =&gt; { 
				console.log(val)
				return val
			})
		}
	}
	PromiseWithLog.resolve(1).log() // log 1
	PromiseWithLog.resolve(Promise.resolve(1)).log() //log 1
	const x = &lt;PromiseWithLog&lt;number&gt;&gt;PromiseWithLog.resolve(1)
	x.log().log() // log 1 two times

Typescript compiler said that `PromiseWithLog.resolve(1)` returns `Promise&lt;number&gt;`, but es6 Promise returns `PromiseWithLog&lt;number&gt;`.

Is this a typescript bug?",Why Promise subclass doesn't work in typescript?
372,2018-10-29 15:14:17,11,1,"Hello,

I'm trying to use typescript and have a question about it, 

all work well but I should to know : how I can know when I need to use each types ? 

for exemple, I use express with node.js, so I have install @types/express, 

for a simple get, without typescript I do :

    app.get(""/"", (req, res) =&gt; { // some code here });

and with typescript I know i should do : 

    app.get(""/"", (req : Request, res : Response) =&gt; { // some code here });

but it's because I had already see types in tutorials, my IDE (visual code) don't give any information about types needed for req and res, (intelisens put say ""any"" ...). Here it's a classic case, easy to find in internet but not in the express doc for example. With other case, I would like to know easy which type use for each functions (with IDE if possible)

&amp;#x200B;

Thank you for your help, and sorry for my english.",How to know which types use and when use them ?
373,2018-10-30 14:58:39,4,1,,rickety - minimal typescript rpc framework
374,2018-10-31 17:06:11,8,1,"I have a VideoOptions type:

    type VideoOptions  = {
        hevc: boolean;
        casting: boolean;
        resolution: string;
        // etc ...
    };

And i have a function that retreives a video and uses this option object:

    function getVideo(id: string, opts?: VideoOptions) { ... }

However my options come from my express query object, which I have types as a Record&lt;string,string&gt; because... well. query params are strings. 

I am able to do the following:

    getVideo(myId, queryParams);

And typescript isn't complaining. I would of understood maybe if my videoOptions parameters were all strings. But there are booleans and other types in the mix. 

So how can this be working?

Is there something i don't understand about the Record type? 
Thanks in advance. ",Record Types break type system?
375,2018-10-31 22:29:56,0,1,[removed],Learning typescript
376,2018-10-31 22:44:49,13,1,I have many years of experience developing using Javascript and I think it's time to give typescript a chance. I want to know if it's hard to learn for someone coming from a strong javascript background?,Learning typescript
377,2018-11-01 06:06:47,11,1,"I have struggled to find an answer, i just see people constantly say ""its bad"" with no real reason for why it is bad. 

Basically my question is like so, we have a bunch of common modules that all packages require (e.g. chai/mocha/typescript). So why is it a bad idea to add it to the root package.json for this library?",Yarn Workspaces why is adding something to the root package.json bad?
378,2018-11-01 17:31:15,0,1,,rickety - minimal typescript rpc framework
379,2018-11-02 16:42:03,0,1,"Hello all, I've build a boilerplate to start some new projects easily for me with node, graphql, typescript and react.

As this is the first application in this kind of stack for me I want some feedback especially for the Typescript part.

Maybe there are some setup things that can be made easier or something.
Also I don't know how to use types for these resolvers (you can see them in `server/src/modules/user/`

So if you have any suggestions, feedback, something that is shitty, please let me know :)
And please tell me how to properly type EVERYTHING in the server part.
Thanks in advance.

The repo is [here](https://github.com/mstruebing/graphql-react-node-boilderplate)",Feedback on my first Typescript Prototype
380,2018-11-02 16:54:11,5,1,"Hello all, I've build a boilerplate to start some new projects easily for me with node, graphql, typescript and react.

As this is the first application of this kind of stack for me I want some feedback especially for the Typescript part.

Maybe there are some setup things that can be made easier or something.
Also, I don't know how to use types for these resolvers (you can see them in `server/src/modules/user/`

So if you have any suggestions, feedback, something that is shitty, please let me know :)
And please tell me how to properly type EVERYTHING in the server part.
Thanks in advance.

The repo is [here](https://github.com/mstruebing/graphql-react-node-boilderplate)",Feedback on personal boilerplate
381,2018-11-04 02:26:13,0,1,"[https://github.com/danielpa9708/typescript-test-utils](https://github.com/danielpa9708/typescript-test-utils)

I know there is a dtslint, but this is different since it only relies on typescript, no extra tools, no tslint.","Hello, made a package for testing types"
382,2018-11-04 09:16:24,6,1,"Hello everyone!

Recently, a friend and I have created a server on Discord for anything to do with TypeScript. This server has a custom bot (written in TypeScript) which is open source. We have help channels, and we have members that can help with basically anything to do with TypeScript.

&amp;#x200B;

Invite: [https://discord.gg/rqAeTR5](https://discord.gg/rqAeTR5)

GitHub: [https://github.com/typescript-community](https://github.com/typescript-community)

&amp;#x200B;

Looking forward to seeing you there!

\- Haxified",TypeScript Community Discord Server
383,2018-11-04 10:31:21,2,1,"Hello everyone!

Recently, a friend and I have created a server on Discord for anything to do with TypeScript. This server has a custom bot (written in TypeScript) which is open source. We have help channels, and we have members that can help with basically anything to do with TypeScript.

Invite: [https://discord.gg/rqAeTR5](https://discord.gg/rqAeTR5)

GitHub: [https://github.com/typescript-community](https://github.com/typescript-community)

Looking forward to seeing you there!

\- Haxified",TypeScript Community Discord Server
384,2018-11-04 18:51:02,8,1,"Hi folks, I'm a bit new in typescript and one of the things that makes me a little confused are type/interface declarations. I'm writing  a lib that currently has a few classes and a few more types/interfaces declarations. I use these types/interfaces throughout most of the code, initially I would leave them in a single file in a `types` folder, then I would import them wherever needed, now I have a single `models.d.ts` inside the `types` folder that declares a `namespace types`, inside this namespace I export all my types/interfaces that I'm using throughout the code. Is this approach OK or is there a better way for organising types and interfaces definitions?",Where do I define my type/interfaces
385,2018-11-08 12:45:10,2,1,"Im trying to apply the following list of reactstrap dropdowns by toggling the isOpen inside each Object array in typescript. I receive a object from redux that has the following structure, Object.InnerObject.Array[isOpen,isOpen,...] Im trying to trigger the toggle in that array but typescript is restricting me from doing the following. I have the following object in state:

~~~~
totalWorkload: {
      userId: 'd3d4',
      cost: 3,
      options: [
        {
          optionTitle: 'dedew',
          optionDescription: 'fewfw',
          options: [],
          isOpen: false,
          selectedOption: ''
        }
      ]
    }
~~~~

Im trying to toggle the isOpen in the options array in the following component:

~~~~
export const Options = props =&gt; (
  &lt;div&gt;
    {console.log(typeof props.totalWorkloadOptions.isOpen)}
    {console.log(typeof props.toggleDropDown}
    &lt;Dropdown isOpen={props.totalWorkloadOptions.isOpen} toggle={() =&gt; props.toggleDropDown(props.totalWorkloadOptions.optionTitle)}&gt;
      &lt;DropdownToggle caret&gt;{props.totalWorkloadOptions.optionTitle}&lt;/DropdownToggle&gt;
      &lt;DropdownMenu&gt;
        {props.totalWorkloadOptions.options.map(op =&gt; (
          // tslint:disable-next-line:no-invalid-this
          // tslint:disable-next-line:jsx-no-lambda
          &lt;DropdownItem key={op} data-key={op} onClick={() =&gt; props.appendChoiceList(props.totalWorkloadOptions.optionTitle, op)}&gt;
            {op}
          &lt;/DropdownItem&gt;
        ))}
      &lt;/DropdownMenu&gt;
      &lt;strong&gt; {props.totalWorkloadOptions.optionDescription} &lt;/strong&gt;
    &lt;/Dropdown&gt;
    &lt;br /&gt;
  &lt;/div&gt;
);
~~~~

The problem is when I get to here I cant actually set the state of the passed dropdown isOpen:

~~~~
toggleDropDown = optionTitle =&gt; {
      console.log(""TITLE:"" + optionTitle);
      const options = this.state.totalWorkload.options.map(item =&gt; {
        if (item.optionTitle === optionTitle) {
          this.setState({ ...item, isOpen: !item.isOpen })
        } else {
          return item;
        }
      });
      return { options };
    };
~~~~","ReactJs and Typescript, how to change the state of a variable inside an Object when using TSX"
386,2018-11-08 16:51:26,4,1,"In my current project, I'm using typescript 3 with yarn workspaces.

I have multiple workspaces (@project1/web, @project1/server, @project1/mobile, @project1/shared)

In my shared package, I have a index.ts that will export everything inside like so 

    export * from ""./test.ts"";
    export * from ""./test2.ts"";
    ...

And from my other packages, I import them via 

    import {...} from ""@project1/shared"";

Inside my shared package, I export multiple thing: GraphQL query, error message, validations, constants...

And so, this export is starting to get pretty large, and to be sure to prevent naming conflict I have to create long functions / variables name.

I was hoping to find a way to do a sort of partial import based on the path like so

    import {...} from ""@project1/shared/errorMsg/user"";
    import {...} from ""@project1/shared/GraphQL/post"";

A little bit like Material-UI does with their import Button from '@material-ui/core/Button' 

I looked at their github, and I saw they are not using typescript, and even there, I simply have no idea how they managed to do it.

I'm looking for a way to do the exact same thing but with typescript.

Any suggestions or even repo github that managed to do it will be greatly appreciated.

Thank you

&amp;#x200B;",Yarn workspace with a large shared package
387,2018-11-12 10:29:40,3,1,"I have to convert my existing code javascript nodejs to typescript, I am planning to start new features in typescript and will do migration on file / module one at a time so that it doesn't effect the production. But I am stuck need some good tutorial which can help me in migration and adding typescript support.
My existing code  have a file structure like

 app
│   ├── controllers
│   ├── helpers
│   ├── message
│   ├── middleware
│   ├── models
│   ├── routes
│   ├── services
│   └── tests
├── bootstrap.min.css
├── bower.json
├── config
│   ├── client-applications
│   ├── config.js
│   ├── env
│   ├── express.js
│   ├── logger.js
│   ├── passport.js
│   ├── strategies
├── package.json
├── package-lock.json
├── server.js
├── test.js
├── TODO
├── tsconfig.json
└── webpack.config.js

But learning ts give a new directory structure for models and a new understanding to compile ts to a dist directory, Its quite confusing, need a good understanding and guidance on how should I proceed here 
  ",Help Converting big NodeJs ExpressJs Project to typescript
388,2018-11-13 00:46:37,8,1,"Hello,

I like three.js and I'm trying out typescript. I've been using [three.d.ts by kontan](https://github.com/kontan/three.d.ts). I had to change `bool` to `boolean` and change some of the inheritances to get it working, but now I'm facing a different problem.

`BufferGeometryAttribute` is an interface, not a class, so when I try something like

`geometry.addAttribute('position', new THREE.BufferGeometryAttribute(positions, 3));`

the compiler hates it. Does anyone know what an appropriate workaround would be? Or better yet, are there more recent, well-maintained three.js bindings?",What is the best way to use three.js with typescript?
389,2018-11-13 08:07:20,33,1,"Hello,

I started using typescript for my newest project to validate if I should use it in my next big project. After writing my backend server completely in typescript, I was totally amazed how well this works. But when I started to write my frontend, I had more issues than there should be. 

First it was already a pain to setup a nuxt 2 + typescript project and second, most of the intellisense does not work. Also some vue element definitions were missing and I needed to define theme by myself. After some time, I just started to use `any` everywhere, because writing vue/nuxt definitions completely by myself would be too much for this small project. 

So what are your expiriences with typescript + nuxt? Did I something wrong? At current stage, I would not use typescript again for frontend, only for backend.

",TypeScript + Nuxt
390,2018-11-14 14:55:12,23,1,"[https://github.com/danijelh/aspnetcore-vue-typescript-template](https://github.com/danijelh/aspnetcore-vue-typescript-template)

I made this template( Nuget ) showing how to use **.NET Core MVC** with **Vue** as a multi-page application. You can build multiple ""mini spa's"" to enhance UI or simply use plain **.cshtml** and Razor if you don't need Vue on a particular page.

&amp;#x200B;

I posted this to the [Dotnet](https://www.reddit.com/r/dotnet/comments/9werl9/multipage_net_core_with_vuejs_typescript_vuex_vue/) subreddit a while ago and since it proved to be useful am posting here as well.","Multi-page .NET Core with Vue.js, Typescript, Vuex, Vue router, Bulma, Sass and Webpack 4"
391,2018-11-16 20:21:19,5,1,"This [post](https://www.reddit.com/r/java/comments/9xesgp/is_typescript_on_nodejs_good_enough_for_java/) got a rather cold reception on [r/java](https://www.reddit.com/r/java)

I bet [u/efunction](https://www.reddit.com/u/efunction) would get some responses biased in the other direction from here.

Thoughts?",Is Typescript on Node.js good enough for Java developers?
392,2018-11-17 23:09:10,9,1,"I'm a js/react developer by trade, and i thought it would be a good idea to get into typescript. however, i don't understand which tools are needed for building and transpiling my code. the ts documentation uses awesome-typescript-loader to transpile the code. the webpack documentation uses ts-loader. then, some blog posts/tutorials refer to babel and particularly babel 7 which makes like easier by integrating ts support out of the box. but why would i use babel if typescript transpiles to es5? if i choose to use babel, does it mean i'll be running my code through two transpilers?",overwhelmed by all the build/transpiling options
393,2018-11-19 17:33:12,1,1,"The following class code isn't narrowing [like I expect](https://www.typescriptlang.org/docs/handbook/advanced-types.html):

      lineItemIsUser = (
        lineItem: ListRenderItemInfo&lt;MinimalUserInfo | Group&gt;
      ): lineItem is ListRenderItemInfo&lt;MinimalUserInfo&gt; =&gt;
        !!(lineItem.item as MinimalUserInfo).FirstName;
    
      renderListItem = (lineItem: ListRenderItemInfo&lt;MinimalUserInfo | Group&gt;) =&gt; {
        if (this.lineItemIsUser(lineItem)) {
          return &lt;NearbyUserCard user={lineItem.item} /&gt;;
        } else {
          return &lt;GroupCard item={lineItem.item as Group} /&gt;;
        }
      };

React defines:

    interface ListRenderItemInfo&lt;ItemT&gt; {
        item: ItemT;
    
        index: number;
    
        separators: {
            highlight: () =&gt; void;
            unhighlight: () =&gt; void;
            updateProps: (select: ""leading"" | ""trailing"", newProps: any) =&gt; void;
        };
    }

without `lineItem.item as Group`, the Group Card complains that it doesn't know it's a group.

Should I expect to be able to use a type guard on a generic and have the generic inferred?",User definined type guards on generic type?
394,2018-11-20 06:37:05,6,1,,Package to generate typescript interfaces from javascript objects
395,2018-11-20 22:22:39,21,1,,Type utilities for typescript
396,2018-11-22 16:54:46,4,1,"Apologies for the newbie question. I'm currently learning typescript to perform actions when a new document is submitted to my firebase cloud firestore. Id like to create a map with the string as the key, and the value as an array of either a string or a number. Is this possible with the implementation given above? Or is there another way I can achieve this? I don't want to use a tuple type since I will not have a fixed dataset","Is Map&lt;string, Array&lt;string|number&gt;&gt; a valid type in TypeScript?"
397,2018-11-23 15:24:01,14,1,"In a Node/Express server, it's common to define a route like this:

    // server.js
    app.get(""/hello"", (req, res) =&gt; {
  return res.send(""Hello, World!"")
})

We define a route ""/hello"" and pass in a anonymous function to execute when the route is accessed. The callback takes in the request object and response object, and calls a ""send"" method on response, sending some text back from the server.

In TypeScript, the abouve would look something like this:

    // server.ts
    app.get(""/hello"", (req:Request, res:Response): Response =&gt; {
  return res.send(""Hello, World!"")
});

This gives me a linter and compiler error: `[ts] 'req' is declared but its value is never read. [6133]`, which is fair enough; I'm totally never reading that value. But it does need to be there in the callback.

Google led me to [this guy's blog](https://www.triplet.fi/blog/typescript-getting-rid-of-error-x-is-declared-but-never-used/), where he suggests using \`{}\` in the function signature:

    app.get(""/hello"", ({}, res:Response): Response =&gt; {
      return res.send(""Hello, World!"")
    });

...which does get rid of the error, but it seems to me I'm destructuring the first parameter, but not pulling any properties from it.

I've seen the tsconfig `noUnusedParameters` flag, but don't want to set this to false for the whole project.

What's the right thing to do here?",Parameters not used in function
398,2018-11-24 01:55:41,0,1,"Just submitted my first Gatsby TypeScript starter: [https://github.com/leachjustin18/gatsby-typescript-boilerplate](https://github.com/leachjustin18/gatsby-typescript-boilerplate)

&amp;#x200B;

Up for suggestions or ways to make it better for all! ",Gatsby TypeScript starter
399,2018-11-26 18:41:13,6,1,"Hey guys, please forgive me if this is the wrong spot, but I've been trying to figure this out for over a day now with no luck. Perhaps my google foo is just bad, but googling around for 'typescript can't find linked module' and other variations seems to be fruitless.

&amp;#x200B;

I've been working with a library from npm that had no typescript definitions. I went a head and wrote my own so I could use it in my project and everything is nice and happy. The thing is I want to re-contribute this back to the library as I'm all for open source, and also having my own \`@types\` folder and including it seems silly when it should be part of it's parent library's source. I also considered just having it be part of 'Definitely Typed' but figured that is the next best option to having it coupled.

&amp;#x200B;

As a result of the above, I forked the project and included the type script definition file and also added it to the project's \`package.json\`. Now then, before submitting a PR, I figure I should make sure that it works properly, so I remove the library from my project's \`package.json\`, and re-install then use \`npm link\` to link my version of the target library. After I run \`tsc\` and suddenly it can't find the module. 

&amp;#x200B;

I've tried instead of  \`npm link\` just straight copying the entire project into the \`node\_modules\` folder, I've tried adding the definition file into my \`.tsconfig\` includes, I've tried crying myself to sleep at night, nothing seems to work. One thing that does work is adding it to the \`@typed\` folder but like I said, I'd rather it be part of the lib, not \`Definitely Typed\`, but I will do that if there is no other option. I'd love to get this working so if anyone has any insight please share it. I'll be available for chat or replies here! 

&amp;#x200B;

Thanks a lot for reading and let me know what other info you might need!",Typescript not working with npm link
400,2018-11-27 09:53:33,6,1,"Hey,
I have been using docker for development of typescript apps for a while. I don’t have any node_modules outside the container except for tslint. This works fine most of the time, but ts (in vscode) complains that a lot of dependencies are not installed, which is reasonable as they’re not located outside the container. 

This problem is getting frustrating and I think I found a way to proxy the tsserver (the “app” that gives type information) to have it run inside rocker instead. Before spending a lot of time on this, is there anyone else with the same problem? Do you have a solution? Would you be interested in a vs code extension for this?",TSServer inside docker container
401,2018-11-29 12:22:47,0,1,"Hi I just want to let you know we added frontend( TypeScript ) to our graphqleditor.com service -  it is available right now on demo.graphqleditor.com so you can:

1. import your own schema
2. click typescript
3. click copy and copy it to your ts project

This way you have full intellisense on frontend tou your graphql queries. and you can construct them type safe. You need at least typescript 3.1 to make this work in your project.

Functions are defined as array of props and returners 

This is complicated but you have 100% type safe query, return and response API. 

This is much experimental but works for me! Feel free to ask questions report issues etc. I will post this on GrahphQL subreddit and Javascript subreddits to gather more lang experts",Frontend API generation for GraphQL schema
402,2018-11-30 04:00:52,0,1,"Simple example of a discriminated union: [playground](https://www.typescriptlang.org/play/#src=type%20Foo%20%3D%20%7B%0D%0A%20%20id%3A%20'foo'%0D%0A%20%20foo%3A%20string%0D%0A%7D%0D%0A%0D%0Atype%20Bar%20%3D%20%7B%0D%0A%20%20id%3A%20'bar'%0D%0A%20%20bar%3A%20string%0D%0A%7D%0D%0A%0D%0Atype%20FooBar%20%3D%20Foo%20%7C%20Bar%0D%0A%0D%0Aconst%20foobars%3A%20FooBar%5B%5D%20%3D%20%5B%0D%0A%20%20%7B%20id%3A%20'foo'%2C%20foo%3A%20'foo'%20%7D%2C%0D%0A%20%20%7B%20id%3A%20'bar'%2C%20bar%3A%20'bar'%20%7D%0D%0A%5D%0D%0A%0D%0Afor%20(const%20el%20of%20foobars)%20%7B%0D%0A%20%20if%20(el.id%20%3D%3D%3D%20'foo')%20%7B%0D%0A%20%20%20%20console.log('foo'%2C%20el.foo)%0D%0A%20%20%7D%0D%0A%0D%0A%20%20if%20(el.id%20%3D%3D%3D%20'bar')%20%7B%0D%0A%20%20%20%20console.log('bar'%2C%20el.bar)%0D%0A%20%20%7D%0D%0A%7D)

    type Foo = {
      id: 'foo'
      foo: string
    }
    
    type Bar = {
      id: 'bar'
      bar: string
    }
    
    type FooBar = Foo | Bar
    
    const foobars: FooBar[] = [
      { id: 'foo', foo: 'foo' },
      { id: 'bar', bar: 'bar' }
    ]
    
    for (const el of foobars) {
      if (el.id === 'foo') {
        console.log('foo', el.foo)
      }
    
      if (el.id === 'bar') {
        console.log('bar', el.bar)
      }
    }

Now is it possible to have the discriminator `id` nested in another object? [playground](https://www.typescriptlang.org/play/#src=type%20Foo%20%3D%20%7B%0D%0A%20%20nested%3A%20%7B%20id%3A%20'foo'%20%7D%2C%0D%0A%20%20foo%3A%20string%0D%0A%7D%0D%0A%0D%0Atype%20Bar%20%3D%20%7B%0D%0A%20%20nested%3A%20%7B%20id%3A%20'bar'%20%7D%2C%0D%0A%20%20bar%3A%20string%0D%0A%7D%0D%0A%0D%0Atype%20FooBar%20%3D%20Foo%20%7C%20Bar%0D%0A%0D%0Aconst%20foobars%3A%20FooBar%5B%5D%20%3D%20%5B%0D%0A%20%20%7B%20nested%3A%20%7B%20id%3A%20'foo'%20%7D%2C%20foo%3A%20'foo'%20%7D%2C%0D%0A%20%20%7B%20nested%3A%20%7B%20id%3A%20'bar'%20%7D%2C%20bar%3A%20'bar'%20%7D%0D%0A%5D%0D%0A%0D%0Afor%20(const%20el%20of%20foobars)%20%7B%0D%0A%20%20if%20(el.nested.id%20%3D%3D%3D%20'foo')%20%7B%0D%0A%20%20%20%20console.log('foo'%2C%20el.foo)%0D%0A%20%20%7D%0D%0A%0D%0A%20%20if%20(el.nested.id%20%3D%3D%3D%20'bar')%20%7B%0D%0A%20%20%20%20console.log('bar'%2C%20el.bar)%0D%0A%20%20%7D%0D%0A%7D)

    type Foo = {
      nested: { id: 'foo' },
      foo: string
    }
    
    type Bar = {
      nested: { id: 'bar' },
      bar: string
    }
    
    type FooBar = Foo | Bar
    
    const foobars: FooBar[] = [
      { nested: { id: 'foo' }, foo: 'foo' },
      { nested: { id: 'bar' }, bar: 'bar' }
    ]
    
    for (const el of foobars) {
      if (el.nested.id === 'foo') {
        console.log('foo', el.foo)
      }
    
      if (el.nested.id === 'bar') {
        console.log('bar', el.bar)
      }
    }

Why doesn't this work?",Is it possible to use a nested property as a discriminator?
403,2018-11-30 12:27:52,0,1,,Canvas node graph in typescript
404,2018-11-30 22:06:44,12,1,"Hey everyone, I am trying to use sequelize with typescript, on client side.  Here is my setup:

In my html:

 

&lt;script src=""node\_modules/sequelize/lib/sequelize.js""&gt;&lt;/script&gt;  
&lt;/head&gt;  
&lt;body&gt;  
 &lt;script id=""commonjs"" src=""dist/src/main.js"" data-main=""/js-browser/main.js""&gt;&lt;/script&gt;-

&amp;#x200B;

In my tsConfig:

&amp;#x200B;

 

{  
 ""compilerOptions"": {  
 ""module"": ""commonjs"",  
 ""moduleResolution"": ""classic"",  
 ""allowSyntheticDefaultImports"": true,  
 ""target"": ""es2015"",  
 ""outDir"": ""dist"",  
 ""rootDir"": ""./""  
  },  
 ""include"": \[  
 ""src/\*\*/\*""  
  \]  
}

&amp;#x200B;

In my package.json:

 

{  
 ""name"": """",  
 ""version"": ""1.0.0"",  
 ""description"": ""Formatting\\r"",  
 ""main"": ""dist/src/ts/main.js"",  
 ""scripts"": {  
   },  
 ""repository"": {  
 ""type"": ""git"",  
 ""url"": """"  
  },  
 ""author"": """",  
 ""license"": ""ISC"",  
 ""homepage"": """",  
 ""dependencies"": {  
 ""@types/sequelize"": ""\^4.27.31"",  
 ""@types/sqlite3"": ""\^3.1.3"",  
 ""commonjs"": ""0.0.1"",  
 ""concurrently"": ""\^3.6.1"",  
 ""http-server"": ""\^0.11.1"",  
 ""node"": ""\^10.12.0"",  
 ""sequelize"": ""\^4.41.2"",  
 ""sqlite3"": ""\^4.0.4"",  
 ""typescript"": ""\^3.1.6""  
  },  
 ""devDependencies"": {}  
}  
I am trying to use sequelize however when ever i try to run the server, and open it in my browser(google chrome), when i check console it gives me this error:

sequelize.js:3 Uncaught ReferenceError: require is not defined

at sequelize.js:3

&amp;#x200B;

I have tried systemjs, and now commonjs.

&amp;#x200B;

I dont understand what i am doing wrong. 

&amp;#x200B;

Any ideas how to fix this?

&amp;#x200B;

&amp;#x200B;

&amp;#x200B;

Thanks for your time!

&amp;#x200B;",Sequelize and Typescript
405,2018-11-30 22:24:37,3,1,"Hey all, I've recently attempted moving from JS to TS as someone that has never worked with static typing before, and I'm getting a little bogged down on the advanced types sections on the typescript site, and I need some help defining some types for a small project I'm on.  


I have a regular JS array that stores objects, whose key is the string value of an enum, and whose value is another object:

Pseudo example:

    enum Directions {
        FROM_LEFT = 'fromLeft',
        FROM_RIGHT = 'fromRight',
        TO_LEFT = 'toLeft',
        TO_RIGHT = 'toRight'
    };
    
    const data: any = [
        {
            fromLeft: { entering: 'keyOne', exiting: 'keyTwo'}
        },
        {
            fromRight: { entering: 'keyOne', exiting: 'keyTwo'}
        },
        ..
    ]
    
    // use:
    const directionKey = Directions.FROM_LEFT // 'fromLeft'
    const dataObject: any = data.find((obj: any) =&gt; obj[directionKey]);
    const { entering, keyTwo } = dataObject[directionKey] as any;

I've had to use any in a few spots here where I'd rather not.   
My original idea was for something of:

    type animationData = {[key in Directions]: { keyOne: string, keyTwo: string}};
    const data: animationData[] = [ ... ]

But this doesn't produce what's needed, which also leads me to not knowing where to use 

    key | key in T | key in keyof T | keyof T | keyof typeof T

Could anyone share some light on this?  
Cheers!",Nested array of object help. When to use key/key in/keyof/keyof typeof?
406,2018-11-30 23:03:29,4,1,,React with typescript can't target anything newer than ES5
407,2018-12-04 08:17:57,6,1,"Hi guys,

So I've just started learning typescript, and have stumbled upon an implementation that I'd like - but can't quite figure out how to do it.

In essence, I'd like an exported class, that is typed, and has methods on it that I can use via dot notation, without having to instantiate a new Object of that class each time I'd like to access the method inside of a TSX file/render method. An object will be passed through as a prop from another file on a component, and another component will be conditionally rendered based off of what the brand of the car prop is. This is to keep methods close to the code that they're appropriate for. Please note, I come from a Java background, so maybe I'm misunderstanding.

Basically what I'm after is a class like below

```export Car class {
        brand: CarBrand;

       isMercedes() {
       return this.brand === CarBrand.Mercedes
       }
}```

I would then like to import it, and use the method as below (as opposed to instantiating a new class)

```
React file:
import {Car} from './Car'

export default Example = () =&gt; {

 type Props = {
car: Car
 }

 render() {
 { this.props.car.IsMercedes() &amp;&amp; (
      &lt;ExampleComponent/&gt;
 )}
 }
}


        ",Creating methods on a typed class and accessing these via a prop
408,2018-12-04 18:42:25,26,1,"Hey folks,

Which backend do you use for typescript client apps?

I'm especially interested in typedefs generation (ideal would be like-in-graphql, but for REST).
Looked into `swagger-node`, but it does not look appealing.

What do you think, maybe writing my own server code generation from swagger schema is a valid choice?
",Node backend for typescript apps
409,2018-12-05 05:37:52,7,1,"As the title says, my boss asks me to give him a list of conferences or courses i want to take. My background is  a java dev moving to a full stack using typescript,  nodejs and looking for conferences, courses or material to learn. Would appreciate any help. Thanks!",Need some recommendation for Conference or Courses
410,2018-12-05 06:01:24,2,1,"As the title says, my boss asks me to give him a list of conferences or courses i want to take. My background is  a java dev moving to a full stack using typescript,  nodejs and looking for conferences, courses or material to learn. Would appreciate any help. Thanks!",Need some recommendation for Conference or Courses
411,2018-12-09 22:06:55,15,1,"I’m primarily a php developer (it’s ok if you want to banish me from your life forever) but that’s just what my job requires. I can write JavaScript and jquery comfortably but I want to move into more modern JavaScript libraries, but I’ve no idea where to start.

My first question is, are all of the top of the list frameworks (angular, node, react) written on a certain language I should learn first?

For example, are they all based on typescript or am I completely wrong? Can someone explain it?

My second question is, which order should I learn them and what should I learn first?

Is it better to learn some first (as they are used in other languages, such as learn angular first because it’s used in node or something like that?)

Many massive appreciation for anyone who can help me get out of this rut and give me a good explanation on the modern JavaScript world!",Which framework should I learn first?
412,2018-12-10 07:04:16,1,1,,"blog - Tuple types, mapped types and some type-level programming in typescript"
413,2018-12-11 10:14:24,5,1,,Advanced typescript tutorial - conditional types
414,2018-12-15 13:26:51,15,1,"In the file called 'app.config.js', in the project's main directory, I have the following:

    // app.config.js
    module.exports = {
      app: {
        name: 'generated-app'
      },
      database: {}
    };

If I try to use `import * as app from '../../app.config';`, the console throws an error when running unit tests or starting the application saying ""error TS7016: Could not find a declaration file for module '../../app.config'. &lt;app.config file location&gt; implicitly has an 'any' type"". Googling the error provides some answers on writing .d.ts files in a /typings directory, so I write `declare module 'app.config';` in `typings/app.config.d.ts`, add `""typeRoots"": [""./typings"", ""./node_modules/@types""]` to tsconfig.json along with `""./typings""` in the `""exclude""` entry. All to no avail. Please help me out here /r/typescript.","Having trouble getting past the ""could not find a declaration file for module..."" error for a module I've written myself."
415,2018-12-17 13:46:35,1,1,"Hi,

I've written a typescript utility to create full typed object diffs using mapped types.

Im looking for feedback :)

&amp;#x200B;

[https://www.npmjs.com/package/change-checker](https://www.npmjs.com/package/change-checker)",change-checker: Create full typed diffs using Typescript
416,2018-12-17 23:43:50,0,1,"Hi!

&amp;#x200B;

I use visual studio code and in those articles:

=&gt; [https://dev.to/ben/visual-studio-code-can-now-convert-your-long-chains-of-promisethens-into-asyncawait-automagically-1b1b](https://dev.to/ben/visual-studio-code-can-now-convert-your-long-chains-of-promisethens-into-asyncawait-automagically-1b1b)

=&gt; [https://umaar.com/dev-tips/182-typescript-async-await/](https://umaar.com/dev-tips/182-typescript-async-await/)

&amp;#x200B;

=&gt;[https://code.visualstudio.com/updates/v1\_28](https://code.visualstudio.com/updates/v1_28)

&amp;#x200B;

they say there is a feature which is vscode can convert promises to async await itself but I couldn't make it for my .js files. Can you help me?

&amp;#x200B;

Have a nice day!",Promises to async/await
417,2018-12-18 18:32:49,0,1,"I got pretty deep into trying to figure out why my nvim plugin stopped importing stuff in my typescript project. I got down to the bare requests to the TSServer and they are indeed coming back blank when I put them in manually.

`{ ""seq"": 0, ""type"": ""request"", ""command"": ""open"", ""arguments"": { ""file"": ""/frontend/src/components/Layout/drawerContents.tsx"" } } { ""seq"": 1, ""type"": ""request"", ""command"": ""quickinfo"", ""arguments"": { ""file"": ""/frontend/src/components/Layout/drawerContents.tsx"", ""line"": 21, ""offset"": 12 } } { ""seq"": 2, ""type"": ""request"", ""command"": ""semanticDiagnosticsSync"", ""arguments"": { ""file"": ""/frontend/src/components/Layout/drawerContents.tsx"" } } { ""seq"": 3, ""type"": ""request"", ""command"": ""getCodeFixes"", ""arguments"": { ""file"": ""/frontend/src/components/Layout/drawerContents.tsx"", ""startLine"": 25, ""endLine"": 25, ""startOffset"": 46, ""endOffset"": 46, ""errorCodes"": [] } }`

&amp;#x200B;

these requests all work except for the last one. There is no error, just a blank \`body\` for no code fixes. IDK where to look next as the TSServer is not well documented. I can't seem to find many issues related to this either.

It sometimes works for some symbols, but not most of the time it fails. :( 

Any ideas on where the problem could lie? do I need to have a super specific way of structuring the modules so that they can be found? Right now I am just making a react component per file and then \`export default Component\` after its declaration",How can I debug my problems with TSServer?
418,2018-12-20 03:17:27,4,1,"I'm planning on making an application where users hand draw mostly free-form shapes and text on the screen that they can manipulate after the fact, save the work to a file to load later, and export the document to a pdf or something. I was going to use canvas as it's something I'm familiar with but decided svg's would be a better fit.

So yeah suggest a library and say why you like it c:

Also typescript support would be real nice but not a must have",Looking for SVG library recommendations
419,2018-12-20 13:29:32,4,1,"I was playing around with typing Redux action creators and one thing let to another until I finally managed to have proper inference of all string literals inside objects. Now, you don't need to know anything about Redux to help with this, the example I will provide is just plain TypeScript, I'm hoping that there's someone with deeper knowledge of the compiler internals that can explain this phenomenon. My intuition is that is has something to do with inference order/priority, but I can be completely off.

[Playground link](http://www.typescriptlang.org/play/#src=type%20NoInfer%3CT%3E%20%3D%20T%20%26%20%7B%20%5BK%20in%20keyof%20T%5D%3A%20T%5BK%5D%20%7D%0D%0A%0D%0Aexport%20const%20widens%20%3D%0D%0A%20%20%3CT%20extends%20string%2C%20U%20extends%20Record%3Cstring%2C%20T%3E%3E(o%3A%20U)%3A%20U%20%3D%3E%20o%0D%0A%0D%0Aexport%20const%20doesNotWiden%20%3D%0D%0A%20%20%3CT%20extends%20string%2C%20U%20extends%20Record%3Cstring%2C%20T%3E%3E(o%3A%20U)%3A%20NoInfer%3CU%3E%20%3D%3E%20o%0D%0A%0D%0Aconst%20a%20%3D%20widens(%7B%20prop%3A%20'This%20will%20turn%20into%20a%20string'%20%7D)%0D%0A%0D%0Aconst%20b%20%3D%20doesNotWiden(%7B%20prop%3A%20'This%20will%20stay%20a%20string%20literal'%20%7D)%0D%0A%0D%0Aconst%20c%20%3D%20()%20%3D%3E%20(%7B%20prop%3A%20a.prop%20%7D)%0D%0A%0D%0Aconst%20d%20%3D%20()%20%3D%3E%20(%7B%20prop%3A%20b.prop%20%7D)%0D%0A%0D%0A%2F%2F%20Inspect%20the%20types%20of%20c%20and%20d)",Strange generic inference for string literals
420,2018-12-21 09:01:11,4,1,"Hi all,
I am working on proof of concept, to typecheck JS code using JSDoc and TypeScript.

I am facing following issues..
1. Couldn't find solution in JSDoc for readonly object property
2. TSC doesn't respect @private

Here is PoC repo https://github.com/goldenratio/typescript-js-demo, incase If you want to look into.

I marked the places with todo:, where I expect TSC to throw error.
Any help is appreciated.
",Type checking JS with TypeScript
421,2018-12-21 11:27:53,8,1,"Hi All, I hope this isn't a common questing on /r/typescript, if so, I'm sorry.

&amp;#x200B;

I do a lot of javascript coding using Vue.js. To learn new things, I usually go to laracast.com. Unfortunately Laracast doesn't feature a video course on using typescript. Is there any similar video course you guys can recommend to learn typescript as a typescript beginner?

&amp;#x200B;

Thanks in advance!",Never used TypeScript. Looking for a video tutorial to get me up to speed.
422,2018-12-21 16:31:11,0,1,,GitHub - LeDDGroup/typescript-conditional-types: Helpers for typescript generic types
423,2018-12-22 20:58:58,4,1,"I'm the author of Polar:

https://getpolarized.io/

I'm more of a full-stack dev with an emphasis in distributed systems - so not a frontend guy.

I'd like to implement a plugin API for Polar so that people can implement additional functionality without it being required in the core.

The problem is that webpack/ typescript, mangle the symbols on compilation.  

I think I could keep the CSS class names though.  

In python and Java you don't really have to worry about this as the symbols aren't mangled and the code isn't recompiled / retargeted (except at the bytecode level).

Thoughts?",How would you implement a plugin API when symbols and CSS classnames become mangled in webpack and other tools?
424,2018-12-23 21:51:30,4,1,"Hey guys,

I've just started learning typescript and would really appreciate some feedback on a really simple `Logger` class I'm making to try and learn more. All it does is print a message to a screen using prefixes/coloring.

I feel like my code is very cluttered and ugly compared to some of the established TypeScript codebases I've read through. I'm not sure if my usage of `interface`/`type` is clean or if I'm using them well. Any feedback would be awesome:

    interface LoggerConfig {
      prefix?: string;
      prefixColor?: TextColor.White;
      displayConsole?: boolean;
      outputExternal?: boolean;
    }

    type LogFn = (msg: string) =&gt; void;

    interface Log {
      config: LoggerConfig;
      log: (msg: string, logColor: TextColor, override?: LoggerConfig) =&gt; void;
      info: LogFn;
      warn: LogFn;
      error: LogFn;
    }

    class Logger implements Log {
      config: LoggerConfig = {
        prefix: 'console :: ',
        prefixColor: TextColor.Green,
        displayConsole: false,
        outputExternal: false,
      };

      constructor(userConfig: LoggerConfig = {}) {
        this.config = {...this.config, ...userConfig};
      }

      log(msg: string, logColor: TextColor, override?: LoggerConfig) {
        const config = override ? {...this.config, ...override} : this.config;
        const {displayConsole, outputExternal, prefix, prefixColor} = config;

        if (displayConsole) {
          showConsole();
        }

        if (outputExternal) {
          external.printToConsole(`${prefix} ${msg}`);
        }

        print(prefixColor + prefix + logColor + ' ' + msg);
      }

      info(msg: string) {
        this.log(msg, TextColor.White);
      }

      warn(msg: string) {
        this.log(msg, TextColor.Yellow, {displayConsole: true});
      }

      error(msg: string) {
        this.log(msg, TextColor.Red, {displayConsole: true, outputExternal: true});
      }
    }

    const logger = new Logger({prefix: 'testLogger :: '})

Thanks all.",basic logger class feedback - transitioning to TypeScript
425,2018-12-28 05:15:41,2,1,,An indexeddb wrapper - JsStore made completely in typescript
426,2018-12-28 07:26:49,1,1,"Hello, can anyone point me how to import a part of module using  typescript dynamic imports? I am creating a cross platform app, and need  to import a module only if the env is electron

```
// import { ipcRenderer } from 'electron' -&gt; the module I have to dynamically import if(isElectron()){
    await import('electron/ipcRenderer') // have tried this, doesnt work
}
```",Dynamic import submodules?
427,2018-12-28 21:59:29,17,1,"Hey fellow programmers.

I work at a game dev agency. Up to now I have done only web based (and a few hybrid swift, kotlin) projects. So 90% of my time I’m programming typescript or javascript. I have been doing web dev for about 5 years and I think I have very good knowledge of js and ts.

Next year, I want to learn C#, so I might have a shot at joining our unity3d projects.

Can any C# devs tell me how similar the languages are, and if it’s easy to transition - how many hours, effort?",How similar is TS to C#?
428,2018-12-29 01:39:22,14,1,"I'm new to TypeScript and Angular.  If you were building something like the canonical pet store app, how would you enforce the structure of an ""order"" object, in typescript 3.1?  In java, I would just build the class and instantiate the object with instance member values, unless I had different types of orders with similar attributes.  I cannot use the ""new"" operator with a typescript interface so I'm guessing I have to create a class that implements the interface at some point.  A quick google search did not give me much for understanding the best practices for defining my models in typescript.  I started with classes but it feels odd defining classes with properties and types but no values.  ","Should my domain/model types be defined as interfaces, rather than classes?"
429,2018-12-29 19:38:47,8,1,"I'm in the process of integrating the use of typescript for a single page web application.

I typically write a lot of C#, so when I structure my folder and files:

 \- namespaces reflect the location of a file (e.g. inteface 'IModel' in namespace 'Project.Models' would be at a filepath like 'Project/Models/IModel.cs')

 \- a single file represents a single declaration (e.g. only one class/interface/etc defined per file)

 

It seems that for some particular version of typescript, the convention of referencing different modules/namespaces changed and  depending upon which module type you choose for your project (e.g. amd, commonjs, system, umd ...) this could affect how you write your code.

&amp;#x200B;

I've read through various sites and blogs that describe setting up a project, but of all the literature I've come across, none of the scenarios presented have been very helpful -- they usually cram several different classes, interfaces, standalone functions all in a single typescript file. This doesn't seem like a good approach, especially if working on a project that multiple people may be working on. Is this the generally accepted way to organize typescript files?

&amp;#x200B;

Could anyone give me some pointers on typescript project organization or a well-organized typescript project?",TypeScript Project Organization
430,2018-12-29 20:09:45,0,1,"IF anyone has played X4 Foundations, (its a space sim with lots of modding support) - I got carried away with creating a ""ware generator"" - and dealing with X4's XML stuff.  So I got to learn a LOT about xfering JSON to XML and back, used xml2js quite a bit for that, and to wire everything up to their xml system it took me about 10 days.  Most of it was me creating classes with Typescript, as it honestly just helped me learn their xml schemas better (since they dont release a full schema of their objects anyway)

Some things I learned along the way:

1. You can use a library to convert a JSON object to a Typescript type, so if you convert an XML object to a JSON object you can get some of that IDE auto completion goodness when working with deeply nested and hard to remember objects.
2. the [pkg](https://www.npmjs.com/package/pkg) library lets you convert your CLI to a windows .exe file (and mac/linux binary FWIW) - which is great for making a CLI tool that is focused on a windows platform game.
3. [metro-memory-fs](https://github.com/facebook/metro/tree/master/packages/metro-memory-fs) is THE absolute best at mocking filesystems, I couldn't even get other mocking fs libs to work with windows!
4. Node has come a very long way with windows support (I generally code on a mac) - even without using the windows subsystem for linux
5. Typescript's module alias mapping will create outputs of files that still map to aliases, so if youre not using something like webpack (which I'm not because this is a CLI tool) - then dont bother!
 1. aside: I did find a library that let you run some require overload but it didnt work with PKG
6. node's ZLIB implementation is painlessly easy to use (a few lines of code to ungz files)
7. Event Streams are still not what I thought, and I still don't understand them
8. I've been using promises for years, and I still get surprised by their behavior.  Seems like they're very eager to evaluate, even before calling them. I guess that's on purpose.
9. XML is evil.. (not really, but...)
10. the .exe file this generates is almost 30mb, not surprising!
11. I could have written this lib in a lot less code if I didn't use typescript and I didn't write unit tests.
Well, that's stuff I learned which I feel like I've learned the promise thing before but forgot it again haha.

Feel free to browse my most recent labor of love (ok that sounds cheesy but lets keep it) here: https://github.com/MattMcFarland/waregen",some thoughts on using node.js for creating a modding tool for a windows video game called X4 Foundations
431,2018-12-30 09:01:12,33,1,"I've implemented async / await, object rest / spread and react jsx in v1.0.0-alpha.16.
I've also made installation faster and easier for macos / linux-x86_64.

Project link: https://github.com/swc-project/swc
Documentation: https://swc-project.github.io/

I'm currently working on documentation / typescript support.",swc: Super-fast alternative for babel written in rust
432,2018-12-31 18:15:00,14,1,"Hi, i'm learning typescript for use with react. I'd like to use settings which disallow the ""any type"" altogether from my project. Unfortunately i found out that this code compiles even with the --strict compiler flag. Is it possible to configure typescript so that this it does nag about the any type creeping in from react typings?

    import * as React from 'react';

    class Hello extends React.Component {
      clicked(evnt: React.BaseSyntheticEvent) {
        const anytype = evnt.target.this.should.not.compile;
        console.log(anytype);
      }
    
      render() {
        return (
          &lt;div&gt;
            &lt;input type=""range"" onChange={this.clicked}&gt;button&lt;/input&gt;
          &lt;/div&gt;
        )
      }
    }

Installing react, react-dom, typescript and @types/react and running this with ""npx tsc --strict --jsx react file.tsx"". It seems to compile. Looking at the react typings, it looks like this is because BaseSyntheticEvent has property ""target"" typed as any.",Disallow any type completely
433,2019-01-02 04:28:20,0,1,,Webpack4 setup for typescript - The Basics - Part 3.2 - The novice programmer
434,2019-01-03 19:03:57,7,1,"I have a question about the usage of interfaces in typescript.

In most languages and in a generic definition interfaces are just defining the access of data by ensure methods (or maybe properties) existing.

In Typescript you can use interfaces directly to instantiate a new object. Is this the best and modern/up-to-date usage or should interfaces used like in most other languages and what they're by definition?",Interface usage in Typescript
435,2019-01-05 06:40:52,3,1,"Wrote a small library with TypeScript, a elm-like framework built with RxJS and snabbdom

&amp;#x200B;

[https://github.com/JacobChang/elm-rx](https://github.com/JacobChang/elm-rx)",Elm architecture with typescript
436,2019-01-06 03:12:16,10,1,"Hey all, not sure if this is possible in typescript at all at this points. but what I would like to do would be take a function like this.

    const foo = &lt;T extends Function&gt;(bar: T): something =&gt; { ... };
    
    class Example { ... }
    foo(Example); // something

and change it to something like this

    const foo = &lt;T extends Bar&gt;(baz: T): something =&gt; { ... };
    
    class Example extends Bar { ... }
    class Bar { ... }
    
    foo(Bar); // something
    foo(Example); // something
    foo(Date); // type error

Essentially I've got a function in which I want to take one class derived from `Foo` and another that is derived from `Bar`. This is going to be used in error reporting for a parser I'm working on as part of language server I'm working on. I may just resort to passing in two enums but I'd like to avoid another enum if I can somehow just use the class directly.

&amp;#x200B;

For those currious checkout [/r/kos](https://www.reddit.com/r/kos) and my [github](https://github.com/jonnyboyC/kos-language-server)",Pass Class as parameter that extends another class
437,2019-01-06 15:47:41,9,1,,"Check out my first 'serious' npm package: redux-ts-starter-kit, A typescript fork of redux-starter-kit"
438,2019-01-07 12:25:47,15,1,"I want to write a website to to do some AR thing with the camera. So i am at the very beginning and want to calibrate the camera. I have a chessboard thing already printed etc.

&amp;#x200B;

For the language a decided to use typescript, since it should work very good in the browser etc.

&amp;#x200B;

I do not want a server backend. So everything should run in the browser!

&amp;#x200B;

I am a complete noob and all those weird javascript hacks make my head spin. Its so hard to differentiate between legit parts of the language, libraries and straight up hacks. Seems like all of them are just hacks built ontop each other. I am used to program in java, python, c and all the 'classic' language so the transition to the universe that is sometimes called javascript is very hard. Nothing makes sense! Importing code is sooo easy with every other language. Even C was more easy.

&amp;#x200B;

my work folder looks like this right now:

&amp;#x200B;

`$ tree .`

`.`

`├──` [`buildScript.sh`](https://buildScript.sh)

`├── code.js`

`├── code.ts`

`├── index.html`

`├── opencv.js`

`└── tsconfig.json`

&amp;#x200B;

code.ts is my own code. this is where i want to write my calibration code.

&amp;#x200B;

code.js is autogenerated from the command 'tsc code.ts' . This is the javascript code that typescript is creating.

&amp;#x200B;

tsconfig is a file that 'should' set options for the 'ts to js' translation. But if i change settings here i don't really see a difference in behaviour. How do i debug this?

&amp;#x200B;

opencv.js is a library. I needed to built it myself. It took a week at least but i managed to build all the 'modules' i needed from opencv. In a pure js experiment i could use the cv library but it broke when i tried to use it in my typescript file. So the opencv library works...

I was reading about opencv.d.ts which is a define file? Or something like a header for typescript? Do i need that?! If so, i have some modules in my opencv.js that are not in the 'official' opencv.js library. Can i even use a .d.ts file in this case? Do i have to write it on my own?

&amp;#x200B;

[buildScript.sh](https://buildScript.sh) is just a script . currently it has only this line:

`tsc code.ts`

&amp;#x200B;

Now my problem is:

How do i get all files to work together?

How do i import opencv.js? It is not a typescript library, so there might already be difficulties? All links in google for this are already purple since i read everything i could. But it seems like import is not a basic functionality of javascript/typescript language. All i see is hacks and errors in the stackoverflow results. there seems to be more than five ways to include code depending on many factors. I tried most of them but none worked. For example i tried to include the opencv.js with these lines in my code.ts file: 

&amp;#x200B;

`//import {cv} from ""./opencv"";`  
`//import * as cv from ""./opencv"";`  
`//var cvv: any = require('./opencv');`  
`//import cv from ""./opencv"";`

&amp;#x200B;

My index.html file is written as follows:

&amp;#x200B;

Its pretty basic and only has a div to show a live camera feed from the webcam and below that are two buttons. one to take a photo (newest photo is shon in a div) and one to start a calibration (which isn't implemented yet).

&amp;#x200B;

`&lt;!DOCTYPE html&gt;`  
`&lt;html&gt;`  
 `&lt;head&gt;`  
 `&lt;meta charset=""utf-8""&gt;`  
 `&lt;title&gt;Calibration with OpenCV.js&lt;/title&gt;`  
 `&lt;/head&gt;`  
 `&lt;body&gt;`   
   
   
 `&lt;div&gt;`  
 `&lt;!-- the field for the raw input cam --&gt;`  
 `&lt;div class=""inputoutput""&gt;`  
 `&lt;video id=""videoInput"" width=""320"" height=""240""&gt;`  
`Your browser does not support the video tag.`  
 `&lt;/video&gt;`   
 `&lt;/div&gt;`  
 `&lt;!-- video feed through openCV --&gt;`  
 `&lt;div&gt;`  
 `&lt;canvas id=""canvasOutput"" width=""320"" height=""240"" style=""border:1px solid #000000;""&gt;&lt;/canvas&gt;""`  
 `&lt;/div&gt;`   
 `&lt;/div&gt;`  
   
   
 `&lt;!-- load openCV --&gt;`  
 `&lt;script src='opencv.js' type='text/javascript'&gt;&lt;/script&gt;`  
   
 `&lt;!-- load our javascript code --&gt;`  
 `&lt;script src='code.js' type = 'text/javascript'&gt;&lt;/script&gt;`  
   
 `&lt;!-- a button. if pressed makes a screenshot --&gt;`  
 `&lt;button id='screenshotButton' &gt;screenshot&lt;/button&gt;`  
 `&lt;button id='calibrateButton'&gt;calibrate&lt;/button&gt;`  
   
 `&lt;/body&gt;`  
`&lt;/html&gt;`

So how do i INCLUDE a library into typescript? Why is it so immensly hard to do?

&amp;#x200B;

Here is my code.ts file. Its all scambled now and some things maybe make no sense. but its failing in the first few lines already. right now i am only interested in getting that dan include to work so i can finally start coding...:

&amp;#x200B;

`//import open cv`  
`//import {cv} from ""./opencv"";`  
`//import * as cv from ""./opencv"";`  
`//var cvv: any = require('./opencv');`  
`//import cv from ""./opencv"";`  
`/*`  
`Calibrator class that will undistort a camera video feed by using opencv.`  
`*/`  
`class Calibrator {`  
 `// array filled with images`  
 `images: Array&lt;cv.Mat&gt;;`  
   
 `constructor() {`  
 `this.images = [];`  
`}`  
 `/*`  
   `add one more image to our calibration image collection`  
   `*/`  
 `add_image(imgMat: cv.Mat){`  
 `console.log(""adding one image"");`  
 `let tempMat = new cv.Mat(video.height, video.width, cv.CV_8UC4);`  
 `tempMat = imgMat;`  
 `this.images.push(tempMat);`  
 `console.log('number of images ', this.images.length);`  
`}`  
   
 `/*`  
   `where the actual calibration takes place`  
   `*/`  
 `calibrate(){`  
 `console.log(""calibrating..."");`  
 `for (let i = 0; i &lt; this.images.length; i++) {`  
 `// current image`  
 `const curr_img = this.images[i];`  
 `cv.findChessboardCorners();`  
`}`  
`}`  
`}`  
`//an array of images where we can save the pictures for calibration`  
`let camCal = new Calibrator();`  
`// get a video feed`  
`let video:HTMLVideoElement = &lt;HTMLVideoElement&gt; document.getElementById(""videoInput""); // video is the id of video tag`  
`navigator.mediaDevices.getUserMedia({ video: true, audio: false })`  
`.then(function(stream) {`  
 `video.srcObject = stream;`  
 `video.play();`  
`})`  
`.catch(function(err) {`  
 `console.log(""An error occurred! "" + err);`  
`});`  


`function takeOneScreenshot(){`  
 `let cap = new cv.VideoCapture(video);`  
 `let imgMat = new cv.Mat(video.height, video.width, cv.CV_8UC4);`  
   
 `console.log(""taking a screenshot"");`  
 `cap.read(imgMat);`  
 `//images.push(imgMat);`  
 `camCal.add_image(imgMat);`  
   
`}`  
`window.onload=function(){`  
 `document.getElementById(""screenshotButton"").addEventListener(""click"", buttonPress);`  
 `document.getElementById(""calibrateButton"").addEventListener(""click"", calibrate);`  
 `function buttonPress(){`  
 `cv.imshow('canvasOutput', camCal.images[camCal.images.length-1]);`  
`}`  
 `// we assume we have already all images`   
 `function calibrate(){`  
 `camCal.calibrate();`  
`}`  
`}`  


&amp;#x200B;

I tried so many ways to do it that i lost count. I don't think i can do it alone if noone helps me. Whenever i think i got it now i get this error: 

`Uncaught ReferenceError: exports is not defined`

`at code.js:2`

&amp;#x200B;

So yeah some more google told me to change a line in tsconfig.json:

`""module"": ""commonjs"",                          /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */`

&amp;#x200B;

I tried all of the options there. no change.

I also tried to make 'one' outFile. but that file is never generated. Might not be what i think it means. Its also an option in the tsconfig.json file.

&amp;#x200B;

&amp;#x200B;

So i am lost. How do i include a simple library? This can't be so hard! I am stuck since the beginning of december and have lost hope that one google search will be able to help me...","oh geez, i need some help"
439,2019-01-07 18:37:57,16,1,"Hello,

I am trying to figure out a way to properly build a project with webpack, ts-loader and typescript, everything most recent version possible.

It seems there was not found an estabilished consnensus on how to do it. If I understand things correctly, I can either go for having the dependencies compiled to JS and bundled with d.ts files, or I can just have them uncompiled and make the top-level (or ""final"") repository do the compilation.

In the project I am working with, there are three repository levels: ""Framework"", the ""Application"" and the ""Theme"". 

Theme is the final level and it depends on Application and Framework and is bundled with both of these in node_modules. Each of them however is capable of being run on their own to check core functionality and run tests. 

What do you think would be the best way to assemble this into one repository? ","Should I bundle typescript dependencies into js + d.ts or just leave them as .ts and let the ""final"" app compile them?"
440,2019-01-08 18:06:47,0,1,,A state modular state manager written in typescript
441,2019-01-08 18:17:11,4,1,,A modular state manager written in typescript
442,2019-01-09 06:51:59,10,1,"Is there anyone that could inspect my code and let me know what am I doing wrong, there are quite a bit of memory leaks each time I restart round, and I'm not sure what I'm doing wrong?",First time doing typescript project (semi big project)..memory leak problems.
443,2019-01-09 17:00:05,12,1,"As i was looking through https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-2.html

I see that there are some variables written using let

    function foo(a: number, b: string): string {
        return a + b;
    }
    
    let a = foo.apply(undefined, [10]);              // error: too few argumnts
    let b = foo.apply(undefined, [10, 20]);          // error: 2nd argument is a number
    let c = foo.apply(undefined, [10, ""hello"", 30]); // error: too many arguments
    let d = foo.apply(undefined, [10, ""hello""]);     // okay! returns a string

Generally const should be used where the variable isn't re-assignable, could it be that is faster to compile let (3 letters) to ES5, and if you choose target EcmaScript2015, is it better to use const then?",Why is some TypeScript documentation written using let?
444,2019-01-11 21:04:49,4,1,"Hey guys, I recently discovered you can use JSDoc to do IDE type checking and smart intellisense for javascript code in VSCode. I also just recently learned about *.d.ts files and that you can use those instead of `/** @typedef */` to define object literals

I'd like to integrate these features to improve my current project, but keep hitting brick walls

If you npm-install a @types module, VSCode automatically fills everything out. But for some reason it doesn't play as nice with my local declaration files

My current hack is to use @typedef and import the module

    /**
     * @typedef {import('@/ship/TileBase').TileMapBase} TileMapBase
     * @typedef {import('@/ship/systems/ISystem').System} System
     */

But this gets noisy real fast, and you have to do it for *every* type that you use.

I would much prefer if I just had a namespace, something like `iams3b.System` that I can use anywhere

I think in `tsconfig.json` you can set a ""files"" array, which will import the declarations. But, this then means I either have to throw every declaration file into one, or add each file individually every time I create one. And I prefer to have my d.ts file sitting next to the module that makes most use of it (System.d.ts is in the same directory as System.js)

Has anyone tried something similar for smarter intellisense? How'd you decide to go about it, did you get a good system going?

All my google-fu leads me either to problems trying to import d.ts files from other libraries, or using them in Typescript projects... Whereas I'm trying to use my own d.ts files for my own javascript project","Using typescript declaration files with JSDoc, anybody got a good workflow?"
445,2019-01-11 21:18:37,34,1,"I'm enjoying typescript but having an issue understanding generics in some of d.ts files I'm using. I've noticed many use one letter to represent a type. When I write types, I use full one-or-two-word Pascal case as names and it works just fine. I was trying to interpret redux-thunk so redux's dispatch would play well, but the types are unclear to me. I feel like the concept of appropriate variable naming would apply here.

I imagine there's a reason to the madness. But what is it?",What's with all the one-letter types?
446,2019-01-13 23:48:43,14,1,"Experienced JS dev, just delving into Typescript. I want your opinion and thoughts about below:

&amp;#x200B;

I am trying to introduce a cross-project, cross-platform utils library in our organization and looking to use Typescript to develop it. Think of this library as an internal date-fns, rambda, lodash style utility belt for functions that are relevant to our sites and apps.

&amp;#x200B;

The plan is to abstract away standard functionality that is repeated across our React, non-react Javascript and React Native codebases. I feel like types and autocomplete functionality provided by VSCode, Webstorm are a great combo. I might need to output multiple builds, one for es5 and another one for modern browsers. I still haven't thought about packaging the library, but both webpack and rollup are good candidates.

&amp;#x200B;

The questions that I have are:

1. Should I be using plain Typescript or should I be using Babel 7 Typescript plugin. I have read some mixed opinions about how \`tsc\` is slower, especially in watch mode. The intro blog from MS ([https://blogs.msdn.microsoft.com/typescript/2018/08/27/typescript-and-babel-7/](https://blogs.msdn.microsoft.com/typescript/2018/08/27/typescript-and-babel-7/)) suggest using tsc. I understand that it is a great way for existing babel projects, but I am starting a greenfield project, which is the better option here?
2. We generally put our Jest tests inside the respective code folders. Are they any pitfalls of that approach, considering that the tests are run in a more controlled environment, where as the src outputs will require multiple build targets. Is that even a valid question ?!!!

&amp;#x200B;

Any other thoughts or direction regarding the above will be great. Link to any boilerplates that you know of/have written will be helpful. Thanks again.",TSC vs using Babel7 with TS plugin?
447,2019-01-14 20:18:14,4,1,"Hi guys, I am working on a *fun/educational* project and I want to create `*.d.ts` file for this package but I am not sure which is the right way to do it. Can someone show how many ways there are to declare types and which is the best? You can also comment on [https://github.com/strdr4605/mockingcase/issues/14](https://github.com/strdr4605/mockingcase/issues/14). Also will appreciate if you suggest some other things to try in this package.",Add declaration file for typescript
448,2019-01-15 10:30:08,1,1,"Hi guys, I am working on a fun/educational project and I want to create *.d.ts file for this package but I am not sure what should I write in it. Can someone show how many ways there are to declare types and which is the best? You can comment on https://github.com/strdr4605/mockingcase/issues/14. Also will appreciate if you suggest some other things to try in this package.",Add declaration file for typescript
449,2019-01-16 11:49:14,12,1,"I mostly develop websites, often pretty Javascript heavy once with lots of Javascript powerered animations and such (the typ u see on awwwards). I write everything using ES6, and as little libs or helpers as possible. Should I start using Typescript? And why? I am yet to grasp what typescript really is.",Should I learn/use Typescript?
450,2019-01-16 15:52:46,11,1,"TS 3.2, I have 3 interfaces

    interface A {
        a: string;
    }
    
    interface B extends A {
        shared: boolean;
        b: string;
    }
    
    interface C extends A {
        shared: boolean;
        c: string;
    }

I then create a new union type

    type ABC = A | B | C;

Why does this not error?

    let test: ABC = {
        a: """",
        //shared: true,
        c: """"
    } //no error ¯\_(ツ)_/¯

The shape doesn't match with any of the interfaces.

 `shared: boolean` is missing, yet it is fine for the compiler.

But here it errors:

    let test: ABC = {
        a: """",
        //shared: true,
        c: """",
        blabla: """"//Object literal may only specify known properties, and 'blabla' does not exist in type 'ABC'.
    };

Now I know that you can assign interfaces interchangeably as long as the shape matches like:

    let a: A = { a: """" };
    let b: B = { a: """", b: """", shared: false };
    let foo = { a: """", blabla: 3};
    
    a = b;
    a = foo;

But during initialization it only accepts known properties, so it should complain about the missing `shared` here:

    let test: ABC = {
        a: """",
        //shared: true,
        c: """"
    } //no error ¯\_(ツ)_/¯

Or if it reduces the type to `A` it should complain that `c` is not known ¯\\\_(ツ)\_/¯

[https://typescript-play.js.org/?target=1#code/JYOwLgpgTgZghgYwgAgILIN4Chm+XALmQGcwpQBzAbiwF8stRJZEUAhZCAD0hABNiaTDjzEAFnCgQ+RAEYB7eQBsIcEDTzJZRUuRDU6DJtHhJkAYU48I-Qemybxk6XMUq1GvAh1lKNelhgAJ4ADiiobJYAvEIAPsgc8eY0WCpgyJCkRBHRwpqEyABEhQA0IrgA9BVOUjIZUACuEGWa3kWFdFRAA](https://typescript-play.js.org/?target=1#code/JYOwLgpgTgZghgYwgAgILIN4Chm+XALmQGcwpQBzAbiwF8stRJZEUAhZCAD0hABNiaTDjzEAFnCgQ+RAEYB7eQBsIcEDTzJZRUuRDU6DJtHhJkAYU48I-Qemybxk6XMUq1GvAh1lKNelhgAJ4ADiiobJYAvEIAPsgc8eY0WCpgyJCkRBHRwpqEyABEhQA0IrgA9BVOUjIZUACuEGWa3kWFdFRAA)",Can someone explain this TypeScript behavior please.
451,2019-01-16 21:11:57,3,1,"I have multiple different objects that I want to use the same function for. Essentially like this:

&amp;#x200B;

    interface ReportA {
      weekly_revenue: number;
      yearly_revenue: number;
      date: string;
      region: string;
      country: string;
    }
    
    interface ReportB {
      daily_revenue: string;
      quarterly_revenue: string;
      date: number;
      area: string;
      id: string;
      product: string;
    }
    
    // example function to demonstrate idea. Real function does other steps as well not pertaining to the data.
    function sumReportData(reports: ReportA[] | ReportB[], key: string) {
      let sum = 0;
      reports.forEach((report: ReportA | ReportB) =&gt; {
        sum += report[key];
      });
    }
    

I want to have one function that can take in an array of ReportA or ReportB with a string for a key. Then I sum up the values. I am getting an error that I can't do this:  

`Cannot invoke an expression whose type lacks a call signature. Type '((callbackfn: (value: ReportA, index: number, array: ReportA[]) =&gt; void, thisArg?: any) =&gt; void) | ((callbackfn: (value: ReportB, index: number, array: ReportB[]) =&gt; void, thisArg?: any) =&gt; void)' has no compatible call signatures.`

I could have a different version of the same function for each type of report where the parameter types are specific but that seems like a waste. Alternatively I could leave the parameter as type `any` but that seems like I'm not utilizing the features of typescript. Is it possible to make this work?",Passing multiple interfaces to function
452,2019-01-18 23:25:23,2,1,"I'm trying to write some tests for Mocha using typescript and the ts-node compiler. 

this is the code snippet where the error is

\`\`\`

[request.post](https://request.post)(opts).then((res: Response) =&gt; {

expect(res.json()).to.eql(EXPECTED\_RESPONSE\_BODY);

done();

}, done);

\`\`\`

In my editor (Atom) I was getting a Type error for the Response type which I resolved by adding \`""typeRoots"": \[ ""./node\_modules/@types"" \],\` to tsconfig.json

&amp;#x200B;

When I try to run the test, I get the same error that I resolved in the editor

\`\`\`

Johns-MacBook-Pro:login\_api johndavis$ ./node\_modules/.bin/mocha -r ts-node/register src/\*\*/\*\*/createAccount.pact.spec.ts --exit

&amp;#x200B;

/Users/johndavis/workspace/login\_api/node\_modules/ts-node/src/index.ts:261

return new TSError(diagnosticText, diagnosticCodes)

\^

TSError: ⨯ Unable to compile TypeScript:

src/controllers/test/createAccount.pact.spec.ts(85,37): error TS2304: Cannot find name 'Response'.

&amp;#x200B;

\`\`\`

does ts-node ignore typeRoots in tsconfig.json or is it not using my config file (in current dir)?",writing Mocha tests in Typescript
453,2019-01-20 00:36:16,6,1,"Based on the reference:

[https://www.typescriptlang.org/docs/handbook/basic-types.html](https://www.typescriptlang.org/docs/handbook/basic-types.html)

'any' opts out the variable from static type checking, exactly like C# dynamic.",'any' similar to c# dynamic?
454,2019-01-22 20:00:05,5,1,"I posted this as a [GitHub issue](https://github.com/webpack/webpack/issues/8669) for Webpack too, but maybe someone here could help?

My `babel.config.js`:

```js
const isProd = String(process.env.NODE_ENV) === ""production"";
const isTest = String(process.env.NODE_ENV) === ""test"";

module.exports = {
  presets: [
    [""@babel/preset-env"", { modules: isTest ? ""commonjs"" : false }],
    ""@babel/preset-typescript""
  ],
  plugins: [
    ""@babel/plugin-syntax-dynamic-import"",
    ""@babel/plugin-proposal-class-properties"",
    ""@babel/plugin-proposal-object-rest-spread""
  ].filter(Boolean)
};
```",Cannot get dynamic imports to work with TypeScript + Webpack + Babel. Does anyone have a working boilerplate I could look at?
455,2019-01-23 17:37:18,5,1,,"shades.js 2.0: Functional lenses and iterators with full, type-safe TypeScript bindings and 0 dependencies! [x-post from r/typescript]"
456,2019-01-25 00:03:27,0,1,"Last week I wrote a small package to debug AWS lambda time-out using logs. It’s 100% in typescript.
[https://github.com/rpgeeganage/ifto](https://github.com/rpgeeganage/ifto)",A tool which AWS lambda time-out debugging with logs written in typescript
457,2019-01-25 05:13:08,0,1,,How to install typescript | nodejs typescript
458,2019-01-25 18:41:56,2,1,"I'm just getting started with TypeScript, and figured I'd pick a smaller package that I have up on npm and convert it to TypeScript.

I know I need to publish the compiled js and the type definitions, but is it best practice to publish the source maps? If so, I assume I also need to publish the .ts files as well?","[Help] When publishing a typescript package to npm, do you include source maps?"
459,2019-01-25 19:46:58,5,1,"[Here](https://basarat.gitbooks.io/typescript/docs/types/index-signatures.html) I read the following:

&gt;All members must conform to the string index signature  
&gt;  
&gt;As soon as you have a string index signature, all explicit members must also conform to that index signature. This is shown below:

&amp;#x200B;

I'm fairly new to TS and simplified my interface for you:

    interface Ifoo  {
  [foo: string]: string;
  fooMethod(fooParam: string): void;
}

TS throws the following error:

`Property 'fooMethod' of type '(fooParam: string): void' is not assignable to string index type 'string'` 

&amp;#x200B;

How could I solve this problem? I want `fooMethod` to return void.

&amp;#x200B;

Thanks for your help! :)",How to deal with index signatures?
460,2019-01-25 22:23:07,3,1,"Just a quick question,

I've been looking at typescript support for vue.js and came across the syntax ""!:"", can someone link me some documentation or explain it to me.

Thanks!

Example: `@Prop(Number) propA!: number`

@[https://github.com/kaorun343/vue-property-decorator#propoptions-propoptions--constructor--constructor---decorator](https://github.com/kaorun343/vue-property-decorator#propoptions-propoptions--constructor--constructor---decorator)","""!:"" Type annotation syntax"
461,2019-01-26 22:32:17,8,1,"So I installed typescript on my Mac using 

&gt;	npm install -g typescript

It installed properly and when I went to type 
*tsc --version*

I got the error message **tsc:command not found**

So I restarted my machine and still the same issue 

Any one have a solution on how to fix this ? Please let me know ",TSC command not found
462,2019-01-27 22:46:56,2,1,,typescript-is: Run-Time Type Checks for TypeScript
463,2019-01-27 22:49:41,3,1,"Recently found NestJS, I think it is great. Created my first Service, which accepts TypeORM repository:

    constructor(private Repository&lt;Entity&gt; repo) {}

Now I am trying to test this service. To write proper unit tests I need to mock repository. 

**What is the easiest way to do this?** 

&amp;#x200B;

Official guide says I need to create a custom provider, but I feel it is quite hard for such a simple task and it can be done easier.

&amp;#x200B;

I am looking for something like 

    describe('Test', () =&gt; {
      it('test 1', async () =&gt; {
        const EXPECTED: Entity = {
          id: 1,
          name: 'Name'
        };
    
        const repo: Repository&lt;Entity&gt; = mock(Repository&lt;Entity&gt;);
        // setup mock implementation for one method
    
        const service = new ProductsService(repo);
        const actual = await service.getOne(1);
        
        // assertions
        ...
      });
    });
    

&amp;#x200B;

I found solution with jest.fn() interesting, but it requires me to write mocks for all methods from Repository interface (which has over 20 methods...):

    const repo: Repository&lt;Entity&gt; = {
      findOne: jest.fn().mockImplementation(id =&gt; EXPECTED),
    };
    // ts error: TS2740: Type '{ findOne: Mock&lt;{}&gt;; }' is missing the following properties from type 'Repository&lt;Entity&gt;': manager, metadata, createQueryBuilder, target, and 19 more.

How to solve this problem?",Mocking of generic interfaces with dozens of methods in typescript
464,2019-01-29 18:50:00,2,1,"I've been reading a lot trying to decide what I will use to build my development environment and I'm having a hard time navigating all the conflicting information out there.

My end goal is to have a dev environment that I can use easily with either express or electron.

What I'm having a hard time with is deciding if I need to use babel + typescript or if typescript alone is sufficient?

Can anyone shed some light on this? So far, my research has yielded arguments for both.

Also, feel free to share your preferred technology stack!

Thanks ",Development stack question
465,2019-01-29 19:40:53,1,1,,SHOULD YOU JUMP ON THE TYPESCRIPT HYPE TRAIN IN 2019?!
466,2019-01-29 21:04:03,4,1,"I am following a course on udemy trying to learn Angular and as I am typing the exact same line as the instructor:

get likesCount() {
    return this._likesCount;
}

The 'get' doesn't register as a keyword as it does on his screen, and just gives me this error: 
[ts] Cannot find name 'get'. [2304]

I'm completely new to typescript, not sure why this is even a possibility for something seemingly that simple to not work? 
","Following along an online course to learn Angular, keyword 'get' not registering as a keyword?"
467,2019-01-29 21:59:56,1,1,"I am using `@nestjs/swagger` to create autogenerated swagger documentation for my controllers.

I have a DTO:
```typescript
export class ProductDto extends BaseEntityView {
```

And here is now I say that my route returns this ProductDto (and it works fine):  
```
@ApiResponse({ status: 200, description: 'Success', type: ProductDto})
```

Recently I implemented Intercepter, which takes all successful responses and wraps them into 
```
export interface Response&lt;R, E&gt; {
  result: R;
  error: E;
}

// example:
{
  ""error"": null,
  ""result"": {...}
}
```

And now I want to mention in the documentation, that user will get Response&lt;ProductDto, null&gt;, so I write:
```
@ApiResponse({ status: 200, description: 'Success', type: Response&lt;ProductDto, null&gt;})
```

but I get TS compilation error:
```
TS2348: Value of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }' is not callable. Did you mean to include 'new'?
```

Why?","How to use generic type as ""type"" field in @ApiResponse for swagger documentation?"
468,2019-01-30 17:11:09,1,1,"I'm using the [BigInt](https://github.com/tc39/proposal-bigint) type in my react project (typescript) with the following CircleCi config.yml

    version: 2
jobs:
 build:
 branches:
 only:
        - development
 docker:
      - image: circleci/node:8

 steps:
      - checkout
      - restore_cache:
 key: dependency-cache-{{ checksum ""package.json"" }}
      - run: 
 name: Install dependencies
 command: npm install
      - run: 
 name: Start tests
 command: npm run test

When running my test locally via jest all tests pass. When running the tests in CircleCi however, I get the following error:

 `ReferenceError: BigInt is not defined` 

&amp;#x200B;

It looks like CircleCi doesn't consider proposals/es6 features. Could someone tell me how I can work around this?",CircleCi: use proposals
469,2019-02-01 13:41:08,1,1,"hello reddit

Am learning the due to user requirement of creating MANAGER APPLICATION. have tried the reactJS but unable to do so and my manger said to use TYPESCRIPT LANGUAGE. having create applicaton use node jsscripts i am unable to create typescript function::

function testFunct(): bollean {

  return 'hello'

}

when run result it error, but i don't care. it should do text. PLEASE REPLY VIA EMAIL.",create applicaton function
470,2019-02-01 14:27:36,0,1,,From Redux to reactive typescript-friendly state handling
471,2019-02-02 12:25:47,0,1,"Hey! Today I stumbled on an issue. I want to mock some of the TypeORM functionalities per test, meaning that I want them to work differently in different tests cases.

The problem is that mocking them does not seem to work inside of a test, but if I do it before the **describe** method, it works.

Code:

[https://github.com/mwanago/express-typescript/blob/part-10/src/authentication/authentication.test.ts](https://github.com/mwanago/express-typescript/blob/part-10/src/authentication/authentication.test.ts)

In this example, the findOne is not defined in the mock.",Troubles using TypeORM with Jest
472,2019-02-03 05:32:20,4,1,"I'm trying to type some actions and haven't used typescript in a redux project before.  
I am looking over the type files and came across this from redux-thunk.

`export type ThunkAction&lt;R, S, E, A extends Action&gt; = (`  
  `dispatch: ThunkDispatch&lt;S, E, A&gt;,`  
  `getState: () =&gt; S,`  
  `extraArgument: E`  
`) =&gt; R;`

where ThunkDispatch is.

`export interface ThunkDispatch&lt;S, E, A extends Action&gt; {`  
  `&lt;T extends A&gt;(action: T): T;`  
  `&lt;R&gt;(asyncAction: ThunkAction&lt;R, S, E, A&gt;): R;`  
`}`

I'm confused as to what this means and what the two interface members represent. I haven't seen an interface with generics before a method. Could someone shed some light how dispatch could be either one of the ThunkDispatches?  
",ThunkDispatch Signature explanation.
473,2019-02-04 15:31:09,26,1,"I am new to typescript, coming from react / babel and webpack.

Why would someone use babel with typescript, knowing that ts already knows about es6 features?
- want to use some babel plugins (styled component...)
- faster with babel?

How would you do it?
- setup webpack (awesome typescript loader)... but how does it work exactly?
- setup tsconfig

Would love if you could correct / complete my answers :)",Why and how to use typescript with babel?
474,2019-02-05 23:01:01,0,1,"We were in the need of [socket.io](https://socket.io/) metrics at my work for a node typescript server and after some research i found that existing [socket.io](https://socket.io/) prometheus modules did not work and did not have type definitions... So i decided to write my own in typescript and release it!

The package can be found at: [https://www.npmjs.com/package/socket.io-prometheus-metrics](https://www.npmjs.com/package/socket.io-prometheus-metrics)

And the git repo at: [https://github.com/UNIwise/socket.io-prometheus-metrics](https://github.com/UNIwise/socket.io-prometheus-metrics)

Feel free to use, contribute and leave feedback!",Prometheus metrics for socket.io
475,2019-02-06 02:49:11,3,1,"Dear /r/typescript and /r/javascript Redditors,

I've some experience building simple UI based projects/frontend UIs but nothing complex. I'd like to learn by doing something really complex for example: building a code editor, paint, spreadsheet or in-browser software preferably in typescript. I did a web search and encountered with many Github repositories (for instance, [https://github.com/myliang/x-spreadsheet](https://github.com/myliang/x-spreadsheet) which is in javascript) but I couldn't get anything accompanied with the tutorial. So, would you be the kind enough to guide me?",Awesome Complex Typescript Project with Tutorials
476,2019-02-07 04:59:00,23,1,"Trying to get my app to build and deploy on remote servers. The problem is that when I'm using vue with vue-cli-service to build, and it reports a build failure whenever it encounters a Typescript compilation error.

It still builds the files correctly, but it throws an error. This is fine if I build it locally, but when I build it remotely, Heroku and Netlify both complain that the deployment was unsuccessful due to a build failure.

I'm seriously not interested in fixing 80% of the errors because I do not see them as valid errors. It is mostly things like, ""Cannot find name 'FB'"", or ""Property &lt;x&gt; does not exist on &lt;y&gt;"". It works fine but Typescript is just simply unable to find the definition of the file or variable.

I'm not interested in fixing these because it requires me to add additional garbage to my code just to appease the compiler. Is there just a simple tsconfig option that I can use to suppress the compiler from throwing errors?",Any way to suppress typescript compiler from throwing errors?
477,2019-02-07 14:58:23,1,1,"Hello community, I am struggling to find a solution for an issue related to a typescript typing and I'm here to ask for help and advice to tackle it.  Were else could I find people more capable to help :)   


Here the issue: [https://github.com/ctrlplusb/easy-peasy/issues/66](https://github.com/ctrlplusb/easy-peasy/issues/66)",Need help for solving a challenging issue of a new open source awesome project 🔥
478,2019-02-08 16:27:38,7,1,"I've had tons of problems with deserialization that isn't enforced in typescript, so you think you get a number but it comes as a string and doesn't error.

So it becomes a bug after some time in a hard to debug way, so you spend a while to understand the serialization failed, so you actually need a enum to represent both ways and convert after deserializing.

I knew the problem but didn't new of a good solution until I used rust.

`serde` removes fields that aren't specified and errors if fields are of the wrong type. That makes life so much easier and avoid hiding tons of problems that only happen in prod.

Is there something like this? Runtime deserialization to enforce type safety?",Is there a way to enforce strong deserialization?
479,2019-02-08 19:27:37,1,1,"[https://github.com/ellipticaldoor/typescript-babel-jest-2019-starter](https://github.com/ellipticaldoor/typescript-babel-jest-2019-starter)

&amp;#x200B;

It comes ready with babel, jest, eslint and prettier all working toguether. Feedback for improval is very appreciated 🙂",I've made a vanilla typescript starter using the most modern tools for 2019
480,2019-02-09 21:33:20,4,1,"A long time ago I used FxCop for code analysis. The team had it as part of the check in process and we had customized the rules to suit our needs but it was helpful. 

Recently, I’ve been doing work with Microsoft SPFx framework for developing modern SharePoint web parts with React/Typescript. The SPFx toolchain has tslint for typescript that integrates and provides a lot of feedback on code style and best practices. It’s a bit overbearing but has resulted in pretty uniform code especially for team members getting used to typescript. 

I would like to have something similar for my C# development but I’ve seen some conflicting info about FxCop/StyleCop. It looks like maybe they are out of date or no longer maintained? 

I’m not sure what I should be using now and what the best way to integrate something like this into the toolchain. I’m mostly using .Net core and editing with VS2017 and VS2019 preview. 

",Modern FxCop/StyleCop?
481,2019-02-10 19:47:01,7,1,"Hi all,

Title says it all. Where do I look to learn the more advanced features of typescript? Preferably I'm looking for some learning modules or something of the likes

Thanks.",Where to learn more 'advanced' typescript features?
482,2019-02-11 23:13:37,0,1,,Is there a typescript version of https://reacttraining.com/react-router/web/example/auth-workflow?
483,2019-02-11 23:48:33,3,1,"Housekeeping: I manually crossposted this ([original](https://www.reddit.com/r/typescript/comments/apmhsx/how_to_find_whether_one_function_indirectly_calls/)), because the cross-posting feature is disabled for this sub. If manually crossposting like this is prohibited, feel free to take this post down - I couldn't find documentation anywhere of the recommended method of posting something that's relevant to this *and* to another sub.

Does anyone know of a tool or technique to discover if one function (directly or indirectly) calls another?

Here's a scenario that's pretty similar to one I often end up in: there's a generic method, called, say, `updateUserAccountDetails`. We call it from different places. A ticket comes in that requests special behavior during user onboarding. As is often the case in legacy codebases, our code can get pretty circuitous (this applies to both our account update code, and our onboarding code). It's hard to figure out exactly where in the onboarding process we make a call to `updateUserAccountDetails`.

Is there a tool that can automate this search for me? I can manually traverse the call tree, and that's what I end up doing, working either backwards (from `updateUserAccountDetails`) or forwards (from some onboarding function I think might call `updateUserAccountDetails`). But that process is slow and error-prone. I could imagine a tool that can read our AST could do this quite easily. Does something like this exist?

Alternatively, how do *you* perform searches of the type I described? And what code style techniques make those sorts of searches easier?",How to find whether one function indirectly calls another function?
484,2019-02-12 16:26:13,14,1,"I'm writing a rest api using typescript and express and was wondering what are pros and cons of Throwing errors in code.

Here are two very simple examples: one with throw and one without it.  I have to admit that throwing errors is pretty easy to handle in controllers, becouse I can catch errors (or just ""situations"") that occur deep in service file. In that way I can keep my controllers short and clean, and move my logic to service file.

The code is not tested - I wrote it just as a example.

    /*
        using throw
    */
    // in controller file
    export async function loginController1(req: Request, res: Response, next: NextFunction): Promise&lt;void | Response&gt; {
        try {
            res.locals.user = await authUser1(req.body.username, req.body.password);
            next();
        } catch (error) {
            return res.status(401).json({ error: error.message });
        }
    }
    
    // in service file
    export async function authUser1(username: string, password: string): Promise&lt;User&gt; {
        const user = await loadUser1(username);
        // passwordMatchWith() is a method in User class, that compares hashes of passwords
        if (!user.passwordMatchWith(password)) throw new Error('WrongPassword');
        return user;
    }
    
    export async function loadUser1(username: string): Promise&lt;User&gt; {
        const user: User | undefined = await User.findOne({ where: { username } });
        if (!user) throw new Error('UserNotFound');
        if (user.disabled) throw new Error('UserDisabled');
        return user;
    }
    

As you can see, with using throw, the controller is clean and simple. All the logic is in service file. I can return a ""message"" from service (even from nested function) to controller and it will know its an error and return it to user. Its also very easy to test.

&amp;#x200B;

    /*
        not using throw
    */
    // in controller file
    export async function loginController2(req: Request, res: Response, next: NextFunction): Promise&lt;void | Response&gt; {
        const user = await loadUser2(req.body.username);
    
        if (!user) {
            return res.status(401).json({ error: 'UserNotFound' });
        }
    
        if (user.disabled) {
            return res.status(401).json({ error: 'UserDisabled' });
        }
    
        // passwordMatchWith() is a method in User class, that compares hashes of passwords
        if (!user.passwordMatchWith(req.body.password)) {
            return res.status(401).json({ error: 'WrongPassword' });
        }
    
        res.locals.user = user;
        next();
    }
    
    // in service file
    export function loadUser2(username: string): Promise&lt;User | undefined&gt; {
        return User.findOne({ where: { username } });
    }

In this example Im not throwing errors, so I have to check everything in the controller. A mess that is impossible to test.

So...

    /*
        not using throw ver2
    */
    // in controller
    export async function loginController3(req: Request, res: Response, next: NextFunction): Promise&lt;void | Response&gt; {
        const user = await loadUser3(req.body.username);
    
        if (!userFound(user)) {
            return res.status(401).json({ error: 'UserNotFound' });
        }
    
        if (userIsDisabled(user)) {
            return res.status(401).json({ error: 'UserDisabled' });
        }
    
        if (!passwordsMatch(user!.passwordHash, req.body.password)) {
            return res.status(401).json({ error: 'WrongPassword' });
        }
    
        res.locals.user = user;
        next();
    }
    
    // in service file
    export function userFound(user: User | undefined): boolean {
        return user !== undefined;
    }
    
    export function userIsDisabled(user: User | undefined): boolean {
        return user!.disabled;
    }
    
    export function passwordsMatch(password1: string, password2: string): boolean {
        // lets simplify
        return false;
    }
    export async function loadUser3(username: string): Promise&lt;User | undefined&gt; {
        return User.findOne({ where: { username } });
    }
    

Ok, now its somehow easier to test... and its ugly ;-)

&amp;#x200B;

At the moment I ""throw"" in my code a lot, but today I read a post by Yuriy Bogomolov, [linked](https://www.reddit.com/r/typescript/comments/aptv14/typesafe_frontend_development_using_functional/) from r/typescript where he wrote: ""You know what’s worse than returning a null? Throwing an exception. "" :-D So... ;-)

What you think? To throw or not to throw? 

&amp;#x200B;

PS: I know it is better to throw a custom object (something like `class UserNotfoundError extends Error`) no to risk with typo's in strings - this post is not about that ;).

&amp;#x200B;",To throw or not to throw
485,2019-02-15 00:40:46,25,1,"Hello guys! I want to share my Github repository. It contains new technologies and best pratices:

&amp;#x200B;

[**https://github.com/rafaelfgx/DotNetCoreArchitecture**](https://github.com/rafaelfgx/DotNetCoreArchitecture) 

&amp;#x200B;

**Technologies**

* [.NET Core 2.2.2](https://dotnet.microsoft.com/download)
* [ASP.NET Core 2.2.2](https://docs.microsoft.com/en-us/aspnet/core)
* [Entity Framework Core 2.2.2](https://docs.microsoft.com/en-us/ef/core)
* [C# 7.3](https://docs.microsoft.com/en-us/dotnet/csharp)
* [Angular 7.2.4](https://angular.io/docs)
* [Typescript 3.2.4](https://www.typescriptlang.org/docs/home.html)
* [HTML](https://www.w3schools.com/html)
* [CSS](https://www.w3schools.com/css)
* [SASS](https://sass-lang.com/)
* [UIkit](https://getuikit.com/docs/introduction)
* [JWT](https://jwt.io/)
* [Swagger](https://swagger.io/)
* [Docker](https://docs.docker.com/)

&amp;#x200B;

**Practices**

* Clean Code
* Code Analysis
* No Over-Engineering
* SOLID Principles
* DRY Principle (Don't repeat yourself)
* KISS Principle (Keep it simple, stupid)
* YAGNI Principle (You aren't gonna need it)
* Ubiquitous Language
* Dependency Injection
* Logging
* Object Mapping
* Response Compression
* Response Caching","Architecture with .NET Core 2.2, C#, ASP.NET Core, Entity Framework Core, Angular 7, Clean Code, DDD, SOLID, Code Analysis, Docker and others new technologies and best practices."
486,2019-02-16 03:18:45,4,17,"So, uh, as some of you may recall, at one time [we shared monthly summaries](https://www.reddit.com/r/javascript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3ASubreddit%2BStats) of posting and commenting highlights, they were never wildly popular, but some seemed to really enjoy the format as a discovery tool.

Originally, you could go to /r/subreddit_stats and request a run on your sub, which was nice. But then something happened to the bot serving the requests, and I was required to [run it myself](https://github.com/praw-dev/prawtools). Then, something happened with reddit's API which broke PRAW, and after several months it hadn't been fixed so I abandoned it. I entertained ideas of fixing it myself, but a) my python sucks, b) I've never used the reddit API or PRAW, and c) I had just started a new job. So I shelved it.

This week I was feeling like taking on a new fun project, and started to look into resurrecting the subreddit stats, when I discovered that /r/subreddit_stats is taking requests again! Since we're awkwardly 1/2 through the month, I decided to just run it with no filters and so that's what you see below -- it's view of /r/javascript going back _2956.77 days_.

###I was thinking of starting it back up again on a monthly basis, but only if you guys would enjoy it. So what say you, yea or nay?

----

Period: 2956.77 days

||Submissions|Comments|
:-:|--:|--:
__Total__|1000|68495
__Rate (per day)__|0.34|23.16
__Unique Redditors__|683|15845
__Combined Score__|278981|429595

---
###Top Submitters' Top Submissions
1. 19999 points, 65 submissions: /u/magenta_placenta
  1. [ESLint compromised, may have stolen your credentials](https://github.com/eslint/eslint-scope/issues/39) (616 points, [131 comments](/comments/8y9r87))
  1. [Anime.Js 3.0.0 released](https://animejs.com/) (613 points, [60 comments](/comments/aewlec))
  1. [In WarriorJS, you are a warrior climbing a tall tower. On each floor, you need to write JavaScript to instruct the warrior to battle enemies, rescue captives, and reach the stairs alive...](https://warriorjs.com/) (588 points, [59 comments](/comments/9l4ix3))
  1. [jQuery was removed from GitHub.com front end](https://twitter.com/mislav/status/1022058279000842240) (554 points, [203 comments](/comments/91vyzp))
  1. [Somebody Tried to Hide a Backdoor in a Popular JavaScript npm Package - was found in ""getcookies,"" a relatively newly created package. According to the npm team, the backdoor ""allowed for an attacker to input arbitrary code into a running server and execute it.""](https://www.bleepingcomputer.com/news/security/somebody-tried-to-hide-a-backdoor-in-a-popular-javascript-npm-package/) (541 points, [162 comments](/comments/8gt7ay))
  1. Muuri - a magical JavaScript layout engine that allows you to build all kinds of layouts and make them responsive, sortable, filterable, draggable and/or animated (515 points, [30 comments](/comments/7ih5lo))
  1. [Removing client-side React.js (but keeping it on the server) resulted in a 50% performance improvement on our landing page (Netflix)](https://twitter.com/NetflixUIE/status/923374215041912833) (462 points, [54 comments](/comments/793a9i))
  1. [JS Paint – a web-based MS Paint remake](http://jspaint.ml/) (457 points, [72 comments](/comments/7ra05m))
  1. [Rotating cube with separate worlds within each side](https://codepen.io/bali_balo/pen/yJOmgv) (450 points, [43 comments](/comments/6h2jnn))
  1. [Clippy.js - people love two things: failed Microsoft technologies and obscure Javascript libraries](https://www.smore.com/clippy-js) (440 points, [44 comments](/comments/4fo0nv))

1. 4118 points, 18 submissions: /u/fagnerbrack
  1. [V8 policy now is that no V8 commit can land if it breaks Node.js](https://mobile.twitter.com/trott/status/915624306750537728) (356 points, [29 comments](/comments/77tm5t))
  1. [Basics: How to stop using console.log() and start using your browser’s debugger](https://medium.com/datadriveninvestor/stopping-using-console-log-and-start-using-your-browsers-debugger-62bc893d93ff) (351 points, [132 comments](/comments/9u4kis))
  1. [How to use SVG as a Placeholder, and Other Image Loading Techniques](https://medium.freecodecamp.org/using-svg-as-placeholders-more-image-loading-techniques-bed1b810ab2c) (319 points, [6 comments](/comments/7gtuqq))
  1. [The React Story: How Facebook's Instagram Acquisition Led To The Open Sourcing of React.js](https://stackshare.io/posts/the-react-story) (279 points, [6 comments](/comments/7cf2w8))
  1. [Chrome team breaks web to make Chrome perform better](http://tonsky.me/blog/chrome-intervention/) (233 points, [102 comments](/comments/7fixaj))
  1. [Firefox edges out Microsoft globally for first time in browser wars](http://gs.statcounter.com/press/firefox-browser-edges-out-microsoft-globally-for-first-time?ct=t(BrazilJS_Weekly_468_9_2013)) (232 points, [68 comments](/comments/4k6m8u))
  1. [Multi-process Firefox brings 400-700% improvement in responsiveness](https://techcrunch.com/2016/09/02/multi-process-firefox-brings-400-700-improvement-in-responsiveness/) (231 points, [36 comments](/comments/5323wh))
  1. [Javascript: Promise.prototype.finally is at stage 4](https://mobile.twitter.com/ljharb/status/956229868575846400) (226 points, [34 comments](/comments/7x8z1v))
  1. [NASA's Director of Software Engineering confirms that NASA uses node in Space Suits](https://twitter.com/CollinEstes/status/738767017843515393) (225 points, [54 comments](/comments/4nny61))
  1. [(Now More Than Ever) You Might Not Need jQuery](https://css-tricks.com/now-ever-might-not-need-jquery) (213 points, [187 comments](/comments/719w6d))

1. 2791 points, 11 submissions: /u/tyler-mcginnis
  1. [A Beginner's Guide to JavaScript's Prototype](https://tylermcginnis.com/beginners-guide-to-javascript-prototype/) (378 points, [36 comments](/comments/9leguq))
  1. [JavaScript Visualizer - A tool for visualizing Execution Context, Hoisting, Closures, and Scopes in JavaScript.](https://tylermcginnis.com/javascript-visualizer) (373 points, [27 comments](/comments/9mquv1))
  1. [The Ultimate Guide to Execution Contexts, Hoisting, Scopes, and Closures in JavaScript](https://tylermcginnis.com/ultimate-guide-to-execution-contexts-hoisting-scopes-and-closures-in-javascript/) (299 points, [23 comments](/comments/9opyv3))
  1. [Understanding the ""this"" keyword in JavaScript](https://www.youtube.com/watch?v=zE9iro4r918) (289 points, [45 comments](/comments/6bffg4))
  1. [React Fundamentals Course: Learn React (v15.5) for Free](https://reacttraining.com/online/react-fundamentals) (276 points, [22 comments](/comments/64lge8))
  1. [The Evolution of Async JavaScript: From Callbacks, to Promises, to Async/Await](https://tylermcginnis.com/async-javascript-from-callbacks-to-promises-to-async-await/) (253 points, [68 comments](/comments/9spqux))
  1. [React Elements vs React Components](https://tylermcginnis.com/react-elements-vs-react-components/) (206 points, [15 comments](/comments/5ky5mq))
  1. [React ""Aha"" Moments](https://tylermcginnis.com/react-aha-moments/) (205 points, [15 comments](/comments/5jljgq))
  1. [The Free, Online, React Native Bootcamp starts tonight](https://tylermcginnis.com/free-react-native-bootcamp/) (203 points, [16 comments](/comments/95d1e9))
  1. [Server Rendering with React and React Router](https://tylermcginnis.com/react-router-server-rendering/) (155 points, [39 comments](/comments/82ylkk))

1. 2642 points, 1 submission: /u/mburakerman
  1. [Pass by reference !== pass by value](https://media.giphy.com/media/xUPGcLrX5NQgooYcG4/giphy.gif) (2642 points, [290 comments](/comments/6hz7o6))

1. 2241 points, 1 submission: /u/Dr_Schmoctor
  1. Can you help me allow my router to accept 💩 as the SSID? (2241 points, [284 comments](/comments/5zcb8m))

1. 2124 points, 8 submissions: /u/saadq_
  1. [React Native has been relicensed to MIT](https://twitter.com/reactjs/status/964689022747475968) (671 points, [44 comments](/comments/7y4009))
  1. [Ryan Dahl, the creator of Node.js, will be giving a talk on Propel, a JS machine learning framework, at JSConf EU](https://2018.jsconf.eu/speakers/ryan-dahl-propel-a-machine-learning-framework-for-javascript.html) (326 points, [52 comments](/comments/84sav1))
  1. [Gatsby officially becomes a startup with $3.8M seed round](https://twitter.com/gatsbyjs/status/999684072501792768) (222 points, [53 comments](/comments/8lvwmd))
  1. [Top-level `await` is supported inside latest Chrome Canary Dev Tools](https://twitter.com/umaar/status/897408737694109697) (203 points, [16 comments](/comments/6tuaxj))
  1. [Atom 1.19 - Improved Responsiveness and Memory Usage](http://blog.atom.io/2017/08/08/atom-1-19.html) (197 points, [86 comments](/comments/6shdyg))
  1. [Announcing npm@6 – npm, Inc. – Medium](https://medium.com/npm-inc/announcing-npm-6-5d0b1799a905) (185 points, [97 comments](/comments/8ekpbu))
  1. Little-known feature of object destructuring (168 points, [47 comments](/comments/4prq0z))
  1. [npm Joins ECMA International and TC39](https://blog.npmjs.org/post/175722319045/npm-joins-ecma-international-and-tc39) (152 points, [52 comments](/comments/8xis3w))

1. 2055 points, 8 submissions: /u/rauschma
  1. [Martin Fowler announces 2nd edition of “Refactoring” (with code in JS)](https://martinfowler.com/articles/201803-refactoring-2nd-ed.html) (382 points, [37 comments](/comments/88kn4z))
  1. [JavaScript books by Dr. Axel Rauschmayer (free online!)](http://exploringjs.com/) (343 points, [37 comments](/comments/5cvqia))
  1. [Node.js 10 lets you iterate asynchronously over streams!](http://2ality.com/2018/04/async-iter-nodejs.html) (297 points, [52 comments](/comments/8erpty))
  1. [Free online: “Speaking JavaScript”, my O’Reilly book](http://speakingjs.com/es5/) (253 points, [26 comments](/comments/20w5is))
  1. [ECMAScript 2017: the final feature set](http://www.2ality.com/2016/02/ecmascript-2017.html) (242 points, [51 comments](/comments/5qtyky))
  1. [Upgrading from Node 6 to Node 8: a real-world performance comparison](https://hackernoon.com/upgrading-from-node-6-to-node-8-a-real-world-performance-comparison-3dfe1fbc92a3) (214 points, [23 comments](/comments/6fe8yp))
  1. [Source code formatter Prettier 1.4: TypeScript and CSS support](https://github.com/prettier/prettier/releases/tag/1.4.0) (169 points, [9 comments](/comments/6exw6v))
  1. [Why TypeScript Is Growing More Popular](https://thenewstack.io/typescript-getting-popular/) (155 points, [146 comments](/comments/68k2fz))

1. 1966 points, 1 submission: /u/VanaticalDesign
  1. [After learning JS more than a year ago and falling in love with React Native, this is my first project, Tour, a drag-drop trip planner.](https://v.redd.it/7hn79a37med21) (1966 points, [225 comments](/comments/al2vxa))

1. 1861 points, 4 submissions: /u/kasperpeulen
  1. [Microsoft won't support IE8, IE9 and IE10 anymore after January 12, 2016](https://www.microsoft.com/en-us/WindowsForBusiness/End-of-IE-support) (953 points, [206 comments](/comments/3u7l76))
  1. [Safari supports 100% of the ES2015, ES2016 and ES2017 features. First browser to support all of them.](http://kangax.github.io/compat-table/es2016plus/#safaritp) (479 points, [188 comments](/comments/5h6fjn))
  1. [iOS10 has full ES6 support](https://kangax.github.io/compat-table/es6/#ios10) (262 points, [126 comments](/comments/57latg))
  1. You know you have done too much javascript ... (167 points, [77 comments](/comments/5f0lvn))

1. 1839 points, 7 submissions: /u/nightman
  1. [Front-End Developer Handbook 2017](https://www.gitbook.com/book/frontendmasters/front-end-handbook-2017/details) (437 points, [50 comments](/comments/5r9vay))
  1. [Computer Programming To Be Officially Renamed “Googling Stackoverflow”](http://www.theallium.com/engineering/computer-programming-to-be-officially-renamed-googling-stackoverflow/) (363 points, [67 comments](/comments/3dzra2))
  1. [Excited that OffscreenCanvas is finally happening: &lt;canvas&gt; that's usable in a worker 🤘Behind a flag in Chrome 60 and FF 44.](https://twitter.com/ebidel/status/975788240463585281) (324 points, [33 comments](/comments/85reh7))
  1. [Forget the Click Bait. Here’s What the JavaScript Job Market Really Looks Like in 2016.](https://medium.com/javascript-scene/forget-the-click-bait-here-s-what-the-javascript-job-market-really-looks-like-in-2016-ddfe0d39b467) (201 points, [105 comments](/comments/3x754z))
  1. [Polymer 1.0 - Production ready](https://www.polymer-project.org/1.0/) (187 points, [67 comments](/comments/37mgpz))
  1. [Service Worker in MS Edge - status: complete!](https://mobile.twitter.com/ebidel/status/991121376109981696) (173 points, [45 comments](/comments/8g700v))
  1. [Web Components have shipped in Firefox](https://mobile.twitter.com/rob_dodson/status/1054769558253256704?fbclid=IwAR1oP2nniRZt0LKF3DcjHWMBz1XYdRk7Q5S7RRldbCVc0zSPuHVWRlvmq2Q) (154 points, [17 comments](/comments/9qzcfo))

1. 1730 points, 6 submissions: /u/TheLarkInn
  1. [webpack awarded $125,000 from MOSS Program - Implementing WebAssembly first class integration](https://medium.com/webpack/webpack-awarded-125-000-from-moss-program-f63eeaaf4e15) (384 points, [15 comments](/comments/6qpw1h))
  1. [🎉 webpack 2.2: The Final Release 🎉](https://medium.com/webpack/webpack-2-2-the-final-release-76c3d43bf144#.8vrqeefq0) (379 points, [91 comments](/comments/5okc4d))
  1. [🚀webpack 4 beta released — try it today!🚀](https://medium.com/webpack/webpack-4-beta-try-it-today-6b1d27d7d7e2) (299 points, [58 comments](/comments/7sxevm))
  1. [webpack 3 Released: Delivers Scope Hoisting, Huge Runtime Improvements](https://medium.com/webpack/webpack-3-official-release-15fd2dd8f07b) (258 points, [43 comments](/comments/6i7xdz))
  1. [🎼webpack 4: released today!!✨](https://medium.com/webpack/webpack-4-released-today-6cdb994702d4) (239 points, [27 comments](/comments/80441g))
  1. [webpack 2.2: The Release Candidate](https://medium.com/webpack/webpack-2-2-the-release-candidate-2e614d05d75f#.3nrnoh6zc) (171 points, [44 comments](/comments/5idlgj))

1. 1726 points, 6 submissions: /u/kiarash-irandoust
  1. [Building a neural network in JS even if you don’t really understand neural networks](https://medium.com/@dsimmons_23530/you-can-build-a-neural-network-in-javascript-even-if-you-dont-really-understand-neural-networks-e63e12713a3) (477 points, [18 comments](/comments/84mkm6))
  1. [face-api.js — JavaScript API for Face Recognition in the Browser with tensorflow.js](https://medium.com/@muehler.v/face-api-js-javascript-api-for-face-recognition-in-the-browser-with-tensorflow-js-bcc2a6c4cf07) (322 points, [11 comments](/comments/8tuefb))
  1. [Console.rules(💪)](https://medium.com/@irenetomaini1/console-rules-b30560fc2367) (317 points, [38 comments](/comments/a22mo9))
  1. [CORS — Understanding it practically](https://medium.com/@niteshsince1982/cors-understanding-it-practically-9c401ed818cd) (248 points, [17 comments](/comments/8ivjiy))
  1. [Keep Code Consistent Across Developers The Easy Way — With Prettier &amp; ESLint](https://medium.com/@paigen11/60bb7e91b76c) (185 points, [109 comments](/comments/a8p2aj))
  1. [Regular expressions : Tricks you should know](https://medium.com/@davidmellul/regular-expressions-tricks-you-should-know-2976c7bd1be3) (177 points, [49 comments](/comments/8sqal2))

1. 1719 points, 5 submissions: /u/krasimirtsonev
  1. [Awesome cheatsheets](https://devhints.io/) (570 points, [18 comments](/comments/77ysds))
  1. [The Modern Javascript Tutorial](https://javascript.info/) (428 points, [39 comments](/comments/7ex21v))
  1. [The largest Node.JS best practices list](https://github.com/i0natan/nodebestpractices) (275 points, [59 comments](/comments/7b673j))
  1. [2048 - the most addictive game which I played recently](http://gabrielecirulli.github.io/2048/) (269 points, [51 comments](/comments/205j4u))
  1. [Everything I Know About The Script Tag](https://eager.io/blog/everything-I-know-about-the-script-tag/) (177 points, [18 comments](/comments/4pg117))

1. 1699 points, 5 submissions: /u/angelos_chalaris
  1. [I have been collecting useful Javascript code snippets for a little while. Here's a curated list of them, help me make it as complete as possible!](https://github.com/Chalarangelo/30-seconds-of-code) (732 points, [96 comments](/comments/7j37iu))
  1. [30-seconds-of-code: Curated collection of useful Javascript snippets that you can understand in 30 seconds or less.](https://github.com/30-seconds/30-seconds-of-code) (408 points, [35 comments](/comments/9j0z68))
  1. [A Beginner’s Guide to Progressive Web Apps &amp; the Frontend Web](https://hackernoon.com/a-beginners-guide-to-progressive-web-apps-the-frontend-web-424b6d697e35) (230 points, [10 comments](/comments/6nubz4))
  1. [Javascript Debugging Like a PRO](https://medium.com/appsflyer/10-tips-for-javascript-debugging-like-a-pro-with-console-7140027eb5f6) (174 points, [32 comments](/comments/81z3et))
  1. [Make your code easier to read with Functional Programming](https://medium.freecodecamp.org/make-your-code-easier-to-read-with-functional-programming-94fb8cc69f9d) (155 points, [27 comments](/comments/8h6swn))

1. 1635 points, 7 submissions: /u/DanielRosenwasser
  1. [Announcing TypeScript 3.0](https://blogs.msdn.microsoft.com/typescript/2018/07/30/announcing-typescript-3-0/) (366 points, [87 comments](/comments/935ow9))
  1. [Announcing TypeScript 3.2](https://blogs.msdn.microsoft.com/typescript/2018/11/29/announcing-typescript-3-2/) (285 points, [54 comments](/comments/a1lbdt))
  1. [Announcing TypeScript 2.0](https://blogs.msdn.microsoft.com/typescript/2016/09/22/announcing-typescript-2-0/) (251 points, [60 comments](/comments/53zp4o))
  1. [Announcing TypeScript 2.4](https://blogs.msdn.microsoft.com/typescript/2017/06/27/announcing-typescript-2-4/) (205 points, [35 comments](/comments/6ju0j3))
  1. [Announcing TypeScript 2.0 RC](https://blogs.msdn.microsoft.com/typescript/2016/08/30/announcing-typescript-2-0-rc/) (187 points, [67 comments](/comments/50bxrd))
  1. [Announcing TypeScript 3.1](https://blogs.msdn.microsoft.com/typescript/announcing-typescript-3-1/) (177 points, [26 comments](/comments/9jdl4l))
  1. [Announcing TypeScript 2.1](https://blogs.msdn.microsoft.com/typescript/2016/12/07/announcing-typescript-2-1/) (164 points, [69 comments](/comments/5h11ph))

1. 1614 points, 3 submissions: /u/putty27
  1. [VS Code (insider build) can now automatically update import paths when you move or rename a TypeScript or JavaScript file](https://twitter.com/mattbierner/status/1000069936897671168) (674 points, [49 comments](/comments/8madam))
  1. [Front-End Developer Handbook 2018 - A free, original book by the Frontend Masters team!](https://frontendmasters.com/books/front-end-handbook/2018/) (637 points, [59 comments](/comments/8b18y2))
  1. [Bringing interactive examples to MDN](https://hacks.mozilla.org/2018/03/bringing-interactive-examples-to-mdn/) (303 points, [9 comments](/comments/86c5ab))

1. 1537 points, 7 submissions: /u/speckz
  1. [5 Tips to Write Better Conditionals in JavaScript](https://scotch.io/bar-talk/5-tips-to-write-better-conditionals-in-javascript) (356 points, [109 comments](/comments/9ra0di))
  1. [Designing very large (JavaScript) applications](https://medium.com/@cramforce/designing-very-large-javascript-applications-6e013a3291a3) (259 points, [35 comments](/comments/8de4f1))
  1. [Node.js's npm Is Now The Largest Package Registry in the World](https://www.linux.com/news/event/Nodejs/2016/state-union-npm) (214 points, [49 comments](/comments/5nxzth))
  1. [gpu.js - GPU Accelerated JavaScript](http://gpu.rocks/) (195 points, [39 comments](/comments/6n9901))
  1. [JavaScript Is Eating The World](https://dev.to/anthonydelgado/javascript-is-eating-the-world) (176 points, [68 comments](/comments/6wcg54))
  1. [Hard-won lessons: Five years with Node.js](https://blog.scottnonnenberg.com/hard-won-lessons-five-years-with-node-js/) (170 points, [55 comments](/comments/66f190))
  1. [VS Code Extensions for Happier JavaScript Coding](https://hackernoon.com/vs-code-extensions-for-happier-javascript-coding-e258f72dd9c1) (167 points, [12 comments](/comments/8h0vrx))

1. 1506 points, 7 submissions: /u/clessg
  1. [The Sad State of Entitled Web Developers](https://medium.com/@unakravets/the-sad-state-of-entitled-web-developers-e4f314764dd) (273 points, [204 comments](/comments/40pag0))
  1. [The self-hating web developer](http://joequery.me/code/the-self-hating-web-developer/) (251 points, [93 comments](/comments/3dte2d))
  1. [ES7 Proposal: The Pipeline Operator](https://github.com/mindeavor/es-pipeline-operator) (246 points, [88 comments](/comments/3vox7x))
  1. [Mo.js – motion graphics for the web](http://mojs.io/) (205 points, [19 comments](/comments/3tn9t3))
  1. [React Native for Android: How we built the first cross-platform React Native app](https://code.facebook.com/posts/1189117404435352/) (189 points, [57 comments](/comments/3kxln2))
  1. [React v15.0](https://facebook.github.io/react/blog/2016/04/07/react-v15.html) (189 points, [49 comments](/comments/4dtbhz))
  1. [Async/await now in V8](https://codereview.chromium.org/2356943002/) (153 points, [52 comments](/comments/548i7p))

1. 1457 points, 7 submissions: /u/malyw
  1. [ECMAScript modules are implemented in Chrome 60](https://twitter.com/malyw/status/859199711118536704) (266 points, [84 comments](/comments/68ptjl))
  1. [Chrome DevTools Update: Display variable values inline while debugging](http://imgur.com/JxbZm1W) (253 points, [27 comments](/comments/30bc39))
  1. [ES7 async/await landed in Chrome](https://twitter.com/malyw/status/780453672153124864) (202 points, [72 comments](/comments/54lnrd))
  1. [Chrome DevTools Update: Node.js debugging in parallel with browser JS](https://blog.hospodarets.com/nodejs-debugging-in-chrome-devtools) (190 points, [8 comments](/comments/551krt))
  1. [Native ECMAScript (ES6) modules are implemented in Firefox 54](https://blog.hospodarets.com/native-ecmascript-modules-the-first-overview) (188 points, [55 comments](/comments/5t1dor))
  1. [ESLint v2.0.0 released](http://eslint.org/blog/2016/02/eslint-v2.0.0-released) (183 points, [7 comments](/comments/45gxvt))
  1. [ECMAScript modules shipped in Chrome](https://twitter.com/malyw/status/905250772148822016) (175 points, [56 comments](/comments/6ycpnu))

1. 1329 points, 1 submission: /u/drama_ostrich
  1. PSA: There are over 1000 people in the U.S. named ""Infinity"" and the jQuery .data() method attempts to convert to number when reading off the DOM (1329 points, [112 comments](/comments/8f57i1))

---
###Top Commenters
1. /u/Dr_Schmoctor (7500 points, 19 comments)
1. /u/kboy101222 (2323 points, 11 comments)
1. /u/phpdevster (2224 points, 100 comments)
1. /u/OriginalEXE (1662 points, 11 comments)
1. /u/wreckedadvent (1562 points, 182 comments)
1. /u/acemarke (1331 points, 142 comments)
1. /u/drcmda (1148 points, 295 comments)
1. /u/lhorie (1148 points, 110 comments)
1. /u/Shaper_pmp (1140 points, 98 comments)
1. /u/vinnl (1120 points, 270 comments)
1. /u/MoTTs_ (1117 points, 41 comments)
1. /u/senocular (1111 points, 75 comments)
1. /u/ImSuperObjective2 (1087 points, 54 comments)
1. /u/ForScale (1062 points, 65 comments)
1. /u/bterlson_ (1054 points, 107 comments)
1. /u/Geldan (960 points, 98 comments)
1. /u/grensley (942 points, 4 comments)
1. /u/pinano (937 points, 2 comments)
1. /u/CultLord (875 points, 11 comments)
1. /u/OddCoincidence (875 points, 1 comment)

---
###Top Submissions
1. [Pass by reference !== pass by value](https://media.giphy.com/media/xUPGcLrX5NQgooYcG4/giphy.gif) by /u/mburakerman (2642 points, [290 comments](/comments/6hz7o6))
1. Can you help me allow my router to accept 💩 as the SSID? by /u/Dr_Schmoctor (2241 points, [284 comments](/comments/5zcb8m))
1. [After learning JS more than a year ago and falling in love with React Native, this is my first project, Tour, a drag-drop trip planner.](https://v.redd.it/7hn79a37med21) by /u/VanaticalDesign (1966 points, [225 comments](/comments/al2vxa))
1. PSA: There are over 1000 people in the U.S. named ""Infinity"" and the jQuery .data() method attempts to convert to number when reading off the DOM by /u/drama_ostrich (1329 points, [112 comments](/comments/8f57i1))
1. [I built Apple Music using ReactJS, Redux, and Styled Components](https://v.redd.it/3qxy9xbbc5e11) by /u/TonyHawkins (1190 points, [112 comments](/comments/94mqj0))
1. [I’m harvesting credit card numbers and passwords from your site. Here’s how.](https://medium.com/@david.gilbertson/im-harvesting-credit-card-numbers-and-passwords-from-your-site-here-s-how-9a8cb347c5b5) by /u/chinchulancha (1155 points, [80 comments](/comments/7oke31))
1. Oracle Owns ""Javascript"", so Apple is taking down my app! by /u/imacpro1 (1119 points, [607 comments](/comments/8d0bg2))
1. [Github private repositories are free now](https://github.com/pricing) by /u/Kumagor0 (1036 points, [190 comments](/comments/adm7qq))
1. [Microsoft won't support IE8, IE9 and IE10 anymore after January 12, 2016](https://www.microsoft.com/en-us/WindowsForBusiness/End-of-IE-support) by /u/kasperpeulen (953 points, [206 comments](/comments/3u7l76))
1. [How it feels to learn Javascript in 2016](https://medium.com/@jjperezaguinaga/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f#.758uh588b) by /u/jjperezaguinaga (882 points, [264 comments](/comments/55oidt))

---
###Top Comments
1. 4053 points: /u/Dr_Schmoctor's [comment](/comments/5zcb8m//dex08fy?context=1) in Can you help me allow my router to accept 💩 as the SSID?
1. 3075 points: /u/Dr_Schmoctor's [comment](/comments/5zcb8m//dewyc6c?context=1) in Can you help me allow my router to accept 💩 as the SSID?
1. 1642 points: /u/OriginalEXE's [comment](/comments/5zcb8m//dewxta0?context=1) in Can you help me allow my router to accept 💩 as the SSID?
1. 1641 points: /u/kboy101222's [comment](/comments/5zcb8m//dewzqsu?context=1) in Can you help me allow my router to accept 💩 as the SSID?
1. 937 points: /u/grensley's [comment](/comments/8as6ns//dx14ag5?context=1) in I don't like prettier
1. 928 points: /u/pinano's [comment](/comments/8d0bg2//dxjgz7m?context=1) in Oracle Owns ""Javascript"", so Apple is taking down my app!
1. 875 points: /u/OddCoincidence's [comment](/comments/8d0bg2//dxje8lp?context=1) in Oracle Owns ""Javascript"", so Apple is taking down my app!
1. 816 points: /u/CultLord's [comment](/comments/82tt0v//dvcrpvy?context=1) in Help! I'm at the complete mercy of my developer.
1. 814 points: /u/timedrepost's [comment](/comments/9jw5iw//e6ulf5p?context=1) in One of the devs that does code review for my code keeps bringing this style note up, which I personally disagree with. Opinions?
1. 760 points: /u/PM_ME_YOUR_API_KEYS's [comment](/comments/8d0bg2//dxjmp1s?context=1) in Oracle Owns ""Javascript"", so Apple is taking down my app!

&gt;Generated with [BBoe](/u/bboe)'s [Subreddit Stats](https://github.com/praw-dev/prawtools)
",[Subreddit Stats] Since the beginning of time(ish)
487,2019-02-16 17:09:36,24,5,"Hey all,

I keep googling this, but it feels like unless you work in the industry, it's hard to know which frameworks are up and coming and which are slowly leaving the scene. I've seen Flutter, Electron, I know some Angular and React... Nothing seems to really fit the bill: \*\*what to use to build an app for both macOS and android, in javascript, without having to code the same thing for both platforms too often?\*\*

&amp;#x200B;

\- i mention javascript because this is what I know best, but typescript / java would be totally fine too

\- for some of the things I want to do, a web app would probably do the trick, but I'd still like to see if I can go further with native stuff on both platforms

&amp;#x200B;

I know this is probably a matter of personal taste and opinions, but please, tell me what you think!",Framework to build macOS &amp; android app?
488,2019-02-17 18:15:49,4,0,,"GitHub - m-nathani/node-typescript-starter: REST API using Node with typescript, KOA framework. TypeORM for SQL. Middlewares JWT (auth), CORS, Winston Logger, Error, Response"
489,2019-02-17 21:18:31,0,2,,"GitHub - m-nathani/node-typescript-starter: REST API using Node with typescript, KOA framework. TypeORM for SQL. Middlewares JWT (auth), CORS, Winston Logger, Error, Response"
490,2019-02-19 00:14:52,11,10,"Hi community,

So I've spent time in kotlin just enough to feel mostly comfortable using kotlin with react. Question, is this ignored in the industry? I mean, I would think most kotlin shops were and probably still are java shops and prob use spring/play frameworks as well. 

Are there any teams using this? I somewhat wish it was more widespread. Seems like it's going to be either typescript or flow for types or a new project manager that got the go ahead.

I know other languages wrap react as well like Scala and Ocaml I'm sure they are in the same boat of a few others; that or Im out of the loop.",Kotlin React
491,2019-02-19 22:34:18,0,1,"**Hi, I’m** [**Andrés**](https://github.com/musghost?utm_campaign=React%20Ninjas%20Newsletter&amp;utm_medium=email&amp;utm_source=Revue%20newsletter)**. I’m the curator of this weekly** [**React Ninjas newsletter**](https://www.getrevue.co/profile/Andres-from-Jexia)**. This newsletter is sent on Fridays and its crossposts appear on Medium, Dev.to or Habr.com. To avoid off-topic blogs for this subreddit, I activated useReducer and left out the pure React articles of the latest issue.** 

# Fundamentals

#### [Imperative vs. declarative JavaScript](https://dzone.com/articles/imperative-vs-declarative-javascript?utm_campaign=React%20Ninjas%20Newsletter&amp;utm_medium=email&amp;utm_source=Revue%20newsletter)

*By* [*Cliff Hall*](https://medium.com/@futurescale)

I recently did a JavaScript code review and came across a chunk of classic imperative code and thought, let’s improve the code by making it more declarative.

#### [Understanding Repaint and Reflow in JavaScript](https://blog.usejournal.com/what-the-heck-is-repaint-and-reflow-in-the-browser-b2d0fb980c08?utm_campaign=React%20Ninjas%20Newsletter&amp;utm_medium=email&amp;utm_source=Revue%20newsletter)

*By* [*Suhas More*](https://medium.com/@suhas010)

Recently, while researching what makes React’s virtual DOM so fast, I realized how little are we aware about JavaScript performance.

**More fundamentals:**

* [Four ES6 features I use a lot](https://guillaumevincent.com/2019/02/11/Four-ES6-features.html) — *By Guillaume Vincent*

# Best-practices

#### [Code smart, not hard](https://dev.to/solkimicreb/code-smart-not-hard-bb1?utm_campaign=React%20Ninjas%20Newsletter&amp;utm_medium=email&amp;utm_source=Revue%20newsletter)

*By* [*Bertalan Miklos*](https://medium.com/@solkimicreb)

A bunch of ideas for developers working on large production apps.

&amp;#x200B;

**More best-practices:**

* [Server-side apps with client-side rendering](https://reinink.ca/articles/server-side-apps-with-client-side-rendering) — *By* [*Jonathan Reinink*](https://medium.com/@reinink)
* [How to create a Redux reducer by convention](https://medium.freecodecamp.org/how-to-create-a-redux-reducer-by-convention-14f7e77bfc) — *By* [*Cristi Salcescu*](https://medium.com/@cristisalcescu)
* [Boost site performance by reducing JavaScript and CSS](https://dri.es/optimizing-site-performance-by-reducing-javascript-and-css) — *By* [*Dries Buytaert*](https://medium.com/@dries)
* [How I created my Zillow-like image display component](https://dev.to/andersjr1984/how-i-created-my-zillow-like-image-display-component-in-react-1lh1) — *By Jason Anderson*

# Tutorials

#### [How to use Typescript with React and Redux](https://medium.com/@rossbulat/how-to-use-typescript-with-react-and-redux-a118b1e02b76?utm_campaign=React%20Ninjas%20Newsletter&amp;utm_medium=email&amp;utm_source=Revue%20newsletter)

*By* [*Ross Bulat*](https://medium.com/@rossbulat)

Typescript is in its strongest position ever for making your React apps more stable, readable and manageable.

#### [How to detect a sequence of keystrokes in JavaScript](https://medium.com/javascript-in-plain-english/how-to-detect-a-sequence-of-keystrokes-in-javascript-83ec6ffd8e93?utm_campaign=React%20Ninjas%20Newsletter&amp;utm_medium=email&amp;utm_source=Revue%20newsletter)

*By* [*Vojislav Grujić*](https://medium.com/@vojislav.grujic)

Use JavaScript to react to the keyboard events, specifically, how to react to the specific key sequence that the user types.

&amp;#x200B;

**More tutorials:**

* [Build a React component library, style it with CSS in JS](https://techblog.commercetools.com/why-you-should-build-a-react-component-library-and-style-it-with-css-in-js-12397fd69c58) — *By* [*Malcolm Laing*](https://medium.com/@montezume)
* [Replace a hot path in your JavaScript with WebAssembly](https://developers.google.com/web/updates/2019/02/hotpath-with-wasm) — *By* [*Surma*](https://medium.com/@DasSurma)

# Tools

#### [Release Next.js 8](https://nextjs.org/blog/next-8?utm_campaign=React%20Ninjas%20Newsletter&amp;utm_medium=email&amp;utm_source=Revue%20newsletter)

*By* [*Tim*](https://medium.com/@timneutkens)*, Connor Davis &amp;* [*Shu Ding*](https://medium.com/@quietshu)

Next.js 8 introduces Serverless Mode, smaller bundles, performance improvements, and more.

#### [The React Native CLI has a new home](https://blog.callstack.io/the-react-native-cli-has-a-new-home-79b63838f0e6?utm_campaign=React%20Ninjas%20Newsletter&amp;utm_medium=email&amp;utm_source=Revue%20newsletter)

*By* [*Kacper Wiszczuk*](https://medium.com/@kacperwiszczuk)

You may have noticed that around 2 months ago the command line interface has been extracted from the core repository into @react-native-community/cli.

#### [48 amazing JavaScript open source projects (v.2019)](https://medium.mybridge.co/48-amazing-javascript-open-source-for-the-past-year-v-2019-ce51cdd10fb9?utm_campaign=React%20Ninjas%20Newsletter&amp;utm_medium=email&amp;utm_source=Revue%20newsletter)

*By* [*Mybridge*](https://medium.com/@Mybridge)

For the past year, we’ve compared nearly 20,000 JavaScript open source projects and libraries to pick Top 48 (0.24% chance).

# Perspectives

#### [ES6\~ One of its kind?](https://blog.usejournal.com/es6-one-of-its-kind-2864e59ab1b8?gi=295db4630b3f&amp;utm_campaign=React%20Ninjas%20Newsletter&amp;utm_medium=email&amp;utm_source=Revue%20newsletter)

*By* [*Shreya Saxena*](https://medium.com/@shreyasa02)

Recently ES6 came up as a knight in the shining armour, dimming every other possible version of it.

#### [React is changing how we think, again](https://rjzaworski.com/2019/02/react-is-changing-how-we-think-again?utm_campaign=React%20Ninjas%20Newsletter&amp;utm_medium=email&amp;utm_source=Revue%20newsletter)

*By* [*RJ Zaworski*](https://medium.com/@rjzaworski)

This post is part history lesson, part speculation — why web programming is hard, why it’s hard to fix, and how React might help.

#### [Help! None of my projects want to be SPAs](https://whatisjasongoldstein.com/writing/help-none-of-my-projects-want-to-be-spas/?utm_campaign=React%20Ninjas%20Newsletter&amp;utm_medium=email&amp;utm_source=Revue%20newsletter)

*By* [*Jason Goldstein*](https://medium.com/@jasongoldstein)

My strategy for dealing with the absurd pace of change in development is ignoring 99% of it and see if it goes away. Given the hype cycle, it works pretty well.

#### [The third party scripts that make the web slow](https://www.theregister.co.uk/2019/02/15/javascript_delay_analytics/?utm_campaign=React%20Ninjas%20Newsletter&amp;utm_medium=email&amp;utm_source=Revue%20newsletter)

*By Thomas Claburn,* [*Patrick Hulce*](https://medium.com/@patrickhulce)

Across top \~1 million sites, \~800 origins account for \~65% of all script execution time with the top 100 entities already accounting for \~59%. Blame third-party advertising and analytics scripts, shows [an extensive Github document from Patrick Hulce.](https://github.com/patrickhulce/third-party-web)

&amp;#x200B;

**More perspectives:**

* [Thoughts on Hooks](https://www.andrewnater.com/posts/thoughts-on-hooks/) — *By Andrew Nater*
* [PHP needs its own ES6](https://dev.to/hamatti/php-needs-its-own-es6-28fa) — *By* [*Juha-Matti Santala*](https://medium.com/@Hamatti)","Server-side apps with client-side rendering, 48 JS open-source tools &amp; 3rd party scripts that slow down the web"
492,2019-02-20 11:12:10,29,1,"Hi,

for past 2 years I have been working on REST APIs, but I have a new project - classic MVC PHP (Symfony) web application and I am wondering if jQuery is still relevant for DOM manipulation and effects (like when you check checkbox then disable this input etc.) in 2019. I don't want to do something like React when I would need to fill the ""data"" with AJAX from REST - I want to render a Twig with things I need and then manipulate a few things but with modern way (babel, typescript, gulp etc.)

&amp;#x200B;

Thanks!",Is jQuery still relevant in 2019? What to use for DOM manipulation for classic website
493,2019-02-25 04:40:30,5,4,"White searching something on stackoverflow i found people are searching a lot about Partial keyword of TypeScript. And thinks that this is similar to C# partial classes. But it is not. So decide to write a post about Partial type. To read more click the link below.

[http://www.gyanparkash.in/typescript-partial-type](http://www.gyanparkash.in/typescript-partial-type)",typescript partial type
494,2019-02-26 17:40:32,18,0,"A friend and I bet on who could write the fastest program for a school proyect, but mine was performing worse with exactly the same code on the same hardware. At first I thought we were running different versions of node, but we checked and they have the same (10.15.1) so then we checked tsc version (even if that shouldn't make a difference), and they both are 3.2.2 soooooo then he checked my screen and saw that instead of running `node foo.js` I was actually running `node foo.ts` but we thought this was not possible. Is this a new feature? or is something fishy happening here?

&amp;#x200B;

TL;DR I am able to run a typescript file directly on node",Is node js now able to run typescript?
495,2019-02-26 18:32:57,0,1,"How to get the text from Kendo UI React Editor to a state property?

I'm able to write text in the Kendo UI React Editor, but I can't find a way to retrieve the text from the editor to a variable, so I can use it to store to DB.

And if I'm using stuff like bold on my text, would it be encoded as HTML or? I'm programming with typescript react.

&amp;#x200B;

How can I retrieve the text in the editor?

&amp;#x200B;

Under is the code:

&amp;#x200B;

        render() {
            return (
              &lt;div&gt;
                &lt;Editor 
                                        name={""#editor""}
                                        value={this.state.text} 
                                        change={this.onChange} 
                                        select={this.onSelect} 
                                        keydown={this.onKeydown}                                                  
                                        tools= {[
                                            ""bold"",
                                            ""italic"",
                                            ""underline"",
                                            ""strikethrough"",
                                            ""justifyLeft"",
                                            ""justifyCenter"",
                                            ""justifyRight"",
                                            ""justifyFull"",
                                            ""insertUnorderedList"",
                                            ""insertOrderedList"",
                                            ""indent"",
                                            ""outdent"",
                                            ""createLink"",
                                            ""unlink"",
                                            ""insertImage"",
                                            ""insertFile"",
                                            ""subscript"",
                                            ""superscript"",
                                            ""tableWizard"",
                                            ""createTable"",
                                            ""addRowAbove"",
                                            ""addRowBelow"",
                                            ""addColumnLeft"",
                                            ""addColumnRight"",
                                            ""deleteRow"",
                                            ""deleteColumn"",
                                            ""viewHtml"",
                                            ""formatting"",
                                            ""cleanFormatting"",
                                            ""fontName"",
                                            ""fontSize"",
                                            ""foreColor"",
                                            ""backColor"",
                                            ""print""
                                        ]}/&gt;
                &lt;/div&gt;
        };
    
    

Here is my attempt on getting the value with jquery:

    
        onSaveInfoTagText = (e) =&gt; {
    
            try {             
                var editor = $(""#editor"").data(""kendoEditor"");
                var editorContent = editor.value();
                alert(editorContent);
                //Do Your stuff here 
    
            }
            catch (e) { }
        }  

The code under works partly if I define it like that, but it seems like it's adding a new kendo editor over the existing one. But I want to retrieve the already existing one, but it doesn't seem to work....

&amp;#x200B;

                // $(""#editor"").kendoEditor({ 
                //     tools: [ ""justifyLeft"", ""justifyCenter"", ""justifyRight"", ""justifyFull"", ""insertUnorderedList"", ""insertOrderedList"",
                //     ""indent"", ""outdent"", ""createLink"", ""unlink"", ""insertImage"", ""insertFile"", ""subscript"", ""superscript"", ""tableWizard"", ""createTable"", ""addRowAbove"",
                //     ""addRowBelow"", ""addColumnLeft"", ""addColumnRight"", ""deleteRow"", ""deleteColumn"", ""viewHtml"", ""formatting"", ""cleanFormatting"", ""fontName"",
                //     ""fontSize"", ""foreColor"", ""backColor"", ""print"", ""pdf""]
                // });
    
                var editor = $(""#editor"").data(""kendoEditor"");
    
                var htmlValue = editor.value();

&amp;#x200B;

Could someone help me?",How to retrieve the text value from Kendo UI Editor for React
496,2019-02-26 18:33:36,0,1,"How to get the text from Kendo UI React Editor to a state property?

I'm able to write text in the Kendo UI React Editor, but I can't find a way to retrieve the text from the editor to a variable, so I can use it to store to DB.

And if I'm using stuff like bold on my text, would it be encoded as HTML or? I'm programming with typescript react.

&amp;#x200B;

How can I retrieve the text in the editor?

&amp;#x200B;

Under is the code:

&amp;#x200B;

        render() {
            return (
              &lt;div&gt;
                &lt;Editor 
                                        name={""#editor""}
                                        value={this.state.text} 
                                        change={this.onChange} 
                                        select={this.onSelect} 
                                        keydown={this.onKeydown}                                                  
                                        tools= {[
                                            ""bold"",
                                            ""italic"",
                                            ""underline"",
                                            ""strikethrough"",
                                            ""justifyLeft"",
                                            ""justifyCenter"",
                                            ""justifyRight"",
                                            ""justifyFull"",
                                            ""insertUnorderedList"",
                                            ""insertOrderedList"",
                                            ""indent"",
                                            ""outdent"",
                                            ""createLink"",
                                            ""unlink"",
                                            ""insertImage"",
                                            ""insertFile"",
                                            ""subscript"",
                                            ""superscript"",
                                            ""tableWizard"",
                                            ""createTable"",
                                            ""addRowAbove"",
                                            ""addRowBelow"",
                                            ""addColumnLeft"",
                                            ""addColumnRight"",
                                            ""deleteRow"",
                                            ""deleteColumn"",
                                            ""viewHtml"",
                                            ""formatting"",
                                            ""cleanFormatting"",
                                            ""fontName"",
                                            ""fontSize"",
                                            ""foreColor"",
                                            ""backColor"",
                                            ""print""
                                        ]}/&gt;
                &lt;/div&gt;
        };
    
    

Here is my attempt on getting the value with jquery:

    
        onSaveInfoTagText = (e) =&gt; {
    
            try {             
                var editor = $(""#editor"").data(""kendoEditor"");
                var editorContent = editor.value();
                alert(editorContent);
                //Do Your stuff here 
    
            }
            catch (e) { }
        }  

The code under works partly if I define it like that, but it seems like it's adding a new kendo editor over the existing one. But I want to retrieve the already existing one, but it doesn't seem to work....

&amp;#x200B;

                // $(""#editor"").kendoEditor({ 
                //     tools: [ ""justifyLeft"", ""justifyCenter"", ""justifyRight"", ""justifyFull"", ""insertUnorderedList"", ""insertOrderedList"",
                //     ""indent"", ""outdent"", ""createLink"", ""unlink"", ""insertImage"", ""insertFile"", ""subscript"", ""superscript"", ""tableWizard"", ""createTable"", ""addRowAbove"",
                //     ""addRowBelow"", ""addColumnLeft"", ""addColumnRight"", ""deleteRow"", ""deleteColumn"", ""viewHtml"", ""formatting"", ""cleanFormatting"", ""fontName"",
                //     ""fontSize"", ""foreColor"", ""backColor"", ""print"", ""pdf""]
                // });
    
                var editor = $(""#editor"").data(""kendoEditor"");
    
                var htmlValue = editor.value();

&amp;#x200B;

Could someone help me?",How to retrieve the text value from Kendo UI Editor for React
497,2019-02-26 19:07:30,14,6,"I have my first typescript project set up, and am trying to deploy it. I'm using `ts-node` with `tsconfig-paths` to run it - my run dev script looks like this

    NODE_ENV=development ts-node -r tsconfig-paths/register src-ts/index.ts

I have an alias in my tsconfig set to

    ""paths"": {
      ""@*"": [""src/job/*""]
    },

And I'm just using `tsc` with a target set to es5 to build it.

Problem is, all the require's in the /dist folder still use the alias - `require('@config/my-file')` and it's breaking while I'm trying to use forever to start it

Is there a way to strip the aliases and replace with relative path names when building? This is a backend app so I'm not using webpack. Or, is there a more recommended way on building my app to be production ready?","Deploying a node Typescript server, while using aliases"
498,2019-03-05 04:10:30,0,4,"Github Homepage: [https://github.com/wspl/webpack-server-kit](https://github.com/wspl/webpack-server-kit)

&amp;#x200B;

This project was developed based on my individual project needs.

The main content is to reimplement the core logic of webpack-dev-middleware and webpack-hot-middleware with typescript and decouple from Express.

Based on this core module, the middleware of Express and Koa is provided out of the box. You can also serve the webpack development server on any server-side framework.

&amp;#x200B;

In addition to decoupling with Express, there is one difference in supporting the hosting of projects under sub-routing so that multiple webpack development servers can be served under one server instance.

&amp;#x200B;

The project is still under active development.

Welcome everybody to participate in the development of the project.","webpack-server-kit: A more customizable, less coupled webpack development server library"
499,2019-03-05 18:35:26,0,0,,"Graphql App using Node (Apollo Server) with typescript, KOA framework and Elasticsearch Client"
500,2019-03-05 22:01:35,8,0," I write my ReactJs code in a .tsx file and use tslint. The functions work as expected and produce the results I want but my linter complains about using both .bind() and () = &gt;

What is the optimal was to use and pass functions in a tsx file so typescript wont complain? aparently the two ways mentioned hurt the rendering and performance but they are the most common ways I've seen online that work.","Both bind and arrow functions throw errors when using typescript, is there a better way?"
501,2019-03-06 07:02:57,0,0,,Alert! - Graphql (Apollo Server) | Node with typescript | Elasticsearch Client - Starter Kit for the project !
502,2019-03-06 07:51:00,2,4,"I was talking to a buddy tonight who is doing a lot of typescript and we were just going over some things talking about method overloading. It got me thinking about what might happen with the nullable types on a method signature.. and I wrote a quick test. In running this the runtime is showing a preference to the signature that has a nullable char.. no matter which order I put it in the code. Any insight into what is going on here.. why it's not considered a compile error to allow what I would consider an ambiguous method overload?

&amp;#x200B;

&amp;#x200B;

class Program

{

static void Main(string\[\] args)

{

CallMethod(null, null, null);

}

&amp;#x200B;

public static void CallMethod(int? int1, int? int2, int? int3)

{

Console.WriteLine(""Called Method 1"");

}

&amp;#x200B;

public static void CallMethod(int? int1, int? int2, char? char1)

{

Console.WriteLine(""Called Method 2"");

}

}",Ambiguous Method Overload not Caught by Compiler
503,2019-03-06 14:30:45,19,1,"I used C# way back when and I remember being able to initialize a class something like this:

    class Person {
        constructor(name, age, gender) { /* boilerplate stuff */ }
    }
    
    var person = new Person(){age: 3}    // this would only set age, but I wouldn't have to pass in null for name/gender

Is there a way to do this in typescript?

Even better, is there a way to do this with just functions? If I have a function with a few optionals, it would be nice to be able to not have to call `whateverFunction(null, null, null, 4)` but instead `whateverFunction(){lastParameter: 4}`",C# Equivalent of initializing objects (not sure naming)
504,2019-03-07 17:03:44,9,1,"I am working on a web-based side project and trying to use TypeScript for the client-side code but can't figure out how to use modules. I checked Pluralsight, the TS docs and whatever I could find on Google but nothing seemed to actually hit on what I'm trying to do.

My base setup is this:

Movie.ts:

    export class Movie {
        public MovieID: number;
    }
    
MovieDetailEdit:

    import { TestMovie } from ""../classes/testmovie"";
    
    class TestMovieDetailEdit {
        movieID: number;
        thisMovie: TestMovie;
        constructor() {
            this.thisMovie = new TestMovie();
        }
    
        public alert(): void {
            alert(this.thisMovie.MovieID);
        }
    }

testpage.html

    &lt;!DOCTYPE html&gt;
    &lt;html lang=""en""&gt;
    &lt;head&gt;
        &lt;meta charset=""UTF-8""&gt;
        &lt;meta name=""viewport"" content=""width=device-width, initial-scale=1.0""&gt;
        &lt;meta http-equiv=""X-UA-Compatible"" content=""ie=edge""&gt;
        &lt;title&gt;Document&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;p&gt;
                This is a test page with a script.
        &lt;/p&gt;
        &lt;script src=""./js/controllers/MovieDetailEdit.js""&gt;&lt;/script&gt;
        &lt;script&gt;
            var x = new TestMovieDetailEdit();
            x.alert();
        &lt;/script&gt;
    &lt;/body&gt;
    &lt;/html&gt;

When I build the typescript in VS Code using tsc it compiles just fine. When I navigate to the page it fails loading MovieDetailEdit.js with the error `Uncaught SyntaxError: Unexpected token {` on the line `import { TestMovie } from ""../classes/testmovie"";` which is the first line of the emitted JS file.

I'm sure I'm not understanding something fundamental about ES6 modules and would appreciate an answer to what I'm looking for and any suggestions for good up to date documentation for ES6 modules that I should be reading at this point so I ask less basic questions. Thank you!",[Question] Using TypeScript In Website
505,2019-03-07 23:06:41,11,1,"I'd like to configure webpack to transpile (mocha + chai) tests written in typescript to javascript and them execute them. To that end, I have the *webpack.test.config.js* file below. Note: I've currently configured webpack to use _ts-loader_ and _mocha-loader_.

Unfortunately, when I execute `webpack --config webpack.test.config.js --env.dev`, I receive the error:

&gt; Module parse failed: Unexpected token (2:10) You may need an
&gt; appropriate loader to handle this file type.

How can resolve this error and achieve my aforementioned goal?


    const path = require('path');
    const CleanWebpackPlugin = require('clean-webpack-plugin');
    const outputPath = './bin/test';
    
    module.exports = env =&gt; {
      return {
        mode: env &amp;&amp; env.pro ? 'production' : 'development',
        context: path.resolve('src'),
        entry: {
          core: './test/typescript/core.spec.ts'
        },
        output: {
          filename: '[name].js',
          path: path.join(__dirname, outputPath)
        },
        devtool: 'source-map',
        plugins: [
          new CleanWebpackPlugin({
            dry: true,
            cleanOnceBeforeBuildPatterns: ['./bin/test/**/*']
          })
        ],
        module: {
          rules: [
            {
              test: /\.spec\.tsx?$/,
              use: ['mocha-loader', 'ts-loader'],
              exclude: /node_modules/
            }
          ]
        },
        resolve: {
          extensions: ['.tsx', '.ts', '.js']
        }
      };
    };",[Question] How to Test with Webpack via Mocha and Chai?
506,2019-03-10 15:27:26,8,3,"Here are my reasons:

* Legacy compatibility
   * Can easily use legacy javascript libraries
   * Can transpile to older ES standards
* Can use future standards now
   * again because of transpiling to older standard
   * With little more effort, the code can compile to webassembly by using compilers like assemblyscript. These compilers cannot support dynamic features, because types must be known at compile time. This is also to the advantage of developers to get rid of them, complete static typing can help reduce bugs. Typescript allows to do gradually
* Bugs reduced at compile time
* Performance. Statically typed language can easily be optimized, again webassembly comes into help
* Easy tooling support
* Low learning curve for already a javascript developer",Why typescript makes a lot of sense?
507,2019-03-10 16:17:26,9,5,"Here are my reasons:

* Legacy compatibility  

   * Can easily use legacy javascript libraries
   * Can transpile to older ES standards
* Can use future standards now  

   * again because of transpiling to older standard
   * With little more effort, the code can compile to webassembly by using compilers like assemblyscript. These compilers cannot support dynamic features, because types must be known at compile time. This is also to the advantage of developers to get rid of them, complete static typing can help reduce bugs. Typescript allows to do gradually
* Bugs reduced at compile time
* Performance. Statically typed language can easily be optimized, again webassembly comes into help
* Easy tooling support
* Low learning curve for already a javascript developer

Disadvantages

* build step requirement
* typescript code is not usable in browser",Why typescript makes a lot of sense?
508,2019-03-10 20:06:28,3,0,when i use \`import http from 'http'\` it doesn't find the module,How do I use 'http' in a typescript server
509,2019-03-12 02:31:38,0,1,"I'm sorry if title does not mean what I am trying to make it mean. I describe my ""issue"" in playground below.

[playground](http://www.typescriptlang.org/play/index.html#src=%0D%0A%0D%0Ainterface%20App%20%7B%0D%0A%20%20%20%20user%3A%20boolean%3B%0D%0A%20%20%20%20data%3A%20object%3B%0D%0A%7D%0D%0A%0D%0Aconst%20app%20%3D%20%7B%0D%0A%20%20%20%20user%3A%20true%2C%0D%0A%20%20%20%20data%3A%20%7Bstuff%3A%209%7D%0D%0A%7D%0D%0A%0D%0Aconst%20useApp%20%3D%20%3CT%20extends%20keyof%20App%3E(index%3A%20T)%20%3D%3E%20%7B%0D%0A%20%20%20%20return%20%7B%20%5Bindex%5D%3A%20app%5Bindex%5D%2C%20bar%3A%20'cat'%7D%3B%0D%0A%7D%0D%0A%0D%0A%2F%2F%20any%20way%20to%20enfore%20that%20it%20infers%20that%20%5Bindex%5D%20should%20translate%20to%20keyof%20App%3A%0D%0A%2F%2F%20r%20%3D%20%7B%20user%3A%20boolean%2C%20bar%3A%20foo%20%7D%0D%0A%2F%2F%20instead%20of%20%0D%0A%2F%2F%20r%20%3D%20%7B%20%5Bx%5D%3A%20boolean%20%7C%20%7B%20stuff%3A%20number%20%7D%20%7C%20foo%2C%20bar%3A%20foo%20%7D%0D%0A%0D%0Aconst%20r%20%3D%20useApp('data')%3B%0D%0A%0D%0A%2F%2F%20would%20love%20to%20do%3A%0D%0A%2F%2F%20const%20%7B%20data%2C%20initialising%20%7D%20%3D%20useApp('data')%3B%0D%0A%2F%2F%20to%20request%20parts%20of%20larger%20object%20)

Is it possible? ",Can you infer object key name like this?
510,2019-03-12 11:34:26,0,1,,"Graphql App using Node (Apollo Server) with typescript, KOA framework and Elasticsearch Client"
511,2019-03-12 14:32:23,1,0," There may be a lot of reasons for using Typescript but Domagoj Cerjan, a frontend developer in Oradian, chooses it because of its powerful type system, excellent tooling, and fantastic integration with IDEs and WebGL 2.0. But the latter still remains a low-level-ish API dealing with a bunch of byte buffers and implying particular rules, such as:

* what values can go to which arguments of functions;
* when and in which order these functions can be invoked.

As long as you can find all these rules in documentation only, you can easily mess something up, but your code will still compile. It would be much better if there were a solution for catching such errors at compile time. 

In his post for Serokell, Domagoj discusses how to utilize Typescript and its strong typing for making one of the most commonly used WebGL functions - a function which uploads an image to a texture - \`gl.texImage2D\` safe from runtime errors caused by not obeying aforementioned rules.

[https://serokell.io/blog/2019/03/12/catching-runtime-errors-typescript](https://serokell.io/blog/2019/03/12/catching-runtime-errors-typescript)",Catching runtime errors in compile time with - Typescript?
512,2019-03-14 18:05:39,8,48,"I've recently come across something I thought was really useful and wanted to share it with anyone else who used Typescript!

For a super long time I've wondered how to associate particular actions with types at compile-time. The classic example I've run in to time and again is associating a type of message with its respective payload. Let me try to explain with an example:

I have some message types:

    enum MessageType {
        START,
        KILL
    }

And types that represent the expected payload for each respective message, i.e:

    interface StartPayload {
        start: number
    }
    
    interface KillPayload {
        kill: string    
    }

And an `emitMessage` function which takes as parameters a message type and a payload:

    function emitMessage(msg: MessageType, payload: StartPayload | KillPayload) {
        switch(msg) {
            case MessageType.START: {
                // handle start
            } break;
            case MessageType.KILL: {
                // handle kill
            } break;
        }
    }

Naturally this doesn't work as we'd want, as the compiler can't infer the particular payload type expected for the given MessageType - you'll see that the IDE doesn't give you any hints when you go to call emitMessage:

[1)  Invalid input, 2) Valid input, 3) Incorrect input for START, but this is ignored by the compiler](https://i.redd.it/9k5652ojh4m21.png)

So, I wanted to make it impossible to provide the function with the incorrect payload type at compile-time, and make it super easy to figure out which fields are missing (if you use an IDE).

My solution as it turns out involves a (somewhat) obscure Typescript feature called [Index Types](https://www.typescriptlang.org/docs/handbook/advanced-types.html#index-types). By leveraging these, we can statically check that the payload type is valid like so:

    // Create an interface associating the message variants with their respective payloads
    // This acts as a kind of ""type directory"", which can be indexed into
    interface Payload {
        [MessageType.START]: StartPayload,
        [MessageType.KILL]: KillPayload
    }
    
    // Then we specify a generic Msg type, which we can use to index its payload type!
    function emitMessage&lt;Msg extends MessageType&gt;(msg: Msg, payload: Payload[Msg]) {
        switch(msg) {
            case MessageType.START: {
                // handle start
            } break;
            case MessageType.KILL: {
                // handle kill
            } break;
        }
    }

And voila! [My IDE now gives me proper type checking for the call to `emitMessage`.](https://i.redd.it/6j690eesh4m21.png)

Anyway, I hope this is useful to some of you! I'm personally gunna use it everywhere :)",Super useful feature I've found for associating enums to types using Index Types
513,2019-03-14 22:14:37,2,3,"Is there any way in typescript to achieve better type inference when conditional building objects?

Let's say you have a type defined as being one of 2 objects:

    type T = {
      value: string;
      type: '1';
    } | {
      value: string;
      type: '2';
    }

If we were to build this object with a conditional value, I'd expect the type to be valid:

    const obj: T = {
      value: 'string',
      type: true ? '1' : '2',
    }

How this gets evaluated as `{ value: 'string; type: '1' | '2' }` as opposed to our type T, giving an error.

Besides casting, what can be done, or is this just a limitation of the compiler?

Playground link: https://www.typescriptlang.org/play/#src=type%20T%20%3D%20%7B%0D%0A%20%20value%3A%20string%3B%0D%0A%20%20type%3A%20'1'%3B%0D%0A%7D%20%7C%20%7B%0D%0A%20%20value%3A%20string%3B%0D%0A%20%20type%3A%20'2'%3B%0D%0A%7D%0D%0A%0D%0Aconst%20bool%3A%20boolean%20%3D%20true%3B%0D%0A%0D%0Aconst%20stringObj%3A%20T%20%3D%20%7B%0D%0A%20%20value%3A%20'string'%2C%0D%0A%20%20type%3A%20bool%20%3F%20'1'%20%3A%20'2'%2C%0D%0A%7D",Deep type inference
514,2019-03-15 09:54:00,1,11,[https://medium.com/@arcanous/testing-your-typescript-code-with-ts-mockito-ac439deae33e](https://medium.com/@arcanous/testing-your-typescript-code-with-ts-mockito-ac439deae33e),Testing your TypeScript code with ts-mockito
515,2019-03-15 16:09:31,1,0,"Lot's of JavaScript developers are also happy do some TypeScript. If you ever need help with mocking for your tests, this is a great tool:

[https://medium.com/@arcanous/testing-your-typescript-code-with-ts-mockito-ac439deae33e](https://medium.com/@arcanous/testing-your-typescript-code-with-ts-mockito-ac439deae33e)",Testing your TypeScript code with ts-mockito
516,2019-03-18 10:15:56,4,2,"I'm trying to start an older angular application in docker. But when I run ""docker-compose up --build"" the client fails to compile because of the error:

&amp;#x200B;

&amp;#x200B;

    ERROR in node_modules/apollo-utilities/lib/util/mergeDeep.d.ts(2,52): error TS2370: A rest parameter must be of an array type.

&amp;#x200B;

&amp;#x200B;

Does anybody understand what this means? I updated all dependencies already.

Any help would be greatly appreciated!

here's the package.json:

&amp;#x200B;

    {
      ""name"": ""client"",
      ""version"": ""0.0.0"",
      ""scripts"": {
        ""ng"": ""ng"",
        ""start"": ""ng serve --host 0.0.0.0 --proxy-config proxy.config.json"",
        ""build"": ""ng build"",
        ""test"": ""ng test"",
        ""lint"": ""ng lint"",
        ""e2e"": ""ng e2e""
      },
      ""private"": true,
      ""dependencies"": {
        ""@angular/animations"": ""^7.2.9"",
        ""@angular/common"": ""^7.2.9"",
        ""@angular/compiler"": ""^7.2.9"",
        ""@angular/core"": ""^7.2.9"",
        ""@angular/forms"": ""^7.2.9"",
        ""@angular/http"": ""^7.2.9"",
        ""@angular/platform-browser"": ""^7.2.9"",
        ""@angular/platform-browser-dynamic"": ""^7.2.9"",
        ""@angular/router"": ""^7.2.9"",
        ""core-js"": ""^2.6.5"",
        ""rxjs"": ""~6.4.0"",
        ""tslib"": ""^1.9.3"",
        ""zone.js"": ""~0.8.29""
      },
      ""devDependencies"": {
        ""@angular-devkit/build-angular"": ""~0.13.6"",
        ""@angular/cli"": ""~7.3.6"",
        ""@angular/compiler-cli"": ""^7.2.9"",
        ""@angular/language-service"": ""^7.2.9"",
        ""@types/jasmine"": ""~3.3.10"",
        ""@types/jasminewd2"": ""~2.0.6"",
        ""@types/node"": ""~11.11.3"",
        ""codelyzer"": ""~4.5.0"",
        ""jasmine-core"": ""~3.3.0"",
        ""jasmine-spec-reporter"": ""~4.2.1"",
        ""karma"": ""~4.0.1"",
        ""karma-chrome-launcher"": ""~2.2.0"",
        ""karma-coverage-istanbul-reporter"": ""~2.0.5"",
        ""karma-jasmine"": ""~2.0.1"",
        ""karma-jasmine-html-reporter"": ""^1.4.0"",
        ""protractor"": ""~5.4.2"",
        ""ts-node"": ""~8.0.3"",
        ""tslint"": ""~5.14.0"",
        ""typescript"": ""~3.3.3333""
      }
    }",building client: error TS2370: A rest parameter must be of an array type.
517,2019-03-18 10:24:22,5,2,"I am pretty new to typescript. At work I had to use typescript with react to develop Sharepoint Online Framework (SPFx) Webparts. I liked how it worked overall and decided to give it a try at home.

I started a React-Typescript Project a few days ago and can't get over some linter rules I find unnecessary. I tried to do research on how to manipulate the tslint.json files to disable some of these rules but without any success.

The tslint.json extends ""tslint:recommended"", ""tslint-react"" and ""tslint-config-prettier""
I wanted to add custom rules in oder to overwrite *ordered-imports* and *max-classes-per-file*. I added these in the ""rules"" field but it didn't do any change.

Can someone please either explain how this works and how to override/deactivate it or provide resources because I did not find any that explained the topic easy enough for me. 

Everything I looked up just says ""add this and that rule"" but it won't do. Help.",TS Lint - help needed
518,2019-03-18 19:03:14,8,2,"Today at work I had to type an object that has some fixed fields but also acts as a dictionary. 

```typescript
interface Foo {
  foo: string;
}

interface Bar {
  bar: number;
}

interface WeirdRecord {
  f: Foo; // error
  [key: string]: Bar;
}
```

Above code doesn't compile - TypeScript complains that `Foo` is not assignable to `Bar`.

My colleague suggested using a conditional type:

```typescript
type WeirdRecord2 = {
  [T in string]: T extends 'f' ? Foo : Bar; 
}

function foo(wr: WeirdRecord2) {
  return wr.f.foo; // error
}
```

But this also doesn't work since `f` infers to `string`, not to a literal type.

Any ideas whether this is possible at all?",Typing a dictionary with some additional fields
519,2019-03-19 10:39:31,2,2,"/u/garybernhardt raised a question on twitter: how can we type functions like `Object.assign` in a generic, type safe manner. Seems that `Object.assign` itself is safe only for 4 items, and above 4 items it just returns `any`.

https://twitter.com/garybernhardt/status/1107041684800442368

I tried to implement it, and it works as you would expect, but I'm not quite sure it's not a TypeScript bug actually. Why so? because I couldn't think about a way to represent this type in other type systems like OCaml or Haskell, but maybe this is because the TypeScript type system is different (every expression can have more than one type, like `string | number`, where in OCaml you only have one type, that can be a union of multiple variants). This is the solution I had:

```ts
function assign&lt;Source extends {}, Result extends Source&gt;(
    target: Source,
    ...sources: Source[]
): Pick&lt;Result, keyof Source&gt; {
    return Object.assign(target, ...sources);
}
```

[You can see it on the playground](https://www.typescriptlang.org/play/index.html#src=function%20assign&lt;Source%20extends%20%7B%7D%2C%20Result%20extends%20Source&gt;(%0D%0A%20%20%20%20target%3A%20Source%2C%0D%0A%20%20%20%20...sources%3A%20Source%5B%5D%0D%0A)%3A%20Pick&lt;Result%2C%20keyof%20Source&gt;%20%7B%0D%0A%20%20%20%20return%20Object.assign(target%2C%20...sources)%3B%0D%0A%7D%0D%0A%0D%0Alet%20x%20%3D%0D%0A%20%20%20%20assign(%0D%0A%20%20%20%20%20%20%20%20%7B%20hello%3A%20""world""%20%7D%2C%0D%0A%20%20%20%20%20%20%20%20%7B%20something%3A%20""is%20good""%20%7D%2C%0D%0A%20%20%20%20%20%20%20%20%7B%20""yes""%3A%20true%20%7D%2C%0D%0A%20%20%20%20%20%20%20%20%7B%20yes%3A%20""hello""%20%7D%0D%0A%20%20%20%20)%3B%0D%0A%0D%0Ax.hello%3B%0D%0Ax.world%3B%20%2F%2F%20error!%0D%0Ax.yes%3B)

What do you think?

I also [opened a PR](https://github.com/Microsoft/TypeScript/pull/30481) for TypeScript, but I'm not sure how to make it pass. If any of you are in the TypeScript team, please let me know how to update the core stuff there so it would pass, or give me a review of some sort!

Thanks",Generic Object.assign declaration
520,2019-03-21 21:47:36,24,17,"I am currently working on a component which uses a specific object multiple times in different methods. Let's just say this object looks as follows:

`let object = {key: 'k', value: 'v'}`

this object is being passed as a parameter multiple times so I would have some functions like `foo(object: any){}`

which is why I decided to create a new model class with a key and value attribute:

&amp;#x200B;

`export class Model{`

`constructor(public key: string, public value:string);`

`}`

so the `method foo(object: any)` changes to `foo(object: Model).` That's all I need the model for. This seems a bit overkill (is it?) so I researched and found an article which suggests to use **Type** over **Any** as best practice. 

&amp;#x200B;

So I would use `type Model{ key: key, value: value}` in the component. Is this a better alternative than using a model or the type any?

I am kind of new to typescript and overwhelmed with all the posibilities.

&amp;#x200B;

&amp;#x200B;",Avoid any; type everything
521,2019-03-22 19:06:54,5,1,"Hey everyone! I am trying to use gulp to automate the concatination and minification process of js and css (from less).   


I have the following gulpfile: 

&amp;#x200B;

    /// &lt;binding ProjectOpened='js, watch-js, default, less-to-css, watch-less' /&gt;
    ""use strict"";
    
    var gulp = require(""gulp"");
    var clean = require(""gulp-clean"");
    var ts = require(""gulp-typescript"");
    var uglify = require(""gulp-uglify"");
    var less = require('gulp-less');
    var stripCSSComments = require('gulp-strip-css-comments');
    var cleanCSS = require(""gulp-clean-css"");
    var rename = require(""gulp-rename"");
    var concat = require(""gulp-concat"");
    
    gulp.task(""default"", [""js"", ""less-to-css"", ""transfer-favicon""]);
    
    gulp.task(""production"", [""default"", ""concat-js"", ""clean-js""/*, ""concat-css"", ""clean-css""*/]);
    
    //JS Tasks
    gulp.task(""js"", function () {
    
        return gulp.src(""Scripts/**/*ts"")
            .pipe(ts())
            .pipe(gulp.dest(""wwwroot/js/""));
    
    });
    
    gulp.task(""concat-js"", function () {
        gulp.src('wwwroot/js/*.js')
            .pipe(concat('scripts.js'))
            .pipe(gulp.dest('wwwroot/js'))
            .pipe(rename('bundled-scripts.min.js'))
            .pipe(uglify())
            .pipe(gulp.dest('wwwroot/js'))
    });
    
    gulp.task(""clean-js"", function () {
        gulp.src(['wwwroot/js/*.js', '!wwwroot/js/bundled-scripts.min.js'])
            .pipe(clean())
    });
    
    //CSS Tasks
    gulp.task(""less-to-css"", function () {
        gulp.src(""Assets/less/*.less"")
            .pipe(less())
            .pipe(stripCSSComments())
            .pipe(gulp.dest(""wwwroot/css""));
    });
    
    gulp.task(""minify-css"", function () {
        gulp.src('wwwroot/css/*.css')
            .pipe(cleanCSS())
            .pipe(rename({
                extname: '.min.css'
            }))
            .pipe(gulp.dest(""wwwroot/css/""))
    });
    
    gulp.task(""clean-css"", [""minify-css""], function () {
        gulp.src(['wwwroot/css/**/*.min.css', '!wwwroot/css/**/css-bundle.min.css'])
            .pipe(clean())
    });
    
    gulp.task(""concat-css"", function () {
        gulp.src(""wwwroot/css/*.css"")
            .pipe(concat('css-bundle.css'))
            .pipe(gulp.dest(""wwwroot/css/""))
    });
    
    //Miscellaneous Tasks
    gulp.task(""transfer-favicon"", function () {
        return gulp.src(""Assets/favicon.ico"")
            .pipe(gulp.dest(""wwwroot/""))
    });
    
    //Watch Tasks
    gulp.task(""watch-js"", [""js""], function () {
        return gulp.watch([""Scripts/*.ts""], [""js""]);
    });
    
    gulp.task(""watch-less"", [""less-to-css""], function () {
        return gulp.watch([""Assets/less/*.less""], [""less-to-css""]);
    });

&amp;#x200B;

&amp;#x200B;

When I run the `production` task manually in individual segments (i.e `default` first, then `concact-js` then `clean-js`, everything works as expected! I get one `.min. js` file, and one `.min.css` in their respective `js` and `css` folders under `wwwroot`. But, when I try to run production, it doesn't run any of my `concact-*` or `clean-*` functions. Any ideas as to what might be the cause of this? Is it because I don't have production bound to `ProjectOpened`?

  
I am using [ASP.Net](https://ASP.Net) Core, if that's any help.

&amp;#x200B;

Thanks! ",Question about Gulp Tasks
522,2019-03-24 19:44:17,3,3,"Hey, In the past couple of days, I've been working on a open source library that will generate a random content based on a predefined schema. The idea is that it can used to generate simple random content but also more advanced type of content if you wish to.  A live demo and more information is available inside the github repo. 

It actually uses typescript and it is really beginner friendly and I encourage everyone to contribute if they wish.  

I'm trying to document everything and explain how the library works to allow others to use / contribute to it easily.  

You can check it out [here](https://github.com/avivbiton/RandomContentGenerator)  

&amp;#x200B;

Feedback is really welcome, I am not the best programmer and I am open to feedback.  

Thanks for reading this far.",I made a small open-source library that generates random content
523,2019-03-25 15:31:52,0,1,"I have a project where I am generating applications based on the config that is being sent to me a json. The config is generated by a system that allows the user to layout the site. In order to more dynamically let the site generator know what components are available to configure I would like to go over a certain src directory and return the class name and public properties of the class. Are there any tools that you would recommend for this use case? I have found  [https://www.npmjs.com/package/typescript-json-schema](https://www.npmjs.com/package/typescript-json-schema) and it seems promising. Does this sound like a good package for my use case? Or perhaps could the typescript compiler be used for this sort of thing? If so, is there good documentation on this anywhere?

&amp;#x200B;

I did start to go down the later road but realized that its hard to find good documentation on using the typescript compiler in this way (e.g. how to target just public properties).  


Here is my go at using the typescript compiler: 

    const path = require('path');
const ts = require('typescript');
const fs = require('fs');

const filePath = path.resolve(
 'C:\\src\\app\\shared\\components\\basic\\text\\text.component.ts'
);

const program = ts.createProgram([filePath], {});
const source = program.getSourceFile(filePath);
const printer = ts.createPrinter();

const simpleTransformer = context =&gt; {
 const visit = node =&gt; {
 if (ts.isDecorator(node)) {
 return undefined;
    }
 return ts.visitEachChild(node, child =&gt; visit(child), context);
  };
 return node =&gt; ts.visitNode(node, visit);
};

const result = ts.transform(source, [simpleTransformer]);

fs.writeFileSync(
 path.resolve('C:\\src\\component-output.txt'),
 printer.printFile(result.transformed[0])
);

&amp;#x200B;

This merely outputs the class to a text file but does seem promising and to have the potential to allow me to export information about my components in any format. 

&amp;#x200B;

Any thoughts on what to use in this situation? Does anyone know of any good documentation for my use case? 

&amp;#x200B;",Export Class Information
524,2019-03-26 02:11:55,1,2,"Starting a new project soon that uses typescript and graphql. I’ve used a fair number of the graphql tools out there in the past and specifically for typescript I’ve used the graphql type generator to build ts types from my schema. 

For this project I’m looking at using TypeGraphQL and was wondering what people’s experiences with it are like. Most importantly, what are the downsides to using it? A little scared of throwing out the graphql syntax I’m used to using to define schemas but that may not be a good reason to avoid this package. ",What are the downsides of using TypeGraphQL package?
525,2019-03-26 12:18:30,13,3,"My question came from reading this article: [https://medium.com/@jtomaszewski/why-typescript-is-the-best-way-to-write-front-end-in-2019-feb855f9b164](https://medium.com/@jtomaszewski/why-typescript-is-the-best-way-to-write-front-end-in-2019-feb855f9b164)

What are your thoughts... is TypeScript the best way to write Front-end? ",Is TypeScript becoming the best way to write Front-end?
526,2019-03-27 07:07:24,3,1,"I am using browserify +  tsify + grunt ( + node-sass for scss ). I also considered webpack and recently heard about rollup. Anyone got experience with those?

The tasks runnning for dist are 

    grunt.registerTask('build:dist', [
        'clean:dist',
        'browserify:dist', // writes a single js file to include in the browser
        'sass:dist', // writes css file
        'ts:dist' // writes declaration files
    ]);
 
where i need `ts:dist` to write declaration files, which tsify [does not support](https://github.com/TypeStrong/tsify/issues/15).

While i am somewhat happy with the resulting binary, it includes some overhead and a big configuration file. If anyone is interested, [here](https://gitlab.com/Tanuel/tmwindow/blob/master/Gruntfile.js) is my gruntfile

I was wondering if any of you ever created a frontend library with typescript and how you provide compiled assets. Looking forward to a discussion.",How do you bundle frontend libraries written in TypeScript?
527,2019-03-27 23:38:10,1,8,"Hello, I'm looking for some exercices with Typescript to practice all the advanced concepts like Record, Pick, Exclude... Even some katas with solution in typescript would be cool.

&amp;#x200B;

Thx",Looking for typescript exercices
528,2019-03-28 16:34:58,0,1,"I have read a lot of posts on how people are testing TypeScript, and getting a bit confused why anyone would want something like `ts-node`? We are testing the JavaScript which is compiled from the TypeScript, so it is really just the automatically generated JS we are acting on in the tests. Am I missing something?

I have these extensions installed:

[https://marketplace.visualstudio.com/items?itemName=hbenl.vscode-test-explorer](https://marketplace.visualstudio.com/items?itemName=hbenl.vscode-test-explorer)

[https://marketplace.visualstudio.com/items?itemName=hbenl.vscode-mocha-test-adapter](https://marketplace.visualstudio.com/items?itemName=hbenl.vscode-mocha-test-adapter)

and these dependencies are needed (also Mocha if you also want to use the command line, otherwise it is installed by mocha test adapter):

    ""devDependencies"": {
 ""@types/mocha"": ""^5.2.6"",
 ""esm"": ""^3.2.21"",
 ""jsdom"": ""^14.0.0"",
 ""typescript"": ""^3.3.4000""
  }

add this to the VSCode `settings.json` for the VS Code extension to load a settings file before running the tests. Here we also load ESM to enable full ES6 module support in Node:

    ""mochaExplorer.require"": [""esm"", ""test/setup.js""],

The settings file loads the node `assert` command into the global scope and sets up JSDom also in the global scope for testing:

**setup.js**

    // -----------------
// Node assert
// -----------------
import { strict as assert } from 'assert';
global.assert = assert;

// -----------------
// JSDom
// -----------------
import jsdom from 'jsdom';
const { JSDOM } = jsdom;
const { document } = new JSDOM(`
&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;body&gt;
    &lt;canvas id=""gameCanvas"" width=""650"" height=""650""&gt;&lt;/canvas&gt;
  &lt;/body&gt;
&lt;/html&gt;
`).window;
global.document = document;
global.window = document.defaultView;

// -----------------
// Mocks
// -----------------
global.Audio = class {};
global.Image = class {};
window.requestAnimationFrame = callback =&gt; {
 setTimeout(callback, 0);
};
window.HTMLCanvasElement.prototype.getContext = () =&gt; {
 return {
 fillRect: () =&gt; {},
 clearRect: () =&gt; {},
 getImageData: (x = 0, y = 0, w = 0, h = 0) =&gt; ({
 data: new Array(w * h * 4),
    }),
 setLineDash: () =&gt; {},
 getLineDash: () =&gt; [],
 measureText: (text = '') =&gt; ({
 width: 12 * (text.length || 0),
 height: 14,
    }),
 putImageData: () =&gt; {},
 createImageData: () =&gt; [],
 setTransform: () =&gt; {},
 resetTransform: () =&gt; {},
 drawImage: () =&gt; {},
 save: () =&gt; {},
 fillText: () =&gt; {},
 restore: () =&gt; {},
 beginPath: () =&gt; {},
 moveTo: () =&gt; {},
 lineTo: () =&gt; {},
 closePath: () =&gt; {},
 stroke: () =&gt; {},
 strokeRect: () =&gt; {},
 strokeText: () =&gt; {},
 t2: () =&gt; {},
 transform: () =&gt; {},
 translate: () =&gt; {},
 scale: () =&gt; {},
 rotate: () =&gt; {},
 arc: () =&gt; {},
 arcTo: () =&gt; {},
 fill: () =&gt; {},
 rect: () =&gt; {},
 quadraticCurveTo: () =&gt; {},
 createLinearGradient: () =&gt; ({
 addColorStop: () =&gt; {},
    }),
 createPattern: () =&gt; ({}),
 createRadialGradient: () =&gt; ({
 addColorStop: () =&gt; {},
    }),
 bezierCurveTo: () =&gt; {},
 drawFocusIfNeeded: () =&gt; {},
 clip: () =&gt; {},
 ellipse: () =&gt; {},
 isPointInPath: () =&gt; true,
 isPointInStroke: () =&gt; true,
  };
};

All files in the project are using `import`/`export` syntax and explicitly use the `import X from './classes/X.js';`**.js** extension so it works right out the box in the browser. I just type `tsc --watch` and any save reflects in the browser right away :)

A test file looks something like,

    import Hero from '../src/classes/hero.js';
    
    describe('Hero class', () =&gt; {
      describe('spawnPosition()', () =&gt; {
        it('should return an array [ 2, 4 ] when it is passed parameters of 4 and 8', () =&gt; {
          // Arrange
          const testData = 4;
          const testData2 = 8;
          // Act
          const result = Hero.spawnPosition(testData, testData2);
          // Assert
          assert.deepStrictEqual(result, [2, 4]);
        });
      });
    });

Which can be run by the Test Explorer extension, or if you wish on the command line:

      ""scripts"": {
        ""test"": ""mocha --reporter min --require esm --require /fullpathname/setup.js""
      },

I Know the JSDom docs say don't use the global scope 'hack', but any other related solution looks like an over engineered nightmare.

It seems to be working well, can anyone spot any **potential problems or possible improvements**?

Cheers!","My way to unit test browser code using TypeScript, Mocha, VSCode Test Explorer UI + Mocha Test Explorer. What do you think?"
529,2019-03-28 21:55:45,2,27,,"Use eslint with typescript, today!"
530,2019-03-29 17:07:18,1,1,"I have an Angular 1 style dependency injector that I wrote 4 years or so ago, I rewrote it in typescript a year or two ago, and am recently coming back to it. I'm looking to achieve some functionality that I'm reasonable certain is possible. I'm ignoring a bunch of implementation details in my example code below.

I have removed most/all of the TS that I think is needed, hoping to get a fresh opinion without tainting it.

    // The injector class

    class magicStringInjector {
      private things: {[key: string]: any}
      constructor(){
        this.things = {}
      }
      add(n, o){
        this.things[n] = o
      }
      inject(fn){
        // imagine esprima getting the parameter list, then looking them up by propname
        // Or the Angular 1 version which used a Regex
        let args = [this.things['A'], this.things['B'], this.things['C']]

        return fn.apply(null, args)
      }
    }

Basically, I'm trying to get type inference on the function that is to be injected. I'm pretty sure all of the information needed can be provided through generics and extending interfaces, but I can't see a clear/easy way to do it. 

    let magic = new magicStringInjector()
    
    d.add('A',{name: ()=&gt; 'A'})
    d.add('B',{run: ()=&gt; 'Runs'})
    d.add('C',{jump: ()=&gt; 'Jumps'})
    
    d.inject((A, B, C) =&gt; {
      // Want Type inference on these parameters.
      // A.name B.run C.jump etc.
      A.name() 
    })

My real implementation is quite a bit more complex than this, has child injectors and other complications, but I think if this can be made to work on the minimal example, it can be made to work on the actual code.

Any Ideas?",Help with typing a magic string type Angular 1 style dependency injector?
531,2019-03-30 00:13:54,7,2,"Hello all,

I'm working on a monolith back-end project in TypeScript, my company has a plan to scale to over a million of users in a very short time and I need to implement a very robust and scalable architecture for it. I think the best option might be using microservices.

I need some advice on how to implement it and also some recommendations for resources to learn about this topic. Should I buy a book or a course? Which one? 

I found only one book about microservices in TypeScript ([https://learning.oreilly.com/library/view/typescript-microservices/9781788830751/](https://learning.oreilly.com/library/view/typescript-microservices/9781788830751/)).

Should I learn Kubernetes too?  I have some experience with Docker already.",[ADVICE] TypeScript for microservice project
532,2019-03-31 19:48:46,4,14,"Hi all,

I hope it's the right place to ask here, since the typescript issue tracker on github is not meant as a place to ask questions.

&amp;#x200B;

I find the use of \`extends\` in context of input query types somehow misleading.

To illustrate what I mean consider the following function:

`function getProperty&lt;T, K extends keyof T&gt;(obj: T, key: K) {`

  `return obj[key];` 

`}`

Maybe it's because usually I'm confronted with \`extends\` in context of OOP, where in my understanding it forms a constraint on the minimal set rather than an exact set of allowed values (something as a lower bound). Therefore, I find the following way of expressing the desired constraint more appropriate (which is obviously wrong):

`function getProperty&lt;T, K = keyof T&gt;(obj: T, key: K) {`

  `return obj[key];` 

`}`

&amp;#x200B;

Can anybody explain me what I'm missing or is wrong in my understanding?",Isn't the `extends` keyword misleading in context of a input query type?
533,2019-04-01 19:13:20,2,3,"👋 A few months ago I wrote a small feature flag library in JS that enforced some constraints I wanted for a project.

It wraps itself around a configuration object and initially performs some checks that error out with helpful messages if the the structure isn't sound.

&amp;#x200B;

I am now trying to port it over to TypeScript and I have already been able to remove a class of tests as they structure can no longer be unsound based on the types. Yay! 😃

&amp;#x200B;

But now I want to go further, and would like to enforce that the name of the feature flag used in \`flags.isEnabled(name)\` be one of the flag names from the original config. Here is an example of something that should give a compile error:

    const featureFlags = saneFlags.wrap({
      flags: {
        dynamic_contact_form: {
          description: 'The new form that fills in form contacts from the current account',
          enabled: true
        }
      }
    })
    
    const x = featureFlags.isEnabled('not_a_configured_feature') // should fail
    
    const y = featureFlags.isEnabled('dynamic_contact_form') // should work

 

This is the PR [https://github.com/felipesere/sane-flags/pull/7](https://github.com/felipesere/sane-flags/pull/7) or branch [https://github.com/felipesere/sane-flags/tree/typescriptify](https://github.com/felipesere/sane-flags/tree/typescriptify) that I am trying to work on.

&amp;#x200B;

My biggest question revolves around creating a union based on the properties of some type \`C extends Config\` and then using that in all places where I currently use a \`string\` feature flag.

&amp;#x200B;

Any advice/feedback/help is welcome 😃

&amp;#x200B;",Help in creating strict types for feature flag library
534,2019-04-01 22:46:26,4,4,"I am using the typescript compiler to generate from metadata about certain classes in my program. All is going well except the only thing I can't get a handle on is how to get the imports for a class.

&amp;#x200B;

I have used ts.isImportSpecifier(node), ts.isImportClause(node) and ts.isImportDeclaration(node) and in inspecting the nodes that meet this criteria I don't see import paths.

&amp;#x200B;

I see a lot like this ( RuntimeModel is the name of an import ) but no path information:

    {""pos"":113,""end"":126,""flags"":0,""transformFlags"":536870912,""kind"":253,""name"":{""pos"":113,""end"":126,""flags"":0,""escapedText"":""RuntimeModel"",""modifierFlagsCache"":536870912,""transformFlags"":536870912},""modifierFlagsCache"":536870912}

Any idea how to get import information using the compiler?",Get Import Paths Using the Typescript Compiler
535,2019-04-02 16:13:03,2,10,"I have an angular component (multiples actually but here is one example) that I would like to use the typescript compiler to analyze and export type information about the class properties. So I'd like to eventually get something like 

    { ""name"": ""PageNavButtonComponent"", properties: [{""name"": ""link"", ""properties"":  [{""name"": ""title"", ""type"": ""string""}, [{""name"": ""href"", ""type"": ""string""}, [{""name"": ""tag"", ""type"": ""string""}, [{""name"": ""type"", ""type"": ""string""}, [{""name"": ""validate"", ""type"": ""boolean""}]}]. 

How would one do this using the typescript compiler?

&amp;#x200B;

Here is an example component I'd like to analyze:

    import { Component, ChangeDetectionStrategy, Input } from '@angular/core';
import { Link } from '../../models/link.model';
import { NavigationService } from '../shared/services/navigation/navigation.service';

@Component({
 selector: 'page-nav-button',
 templateUrl: './page-nav-button.component.html',
 styleUrls: ['./page-nav-button.component.less'],
 changeDetection: ChangeDetectionStrategy.OnPush
})
export class PageNavButtonComponent {

  @Input() link: Link;

 constructor(private navigationService: NavigationService) { }

 onClick() {
 this.navigationService.navigate(this.link);
  }

}

Here is my type definition for Link:

    export interface Link {
 title: string,
 href?: string,
 tag?: string,
 type: string,
 validate?: boolean
}

&amp;#x200B;",Using the TypeScript Compiler to Get Type Information
536,2019-04-05 21:16:00,24,11,"Answers to this question seems ungooglable or maybe don't exist.  Maybe ""reasonable testing"" is the crux of the question.",Anybody have an example of a bug that typescript would catch that JS with reasonable testing wouldn't?
537,2019-04-06 04:43:27,6,0,,Would there be any real advantages or disadvantages to having browsers natively support typescript?
538,2019-04-06 15:08:34,0,1,,Made a little icecast player in typescript
539,2019-04-06 18:20:50,3,0,"I realize I can peak the definitions in VSCode, but as a newcomer to TS this is virtually useless if I don’t know the type exists to begin with.

I.E. if intellisense doesn’t happen to pick it up (and it often doesn’t) then I’m left either making my own type (which negates the purpose of having pre-defined types) or a just don’t use one at all.

It seems like there should be documentation on the intended use cases for each custom type definition.

I find the React @types particularly useless as I have the chicken/egg scenario where I’m like, “ How the hell am I supposed to learn this if I can’t find it, don’t know it exists and there’s no documentation????!!!”

I find the lack of documentation on MS’s end for using typescript is also very annoying; I’m surprised it’s taken off like it has when the barrier to entry is so infuriatingly high and the tutorials I’m finding just jumping into concepts that aren’t fully explained.

Can somebody help me out here with some good learning resources and explain why the hell we’re supposed to dig through node module code to find a type definition?",How do you find type definitions documentation?
540,2019-04-07 13:35:50,5,6,"I'm learning about decorators and there is one example in the [documentation](https://www.typescriptlang.org/docs/handbook/decorators.html) that explains how to override the constructor.

This particular example uses Generics but i find the syntax a bit weird:

    function classDecorator&lt;T extends {new(...args:any[]):{}}&gt;(constructor:T) { ... }

So here's my question: can anyone dissect and explain part by part what exactly that generic type means? Specifically the type after the extends: `{new(...args:any[]):{}}`",Don't understand this generic type in class decorator.
541,2019-04-08 16:32:55,28,18,"For about a year now I've been cooking this project. It is an ORM heavily inspired by Doctrine, quite similar to TypeORM, but with some significant design differences (mainly the identity map). There are still lots of features I would like to cover, but the core thing is pretty solid now I believe. Currently it supports MongoDB, MySQL, PostgreSQL and Sqlite.

I would love to hear some feedback, and ideally some advices on where/how to promote the project. I've just published an article about it on Medium, and asked DailyJS to promote it, not sure what to do next. 

I have very few followers on social media (and almost none of them are relevant for such a project), so I am looking for correct channels where to start. 

GH repo:  [https://github.com/B4nan/mikro-orm](https://github.com/B4nan/mikro-orm)

Docs: [https://b4nan.github.io/mikro-orm/](https://b4nan.github.io/mikro-orm/)

Article: [https://medium.com/@b4nan/introducing-mikro-orm-typescript-data-mapper-orm-with-identity-map-9ba58d049e02](https://medium.com/@b4nan/introducing-mikro-orm-typescript-data-mapper-orm-with-identity-map-9ba58d049e02)",MikroORM - TypeScript data-mapper ORM with Identity Map for mongo/mysql/postgres/sqlite
542,2019-04-09 18:23:55,0,1,"Since I came back to work monday I've been unable to get VS Code to provide any TS support (other than syntax highlighting). Type errors don't get underlined, hovering over variables just says ""loading..."" forever, auto-complete doesn't work. I tried disabling every extension, reinstalling VS Code, and deleting the typescript cache in \`\~/Library/caches\`. No luck though.  


Has anyone else run into this issue?",VS Code TS support broken since last update?
543,2019-04-09 23:13:25,5,5,"I've completely converted to Typescript and am a total believer!

I recently made \[gcf-decorators\]([https://www.npmjs.com/package/gcf-decorators](https://www.npmjs.com/package/gcf-decorators)) and \[tsc-parsers\]([https://www.npmjs.com/package/tsc-parsers](https://www.npmjs.com/package/tsc-parsers)) as a fun way to dip my feet into typescript!

I was mostly seeking feedback, and if these are really following the proper typescript library conventions. I did my best in developing these to follow the conventions I could find - and links like \[this one\]([https://www.tsmean.com/articles/how-to-write-a-typescript-library/](https://www.tsmean.com/articles/how-to-write-a-typescript-library/)) were pretty useful, but was seeking feedback from more experienced typescript users.",Made my first (two) Typescript libraries!
544,2019-04-10 03:59:20,6,2,"Hi ,

Please help to shed light on below code paragraph:

    export const Button: React.ComponentType&lt;Button.PropsType&gt;
    	= function MyButton({ ... }) {
    		return &lt;BaseButton ... /&gt;;
    	};
    export namespace Button {
    	export interface PropsType {
    		readonly label: string;
    		onClick?(): void;
    	}
    }
    export default Button;

I got 2 questions:

**Question 1**\&gt;

&amp;#x200B;

Generally, I understand but not deep enough, the meaning of export const Button, and export namespace Button. But I guess there could be a more proround rules and usage for having these 2 exports within one typescript file.

&amp;#x200B;

I don't understand what is the benefit of having namespace Button, and const Button within a same file?

Why don't we name have different name for them? E.g as below:

namespace ButtonAttributes {

    namespace ButtonAttributes {
    	export interface ButtonPropsType {
    		...
    	}
    }

**Question 2**\&gt;

When we do ""export default Button"", whether it is exporting ""const Button"", or ""namespace Button""? Why?

&amp;#x200B;

Thank you so much.","Typescript: convention of having ""namespace"" and ""const"" in one file"
545,2019-04-10 08:53:22,3,15, [https://dev.to/andreasbergqvist/typescript-get-types-from-data-using-typeof-4b9c](https://dev.to/andreasbergqvist/typescript-get-types-from-data-using-typeof-4b9c),TypeScript - get types from data using typeof
546,2019-04-10 15:27:37,15,5,Es6 brought Javascript closer to typescript. I'm wondering if future Javascript versions will make typescript obselete.,Will typescript eventually be obselete with improvements to javascript?
547,2019-04-11 02:04:03,2,1,"Hey r/typescript!

TS noob here.

I'm using a library, `lib.js` that I've added via a script tag in the html.

`lib.js` doesn't use any exports and just has a function `transpose()` which I call directly as  `transpose();`

How do I reference/import it in TypeScript?

&amp;#x200B;

Thanks in advance!",How to import a function from an external library that doesn't use exports?
548,2019-04-12 07:20:21,13,2,"Working on a project with a team, and we have the idea to decide on an interface for our core data objects and share this so that we can in parallel develop parts according to the interfaces without worrying about the implementation.. basic stuff.

The problem is we're having trouble finding a way to sync and share the types.

This is a small time private project so pushing to @types and waiting for the pull request to resolve is not an option.

Is there any way for us to make an npm package where we can pull the package and have access to the types?

we are fine with having a single maintainer that will update the types.

We have published npm packages before with actual typescript classes etc and have it working fine. 

We tried to just export interfaces in the index.ts file, and npm publish but ofcourse the index.js is mostly empty.

Furthermore where someone npm install's the package, they get a 'cannot find module' problem on the import statement:

import * as x from 'testInterfacePackage'


Anyone have any idea? I know there can be some solutions with sharing the type and linking it with npm link or, playing with the typeRoots in tsconfig,

But is there any easier way to just share an interface?

The ideal workflow is we create a set of interfaces, tell everyone to just npm install the package, and then everyone is on the same page and uses those interfaces in their code.

Then if later we realise we forgot a property, or need something else, we update the package, everyone runs npm update, and their code breaks with red-lines indicating what needs to be fixed to incorporate the interface change.",Sharing types with team?
549,2019-04-12 12:09:49,2,1,"I'm trying to make a typescript module but I'm not sure how to set up specific syntax.

What Typescript code should I use so that this would work?

```
&gt;&gt;&gt; helloWorld.foo(""bar"")
&gt;&gt;&gt; ""bar""
```",Defining function object
550,2019-04-14 02:44:24,0,5," **Sample architecture**  with new technologies and best practices:

&amp;#x200B;

 [https://github.com/rafaelfgx/DotNetCoreArchitecture](https://github.com/rafaelfgx/DotNetCoreArchitecture)

&amp;#x200B;

 **Technologies**

* [.NET Core 2.2](https://dotnet.microsoft.com/download)
* [ASP.NET Core 2.2](https://docs.microsoft.com/en-us/aspnet/core)
* [Entity Framework Core 2.2](https://docs.microsoft.com/en-us/ef/core)
* [C# 7.3](https://docs.microsoft.com/en-us/dotnet/csharp)
* [Angular 7.2](https://angular.io/docs)
* [Typescript 3.2](https://www.typescriptlang.org/docs/home.html)
* [HTML](https://www.w3schools.com/html)
* [CSS](https://www.w3schools.com/css)
* [SASS](https://sass-lang.com/)
* [UIkit](https://getuikit.com/docs/introduction)
* [JWT](https://jwt.io/)
* [Swagger](https://swagger.io/)
* [FluentValidation](https://fluentvalidation.net/)
* [Scrutor](https://github.com/khellang/Scrutor)
* [Serilog](https://serilog.net/)
* [Docker](https://docs.docker.com/)

&amp;#x200B;

**Practices**

* Clean Code
* SOLID Principles
* DDD (Domain-Driven Design)
* Code Analysis
* Inversion of Control
* Unit of Work Pattern
* Repository Pattern
* Database Migrations
* Authentication
* Auhorization
* Logging","Architecture with .NET Core 2.2, C#, ASP.NET Core, Entity Framework Core, Angular 7, Clean Code, SOLID, DDD, Code Analysis and Docker."
551,2019-04-14 22:35:06,14,1,"all the half-filled and broken/incorrect type definitions under DefinitelyTyped. I had to fork the markdown-it definitions  (which was created by a third-party, not the markdown-it devs) and manually start patching it to get my code to compile.

&amp;#x200B;

The efficiency gains kinda go away when you're forced to cleanup all of the low quality third-party definitions just have tsc stop complaining.",The absolute worst part of typescript is...
552,2019-04-15 09:24:47,5,1,"There is a create-react-app project setup with flow.
We want to migrate it to typescript.


Following instructions here  
https://facebook.github.io/create-react-app/docs/adding-typescript  
I added typescript.  


Now I get compile errors that types can only be used in `.ts` files.  

If I change js files to ts typescript being stricter than flow starts complaining with a lot of errors. So I have to rewrite the whole app at once.

What are the ways to workaround this and migrate to ts incrementally?",How to incrementally migrate CRA flow to typescript
553,2019-04-16 00:30:30,12,3,"So I'm pretty new to Typescript, but at work I'm trying to help TS adoption on our very large project. However, currently the typechecking analysis through Webstorm *and* VSCode is very slow and I believe its hurting adoption and the general perception Typescript due to how slow typchecking can be. Often it can it can up to a minute or longer to for either IDE to perform its typechecking to show an error or update a reference.
I'm wondering if its due to how we have our project set up?

For ease of introduction, my coworkers set up Typescript to rely more on the IDE and the Typescript Language Service, use ESLint (typescript-eslint plugin) instead of TSLint and disable emitting and any compilation. 

Here's our tsconfig. Do we have something setup incorrectly? Or is TS generally just slow on large projects?


    {
      ""compilerOptions"": {
        ""target"": ""esnext"",
        ""moduleResolution"": ""node"",
        ""allowJs"": true,
        ""noEmit"": true,
        ""strict"": true,
        ""module"": ""esnext"",
        ""isolatedModules"": false,
        ""esModuleInterop"": true,
        ""resolveJsonModule"": true,
        ""noUnusedLocals"": true,
        ""noUnusedParameters"": true,
        ""preserveConstEnums"": true,
        ""removeComments"": false,
        ""lib"": [""esnext"", ""dom""],
        ""baseUrl"": ""."",
        ""paths"": {
          // ...
        },
        ""experimentalDecorators"": true,
        ""disableSizeLimit"": true,
        ""jsx"": ""react"",
        ""types"": [""node"", ""jest""]
      },
      ""include"": [
        ""src/**/*"",
      ],
      ""exclude"": [
        ""dist/**/*"",
        ""node_modules/**/*"",
      ]
    }",Slow typechecking on large project?
554,2019-04-16 20:10:00,0,2,"Hi. I've set up a mousedown event listener in a React Hook and now want to unsubscribe from it during the hook cleanup phase but I'm getting [this](https://imgur.com/Sty2IFn) typescript error. Any ideas how to solve this? 

I've seen multiple similar issues on TypeScript's github, but each one got closed without any solution.

Thanks",Mouse event listener issue - React
555,2019-04-20 12:39:16,4,3,"Hi Guys,

I just wrote a new article about creating an immutable object/array using Typescript.

You can check it here:

[https://www.imkrish.com/immutable-object-array-using-typescript/](https://www.imkrish.com/immutable-object-array-using-typescript/)",The simple way to create immutable object/array using Typescript
556,2019-04-20 22:00:52,8,0,"My understanding is that classes are just syntactic sugar over prototypes, and I like the sugar. but I'm curious, is there a way to compile typescript classes strictly into prototypes without any reference or use of classes in the outputted JavaScript? 

thanks!",how to convert typescript classes to javascript prototypes?
557,2019-04-21 06:51:47,5,1,"Hey everyone, 

This is my first article and also first post on this sub. Any comments/critique is welcome. Who knows, maybe some of you might like my solution and adopt it?

[https://dev.to/kcvgan/my-take-on-concise-promise-handling-in-typescript-g2h](https://dev.to/kcvgan/my-take-on-concise-promise-handling-in-typescript-g2h)",My take on concise promise handling in TypeScript
558,2019-04-24 00:30:30,16,17,,Joining a new team that uses typescript in parts of the repository and javascript in the rest. It is a react/redux app and we are expected to use typescript for new development but there is no plan for migrating legacy code. Any advice or gotchas I should keep in mind?
559,2019-04-24 04:54:35,5,3,"I created a typescript file as below:

    export interface Lion {
    	meow(): void;
    }
    
    export interface Zebra {
    	run(): void;
    }
    
    export type ExtractCat&lt;A&gt; = A extends { meow(): void } ? A : never;
    
    export type Animal = Lion | Zebra;
    
    export type Cat = ExtractCat&lt;Animal&gt;;

I want to verify the outcome of the above ""distributive conditional types"" of Cat: i.e it is resolved to be ""Lion""

Is there anyway which I could do that?

&amp;#x200B;

\- I know an IDE like Intellij can do this, or tslint supports this, or compile command ""tsc"" also reveals this , but I want to have a better way that could help the developer while he is composing to have the result/outcome of that conditional.

&amp;#x200B;

Thank you.","Typescript - How to visualize or how to inspect the outcome of ""distributive conditional types"""
560,2019-04-25 19:32:37,3,2,"Actually I'm not sure how to call it (maybe Tagged Component?), but as for me it seems like very useful pattern in some cases.

**First of all - example use cases of SuperComponent implemented with this experimental lib:**

    // `e`  is of type React.MouseEvent&lt;HTMLInputElement, MouseEvent&gt;
    &lt;SuperButton type=""with-checkbox"" onClick={e =&gt; { }} /&gt;
    
    // `e`  is of type React.MouseEvent&lt;HTMLButtonElement, MouseEvent&gt;
    &lt;SuperButton type=""with-label"" label="""" onClick={e =&gt; { }} /&gt;
    
    // Error below: Title is only in with-label
    &lt;SuperButton type=""with-checkbox"" title="""" /&gt;

**Library solves issues when I was trying to implement it just by making tagged union of Components' Props:**

* as we have facade Component (SuperComponent in our case), while union of Props works well, defaultProps cannot be discriminated properly. It means, that if property is in defaultProps of some component, that property will be visible to TypeScript as Required in SuperComponent
* properties that don't exist in some Component of type='x', but exist in any other Component, should be explicitly banned (type `never`) for SuperComponent with type='x'

**When this library is totally not needed:**

* when only Functional Components are used (as there instead of defaultProps default values of function parameters can be used)
* when TypeScript isn't used. This experimental code **IS ONLY ABOUT TYPES**

[Source code and usage example](https://github.com/ibezkrovnyi/typescript-experiments/blob/master/react/super-component/src/SuperButton.tsx#L13)",React Super Component in TypeScript
561,2019-04-26 10:55:31,2,3,"Basically, I'm reading this article: [https://dev.to/busypeoples/notes-on-typescript-mapped-types-and-lookup-types-i36](https://dev.to/busypeoples/notes-on-typescript-mapped-types-and-lookup-types-i36)

 While I redo his example for ""Mapped Type and Lookup Types"" on VSCode, I received a different outcome.

&amp;#x200B;

[This picture displays the different between my code and the article's output.](https://i.redd.it/xnjip47y9lu21.png)

I wonder whether there is a difference between my TypeScript's version and the author's version?

&amp;#x200B;

Or I have to change this condition ""**undefined extends Type\[Key\] ? never : Key**"" into something else.

&amp;#x200B;

I think a lot about why ""id: never"" and ""name: never"". They had been defined as: ""id: number"" and ""name: string"" which mean Typescript would **NOT** allow ""undefined"" to be assignable to id &amp; name. How could the ternary condition ends up with ""id: never"" and ""name: never""

&amp;#x200B;

Thank you so much for your help.",How to filter an optional attribute for this specific case
562,2019-04-26 21:29:02,38,1,"I was happily learning how to use typescript, and  I go to build a new file today and I hit that error. I have installed typescript 4 times since, and it still won't recognize the tsc command anywhere. What on earth happened? I haven't done any programming since I closed it yesterday. So what's going on here?","TSC is not recognized as the etc, etc etc... It worked yesterday but doesn't today? I don't understand."
563,2019-04-28 07:31:11,3,3,"Hi dear javascript ppl,

&amp;#x200B;

to develop my skills, i want to learn ORM's. I thought Typeorm would be good, but after some reading i am not that sure anymore.

What is the best ORM for JS, documentation, interface and productionready-wise? I also would like to use typescript.

[Some](https://www.slant.co/topics/11235/~javascript-orms) say loopback from IBM would be the best.

&amp;#x200B;

Can you share your experiences?",Looking for a good stable ORM in JS (best with TS support?) also capable of SSR (isomorphic) - any thoughts?
564,2019-04-29 13:48:30,1,6,,Force methods checking for decorators in typescript &lt;3
565,2019-04-30 16:58:23,3,6,"A wonderful article on TypeScript interfaces. 

&amp;#x200B;

 [https://blog.logrocket.com/interfaces-in-typescript-what-are-they-and-how-do-we-use-them-befbc69b38b3](https://blog.logrocket.com/interfaces-in-typescript-what-are-they-and-how-do-we-use-them-befbc69b38b3)",Interfaces in TypeScripts
566,2019-05-02 08:25:29,2,3,"I often look at the implementation of classes/methods/functions/etc when using third party libraries to understand what is going on. Using an IDE it is normally trivial to navigate to a definition, but when using typescript it navigates to the \`\*.d.ts\` stubs instead, and the builds  that ship with the installation are a bit cumbersome to navigate manually.

&amp;#x200B;

is there any way to simplify this process? like potentially install the TS source along side the library",What is the best way to analyze typescript libraries installed with npm/yarn?
567,2019-05-03 15:07:21,5,11,"Live: [http://ts-spaceinvaders.example.mikemitterer.at/](http://ts-spaceinvaders.example.mikemitterer.at/)   
GitHub: [https://github.com/MikeMitterer/ts-spaceinvaders](https://github.com/MikeMitterer/ts-spaceinvaders)

https://i.redd.it/ackua7lgh0w21.jpg

I ported my DART-Version to TS and I'm using VUE/Vuex as UI-Framework  


WebSite: [https://www.mikemitterer.at/2019/05/03/typescript-spaceinvaders/](https://www.mikemitterer.at/2019/05/03/typescript-spaceinvaders/)",You remember SpaceInvaders? - Here is my TypeScript version (VUE as UI Framework)
568,2019-05-04 15:46:27,2,7,"I have a project that's gaining some bit rot due to multiple refactors.

We have some dead parts of the code that I'd like to find and remove.  Code that's just not used anymore.  

I just want to find them and delete them...",Best way to find orphan/unused typescript files?
569,2019-05-04 22:04:05,0,2,,"3D Shed Designer - Made with react, Babylonjs &amp; typescript"
570,2019-05-06 23:14:54,6,8,"So I am trying to install typescript on my laptop and and having an issue after doing the following steps:

&amp;#x200B;

Laptop: MBP 2017 running macOS Mojave.

&amp;#x200B;

Steps:

1. \- Downloaded Node JS
2. \- Typed the following in Command Prompt:  *sudo npm install -g typescript*
3. \-  Then ran  tsc --version and got the following error:

&amp;#x200B;

*-bash: tsc: command not found*",Installation Issue
571,2019-05-07 11:02:00,0,1,,TypeScript Express Starter Kit: (typescript/node/express/postgresql/typeorm/jest/jwt)
572,2019-05-07 21:45:55,0,0,"Hello guys.

I am searching the whole day for a tutorial on bundling a typescript + bootstrap project but I can't find anything!

Any ideas?

Thank you!",How to bundle a typescript + bootstrap project?
573,2019-05-07 23:03:59,0,1,"Mine is about 15 - 18 seconds after initial. 

It is a webpack build with image caching, babel for js, tsc for typescript, using ""cheap-module-source-map"".

I have found that using babel-loader with preset-typescript has erroneous compilation so couldn't go with that. Ts-loader with transpileOnly:true is slower than straight up tsc. So I stayed with tsc only approach.

&amp;#x200B;

I am trying to see if I have done a decent job at doing my webpack config, so please share your experiences with trying to optimize for speed and share your current time to re-compile.

&amp;#x200B;

Thank you.",can you share your re-compile speed for your typescript project ?
574,2019-05-08 14:30:44,1,4,"I followed the ambient module pattern for an app's typings as demonstrated here: [https://github.com/piotrwitek/react-redux-typescript-guide/tree/master/playground](https://github.com/piotrwitek/react-redux-typescript-guide/tree/master/playground)

&amp;#x200B;

Basically, in a typings file, included in tsconfig's ""include"", I declare \`MyTypes\` as shown here: [https://github.com/piotrwitek/react-redux-typescript-guide/blob/master/playground/typings/modules.d.ts](https://github.com/piotrwitek/react-redux-typescript-guide/blob/master/playground/typings/modules.d.ts)

&amp;#x200B;

Then, throughout the app, I can sprinkle other \`types.d.ts\` files and extend \`MyTypes\` as shown here: [https://github.com/piotrwitek/react-redux-typescript-guide/blob/master/playground/src/store/types.d.ts](https://github.com/piotrwitek/react-redux-typescript-guide/blob/master/playground/src/store/types.d.ts)

&amp;#x200B;

And, in other files I can import \`MyTypes\` without having eslint complain about circular references, or enable accidental circular references. An example of that is here: [https://github.com/piotrwitek/react-redux-typescript-guide/blob/af7d940a215fcd3fcd1ea40129478a4b65a54e13/playground/src/features/app/epics.ts](https://github.com/piotrwitek/react-redux-typescript-guide/blob/af7d940a215fcd3fcd1ea40129478a4b65a54e13/playground/src/features/app/epics.ts)

&amp;#x200B;

But, I'm not finding any other documentation of doing this which leads me to wonder if this is a good practice?",Is defining an ambient module for app-wide types a good idea?
575,2019-05-10 13:09:04,16,11,"I'm sending JSON objects between a server and my typescript frontend (using websockets). When my frontend receives a JSON object from the server, I want it to verify that the JSON's properties match the type I've defined for it in typescript. Does Typescript have something builtin that makes this possible?",Checking object schema at runtime?
576,2019-05-10 14:45:26,1,0,"I just want to share some of my build-time results

I'm using WP 4.31.0, TS 3.4.5, Babel 7.4.4, ATS-Loader 5.2.1

&amp;#x200B;

**webpack.js:**

    module.exports = {
    
    module: {  
     rules: [

// Speed: \~3000ms (https://github.com/s-panferov/awesome-typescript-loader#loader-options)  
// { test: /\\.tsx?$/, loader: 'awesome-typescript-loader',  
//     options: {  
//         configFileName: path.resolve(\_\_dirname, 'tsconfig.lib.json'),  
//         useBabel: true,  
//         babelCore: ""@babel/core"", // needed for Babel v7  
// }},  
// Speed: \~1000ms  
// { test: /\\.tsx?$/, use: \[{ loader: 'babel-loader'}, { loader: 'ts-loader',  
//         options: {  
//             configFile: path.resolve(\_\_dirname, 'tsconfig.lib.json'),  
//             compilerOptions: {  
//                 incremental: true,  
//             },  
// }}\], exclude: /node\_modules/ },  
// Speed: \~750ms  
// { test: /\\.tsx?$/, loader: 'ts-loader', options: { configFile: path.resolve(\_\_dirname, 'tsconfig.lib.json') } },  
// **Speed: \~400ms**  
{ test: /\\.(ts|js)x?$/, exclude: /node\_modules/, loader: 'babel-loader' },

            ]
        }
    }

I was highly impressed about the huge difference!

400ms for Babel compared to \~3000ms for awesome-typescript-loader

Here is the project I used for those build-time-tests: [https://github.com/MikeMitterer/typescript-starter](https://github.com/MikeMitterer/typescript-starter)","WebPack speedtests with ts-loader, babel 7, awesome-typescript-loader"
577,2019-05-13 01:35:55,12,3,"Hi all,

&amp;#x200B;

I have couple of open source projects on github, one of them is a typescript implemented library for bidirectional peer-to-peer media streaming/sharing, transfers of arbitrary data using WebRTC technology.

 [https://github.com/vardius/peer-data](https://github.com/vardius/peer-data).  


And lately I have encountered similar solution written in javascript, providing similar/same functionality.

[https://github.com/feross/simple-peer](https://github.com/feross/simple-peer)  


And I was wondering why this one is much more popular than the solution I have implemented ? Maybe some of you have some ideas what would be a reason ? Maybe I can improve something ? I don't think my solution is bad in fact I think it is done well. However there is almost no community response.

&amp;#x200B;

Is it the API that library provides ? What are main factors for choosing one over another ?",I want to ask you all for feedback
578,2019-05-13 15:02:36,2,0,"IntelliJ/WebStorm offers [inspections](https://www.jetbrains.com/help/resharper/Reference__Code_Inspections_TYPE_SCRIPT.html) as a good static code analysis tool. And IntelliJ/WebStorm allows to define the desired [code style](https://www.jetbrains.com/help/webstorm/settings-code-style-typescript.html) and format the code automatically. But there are IDE independent tools like TSLint and Prettier for the same purpose. The configuration can be shared in the form of config files in all cases.

With the IntelliJ/WebStorm tools I see the benefits of a nice UI to configure them. The obvious downside would be to be coupled to a certain tool, but that is not so important in my case since anyone in the team has an IntelliJ Ultimate license anyway. However may someone *wants* to use VS Code or another editor instead - who knows.

What would you recommend and why? What analysis and formatting rules are more powerful or useful?",IntelliJ/WebStorm Inspections + Code Style vs TS Lint + Prettier
579,2019-05-15 22:12:50,2,1,[removed],help! browser application typescript
580,2019-05-16 12:05:23,1,2,"Hi folks. This is a surprisingly difficult topic as there are plenty of articles with outdated apis. This [blog](https://alanocoder.com/how-to-publish-typescript-react-component-to-npm/) gets me so close but the developer experience isn't great as I can't even load the file in the browser dev tools or sourcemaps to debug

My goal is to be able to 
- `npm link` to speed local development (or other solution)
- create a package that can be deployed to npm and consumed by react and non react projects (create-react-app
- optimised for the web (minification) 
- contains sourcemaps for easy debugging

Am i missing something? This should be trivial by 2019 right?",Creating a typescript react npm boilerplate
581,2019-05-16 17:25:18,10,7,"I'm looking for a minimalist, low ceremony unit testing framework/lib/script for typescript in 2019",recommended Unit test framework 2019
582,2019-05-16 18:33:06,8,0,,[Interactive] Should I Use TypeScript? - shouldiusetypescript.com
583,2019-05-16 22:57:25,0,2,"I was having a hard time finding a typescript starter template without bundlers and with module resolution, so I made [one](https://github.com/pujitm/ts-starter).

&amp;#x200B;

Module Resolution via `module-alias`

Uses `ava` for testing (with docs for `jest`), `c8` for coverage (easy switch to `nyc`).

Not intended for use in browsers.

&amp;#x200B;

I hope this makes non-browser projects easier in TS.",TS Starter with module resolution
584,2019-05-17 06:23:14,0,1,"Metadata is data used to describe information resources. Some metadata is stored in a part of an executable file, such as the .NET Framework portable executable (PE) . such as Typescript compiled into Javascript by tsc. The platform-level metadata is stored in database or other data storage, and its metadata is generated and stored following the platform modeling tool.

Metadata is divided into runtime metadata and design-time metadata. Runtime metadata is like typescript and .net PE. When the assembly is running, the program framework provides the description function of the assembly.

Metadata-driven development is a management idea. In the front-end category, we generally manage our components using npm. But component information is not enough for visual modeling platform.

You need more information such as component properties and methods. how can we get this?

we can extract component properties and methods information from component source code by design-time decorator.

Now I'll give you some idea of how we achieved it.Our front-end stack is Vue, but React should work as well.

We used the decorator to redefine the writing and publishing of the Vue component. We defined the decorator for the visualization page builder, and performed component-level metadata extraction while the component was released, and saved the design-time metadata on remote server.

we have a decorator that is designed to describe the form that component properties need to fill in at design time:

&amp;#x200B;

https://i.redd.it/jy6500k6spy21.png

2. We developed components using this decorator ，shown here:

&amp;#x200B;

https://i.redd.it/cvh0cw28spy21.png

We not only support the description of component properties, we also support the description of complex types to ensure type safety at runtime.shown here:

&amp;#x200B;

https://i.redd.it/t7csysfdspy21.png

3. We developed the \[meta-serialize\]([https://github.com/SinaMFE/sina-meta-serialize](https://github.com/SinaMFE/sina-meta-serialize)) component for extracting metadata as follows:

&amp;#x200B;

https://i.redd.it/ixcwc4fcspy21.png

we can get metadata of complex types as well using ""meta-serialize"":

&amp;#x200B;

https://i.redd.it/lkhhdhczspy21.png

4. We developed a visual modeling platform for modeling the page. We restore the metadata of the component and make it into a form that can be entered for use by product personnel or operators. Since we have described the metadata for the type, The modeling platform guarantees that the manufactured data is type safe at runtime, shown here:

&amp;#x200B;

https://i.redd.it/2mdsobpespy21.png

5. Design-time metadata is useless and dangerous for runtime.its a good idea to remove it from run-time source code by webpack

Summary

We have explored how to get the design-time metadata for the page modeling platform with the real code examples. The project we used is only a demo .Thank you for your reading.",How To Use Typescript To Develop Front-End Visualization Platform
585,2019-05-17 09:19:05,89,17,"If someone is using VScode what more benefits can they get by using typescript despite the cost.

This is what I've gathered from reading so far:

1) Suggestions of function parameters - Vscode already does this well.

2) Autocomplete - Vscode  does this for objects and even if objects is being returned by a function, only time it doesn't properly work is when async code is in play. Slight advantage to Typescript.

3) Eliminates defensive programming - meaning you wont have to check for null/undefined because you would get error on compilation.  However, That's only true in some cases. Lot of times value can be undefined. You fetched an item from db?, fetch from get request, etc. response is varied. So now you provide two types. Two types now you have to check. This means complexity exists in situation and types are just pushing it somewhere else in some cases. 

4) Easier refactoring - I change function, change how it returns data.. say instead of [values...], now it returns { data: [values...]} ... function is used 12 other places. You have to do project wide search and update the code. With typescript, you do still have to update the code. Just minus the search part, as type contract will throw errors for all those locations.


What other benefits I left , or what can be added to these points. Both for or counter arguments.",Can we have concise discussion on benefits of typescript?
586,2019-05-17 22:36:35,1,1,"I was messing around to see if it was possible to make nested fields required. Here's what I have so far: [typescript playground](https://www.typescriptlang.org/play/#src=type%20DeepRequiredFields%3C%20T%2C%20K%20extends%20keyof%20any%20%3E%20%3D%0D%0A%20%20%20%20%7B%20%5BP1%20in%20(Extract%3Ckeyof%20T%2C%20K%3E)%5D-%3F%3A%20DeepRequiredFields%3CT%5BP1%5D%2C%20K%3E%20%7D%20%26%0D%0A%20%20%20%20%7B%20%5BP2%20in%20keyof%20Pick%3CT%2C%20Exclude%3Ckeyof%20T%2C%20K%3E%3E%5D%3A%20DeepRequiredFields%3CT%5BP2%5D%2C%20K%3E%20%7D%0D%0A%0D%0Atype%20A%20%3D%20%7B%20%0D%0A%20%20%20%20forced%3A%20%7B%20optional%3F%3A%20number%2C%20forced%3A%20string%20%7D%3B%0D%0A%20%20%20%20optional%3F%3A%20%7B%20optional%3F%3A%20number%2C%20forced%3A%20string%20%7D%3B%0D%0A%7D%0D%0A%0D%0Atype%20ANoExtraFields%20%3D%20DeepRequiredFields%3CA%2C%20%22%22%3E%0D%0A%0D%0Aconst%20inst1%3A%20ANoExtraFields%20%3D%20%7B%20forced%3A%20%7B%20forced%3A%20%224%22%20%7D%20%7D%0D%0A%0D%0A%0D%0Atype%20AOptionalForced%20%3D%20DeepRequiredFields%3CA%2C%20%22optional%22%20%3E%0D%0A%0D%0Aconst%20inst2%3A%20AOptionalForced%20%3D%20%7B%0D%0A%20%20%20%20optional%3A%20%7B%20optional%3A%205%2C%20forced%3A%20%22s%22%20%7D%2C%0D%0A%20%20%20%20forced%3A%20%7B%20forced%3A%20%225%22%2C%20optional%3A%205%20%7D%0D%0A%7D%0D%0A)

&amp;#x200B;

It seems to be working, but I'm not entirely sure. Can anyone tell me if I'm on the right track? The point was that as values go through some data pipeline often optional types become non-optional. I wanted an easy way to be able to specify ""Hey I want the same type as T1 but I want fields ""description"" to no longer be optional"".

&amp;#x200B;

Thank you",Make specific nested fields required?
587,2019-05-18 20:40:49,0,18,"I remember reading an article on how to make typesafe extension methods, like extending an object with arbitrary methods. Ex: 

```ts
const obj = SomeObjFactory()

obj.a // ts-error

obj.extend('a', () =&gt; {})

obj.a // ts-ok
```

But i cant remember the title of the article. I'm almost certain it was posted here in r/typescript about a 1 month ago, but i cant find it. Does anyone remember reading one like it? 

Only thing i remember about it was that it some trick like: 
```ts
class Foo&lt;T extends keyof (typeof B)&gt; {
    B: ['a', 'b'] = ['a', 'b'];
}
```
and that they then abstracted away `B: ['a', 'b'] = ['a', 'b']` into some function. 
I know its not a lot go on, but if you remember anything id appreciate it.",I need help finding a specific article
588,2019-05-19 11:22:21,4,1,The code is here [https://github.com/kephin/Node\_Redis-Caching/blob/master/services/cache.js.The](https://github.com/kephin/Node_Redis-Caching/blob/master/services/cache.js.The) problem is that I'm not able to extend the mongoose Query object?,I'm having a hard time moving a piece of code to typescript.Any tips?
589,2019-05-20 16:16:51,0,1,"Great introduction to TS, Bit and reusable React components

&amp;#x200B;

[https://blog.bitsrc.io/build-a-tic-tac-toe-game-with-typescript-react-and-mocha-ce6f1e74c996](https://blog.bitsrc.io/build-a-tic-tac-toe-game-with-typescript-react-and-mocha-ce6f1e74c996)","Build a Tic Tac Toe App with TypeScript, React and Mocha"
590,2019-05-21 16:30:06,2,0,[https://blog.bitsrc.io/whats-new-in-typescript-3-4-ba689eed7a99](https://blog.bitsrc.io/whats-new-in-typescript-3-4-ba689eed7a99),nice post: What’s new in TypeScript 3.4
591,2019-05-22 21:08:25,3,14,I created a little lib with typescript to handle dependencies similar to InversifyJS but always lazy injected and with a library size lower than 1kb (630byte @gz). It's my first npm package. A few code reviews and comments would make me very happy and would help me to bring it to a stable version. And ofc use it if it works for you. :) [https://github.com/owja/ioc](https://github.com/owja/ioc),Just another Typescript IoC/DI?
592,2019-05-24 20:30:01,4,7,"Hi, i want to add a caching feature to my little typescript IoC library, but i am not shure what the better solution is. Make [caching configurable](https://github.com/owja/ioc/pull/17) (704 Byte), [static caching](https://github.com/owja/ioc/pull/16) on (625 Byte), or leave it without caching (601 Byte). Votes, Comments and suggestions highly welcome. :)",Counting Bytes - Implementing a Feature? Which solution?
593,2019-05-27 12:51:27,1,6,"Hello TS Community,

i've playing around with TypeScript a lot recently but i stuck at writing libraries, which can run as global Library in the Browser, so the user can `&lt;script src=""file.js""&gt;&lt;/script&gt;` my library and use the classes like in [SweatAlert2](https://sweetalert2.github.io/) or [Moment.js](http://momentjs.com/) and so on.   
I didn't found any useful tutorials / open source projects on e.g. github.  


my concrete problem is that i `export { Class } from './Class';` in the entry file, configures in my webpack configuration.  
When i load the bundles js file in an html page, i get `Class is not defined`.  


I am using the configurations for TSC / WebPack from the [Webpack Typescript tutorial](https://webpack.js.org/guides/typescript/) but changed the module to es6.  
If i just load the js file in the html, the code runs perfect, but as mentioned previously i cannot reference the classes and use them in JavaScript in another script tag.  


Can you help me?  


Thanks and Regards Johannes",Browser Library in TypeScript
594,2019-05-27 16:13:53,0,0,"Hello, 

i0 is a framework that focuses on simplifying components. Here are a few reasons I like i0. Obviously this is all my opinion, please don't nerdgasm all over me. (be constructive if possible)

It separates the Javascript from the HTML
- As a long time angular user, I find that angular is a layer with vocabulary of its own. Html felt like angular-html. The typescript felt like angular-typescript, and there were a large amount of files that needed to be accounted for and passed to each other.

i0 only exports 4 major useful functions
- in i0, you define a component, call the component, turn on the router, or subscribe to data. The rest of the available functions are utilities, such as guid/hide/show/clear.

i0 is online ide friendly
- There was a time angular wasn't online IDE available, so I practiced making lots of javascript frameworks, but now its a passion so yolo.

Its like less than 200 lines of code too.

urls:
i0's main page: https://i04--blbbrayan.repl.co/#/home
i0's source: https://repl.it/@blbbrayan/i04",i0 - tiny javascript framework
595,2019-05-27 18:19:57,1,0,"Hello,

&amp;#x200B;

Please check out my library that I created using typescript, also please give me some feedback!

&amp;#x200B;

[https://github.com/PeterHdd/date-filtersjs](https://github.com/PeterHdd/date-filtersjs)",Date-filterjs
596,2019-05-29 09:37:56,5,3,"I'm currently developing an application using Typescript with React. Typescript as a language has fantastic OO support, whereas React appears to be heading down a more functional route, so I was wondering if anyone had any opinions over which paradigm works best with either react / typescript and especially a combination of the two?

&amp;#x200B;

Thanks :)","Typescript and React, OO or Functional programming"
597,2019-05-30 23:47:57,4,9,"I'm diving deep into JavaScript and I'd love to do the same with TypeScript.

What are the best videos, articles, tutorials and just general resources for typescript? I'd love to learn best practices and design patterns.",Extremely detailed resources on typescript?
598,2019-05-31 22:34:00,11,27,"I created a new react app for my nodejs/typescript project that doesn't have a tslint file. I noticed there's a @typescript-eslint package there but when I do research on it I can't tell if this is the finale package for using eslint with typescript or it's just a transitional package. Should I start converting my back-end to eslint or just stick with tslint for until more working is done.

&amp;#x200B;

Thanks!!",Should I start migrating to eslint or just stick with tslint for now?
599,2019-06-04 14:30:15,35,28,"Not a trick question or a debate, just genuinely want to hear from people who weighed it up, made justifications and used typescript.",Why did you make a design choice on your project to use Typescript?
600,2019-06-05 16:16:38,2,1,"I was trying to re-write a web component class we are working on, and keep running into issues with the signature of the \`window.customElements.define()\` function. I'm hoping someone here can tell me if what I'm doing is just nonsense, or if I need to log an issue in the TypeScript implementation.

[https://www.typescriptlang.org/play/#src=class%20TestParentElement%20extends%20HTMLElement%20%7B%0D%0A%20%20%20%20tag%3A%20string%3B%0D%0A%20%20%20%20constructor(childClass%3A%20TestParentElement)%20%7B%0D%0A%20%20%20%20%20%20%20%20super()%3B%0D%0A%20%20%20%20%20%20%20%20window.customElements.define(childClass.tag%2C%20childClass)%3B%0D%0A%20%20%20%20%7D%0D%0A%7D%0D%0A%0D%0Aclass%20TestChildElement%20extends%20TestParentElement%20%7B%0D%0A%20%20%20%20tag%20%3D%20'test-element'%3B%0D%0A%20%20%20%20constructor()%20%7B%0D%0A%20%20%20%20%20%20%20%20super(TestChildElement)%3B%0D%0A%20%20%20%20%7D%0D%0A%7D](https://www.typescriptlang.org/play/#src=class%20TestParentElement%20extends%20HTMLElement%20%7B%0D%0A%20%20%20%20tag%3A%20string%3B%0D%0A%20%20%20%20constructor(childClass%3A%20TestParentElement)%20%7B%0D%0A%20%20%20%20%20%20%20%20super()%3B%0D%0A%20%20%20%20%20%20%20%20window.customElements.define(childClass.tag%2C%20childClass)%3B%0D%0A%20%20%20%20%7D%0D%0A%7D%0D%0A%0D%0Aclass%20TestChildElement%20extends%20TestParentElement%20%7B%0D%0A%20%20%20%20tag%20%3D%20'test-element'%3B%0D%0A%20%20%20%20constructor()%20%7B%0D%0A%20%20%20%20%20%20%20%20super(TestChildElement)%3B%0D%0A%20%20%20%20%7D%0D%0A%7D)

&amp;#x200B;

The setup for this test case is that I have a parent class that extends HTMLElement, which handles all the low-level stuff. The constructor of the parent takes a child class, and uses it to define the new custom element. The issue is that the parent class constructor throws an error \`\`\`Argument of type 'TestParentElement' is not assignable to parameter of type 'Function'.  
  Type 'TestParentElement' is missing the following properties from type 'Function': apply, call, bind, prototype, and 5 more.\`\`\`

I've tried changing the type of the constructor parameter to be a \`typeof TestParentElement\` but that makes the tag not flow through.

Any feedback on the code would be appreciated.",Checking an assignment error (Class to Function)
601,2019-06-07 17:08:55,1,14,"I've been writing TypeScript code for two years now, and I had a lot of free time today. I decided to create a public domain repository with some example TypeScript code which shows off some of the language features for fun. Here it is if anyone is interested: https://github.com/w0rp/typescript-algorithms

I'll add more algorithms to it over time which show off more of what is possible.",Some public domain example TypeScript Algorithms
602,2019-06-07 23:47:27,43,15,"I love typescript to the point that it's not just the best way to write JS but just a pleasant language to use.

&amp;#x200B;

My main gripe is dealing with runtime type validation. \`io-ts\` is neat but has it's issues. It's really annoying how much work has to be done to make sure data that you can't trust (e.g. a request received from a user) validates against a type.  I'm curious about what it would look like to have runtime type support. My compiler and language courses are over a decade behind me so I'm not sure what it would take so this may come off as a stupid question.

&amp;#x200B;

If a browser engine (or let specifically say V8 so by proxy Node and Chrome) natively compiled \`.ts\` files to byte code instead of relying on \`tsc\` to transpile then could the language support features like \`JSON.Parse&lt;MyType&gt;(req.body)\`? Given the growing support for TS this doesn't seem as far fetched as it sounds. Are there any efforts going in this direction?",Could native typescript support allow for run-time type checking?
603,2019-06-08 07:18:03,6,3,"I'm looking for some general advice for a project I'm working on.

My project is split into multiple sub projects.

A CLI - oclif

An API - Fastify

A front end - Angular

A back end - Separate Angular

&amp;#x200B;

Everything is written in typescript.

They are all basically handling the same object structures but currently they are are loosely defining them. There are many ""let myvar: any"" lines floating around.

What would be the best way to share the data structure. I'm considering starting yet another project file that they all include as an npm package which will declare through classes what the data structures are. I could also centralize validation and provide dummy data as well. However I'm very hesitant to start another project folder. Previously I worked as a PHP developer so I'm used to working on projects with everything in the same code base.

TLDR: How should I handle typing's across multiple projects?",Advice on seperating project concerns
604,2019-06-10 02:36:48,0,1,,express-generator-typescript: Create new Express/TypeScript projects in just a single command.
605,2019-06-10 02:46:11,2,3,,express-generator-typescript: Start new express/typescript projects with just a single command.
606,2019-06-10 13:28:18,7,8,,"Are there any good open source projects one could contribute to on github, that are in typescript?"
607,2019-06-10 15:36:44,1,8,,express-generator-typescript: Version 1.1.0 released. Sets up logging/testing libs for you now.
608,2019-06-10 19:49:58,2,0,"Correct me if I'm wrong on this, or give me a dumbed down explanation on this.

&amp;#x200B;

But as I understand it enum are used to give a key a certain value. If that makes any sense. I guess I should also note I'm learning from Max (the germen guy) from Udemy as I learn this, if it means anything.  


  
On a sidenote; aside from the Udemy course are there any other useful tutorials that'll teach me typescript?  the Udemy course I got (well actually I didn't ""get"" it. ) is from 1.8 so i think it's safe to say it's outdated.",educate me on enums
609,2019-06-10 19:54:29,4,1,I am trying to compile /build my typescript project in ec2 free tire. but it hangs in `tsc` and never completes the process. Is there any other way to build typescript project with low ram usages.,Unable to compile typescript in ec2 free tire ram and cpu usage full.
610,2019-06-12 12:51:47,10,6,"Hi guys, my app is asking to update my typescript 2.5 to 3.1... is it safe?

If it's not, where can i download the 2.5 version for vistual studio?","Hi, my application is asking to update my typescript, is it safe?"
611,2019-06-12 19:39:53,0,1,,express-generator-typescript: Spin-up a back-end NodeJS/TypeScript web-server with just one command.
612,2019-06-16 13:31:50,2,8,"Hello, I would like to create classes, which extend from ApiModel. Classes would have \_url property, that corresponds to api location. Just like that:


``` typescript
export class ApiModel {
  _url: string;
  id: number;
}

export class Car {
  _url = '/car'
  model: string;
  ...
}
```


The purpose would be to create ApiService, which fetches data from \_url (+ apiUrl from environment).


``` typescript
//...
export class ApiService {
//...
  getModels&lt;T extends ApiModel&gt;(...) {
    return this.http.get(environment.apiUrl + T._url);
  }
}

//... In some component
this.cars = this.getModels&lt;Car&gt;().subcribe(...)
```
The problem is that T is a type and is used here as a value (tsc says so). Is there a way to extract that _url from type T? If no, what is the preferred way of making the same thing?

PS. Excuse me for some mistakes, I'm neither a native speaker nor good at English. Btw, thanks for any help!",[Question] Is it possible to get data/metadata from type?
613,2019-06-18 15:18:25,2,2,"I am trying to wrap my head around the state pattern, and have got so far, but I can't work out how to get my keyHandler event to change the state properly.

When I change level (from startScreen to levelOne) I want the correct `keyHandler()` function to run.

In the code I based it on you call `context.request()` to change state via the `handle()` function in each state. 

https://github.com/torokmark/design_patterns_in_typescript/blob/master/state/state.ts

Adapting it to switch on a keyBoard event seems to have created a bug, or maybe exposed my lack of understanding, or maybe I have just been staring at the screen too long!

```

export interface State {
  handle(context: Context): void;
  keyHandler(event: KeyboardEvent): void;
}

/**
 * Start Screen State Machine
 */
export class StartScreen implements State {
  public handle(context: Context): void {
    console.log('leave start screen, go to level 1');
    context.State = new LevelOne();
  }

  keyHandler(event: KeyboardEvent): void {
    if (event.code === 'KeyS') {
      console.log('s pressed');
      context.request();
    }
  }
}

/**
 * Level One State Machine
 */
export class LevelOne implements State {
  public handle(context: Context): void {
    console.log('leave level one, go to start screen');
    context.State = new StartScreen();
  }

  keyHandler(event: KeyboardEvent): void {
    if (event.code === 'KeyF') {
      console.log('f pressed');
      context.request();
    }
  }
}

/**
 * Context State for State Machine
 */
export class Context {
  private state: State;

  constructor(state: State) {
    this.state = state;
  }

  get State(): State {
    return this.state;
  }

  set State(state: State) {
    this.state = state;
  }

  public request(): void {
    this.state.handle(this);
  }
}

/**
 * TEST
 */
console.log('Start Screen - Press S to Begin and change state to LevelOne');
var context = new Context(new StartScreen());

document.addEventListener('keydown', context.State.keyHandler);
document.addEventListener('keyup', context.State.keyHandler);

```",Stuck on getting keyHandler event to alter state pattern state
614,2019-06-18 16:23:37,7,10,"Hi mate!

&amp;#x200B;

So i'am working with mongodb in nodejs now. I used typescript for the coding. When i wanted to read data from mongodb, i used this code:

    db.collection().find().toArray();

The code showed that i can call a function after function after function(I can call toArray() after find() after collection()). Is there a name for this kind of call(call a function after another)? How can we create this kind of function?

&amp;#x200B;

Thanks.",How to create this kind of function: db.collection().find().toArray()?
615,2019-06-19 19:38:53,1,1,"Hi all, so basically I was creating this app when I had plans to switch my job, and eventually, I've moved to a new job, and since then I haven't done any work on the app.  


On my new job, I started using React with Typescript and I love it so much that I had a plan to rewrite this app in typescript (and add some stuff that I use day to day now).  


First of all, I would like to know your opinion about the app, and then what do you think about the idea to go on a full rewrite.  


I made a design all by myself, so there is definitely more stuff to do, especially regarding responsive layout which is bad, really bad...  


Also, I see some flaws regarding the code, but hey... I think it's nice to see how much I've progressed from there within 3 months. :)  


Here is the repo if you wanna take a look:  [https://github.com/danijelbuhin/repo-explorer](https://github.com/danijelbuhin/repo-explorer)   
And also a demo link:  [https://repo-explorer.firebaseapp.com](https://repo-explorer.firebaseapp.com/)   


Thank you. :)","(WIP) Repo Explorer - Project that I am sad that I did not finish, but now have plans to rewrite it in Typescript"
616,2019-06-20 09:39:26,0,1,I'm trying to set up a typescript unit test library for days now.  Does anyone have a boilerplate code or a tutorial?,Typescript Webpack Unit Testing
617,2019-06-21 01:38:51,2,8,"In working on a project using a mixed bag of typescript and JS, did some reading on widely used JS auto-documenting generators.

Quick Google shows this article:
 https://www.slant.co/topics/5104/~javascript-documentation-tools

What at this point still makes JSDoc the ruler of the landscape?

I haven't used any kind of tool for JS, but have for PowerShell and C# in the past, but it seems there is space for a new product esp since JSDoc's last commit was 5 months ago.

Do you have a recommendation for other npm packages maybe lesser known, but more flexible?

If you're rolling a custom solution that isn't proprietary, would like to contribute. 

Thoughts?",Why is there no ruling autodoc-er other than JSDoc?
618,2019-06-22 07:30:01,5,1,I tried looking for tweaks in tsconfig But the annoying error of declaring a variable name was not going away. There is a const var name in typescript library which was throwing an error. My code was compiling and working fine but it’s always annoying to have those red lines and log on the terminal . I don’t mind being downvoted for asking something so trivial but if you know how to solve it please help. I would cherish a repo on git which is already setup with the features m looking for. I tried tsc -p . w —skipLibCheck but none of them seems to work,Looking for a setup with auto compilation and a live server
619,2019-06-22 14:33:04,4,0,"Noob question I am bad at typescript and node.
I wanted to use office fabric ui for website so I made a project following their tutorial on guthub. It worked fine when I ran Npm start so I put the project on guthub  repo for website but it just shows blank page and none of the fabric ui controls I put. Why this happening? How to fix?",Typescript website not working on guthub
620,2019-06-22 15:00:29,9,2,"I have a serverless node typescript backend api and am looking to refactor a bit. Currently each endpoint constructs an api response, sets headers, etc.


Does anyone know any ts projects that have things like base api response classes, custom http exceptions, etc. that I can use as a reference for my refac?


Thanks!",Any good projects to reference building a RESTful serverless/lambda api?
621,2019-06-23 15:08:37,5,0,"I was adding a feature to some trivial project im making to learn typescript, and I was trying to make a request using node-fetch. Now Ive used node-fetch before here and there and havent had too many problems with it (now that I think back, it may have caused some issues I was unaware of at the time). However, with this particular request I was getting a 400 back when I knew my headers and payload were correct. I confirmed this against some curl requests.

*Everything was the same!*

After some research and head banging I decided to try just switching out the library. axios immediately solved whatever problem was there. I had abandoned my old friend axios long ago when the fetch API in browsers gained popularity. 

**Axios, I shall never forsake thee again, please forgive my transgressions.**",Why axios &gt; node-fetch in node.
622,2019-06-24 06:50:03,10,15,"My team is using a Yarn Workspace/Lerna Monorepo structure for our main project. I've been looking at our tooling over the last few weeks to see where we could make improvements to do things better. So far I've found steps in our build process that fast-moving startups would have higher standards for, massive build artifacts, questionable plugins, etc.

We have 3 front-end apps, a GraphQL server, and some other benign packages in our monorepo. Many of the types are business-logic related and we've extracted them into their own ""project"" that we can import from and reuse across the repository.

Right now we simply have `packages/types` inside of which is a `package.json`, a `tsconfig.json`, and a `src/` directory filled to the brim with `.ts` files that export all sorts of fun types and interfaces.

Then, from `packages/front-end-1` or `packages/graphql-server` we simply `import { UserAccessLevel } from '@myteam/types'` to use those types. (Not actually sure where `@myteam/types` is resolved considering it's not a path in any tsconfig or referenced in webpack. Maybe symlinked by yarn workspaces?)

I'm wondering if that's ""enough"" or if we should be undergoing some build process to emit some `d.ts` files into an `@types` package somewhere (where?), or if we should be linking it in a `compilerOptions` somewhere.

Really just looking for any input, suggestions, ideas, or guidance to see if we can be doing this any better. I did find two files that were importing from one of the other packages which was causing typescript to dive into those full packages and start barfing everywhere.",Best way to use common types across monorepo?
623,2019-06-24 16:48:26,1,1,"I need help loading a typescript file as a worker (child process in electronjs) in the webpack build. 

Any help or resource will be appreciated.","Typescript, webpack and child.fork help needef"
624,2019-06-24 23:51:36,1,1,"Hey, I was wondering if anyone would be able to help me a little issue I'm having?

&amp;#x200B;

The problem is essentially I can't get my function overloads working. TypeScript is also complaining about the types but they seem right to me.

&amp;#x200B;

[Here's the playground like to the (minimal) code I'm having an issue with.](https://typescript-play.js.org/#code/C4TwDgpgBAglC8UDeAoKUCGAuKBnYATgJYB2A5gNxpQAeO+x5VAviqJFAEIKxQBkyagCN6hUpRSs24aAGEeqdDRgECGEDgBKEDABMA9iQA2IFWpAAeBuIB8LFNI4wATDwDyAWyLALMADRQAEQ0gTb8ULJU7NCcroie3hacAcGh4ZEOAPTZObl5+QWFRcUlpWVFKNlQAOoAFiBQwLVEuFAAZgCuJADGwESGUCT6UADu+gQA1gD8Dp09fQPdhgBuEATAABTLGEYdELhaOgbGpqrqvs42AJQ4Zucwdihzvf0kUEskq+tbO3sHUNo9IYTHdLLFrrczmDHs8Fm8Pl9NttdvtDkCTqCLmEAD4Ao7A07mJKXG6wKG+HFkomcMKKKAECDADoEN7Iv4AOgZug63QgvnJDyguMxNJsGx+KNwsgwqhAATZECuCFp1HQDKZLKgAG1VegoOyDQqpTKCHLdegDeyFezlFDORBubz+UTBcLyaLxbbzNLZQEaEr4Cq9cH3oZ8MhaKCApaFQAFAj6MCtZg8BVUEN69XMt46jPBy1e9Q+01+c0hul5vUx34QeOJ3ClyvBmhl4OsSsAXXTIeYAS1Hauuq71F72oH9kq5Sn05ns7nk6gAFEaBgPGAjNAAKq4CBYBwfcMYZxo44ggWXHi5vUVkPYIIYQKNvOFjTa4IARkfQRozkCHd1rDDigB7AFAQjHni6JntSF6IFe6A3sGd6BA+T4ZiIQRCI+raRlCOBah+X7BL+-5tigQFVLIKxrKBR6ZOBjTDBg9Hsg4G60ZCLqPOxYGcecNJUCgGA8AiNEbEeVxUEIInUd84GSU2epVNUCbkFA+hfEY+h6GBEDiFAHQ7roUwmSgQA)

&amp;#x200B;

As a temporary work around, I'm just going to split the function into two identical function, one for each type.",Requesting Help - Function overloads and Type Issues
625,2019-06-25 01:24:44,14,63,"I put together a `tsconfig.json` with all of the options organized. The way they're arranged and titled is far from perfect, but someone may find it useful. Suggestions would be appreciated.

You might be aware that the [official compiler options page](https://www.typescriptlang.org/docs/handbook/compiler-options.html) is just one huge list, and it's missing some options. There's a [New Handbook]https://github.com/microsoft/TypeScript-New-Handbook/blob/master/reference/Compiler%20Options.md) being worked on but it's not quite ready. It uses a different organization scheme that you may find more helpful, and it has more explanatory documentation.

Here's a [link to the gist](https://gist.github.com/ryanatkn/f1793abbe020e08b785cb56d4a712af1). Commented-out options have their default values.

```
{
  // Commented-out options have their default values.
  // A lot of the organization could still be improved - suggestions are welcome.
  ""include"": [""src/**/*""],
  ""exclude"": [""node_modules/*""],
  ""compilerOptions"": {
    // Basic options
    ""target"": ""esnext"", // Specify ECMAScript target version: 'es3' (default), 'es5', 'es2015', 'es2016', 'es2017','es2018' or 'esnext'.
    ""module"": ""esnext"", // Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'.
    ""lib"": [""esnext"", ""dom""], // Specify library files to be included in the compilation.
    // ""allowJs"": false, // Allow javascript files to be compiled.
    // ""checkJs"": false, // Report errors in .js files.
    // ""outFile"": ""./"", // Concatenate and emit output to single file.
    // ""outDir"": ""./"", // Redirect output structure to the directory.
    // ""rootDir"": ""./"", // Specify the root directory of input files. Use to control the output directory structure with `--outDir`.
    // ""project"": """", // Compile a project given a valid configuration file.

    // Strict type-checking options
    ""strict"": true, // Enable all strict type-checking options.
    // ""noImplicitAny"": true, // Raise error on expressions and declarations with an implied 'any' type.
    // ""noImplicitThis"": true, // Raise error on 'this' expressions with an implied 'any' type.
    // ""alwaysStrict"": true, // Parse in strict mode and emit ""use strict"" for each source file.
    // ""strictBindCallApply"": true, // Enable stricter checking of of the `bind`, `call`, and `apply` methods on functions.
    // ""strictFunctionTypes"": true, // Disable bivariant parameter checking for function types.
    // ""strictNullChecks"": true, // In strict null checking mode, the null and undefined values are not in the domain of every type and are only assignable to themselves and any.
    // ""strictPropertyInitialization"": true, // Ensure non-undefined class properties are initialized in the constructor. This option requires `--strictNullChecks` be enabled in order to take effect.

    // Additional checks
    // ""allowUnreachableCode"": false, // Do not report errors on unreachable code.
    // ""allowUnusedLabels"": false, // Do not report errors on unused labels.
    ""forceConsistentCasingInFileNames"": true, // Disallow inconsistently-cased references to the same file.
    // ""noStrictGenericChecks"": false, // Disable strict checking of generic signatures in function types.
    ""noUnusedLocals"": true, // Report errors on unused locals.
    ""noUnusedParameters"": true, // Report errors on unused parameters.
    ""noImplicitReturns"": true, // Report error when not all code paths in function return a value.
    ""noFallthroughCasesInSwitch"": true, // Report errors for fallthrough cases in switch statement.
    // ""skipLibCheck"": false, // Skip type checking of all declaration files (*.d.ts).
    // ""suppressExcessPropertyErrors"": false, // Suppress excess property checks for object literals.
    // ""suppressImplicitAnyIndexErrors"": false, // Suppress noImplicitAny errors for indexing objects lacking index signatures.

    // Module resolution options
    ""moduleResolution"": ""node"", // Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6).
    // ""baseUrl"": ""./"", // Base directory to resolve non-absolute module names.
    // ""paths"": {}, // A series of entries which re-map imports to lookup locations relative to the 'baseUrl'.
    // ""rootDirs"": [], // List of root folders whose combined content represents the structure of the project at runtime.
    // ""typeRoots"": [], // List of folders to include type definitions from.
    ""types"": [], // Type declaration files to be included in compilation.
    // ""allowSyntheticDefaultImports"": false // Allow default imports from modules with no default export. This does not affect code emit, just typechecking.
    // ""esModuleInterop"": false, // Emit '__importStar' and '__importDefault' helpers for runtime babel ecosystem compatibility and enable '--allowSyntheticDefaultImports' for typesystem compatibility.
    // ""maxNodeModuleJsDepth"": 0, // The maximum dependency depth to search under node_modules and load JavaScript files. Only applicable with --allowJs.
    // ""preserveSymlinks"": false, // Do not resolve the real path of symlinks.
    ""resolveJsonModule"": true, // Include modules imported with '.json' extension.

    // Emit options
    // ""declaration"": false, // Generates corresponding '.d.ts' file.
    // ""declarationDir"": ""./"", // Output directory for generated declaration files.
    // ""declarationMap"": false, // Generates a sourcemap for each corresponding '.d.ts' file.
    // ""emitBOM"": false, // Emit a UTF-8 Byte Order Mark (BOM) in the beginning of output files.
    // ""emitDeclarationOnly"": false, // Only emit ‘.d.ts’ declaration files.
    // ""importHelpers"": false, // Import emit helpers from 'tslib'.
    // ""newLine"": ""LF"", // Use the specified end of line sequence to be used when emitting files: ""crlf"" (windows) or ""lf"" (unix).”
    // ""noEmit"": true, // Do not emit outputs.
    // ""noEmitHelpers"": false, // Do not generate custom helper functions like __extends in compiled output.
    // ""noEmitOnError"": false, // Do not emit outputs if any errors were reported.
    // ""noImplicitUseStrict"": false, // Do not emit ""use strict"" directives in module output.
    // ""noResolve"": false, // Do not add triple-slash references or module import targets to the list of compiled files.
    // ""preserveConstEnums"": false, // Do not erase const enum declarations in generated code.
    // ""removeComments"": false, // Remove all comments except copy-right header comments beginning with //!
    
    // Source map options
    // ""sourceMap"": false, // Generates corresponding '.map' file.
    // ""sourceRoot"": """", // Specify the location where debugger should locate TypeScript files instead of source locations.
    // ""mapRoot"": """", // Specify the location where debugger should locate map files instead of generated locations.
    // ""inlineSourceMap"": true, // Emit a single file with source maps instead of having a separate file.
    // ""inlineSources"": true, // Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set.

    // Compilation options
    // ""composite"": true, // Enable project compilation
    // ""diagnostics"": false, // Show diagnostic information.
    // ""incremental"": true, // Enable incremental compilation by reading/writing information from prior compilations to a file on disk.
    // ""isolatedModules"": false, // Transpile each file as a separate module (similar to 'ts.transpileModule').
    // ""listEmittedFiles"": false, // Print names of generated files part of the compilation.
    // ""listFiles"": true, // Print names of files part of the compilation.
    // ""noErrorTruncation"": false, // Do not truncate error messages.
    // ""preserveWatchOutput"": false, // Keep outdated console output in watch mode instead of clearing the screen.
    // ""traceResolution"": false, // Enable tracing of the name resolution process.
    // ""tsBuildInfoFile"": "".tsbuildinfo"", // Specify file to store incremental compilation information.

    // JSX options
    // ""jsx"": ""preserve"", // Specify JSX code generation: 'preserve', 'react-native', or 'react'.
    // ""jsxFactory"": ""React.createElement"", // Specify the JSX factory function to use when targeting react JSX emit, e.g. 'React.createElement' or 'h'.

    // Experimental options
    // ""experimentalDecorators"": true, // Enables experimental support for ES7 decorators.
    // ""emitDecoratorMetadata"": true, // Enables experimental support for emitting type metadata for decorators.

    // Other options
    // ""allowUmdGlobalAccess"": true, // Allow accessing UMD globals from modules.
    // ""charset"": ""utf8"", // The character set of the input files.
    // ""downlevelIteration"": false, // Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'.
    // ""disableSizeLimit"": false, // Disable size limitation on JavaScript project.
    // ""keyofStringsOnly"": false, // Resolve 'keyof' to string valued property names only (no numbers or symbols).
    // ""noLib"": false, // Do not include the default library file (lib.d.ts).
    // ""pretty"": true, // Stylize errors and messages using color and context.
  }
}
```",A TypeScript 3.5 tsconfig.json with all options organized and with documentation comments
626,2019-06-25 11:28:45,6,0,"Hi everyone,

&amp;#x200B;

I've been working on a `dict` class that's suppose to mimic python's `dict` object. After implementing a method (`.items()`), I started writing the typings around it. After much trial and error, I managed to get the types to behave right, but it involved a very awkward 80\~ characters long return type, and an equally long cast to the return value.

&amp;#x200B;

I can't seem to make it more succinct. I'm somewhat new to TS so I figured someone might have an insight. 

&amp;#x200B;

Here's the [code](https://typescript-play.js.org/#code/MYGwhgzhAEAiCWwAuAeAKgPmgbwFDQOmAHsA7CJAJwFdljKAKYgIwCsAuaNASh30IEB5NgFNkAOkgR4Ac1IMkAC3gQANNBatuAbn4EAvnugB6Y10GxBnNMpjAwpAORJozEdCXvpAWwAOIEQpoAHcwAE8PYmgAEyj4JAB+IwAqaHiRbwgGbk4ASSQRSjBmAPzCsCR6FABtAFEADyowZBQAaxEw4gAzLnUKSnhSGQx1NDrGopb2zp60PqpB4YBdJaw8AQEu+mgGAJdWtNIPW151jfOw+BEQaOgahqapju7e6H7Fka5xx9Rpl7m3gshhgVhgUNRSK1SMRgqQMNVWuolCoESsjAJDBjcIZcF0Ich4GQYohUJgmGxrDk4CT0GsTGZKtAwAA3YjwW7UaRDaAAIlIImCPKMlBESGolCO-OC1JaZM0OmxuFwpmgAFUAMoAQQA4rVcEgwr53AAxYjEaJoQ3uAC80Ec3jAg0c0AAPnbooEIIUkI4lYMCpQus0TWbbmcCAajZxTebLUbVEZ6LJBpx3kNFbgSOQXL54AAvPNgaOh6C27BJmQpu35MAgMKOJFWzg8h2DHn6XRZoLAEVR6Ax25litVxzGoqkYAiBseJu8j1Qb3tztkIJbc0AJQqiwgnGw0GqpDA3hEqaBMiWnGqA-UpGo3jclCW0H0pZwuYLRf378L6gAjAAGJZ1B7EQ+2qED42gAAOJYOyVLsXDXaIEGQV9ohJBgkM3JBtwVLZKB2PZ90PY91GqJD1CKHChhWDQeiQlCkHEdJMmyU5cAASEVIA).

[A relevant piece from the docs:](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-9.html#recommendations)

&gt;In a `for...in` statement for an object of a generic type `T`, the inferred type of the iteration variable was previously `keyof T` but is now `Extract&lt;keyof T, string&gt;`. (In other words, the subset of `keyof T` that includes only string-like values.)

&amp;#x200B;

All I need is to keep the current behavior (see examples below), but write the typings in a sane way.

&amp;#x200B;

Thanks a lot!

# A screenshot of the whole script:

https://i.redd.it/ell3ihndlh631.png

# Resulting type hints:

https://i.redd.it/397qqsqglh631.png

# Property completion:

https://i.redd.it/ls9sxp5ilh631.png

# More completion:

https://i.redd.it/2f6qbihjlh631.png

#",I wrote a function with a massive type cast. There has to be a way to simplify it
627,2019-06-25 17:48:26,4,2,"Hi, i'm following along to Basarat's TS Deep Dive and on one of his examples on iterable iterators i'm getting an error. 

&amp;#x200B;

 [https://basarat.gitbooks.io/typescript/docs/iterators.html#](https://basarat.gitbooks.io/typescript/docs/iterators.html#) 

&amp;#x200B;

his interface doesn't allow for null, just T... but after the iterator is done, then value is being set to null, since the iteration is done and typeScript complains about that for me.

&amp;#x200B;

However when i try to include null as an option for value to be in my interface, TS complains about that as well. 

&amp;#x200B;

Here's my copy of his example with the errors...

&amp;#x200B;

 [https://typescript-play.js.org/#code/JYOwLgpgTgZghgYwgAgJKSnMB7KqA8AKgHzIDeAUMsiBAB5gAUAbnADYCuEA-AFzJwQATwCU-dNCy4AShADOHNmCLEA3FWRQIYDlBDcW7LnwHCxaDFKiyFSleupgAFlGwB3Az36DR4yzmt5RWUSdQBfCgpQDHgkC0kAm2CVcg0AE2xafgAjbGw2CEEHZFZOCH5CZAAfGkU2cMiENjg5OWQAYWwAWwAHTIhwVOoETLkwKA4EAMYejmy2YAQaOC7y5DGoUABzEXIIiIomlraAMUxV5GBegtXwNolMeYgHq3xO3v7wUkpqHs3WSDIPrRaDIAC8yAADOoNCMQBtJtNZvNFstVvwNtsADRAuYLJYjD60O78d59YlgADaAF1dmQDr88ajaAxGOYXokgnYyZ8wN8NNRgDBkIxnMA5AA6YHgUH4ZBiyWE8kDMCSgogLbOOkC6iabS6EBDXXGjJZZDwNhyCBYnXG0pcfgKiVK3lySlO6UYADUXuptuQYWK1DCyAglpQP2Nep0eiNUeQprW4y4Nvj1HtaxAdX9gZ1EWDkWolIAykIurk2BLgP5cNS2X5JE8Obg3t1lV849GDfKnOLivsKEA](https://typescript-play.js.org/#code/JYOwLgpgTgZghgYwgAgJKSnMB7KqA8AKgHzIDeAUMsiBAB5gAUAbnADYCuEA-AFzJwQATwCU-dNCy4AShADOHNmCLEA3FWRQIYDlBDcW7LnwHCxaDFKiyFSleupgAFlGwB3Az36DR4yzmt5RWUSdQBfCgpQDHgkC0kAm2CVcg0AE2xafgAjbGw2CEEHZFZOCH5CZAAfGkU2cMiENjg5OWQAYWwAWwAHTIhwVOoETLkwKA4EAMYejmy2YAQaOC7y5DGoUABzEXIIiIomlraAMUxV5GBegtXwNolMeYgHq3xO3v7wUkpqHs3WSDIPrRaDIAC8yAADOoNCMQBtJtNZvNFstVvwNtsADRAuYLJYjD60O78d59YlgADaAF1dmQDr88ajaAxGOYXokgnYyZ8wN8NNRgDBkIxnMA5AA6YHgUH4ZBiyWE8kDMCSgogLbOOkC6iabS6EBDXXGjJZZDwNhyCBYnXG0pcfgKiVK3lySlO6UYADUXuptuQYWK1DCyAglpQP2Nep0eiNUeQprW4y4Nvj1HtaxAdX9gZ1EWDkWolIAykIurk2BLgP5cNS2X5JE8Obg3t1lV849GDfKnOLivsKEA)",Typing Iterable iterators;
628,2019-06-28 15:12:47,25,40,"Nothing really to contribute other than to say I love typescript.

I've used Java since 1.0 and have been really disenfranchised with the language for the last 5 years.  Oracle suing Google was sort of the last straw for me... 

Typescript sort of nails all the important things I need from a language.

It's pragmatic enough to actually get real work done but it's safe enough to scale.  

I tried to like Go, Scala, Python but just didn't like them ... They're good if you HAVE to use them but as far as a language I just wasn't happy... 

That's all...",I love typescript... !
629,2019-07-01 08:46:17,11,7,"Hi all! I've learned angular and nestJS. When i learned those two frameworks, i found a new term which is new to me. It was dependency injection. I found some article about it but i still don't get when we should use dependency injection. I searched what packages we can use in typescript to do dependency injection. I found tsyringe. It is a package developed by Microsoft. Here are some code to explain what i understand and don't .

&amp;#x200B;

**Dependency Injection version**

foo.ts

    export class Foo {
        public print(): void {
            console.log('Foo.print() doing its work.');
        }
    }

&amp;#x200B;

bar.ts

    import { injectable } from 'tsyringe';
    import { Foo } from './foo';
    
    @injectable()
    export class Bar {
        constructor(private foo: Foo) { }
    
        public print(): void {
            this.foo.print();
        }
    }

&amp;#x200B;

main.ts

    import 'reflect-metadata';
    import { container } from 'tsyringe';
    import { Bar } from './bar';
    
    const myBar = container.resolve(Bar);
    myBar.print();

&amp;#x200B;

**Alternative version**

foo.ts

    export class Foo {
        public print(): void {
            console.log('Foo.print() doing its work.');
        }
    }

bar.ts

    import { Foo } from './foo';
    
    export class Bar {
        private foo: Foo = new Foo();
    
        public print(): void {
            this.foo.print();
        }
    }

main.ts

    import { Bar } from './bar';
    
    const myBar = new Bar();
    myBar.print();

&amp;#x200B;

Those 2 version i execute with `ts-node main.ts` and show the same result:

`Foo.print() doing its work.`

&amp;#x200B;

Does dependency injection version just look like alternative version but written in a different way? The code above show how I understand dependency injection. It is just another way to hard code a class into another class. I think i understand it wrong. 

&amp;#x200B;

So, when should we use dependency injection? In what scenario should we use it? Why should we use it instead of just hard coding?

&amp;#x200B;

It is great if you can explain it with an example code and show the bad version code and the good version code to address the same problem.

&amp;#x200B;

Thanks.",When should we use dependency injection?
630,2019-07-01 14:53:56,14,16,"Hi, I have been reading a lot of examples online of how to do this, and I can't find even one that fully answers the question :(

Carl (I know he hangs out here sometimes) comes the closest with [https://www.carlrippon.com/fetch-with-async-await-and-typescript/](https://www.carlrippon.com/fetch-with-async-await-and-typescript/) but there is no use of unknown , and I don't understand why there is the strong typing of something that must be unknown as the endpoint has not returned any data?

Please excuse my half baked endpoint that is not finished yet, but it is just an example... here is my code:

```

    interface Hiscore {
      name: string;
      score: number;
    }
    
    function get(url: string): Request {
      return new Request(url);
    }
    
    function post(url: string, body: any): Request {
      return new Request(url, { method: 'POST', body: JSON.stringify(body) });
    }
    
    async function api&lt;T&gt;(request: Request): Promise&lt;T&gt; {
      const response = await fetch(request);
      if (!response.ok) {
        throw new Error(response.statusText);
      }
    
      return response.json() as Promise&lt;T&gt;;
    }
    
    export async function testFetch(): Promise&lt;void&gt; {
      const getresult = await api(
        get(
          'https://virtserver.swaggerhub.com/Nathan-Simmonds/zombie-scores/1.0/getScores',
        ),
      );
    
      const postResult = await api(
        post(
          'https://virtserver.swaggerhub.com/Nathan-Simmonds/zombie-scores/1.0/setScore',
          { name: 'example name', score: 100 },
        ),
      );
      console.log(getresult, postResult);
    }

````

I simply want to post my high scores to a server, and get them back in the most simple and concise way possible with as much type safety as I can. I am quite new to working with the backend, and a bit worried I have made some mistake that could cause problems.

I would like `getresult` and `postResult` to have the correct type rather than `unknown`. I am not sure how to best achieve this in a simple correct manner. Maybe a simple type guard? Send the `HiScore` interface as a generic into the `post` function?","How can I strongly type my minimal fetch api wrapper, and how can I use unknown in it?"
631,2019-07-03 02:55:41,0,1,"I [posted before](https://www.reddit.com/r/typescript/comments/bvxl1c/converted_this_node_app_to_typescript/) with this project with a feeling that I wasnt doing typescript quite right. well I wasnt, still dont feel like I am but i think this has improved. And this has some improved functionality as well. Ive learned a lot while working on this, thought id share where it is currently and also welcome feedback and questions.

https://github.com/grantglidewell/jsnotes","Ive made some progress, cli note app with support for todoist integration"
632,2019-07-03 19:55:56,0,0,,"express-generator-typescript updated so sample app is now interactive, doesn't just fire a single GET request"
633,2019-07-03 19:56:18,0,3,,"express-generator-typescript updated so sample app is now interactive, doesn't just fire a single GET request"
634,2019-07-04 14:08:44,2,8,"I needed a fast dependency injection solution for an entity component (game) engine, and was not satisfied with the ones i testet. I decided to build one myself and integrated the basic ecs logic into it.

It is a single file and a single class (with 2 small mapping classes) and is over 40 times faster than InversifyJS and up to 5 times faster then tsyringe (testet with chrome 75 and the basic InversifyJS example)

&amp;#x200B;

[mani-injector](https://github.com/jmankopf/mani-injector)

&amp;#x200B;

Maybe it's useful for someone, i would love to get some feedback.

&amp;#x200B;

Greetings Jan",mani-injector: Very fast and lightweight dependency injection for typescript
635,2019-07-06 12:59:44,9,37,"[https://flems.io](https://flems.io)

&amp;#x200B;

Just wanted to drop this one here. It's a powerful, fast and handy web playground that you probably haven't heard but you should get to know. 

&amp;#x200B;

**Excerpt from flems about page**  
Unlike other playgrounds, Flems doesn't require a connection to the server after page load: all the code you write in a Flems is computed in the browser and saved as a compressed string in the URL. The only thing you need a connection for is downloading extra dependencies. This means you can type away without needing to 'save' a Flems and the URL in the location bar will always be a shareable link to exactly what you're seeing.

Every Flems starts with an HTML, JS and CSS file, but you can add more files - Flems supports [TypeScript](http://typescriptlang.org/), [LiveScript](http://livescript.net/) and [Babel (standalone)](https://github.com/babel/babel/tree/master/packages/babel-standalone) compilation too. You can add CSS &amp; JS dependencies by specifying a full URL pointing to the desired file, or by giving a reference to an NPM package (and optional path) - these will be taken from [unpkg.com](https://unpkg.com).",Flems: A playground for web development (flems.io)
636,2019-07-06 17:37:05,30,8,"I'm trying to set up a `state` object which contains multiple functions that each call `setState`. For example, `addItem`, `removeItem`, and `toggleItem` would each call `setState`. I'm getting a type error that I just can't wrap my brain around.

&amp;nbsp;

[Here's an example codepen](https://codesandbox.io/s/react-typescript-orcob), in which the `addItem` function is written, and the `removeItem` and `toggleItem` functions are stubbed out. This compiles perfectly fine.

[Here's an altered codepen](https://codesandbox.io/s/react-typescript-dobmx) which shows the error. All I've done is copied the `addItem` function, so that the `removeItem` function is identical. Suddenly I have multiple type errors, including but not limited to:

&amp;nbsp;

`'setState' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer.ts(7022)`

&amp;nbsp;

Please forgive me if this is a stupid question, I've been playing with this off and on for a long time and am really stumped.",React useState type error (setState does not have a type annotation?)
637,2019-07-07 17:58:48,2,2,,A simple stencil w/express+typescript starter
638,2019-07-08 05:41:14,3,0,"TypeScript, which is developed and maintained by Microsoft, is an open-source object-oriented language. It is a superset of JavaScript. Using TypeScript, Javascript can be written in any form. TypeScript is used to compile plain JavaScript. It is developed under Anders Hejlsberg.

[https://www.tutorialandexample.com/typescript-tutorial](https://www.tutorialandexample.com/typescript-tutorial)

https://i.redd.it/1ck2anwvo0931.jpg",TypeScript Tutorial for Beginners
639,2019-07-08 09:11:17,13,1,"we added a new package to our monorepo.

This package is written with typescript as opposed to previously large codebase in JS.

&amp;#x200B;

We are using babel to transpile both js and ts files.

ts files run through an extra step that gets ignored for js files: `@babel/typescript`

    presets: [
  ['@babel/preset-env', {
 // polyfilling is done as a third party script polyfill instead
 modules: useCjs ? 'commonjs' : false,
 useBuiltIns: false,
 loose: true,
 include: [
 // remove when `https://github.com/babel/babel/issues/7022` is solved
 '@babel/plugin-transform-classes'
 ]
  }],
 '@babel/preset-react',
 '@babel/typescript'
],

I try to find the best way to apply my eslint rules on ts files to not maintain two set of rules like we currently do:

**currently we have eslint for js and tslint for ts**

&amp;#x200B;

I tried to use `@typescript-eslint` but it conflicts with `plugins: ['babel']` and it's rules

&amp;#x200B;

Suggestions?",linting a half js half ts project
640,2019-07-08 16:47:50,4,22,,typesafe-firestore for typescript
641,2019-07-10 02:17:10,0,1,"Hi there, I'm new to Typescript and Next.js. I am using the \`graphql-hooks\` library, and am wrapping my app component hierarchy with a \`pages/\_app.tsx\` file according to this example here: [https://github.com/zeit/next.js/blob/canary/examples/with-graphql-hooks/pages/\\\_app.js](https://github.com/zeit/next.js/blob/canary/examples/with-graphql-hooks/pages/\_app.js)

My question is, Typescript isn't aware that ""graphQLClient"" is a property that gets set on my component by a higher order component called \`withGraphQLClient\`. It expects only \`appInitialProps\`, \`Component\`, \`router\`, and optionally \`children\`. Is there a way I can extend this type, or change the setup such that Typescript can recognize that this property will exist on this class when the App component is applied to the HOC?

Here's the typescript error:

`Property 'graphQLClient' does not exist on type 'Readonly&lt;AppInitialProps &amp; { Component: NextComponentType&lt;NextPageContext, any, {}&gt;; router: Router; }&gt; &amp; Readonly&lt;{ children?: ReactNode; }&gt;'.ts(2339)`

Thanks!","Need help extending ""App"" type from ""next/app"" (typescript, next.js)"
642,2019-07-10 03:31:15,3,1,"I've avoided diving too deep into typescripts typing system, but I ventured into conditional typing today and it's not working as I'd expect.

Basically I have a function that fetches records from a database.
I added a second parameter to this function called 'history'.

If history is true, it will return an ARRAY of entries, if history is false, it will return a single entry. 

History will by default be false so:

`private async getData&lt;T extends boolean&gt;(
    id: string,
    history: T = false
  ): Promise&lt;T extends true ? dataObject[ ] : dataObject&gt; {

    const result = await this.dataReader.getData()
  

    if (history === false) {
      return result[0] as dataObject;
    }

    return result as dataObject[];
  }`

I get multiple errors.

`Type 'true' is not assignable to type 'T'.
  'true' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'boolean'.ts(2322)`


and
`Type 'dataObject[ ]' is not assignable to type 'T extends true ? dataObject[] : dataObject'.ts(2322)`


Any help? 

The examples on conditional types seem to delve more deeply into getting hacky with conditional types and 'never' to achieve union splitting. I'm just trying to get a basic IF typing working.",Simply Conditional type
643,2019-07-12 13:08:05,3,0,"I read an article written 2 years ago by Reddit developers describing why they transfer to Typescript rather than Flow. However, they gave one incorrectness example of Typescript as follows:

Flow

class Animal {}
class Bird extends Animal {}

const foo: Array&lt;Bird&gt; = [];

foo.push(new Animal());
/*
foo.push(new A);
        ^ A. This type is incompatible with
const foo: Array&lt;B&gt; = [];
                ^ B
*/

But in Typescript, this is okay:
Typescript

class Animal {}
class Bird extends Animal {}

const foo: Array&lt;Bird&gt; = [];

foo.push(new Animal()); // ok in typescript



I recently tested the case again, but it is still not solved. Thank you in advance.",Why is the incompatible type issue rerported by Reddit developers still not solved?
644,2019-07-12 17:46:19,15,0,"I have seen dozens of resources with information for JS to TS, but nothing the other way around?

&amp;#x200B;

I know a lot of people say that TS is better but the fact is that I really don't know it yet and I have inherited a project in TS.",Can you convert typescript to javascript?
645,2019-07-16 10:49:25,0,1,,Using typescript with Redux
646,2019-07-16 19:25:56,5,3,"I am lost - the whole typescript ultra dynamic types makes my brain spin. Running into a problem here.

&amp;#x200B;

I am working on a LINQ style mechanism for OData based queries because - well - we need them.

&amp;#x200B;

in specifi types, you can enter filter or expansion properties and we go pretty well with:

&amp;#x200B;

to select the properties we want selected from a type (which then expands those properties which are navigation properties and sends that data over the wire, too.).

The problem is that this does not work when the property is an array.

&amp;#x200B;

In case of T being i.e. ""Document\[\]"" it should only allow the properties of Document.

My original non working signature:

public Expand&lt;K extends keyof T&gt;(property: K, expand?: (expansion: ODataExpandBuilder&lt;T\[K\]&gt;) =&gt; void) {

works nice, except when T actually is T\[\] (i.e. an array of T)

I tried to change the signature of exmantion to

T\[K\] | T\[\]\[K\]

but then I get 

(TS) Type 'K' cannot be used to index type 'T\[\]

What is the way to hand in the type of a defined array? if it is an array? Method overload possible,

I have tried

public ExpandItems&lt;K extends keyof \[T\]&gt;(property: K, expand?: (expansion: ODataExpandBuilder&lt;T\[K\]&gt;) =&gt; void) {

but I again get the same error. 

Basically, I need a syntax that for a property K that is an array of T allows me to have the generic constraint of ODataExpandBuilder being of type T, not the type defined on the

&amp;#x200B;

Example:

	export interface Building {

		Identity: string;

		Equipments?: Equipment\[\];

I should be able to call this as:

x =&gt; {

x.Expand(""Equipments""),

x.Expand(--&gt;property of Equipment&lt;--),

}

totally getting lost. I could do it in C# with an extension method, but typescript - totally no idea. Anyone can help? Thanks.",public Select&lt;K extends keyof T&gt;(select: K) { when property is actually T[]?
647,2019-07-17 02:47:56,1,1,"I've looked a lot, and googled and still can't find out:

Using [https://github.com/leafgarland/typescript-vim](https://github.com/leafgarland/typescript-vim) plugin (which is awesome), the linter is very good, but I know that in VSCode there's a quickfix option where you can click a button and if it knows how it fixes the issue for you e.g. switch import location to the correct alphabet order.

&amp;#x200B;

Anyone knows how can this be done in Vim?",Is there a way to quickfix Vim TS linter without manually working them?
648,2019-07-17 11:41:15,4,1,"Hey,  I am currently creating a small browser based editor for an company  internal project. I want to have autocompletion / IntelliSense based on  typescript definitions I provide. I have some ideas how to achieve that,  but maybe there is a library/project out there which would be good as a  base or might even already fullfill my requirements.

So any ideas on that? Thanks lal1212",[AskJS] WebEditor for JSX with IntelliSense
649,2019-07-17 11:50:57,28,8,"Howdy

I'm a five year C# developer by trade. I have previously dabbled in JavaScript for certain projects but never enough to say I really learned it. I would like to really learn typescript. Can anyone recommend a guide aimed at experienced developers who want to become functionally comfortable with typescript? This would be for the purposes of upcoming .NET Core based web projects. 

Thanks",Best way to learn Typescript as a C#/.NET dev?
650,2019-07-17 21:33:54,8,3,"Basically I'm trying to flatten a list. For top level items the Dependencies field will be null. Child tasks will have the Dependencies field set to the parent. The Dependencies member is set to string | null. If I set the parent to null but children to a string, typescript gives the error in the title. If I set the Dependencies field to """" instead of null. It's happy, but the receiver of the object isn't.

I can think of numerous ways to bend it to my will, but I'd like to better understand why what I'm doing isn't correct.

Thank you in advance.



[codesandbox link to demonstrate the problem.](https://codesandbox.io/s/wizardly-babbage-g27xy?fontsize=14)",Type 'string' is not assignable to type 'null'
651,2019-07-21 10:38:28,2,9,,"Use (neo)vim? I made a plugin for CoC than integrates with the ember-language-server, written in typescript!"
652,2019-07-23 04:05:11,3,0,"Hi! I'm working on an electron app. I'm requiring a module that supports typescript / types, so there is an index.d.ts file inside the folder.  
I was wondering if there's a way to use this type definitions on my electron app without using typescript. I just want to be able to look up the definitions on VS Code, but I don't want to deal with installing typescript / transpiling and all that on electron. Is that even possible?  
Thanks a lot. I tried with the search bar but I couldn't find any results.  
Thanks a lot",[Help Wanted] Types in JS
653,2019-07-24 18:23:30,56,47,"For the first time since I started using VSCode I'm thinking of switching. For the past months, it has been getting slower and slower after each iteration.  It's to the point right now where autocompletion takes 3-6s, pressing TAB doesn't import a suggested package half of the time (because of the lag), syntax highlighting and type checking lag so much, and the worst, installing or removing a package just make VSCode and IntelliSense stops working. I have to frequently restart the TS server. 

The reason I am making this post is because I'm puzzled. VSCode behaves this way with all extensions disabled, so the problem is likely not external. However, browsing VSCode or typescript issues, I see that most of the performance-related threads are closed, and there are really few open about what I am describing.  

Is anyone else experiencing this? Did you make the switch? If so, what's your IDE now for TS projects? (WebStorm?)

I know I could just downgrade VSCode until I find the sweet spot but this has been going for months, so it's not just a one-time case.","So, my development experience is just getting worse after each update of VSCode. Who else is experiencing that?"
654,2019-07-25 05:46:43,0,1,"Hi all,

I've mostly been a python developer, and am having some trouble learning typescript.

The language is fine, but I'm struggling to find a way to prototype small snippets of typescript code.

If I was going to test out how dictionaries work in python, I could just write the following in a scratch file (I'm using PyCharm Pro):

    d = {'a': 1, 'b': 2}
    print(d['b'])

to get an idea of how they work. Is there a similar process when developing in Typescript? Can I paste the following in to a .ts file and get it to run somehow? 

    let d: {[id: string]: number } = {
        'a': 1,
        'b': 2
    };
    
    console.log(d['b']);

I'd prefer to stay within PyCharm if possible.

Thanks!",How do you develop algorithms in typescript and try out code snippets?
655,2019-07-25 12:45:05,15,6,"We have a project with around 150 mostly JavaScript files. About 20 or so are converted to typescript. In addition to that, there are roughly 75 test files comprising of around 4000-5000 unit tests. The test files are primarily JavaScript. 

We are slowly converting things to typescript and as a result, the entire codebase is run through tsc. 

Working on this project is painful. Compiles take ~30s every time a line of code is changed. 

We can’t use ts-node for tests because it took minutes before the tests would even run. The only viable option is to include the tests with tsc and then run them. Again, ~30s to run a test. 

I was hoping incremental compiles would speed things, but it doesn’t. Changing one line in one file still results in a 30s rebuild. 

Any ideas/suggestions would be very much appreciated! To be clear, I’m mainly looking for ideas to speed up local development (with testing) and am less concerned about CI builds

tsconfig:

```
{
  ""compilerOptions"": {
    ""target"": ""ES2018"",
    ""module"": ""commonjs"",
    ""lib"": [""esnext"", ""dom""],
    ""moduleResolution"": ""node"",
    ""allowJs"": true,
    ""declaration"": false,
    ""outDir"": ""./dist"",
    ""baseUrl"": ""."",
    ""esModuleInterop"": true,
    ""inlineSourceMap"": true,

    ""experimentalDecorators"": true,

    ""strict"": true,
    ""forceConsistentCasingInFileNames"": true,
    ""noUnusedLocals"": true,
    ""noUnusedParameters"": true,
    ""noImplicitReturns"": true,
    ""noFallthroughCasesInSwitch"": true
  },
  ""include"": [
    ""src/**/*.ts"",
    ""src/**/*.js"",
    ""tests/**/*.ts"",
    ""tests/**/*.js""
  ],
  ""exclude"": [
    ""node_modules"",
    ""dist""
  ]
}
```",Performance tips for working with a moderately sized mixed (ts/js) library?
656,2019-07-25 13:10:19,1,4,"Hello /r/typescript!

&amp;#x200B;

About three months ago, I was inspired to buy a domain name that'd be the home of React with TypeScript documentation. This became [https://www.reactandtypescript.dev](https://www.reactandtypescript.dev). It's powered by Gatsby and the docz theme. The code is open for anyone to see: [https://github.com/AryanJ-NYC/reactandtypescript.dev](https://github.com/AryanJ-NYC/reactandtypescript.dev)

&amp;#x200B;

Unfortunately, I went through a job transition and, well, I kind of lost that inspiration. I'm here on Reddit in hopes that the inspiration and dedication of others will rub off on me. More specifically, I'm looking for some help on this project.

&amp;#x200B;

# What Can I Do?

1. Give the project a quick once over. Create an issue if there's anything I missed.
2. See a typo? Feel free to make a PR to fix it.
3. Does it not cover a big part of React (spoiler: it is)? Make an issue to track it or a PR to add to the documentation.

&amp;#x200B;

Anyone is allowed to make a PR, no matter your level of experience with React and TypeScript. The documentation is written in Markdown so you don't need to worry if your React experience is up to par.

&amp;#x200B;

Also, quick shout out to /u/swyx who was actually the initial inspiration to create this.",Looking for Help to write React and TypeScript Documentation
657,2019-07-29 01:59:27,22,15,"I am starting a new \`react\` project and previously have used \`flow\` but it seems like it is dying so I am going to try out \`typescript\`.

Do you guys prefer to have webpack use a \`typescript\` loader like \`ts-loader\` to fully transpile your TypeScript down to JS or do you prefer the new \`@babel/preset-typescript\` plugin to simply strip the types away and then webpack to do its magic from there?

I am thinking the major difference will be speed? But the \`babel\` plugin seems like it has less support and possibly some edge cases to deal with. If using \`typescript\` is it better to just go full integration with webpack and use \`ts-loader\`?",Do you prefer full webpack compilation or babel type removal?
658,2019-07-29 03:15:31,3,5,"Hey all,

I'm using \`micro\` and really love the way it's just compositing fns. One of the libraries which makes this whole process easier is \`micro-compose\`. It's different from regular compose, for e.g. on lodash, as it allows async fns. But I'm using TS and trying to type the compose fn. It's been a pain but I think I'm almost there. I'm using typed rest parameters, which were added in TS 3.0

Original fn:

    const microCompose = (...fns) =&gt;
 fns.reduce(
    (f, g) =&gt; (...args) =&gt; (g ? f(g(...args)) : f(...args)),
    fn =&gt; async (...args) =&gt; fn(...args)
  )

My attempt to type the fn:

    const microCompose = &lt;T extends any[], R&gt;(
 ...fns: ((a: T) =&gt; R)[]
) =&gt;
 fns.reduce(
    (f, g) =&gt; (...args) =&gt; (g ? f(g(...args)) : f(...args)),
    (fn: ((a: R) =&gt; R)[]) =&gt; async (
      ...args: ((a: R) =&gt; R)[]
    ) =&gt; fn(...args)
  )

I'm getting 2 errors:

1. `f(g(...args))`: Argument of type '((a: R) =&gt; R)\[\]' is not assignable to parameter of type 'T'.  '((a: R) =&gt; R)\[\]' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'any\[\]'
2. `fn(...args)`: Cannot invoke an expression whose type lacks a call signature. Type '((a: R) =&gt; R)\[\]' has no compatible call signatures

[I have also added the fn to a typescript playground for reference.](https://www.typescriptlang.org/play/index.html#code/MYewdgzgLgBAtgS2AJxAYRHADiCBTGAXhgB4AVGPADyjzABMIYBDMATwG0BdAGhgCUAfAAoAUDBgA6aQDNIALhjDhzRWQCURQQPXdRmwoPEw5EScjz0ArsDxiJE4TL4BzA9uHTJzZC4julFxgAfhNhF09pHz91TUUZSO9ff3UeY0c5RWVVHS0dbgDmCDYwYCV0hy9oiCyVRX4Ahr0HGAC5ROr1Y3UgA)

Original library here: [micro-compose](https://github.com/microauth/micro-compose/blob/master/index.js)

Am I on the right track? Appreciate all the help!",Trying to type micro-compose library but stuck!!
659,2019-07-29 12:21:57,10,5,"Hi, I am learning Typescript, I have an issue on [type guard](https://www.typescriptlang.org/docs/handbook/advanced-types.html#user-defined-type-guards) from handbook:

```js
function isFish(pet: Fish | Bird): pet is Fish {
  return (pet as Fish).swim !== undefined;
}
```

What if I have several required props in the interface, but I do not want to add a discriminator in the interface only for type check, like this:

```js
interface Fish {
  discriminator: 'I-Am-Fish',
  swim: () =&gt; void;
}
```

Is there any other way to check if object has all the required props in the interface with correct type?",question on object type check with typescript
660,2019-07-29 14:02:28,30,0,"Let's consider how we compose program with OOP

```
const pets = [new Cat(), new Dog()]
pets.forEach((pet) =&gt; pet.sayHi()) // =&gt; ['Meow', 'Bark']
```

Now how would you do it in functional way? The proper way would be

```
const sayHi = (pet: Cat) =&gt; 'Meow'
const sayHi = (pet: Dog) =&gt; 'Bark'
```

But it wouldn't work in JS/TS, because it doesn't have functional ""polymorphism"" also called ""mulitple dispatch"". 

With JS **you will be the dispatcher, doing the machines work**, you will be writing dispatching code manually, like:

```
const catSayHi = (pet: Cat) =&gt; 'Meow'
const dogSayHi = (pet: Dog) =&gt; 'Bark'
const sayHi = (pet: Cat | Dog) =&gt; 
  pet instanceof Cat ? catSayHi(pet) ? dogSayHi(pet)
```

But even that wouldn't work, because you need to make this line `pet instanceof` working

And you can't utilize your types, you need to re-create and duplicate the whole type system at runtime, like adding an attribute `pet.type = 'cat' | 'dog'`. With typescript giving some support there with exaustive switch and autocasting. But it's not enough.",TS/JS won't become functional by just removing OOP
661,2019-08-01 19:38:38,1,1,[removed],[typescript][I built] μCritic - Learning Music Taste With Deep Neural Nets
662,2019-08-01 19:49:22,3,1,,[typescript] μCritic - Learning Music Taste With Deep Neural Nets
663,2019-08-03 05:16:25,5,6,"Hi, hopefully someone can help me - I've been using typescript for awhile but have not really delved into any serious typing.

My objective is to create a subset of a generic object (ICompleteObject  and map a new data type (NewType) to each key. 

This is working for direct assignments, but when apply it as a return type inside an interface it is ignored, however when I specify the typing it works.

I get the feeling fromFunction?: () =&gt; Mapped&lt;T&gt; is casting to fromFunction?: () =&gt; Mapped&lt;any&gt;, but cannot see (or comprehend!) anything from typescripts errors

    interface ICompleteObject {
      x: number;
      y: string;
    }
    
    type NewType = boolean;
    
    type Mapped&lt;T&gt; = Record&lt;keyof T,NewType[]&gt;;
    
    const x: Mapped&lt;ICompleteObject&gt; = {
      x: [false],
      y: [false],
      z: [true] // Error! Good z not in ICompleteObject
    };
    
    interface IOptions&lt;T&gt; {
      direct?: Mapped&lt;T&gt;;
      fromFunction?: () =&gt; Mapped&lt;T&gt;;
    }
    
    function Test&lt;T&gt;(options: IOptions&lt;T&gt;) {}
    
    Test&lt;ICompleteObject&gt;({
      direct: {
        x: [false],
        y: [false,false],
        z: [true, false] // Error! Good z not in ICompleteObject
      },
      fromFunction: () =&gt; {
        return {
          x: [false],
          y: [false],
          z: [true, false], // NO ERROR BAD! z not in ICompleteObject
          q: [1],           // NO ERROR BAD! q not in ICompleteObject and bad datatype
        };
      }
    });
    
    Test&lt;ICompleteObject&gt;({
      direct: {
        x: [false],
        y: [false],
        z: [true, false]  // Error! Good z not in ICompleteObject
      },
      fromFunction: (): Mapped&lt;ICompleteObject&gt; =&gt; { 
        return {
          x: [false],
          y: [false],
          z: [true, false], // Error! Good z not in ICompleteObject
          q: [1],           // Error! Good q not in ICompleteObject and bad datatype
        };
      }
    });
    

I might just do use  (): Mapped&lt;ICompleteObject&gt; where i need this, but it would have been great if it could propagate from the interface.

Any help appreciated, you can drop this code sample into  [https://www.typescriptlang.org/play/](https://www.typescriptlang.org/play/)  to see the errors.

Thanks!",Mapped Type returned from function inside interface ignoring constraints (!)
664,2019-08-03 15:02:04,3,12," Hello everyone! Recently, myself and a friend have created a server on Discord for anything to do with TypeScript. This server has a custom bot (written in TypeScript) which is open source. We have help channels, and we have members that can help with basically anything to do with TypeScript.  

Invite: [https://discord.gg/rqAeTR5](https://discord.gg/rqAeTR5) 

GitHub: [https://github.com/typescript-community](https://github.com/typescript-community)  

&amp;#x200B;

Looking forward to seeing you there! - Haxified",Typescript Community Discord Server
665,2019-08-05 06:16:50,31,18,"I've been developing and using this in my projects because the only alternatives I saw were JSON validators which forced me to describe my schema via JSON schema, and joi is huge, slow to install and I've run into many issues using joi in the browser (having to resort to separate packages that build joi just for the browser, making my code containing the validators less portable)

This is a great alternative for when you need to validate requests on the server side or user inputs on the client side, and you care about simplicity or bundle size (e.g. client side applications or AWS lambdas where the cold start is affected by the lambda bundle size)

[https://github.com/moodysalem/jointz](https://github.com/moodysalem/jointz)",jointz: a tiny typescript validator for all your validation needs
666,2019-08-06 19:32:01,9,0,"Code comes from the [GraphQL Zeus](https://github.com/graphql-editor/graphql-zeus) library and is used to traverse types generated from GraphQL schema. Sometimes it consumes some RAM memory on big schemas. 

Can anybody help me optimize it? In readme on [Github](https://github.com/graphql-editor/graphql-zeus) there is also link typescript playground with generated code.

```ts
type Func&lt;P extends any[], R&gt; = (...args: P) =&gt; R;
type AnyFunc = Func&lt;any, any&gt;;

type IsType&lt;M, T, Z, L&gt; = T extends M ? Z : L;
type IsObject&lt;T, Z, L&gt; = IsType&lt;Record&lt;string | number | symbol, unknown | undefined&gt; | undefined, T, Z, L&gt;;
type IsScalar&lt;T, Z, L&gt; = IsType&lt;string | boolean | number, T, Z, L&gt;;

type AliasType&lt;T&gt; = T &amp; {
  __alias?: Record&lt;string, T&gt;;
};

export type AliasedReturnType&lt;T&gt; ={
	[P in keyof T]:T[P]
} &amp; Record&lt;string,{
	[P in keyof T]:T[P]
}&gt;

type ArgsType&lt;F extends AnyFunc&gt; = F extends Func&lt;infer P, any&gt; ? P : never;
type OfType&lt;T&gt; = T extends Array&lt;infer R&gt; ? R : T;
type FirstArgument&lt;F extends AnyFunc&gt; = OfType&lt;ArgsType&lt;F&gt;&gt;;

interface GraphQLResponse {
  data?: Record&lt;string, any&gt;;
  errors?: Array&lt;{
    message: string;
  }&gt;;
}

export type State&lt;T&gt; = {
  [P in keyof T]?: T[P] extends (Array&lt;infer R&gt; | undefined)
    ? Array&lt;AliasedReturnType&lt;State&lt;R&gt;&gt;&gt;
    : T[P] extends AnyFunc
    ? AliasedReturnType&lt;State&lt;ReturnType&lt;T[P]&gt;&gt;&gt;
    : IsObject&lt;T[P], AliasedReturnType&lt;State&lt;T[P]&gt;&gt;, T[P]&gt;;
};

type ResolveValue&lt;T&gt; = T extends Array&lt;infer R&gt;
  ? SelectionSet&lt;R&gt;
  : T extends AnyFunc
  ? IsScalar&lt;
      ReturnType&lt;T&gt;,
      [FirstArgument&lt;T&gt;],
      [FirstArgument&lt;T&gt;, SelectionSet&lt;OfType&lt;ReturnType&lt;T&gt;&gt;&gt;]
    &gt;
  : IsObject&lt;T, SelectionSet&lt;T&gt;, T extends undefined ? undefined : true&gt;;

export type SelectionSet&lt;T&gt; = IsObject&lt;
  T,
  AliasType&lt;
    {
      [P in keyof T]?: ResolveValue&lt;T[P]&gt;;
    }
  &gt;,
  T extends undefined ? undefined : true
&gt;;

type GraphQLReturner&lt;T&gt; = T extends Array&lt;infer R&gt; ? SelectionSet&lt;R&gt; : SelectionSet&lt;T&gt;;

type OperationToGraphQL&lt;T&gt; = (o: GraphQLReturner&lt;T&gt;) =&gt; Promise&lt;AliasedReturnType&lt;State&lt;T&gt;&gt;&gt;;

type ResolveApiField&lt;T&gt; = T extends Array&lt;infer R&gt;
  ? IsObject&lt;R, State&lt;R&gt;, R&gt;
  : T extends AnyFunc
  ? IsObject&lt;OfType&lt;ReturnType&lt;T&gt;&gt;, State&lt;OfType&lt;ReturnType&lt;T&gt;&gt;&gt;, T&gt;
  : IsObject&lt;T, State&lt;T&gt;, T&gt;;

type ApiFieldToGraphQL&lt;T&gt; = (o: ResolveValue&lt;T&gt;) =&gt; Promise&lt;ResolveApiField&lt;T&gt;&gt;;

type fetchOptions = ArgsType&lt;typeof fetch&gt;;

```",Welcome to rabbit hole
667,2019-08-07 18:57:37,8,1,"I'm trying to use generic types to make sure an array has at least two elements.

I found a type on Github that does that but I have to explicitly type the array unless it is a direct function argument. 

Is there a way to get this type working so that it doesn't give an error as displayed in the sandbox below?

http://www.typescriptlang.org/play/#code/C4TwDgpgBAggTnAhiAKgdwPYHk4FkNwQA8KAfFALxQDeAUFA1AAwBcUKA3PYwIxue0AvlABksBMhKlatAMYYAdgGdgURBJCUoAbSYAaAOQALCABtTGAwF05ilVAAmGAMoYAthGBGAlgoDmWgAU6nBs8EiomDj4hESBKnC+fgA+CgCubgBGEHAAlKS5lOTUgjJOrh5eScEahQD0dVA5cAS05e6ePv6BuoYm5pZW9Y0KGE0IBEA",Array of minimum length
668,2019-08-08 15:35:27,2,2,"Hello, Reddit. I'm trying to get this plot to handle dates as dates (on my X-axis) I'm using one of Microsoft's visual templates. I can't seem to find any resources for this. Then again, I may not know what to look for. I picked up typescript just a few days ago, and this is a way different beast from what I'm used to. I know a bit of Python, and Python is more... crayons.. typescript is a calligraphy pen. 

Below is Microsoft's code for this line chart I'm tinkering with. For some reason it will not allow me to use dates in the X field. If I do, it throws back craziness like 1.4 trillion as the date. 

Can any of you guys give me some advice on how to get this thing to handle dates as mm/dd/yyyy instead of this trillion value?

    /*
     *  Power BI Visual CLI
     *
     *  Copyright (c) Microsoft Corporation
     *  All rights reserved.
     *  MIT License
     *
     *  Permission is hereby granted, free of charge, to any person obtaining a copy
     *  of this software and associated documentation files (the """"Software""""), to deal
     *  in the Software without restriction, including without limitation the rights
     *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     *  copies of the Software, and to permit persons to whom the Software is
     *  furnished to do so, subject to the following conditions:
     *
     *  The above copyright notice and this permission notice shall be included in
     *  all copies or substantial portions of the Software.
     *
     *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     *  THE SOFTWARE.
     */
    ""use strict"";
    import ""@babel/polyfill"";
    import ""./../style/visual.less"";
    import powerbi from ""powerbi-visuals-api"";
    import * as svgUtils from ""powerbi-visuals-utils-svgutils"";
    
    import * as d3 from ""d3"";
    import VisualConstructorOptions = powerbi.extensibility.visual.VisualConstructorOptions;
    import VisualUpdateOptions = powerbi.extensibility.visual.VisualUpdateOptions;
    import IVisual = powerbi.extensibility.visual.IVisual;
    import IVisualHost = powerbi.extensibility.visual.IVisualHost;
    
    import EnumerateVisualObjectInstancesOptions = powerbi.EnumerateVisualObjectInstancesOptions;
    import VisualObjectInstance = powerbi.VisualObjectInstance;
    import DataView = powerbi.DataView;
    
    import VisualObjectInstanceEnumerationObject = powerbi.VisualObjectInstanceEnumerationObject;
    import {visualTransform} from './core/dataTransform';
    import { VisualSettings } from ""./settings"";
    import { ChartDataPoint, ChartViewModel } from ""./viewmodels/model"";
    
    export class Visual implements IVisual {
      private settings: VisualSettings;
    
      
      private svg: d3.Selection&lt;SVGElement, any, any, any&gt;;
      private host: IVisualHost;
      private lineChartContainer: d3.Selection&lt;SVGElement, any, any, any&gt;;
      private container: d3.Selection&lt;SVGElement, any, any, any&gt;;
      private xAxis: d3.Selection&lt;SVGElement, any, any, any&gt;;
      private yAxis: d3.Selection&lt;SVGElement, any, any, any&gt;;
      private margin:any;
      private IT
      static Config = {
        xScalePadding: 0.1
      };
    
      /**
       * Creates instance of BarChart. This method is only called once.
       *
       * @constructor
       * @param {VisualConstructorOptions} options - Contains references to the element that will
       *                                             contain the visual and a reference to the host
       *                                             which contains services.
       */
    
    
      constructor(options: VisualConstructorOptions) {
        this.margin = { top: 50, right: 50, bottom: 50, left: 50 };
        this.host = options.host;
        let svg = (this.svg = d3
          .select(options.element)
          .append(""svg"")
          .classed(""chart"", true))
        
        this.container = svg
          .append(""g"")
          .classed(""container"", true)
          .attr(
            ""transform"",
            svgUtils.manipulation.translate(this.margin.left, this.margin.top)
          );
        this.lineChartContainer = this.container.append(""g"").classed(""lineChart"", true);
    
        this.xAxis = this.container.append(""g"").classed(""xAxis"", true);
        this.yAxis = this.container.append(""g"").classed(""yAxis"", true);
        
    
      }
      /**
       * Updates the state of the visual. Every sequential databinding and resize will call update.
       *
       * @function
       * @param {VisualUpdateOptions} options - Contains references to the size of the container
       *                                        and the dataView which contains all the data
       *                                        the visual had queried.
       */
      public update(options: VisualUpdateOptions) {
    
        let width = options.viewport.width;
        let height = options.viewport.height;
        let viewModel:ChartViewModel = visualTransform(options, this.host);    
        let offset_x = height - this.margin.bottom - this.margin.top;
        let offset_y = (this.margin.bottom + this.margin.top) * -1;
        this.svg.attr(""width"",width)
        this.svg.attr(""height"", height);
    
        let yScale = d3
          .scaleLinear()
          .domain([0, viewModel.max_y])
          .rangeRound([0, height - this.margin.top - this.margin.bottom]);
    
        let xScale = d3
          .scaleLinear()
          .domain([0, viewModel.max_x])
          .rangeRound([0, width - this.margin.left - this.margin.right]);
        
         
        this.yAxis
          .call(d3.axisLeft(yScale))
        
        this.xAxis
        .attr(
            ""transform"",
            svgUtils.manipulation.translate(0, offset_x)
          )
          .call(d3.axisBottom(xScale))
         
        
        this.handleLineUpdate(viewModel,offset_y, xScale, yScale);
      }
    
    
        private handleLineUpdate(plotData: ChartViewModel, offset_y: any, xScale: d3.ScaleLinear&lt;number, number&gt;, yScale: d3.ScaleLinear&lt;number, any&gt;) {
        //reversing data in order to apply top z-index priority from first to last elements
        this.lineChartContainer.selectAll(""path"").remove();
        this.lineChartContainer.selectAll(""text"").remove();
        console.log(""plotData"", plotData);
        plotData.dataPoints.reverse().forEach((element, index) =&gt; {
          let lineId = `lineChart${index}`;
          this.lineChartContainer.append(""path"").attr(""id"", lineId);
          this.lineChartContainer.append(""text"").attr(""id"", `${lineId}Label`);
    
          let line = d3
            .line&lt;ChartDataPoint&gt;()
            .x(d =&gt; xScale(d.x_axis))
            .y(d =&gt; yScale(d.y_axis));
    
          this.lineChartContainer
            .select(`#${lineId}`)
            .datum(element)
            .attr(""d"", line)
          
          
    
          this.lineChartContainer
            .select(`#${lineId}`)
            .attr(""fill"", ""none"")
            .attr(""stroke"", plotData.color.reverse()[index])
            .attr(""stroke-linejoin"", ""round"")
            .attr(""stroke-linecap"", ""round"")
            .attr(""stroke-width"", 5)
        });
        
        
     }
    
      private static parseSettings(dataView: DataView): VisualSettings {
        return VisualSettings.parse(dataView) as VisualSettings;
      }
    
      /**
       * This function gets called for each of the objects defined in the capabilities files and allows you to select which of the
       * objects and properties you want to expose to the users in the property pane.
       *
       */
      public enumerateObjectInstances(options: EnumerateVisualObjectInstancesOptions): VisualObjectInstance[] | VisualObjectInstanceEnumerationObject {
        return VisualSettings.enumerateObjectInstances(this.settings || VisualSettings.getDefault(),options);
      }
      /**
       * Destroy runs when the visual is removed. Any cleanup that the visual needs to
       * do should be done here.
       *
       * @function
       */
      public destroy(): void {
        //Perform any cleanup tasks here
      }
    }",NOVICE - Power BI + Typescript
669,2019-08-08 20:22:31,3,2,"Hey /r/typescript

I was curious what's the latest state of the art for GraphQL auto-completion is. I just posted an article about [GraphQL Code Generator 1.5](https://old.reddit.com/r/typescript/comments/cnrbm2/graphql_code_generator_15_is_out_it_can_generate/) because it sounded exciting, as it can generate fully typed React-Apollo 3.0 Hooks.

I know Prisma was also working on a similar solution. What do you have experience with? What do you recommend?",What's the state of the art for GraphQL auto-completion?
670,2019-08-09 06:25:17,0,3,"Github : [https://github.com/prismyland/prismy](https://github.com/prismyland/prismy)

It's called Prismy, a simple server library based on micro. The core implementation is less than 100 lines and its dependencies are tslib and micro only. I made it for [now.sh](https://now.sh) v2 and api routes of next.js v9.

The major features are two:

* Argument injection without decorators like Reselect API
* Composable middleware like Redux's middleware API

&amp;#8203;

    // handler.ts
    import { prismy, createJSONBodySelector, res } from 'prismy'
    
    const jsonBodySelector = createJSONBodySelector({
      limit: '1mb'
    })
    
    // It returns request handler function for pure node's http server
    // (req: IncomingMessage, res: ServerResponse) =&gt; void
    export default prismy([jsonBodySelector], async body =&gt; {
      await doSomethingWithBody(body)
      return res({
        message: 'Done!'
      })
    })
    
    // serve.ts
    import handler from './handler'
    
    const server = new http.Server(handler)
    
    server.listen(8000)
    
    // test.ts
    import got from 'got'
    import handler from './handler'
    
    describe('handler', () =&gt; {
      it('unit test', () =&gt; {
        // It also exposes original handler so you can do unit test easily without mocking request objects or sending actual http requests
        const result = handler.handler({
          ... // JSON data
        })
    
        expect(result).toEqual({
          body: 'Done!',
          headers: {},
          statusCode: 200
        })
      })
    })
    

There should be lots of people who are using nextjs or inversify.js for DI. I'd been one of them. But the DX of them was not that great because decorators don't do anything for inferring type of arguments.

    type DefinitelyNotQuery = number
    class MyController {
        run(
            @Query() query: DefinitelyNotQuery
        ): string {
            ...
        }
    }

To deal with it, I referred Reselect's API.

    import { prismy, res } from 'prismy'
    
    const urlSelector: Selector&lt;UrlWithStringQuery&gt; = ({ req }) =&gt; {
      return req.url != null
        ? parse(req.url, false)
        : { query: null }
    }
    
    
    export default prismy(
      [urlSelector],
      /**
      * type of each argument is infered via selectors.
      * So typescript knows that `url` is `UrlWithStringQuery`.
      **/
      async url =&gt; {
        await doSomethingWithUrl(url)
        
        return res({
          message: 'Done!'
        })
      }
    )

Also, to implement middleware for error handling, session management or cors, I refered Redux's middleware API.

    import { prismy, Selector, res, middleware } from 'prismy'
    
    const withCors = middleware([], next =&gt; async () =&gt; {
      const response = await next()
      response.headers['access-control-allow-origin'] = '*'
      return response.hader
    })
    
    // Middleware also accepts selectors too for unit test
    const urlSelector: Selector&lt;string&gt; = context =&gt; context.req.url!
    const withErrorHandler = middleware([urlSelector], next =&gt; async url =&gt; {
      try {
        return await next()
      } catch (error) {
        return res(`Error from ${url} : ${error.message}`)
      }
    })
    
    export default prismy(
      [],
      () =&gt; {
        throw new Error('Bang!')
      },
      /**
       * Next middleware manage previous middleware or the original handler.
       * withCors manages the original handler. It can decide to execute the handler
       * or not. Also, it can manipulate result of the handler. But, withCors is
       * also managed by withErrorHandler.
       * */
      [withCors, withErrorHandler]
    )

So it works really well for me... Not sure how other people think about this.(Actually that's the reason why I posted this article here). Anyway, I'm going to prepare other library for session and routing... etc... because it is not based on expressjs so I need to make many things from scratch.

Thanks for the reading!",I made a server library based on micro!
671,2019-08-09 09:37:23,35,21,"[https://github.com/TheLartians/TypeScriptPP](https://github.com/TheLartians/TypeScriptPP)

Hey, I wanted to share a small example project I created while working on a large project that is scripted in TypeScript. Would love to hear your thoughts.

&gt;Lua is a great embedded scripting language for C++ projects. Unfortunately, Lua code becomes unmaintainable the project grows, due to the absence of reliable static type checkers. In the JavaScript world this was solved a long time ago with through the [TypeScript](https://www.typescriptlang.org/) language. Thanks to the great work of [TypeScriptToLua](https://typescripttolua.github.io/) project, it is now possible to use TypeScript for Lua projects. This project demonstrates how to use CMake to bring TypeScript, Lua and C++ together and can be used as inspiration or a starting point for further projects.",TypeSafe scripting for C++ / embedding TypeScript in a C++ project
672,2019-08-11 22:43:31,0,1,,I created a minifier &amp; bundler for typescript
673,2019-08-12 02:24:37,12,2,"I am current writing a small typescript demo that aims to select all the elements with specific tag name in a div and push the elements into the `contentChildren` array. For example below, I would like to select all 2 element tags `a` put them into the array. BTW, I have enabled the strictest checking (all of them). Thank you in advance

```
&lt;div class=abc&gt;
	&lt;a href=""http://...""&gt;&lt;/a&gt;
	&lt;p&gt;paragram&lt;/p&gt;
	&lt;a href=""http://""&gt;some text&lt;/a&gt;
&lt;/div&gt;
```

I have written the demo like this. Then Typescript tells me that `Argument of type 'never[]' is not assignable to parameter of type 'HTMLElement'.
  Type 'never[]' is missing the following properties from type 'HTMLElement': accessKey, accessKeyLabel, autocapitalize, dir, and 237 more` , and it pops up warning for the line ` contentChildren.push([].slice.call(elem.getElementsByTagName(""g""), 0));`

```typescript
class divSelect {
    constructor() {
        let contentDivSelector: string = "".abc"";
        let contentDivs: HTMLDivElement[] = this.queryAlltoArray(
            contentDivSelector
        );
        let contentChildren: HTMLElement[];
        contentDivs.forEach(elem =&gt; {
            contentChildren.push([].slice.call(elem.getElementsByTagName(""g""), 0));
        });
    }
    queryAlltoArray(divName: string): HTMLDivElement[] {
        let contentDivs_tmp: NodeListOf&lt;
            HTMLElement
            &gt; = document.querySelectorAll&lt;HTMLElement&gt;(divName);
        let contentDivs: HTMLDivElement[] = &lt;HTMLDivElement[]&gt;(
            Array.from(contentDivs_tmp)
        );
        return contentDivs;
    }
}
new divSelect();
```",question about the DOM types in Typescript
674,2019-08-15 14:05:28,17,22,"Hey. So the example I am going to give is very simple but it happened to me in a larger code base and it was quite a head ache, and it was kind of insane that typescript just accepted this with no error or warning. 

&amp;#x200B;

Here is the dummy code to exemplify the problem:  


`type A = {`  
 `a: string[];`  
`};`  
`const strArr = ['a', 'b', 'c'];`  
`const obj: A = {`  
 `a: { ...strArr },`  
`};`  
`obj.a.push('this will break!');`

&amp;#x200B;

my ""obj"" object, is typed to have a property of string array, and therefore the type system thinks it has a property ""a"" which has a string array as a value. However it lets me assign an object in to which I destructured a string array.

&amp;#x200B;

I understand that the explicit index signature of { \[key: number\]: string } of the array is maintained, but we have lost the prototype and everything else about it that makes it a javascript array. So when somebody wants to use any array method, like push or map or concat, then we are going to have a run time error. 

&amp;#x200B;

Should this be reported to the typescript team? Is there a way to disable this behaviour? My tsconfig has strict set to true...","Found a way to break type system, Bug or feature?"
675,2019-08-15 18:15:30,0,1,"[https://adam-hanna.github.io/design-first-docs/](https://adam-hanna.github.io/design-first-docs/)

&amp;#x200B;

I like writing my REST api's with typescript, but there's a lot of boilerplate code that I have to keep re-writing each time I spin up a new one.  


For that reason, I decided to build design-first, a cli tool to speed up the process.  


The concept is simple, I spec out my api in  json file, detailing the endpoint, routes, payloads and return types, and then my tool builds everything out for me so I can focus on writing the logic for each endpoint!  


Anyway, would love your feedback! Thanks!  


[https://adam-hanna.github.io/design-first-docs/](https://adam-hanna.github.io/design-first-docs/)",design-first: a REST api templating engine for typescript
676,2019-08-15 19:34:39,20,0,"Code example:  


`type A = {a: number};`

`function doSomethingWithA(a: A) {}`

`const b = {a: 4, b: 'some string'};`

`doSomethingWithA(b); // This compiles! I don't want it to`

&amp;#x200B;

If I wanted a function that accepts any object that has a property ""a"" that is a number I would of created an interface.

What if this function was going to stringify the value to JSON or some other encoding? I don't want the key ""b"" in there. 

It's like typescript is trying its best to make type and interface interchangeable.

&amp;#x200B;

Is there a way to make it not compile? I think the current behaviour is awful.",type is not being respected.
677,2019-08-16 16:10:03,6,6,"
I am interested in learning more about the best practices for C#/.net development (my current project is in webforms so I need to learn it better).

Specifically, I am curious about structuring code such that a centralized data structure is accessible from many different components/controls.

As an example, I made a chess web app in Angular a few months ago. I held the current board state (piece locations) in an array within a typescript service class file. This service was then made available to all other components such that each component could make changes to the board state and all other components would update accordingly. 

My first instinct was to create an object within the pageload method of my default codebehind, but I found that this was being called multiple times. 

Example: 
To make a calendar, I made a blank HTML element. In the pageload method, I made a for loop to add individual day components such that the calendar would contain 35 total day elements.
	I did this by using calender.innerHTML += “&lt;label class=”day”/&gt;” (I don’t remember the exact syntax, this was the general logic I used)
I found the calendar kept repopulating with an additional 35 elements. To get around this, I set my for loop to only trigger if calender.innerHTML == “”.
	This felt like a hacky workaround.

I would like to be able to update the displayed days dynamically. 

Would it be good practice to hold info for each day as session variables, then use the pageload method to set the calender inner HTML = the days from the session object?

Thanks for any feedback.",Best practices for C# global data in .net webforms
678,2019-08-16 21:10:02,11,7,"Man, do I love typescript. But my directories are so ugly. Is there anything that we can do about it? 

On that note, should i be committing the .js and .map files?",Dealing with ugly directories...
679,2019-08-18 01:59:26,13,6,"What do you prefer as a testing framework for your vscode projects in typescript?

How do you typically test custom module files?",Easiest testing framework for vscode?
680,2019-08-18 17:43:58,2,1,"```

    class Hero {
      constructor(public point: [number, number]) {}
    }
    
    class Monster {
      constructor(public words: 'wooooo!', public otherStuff: true) {}
    }
    
    const simpleFactory = &lt;T&gt;(
      classToCreate: { new (...args: ConstructorParameters&lt;typeof T&gt;): T },
      numberOf: number,
      ...args: ConstructorParameters&lt;typeof T&gt;
    ): T[] =&gt; [...Array(numberOf)].map(() =&gt; new classToCreate(...args));
    
    let result = simpleFactory(Hero, 2, [13, 20]); //?
    let result1 = simpleFactory(Monster, 2, [13, 20]); // it should take a string and boolean, not this!
    

```
https://www.typescriptlang.org/play/#code/AQ4YwGwQwZx4ASBTATge2AbwFClGNAOxgBcUBXMEtFACgAdyAjCASzGHrVcJIC5gAbULkAtk1QAaYCPGoAugEosAX1yg1edSEix4AWSKlUWbfiNlK1OoxbtgAdxoATGAIDkTtN7QBCd9K2bBxoJAAWqADKJOQAZrEClkjKmJoaZmYExCTAMKyi9BBIAGJQVDQAnsAAvMAAPAAqAHy0ZjrQcA1oAMIoSFAkSAKYMkgOwLQAdNNQKADmbsDdFhTlKAAKs1CiSIMoMHUkFfRIaLHAzYoCDcAqkm0yYhIoAPIJj3Io93gg05OzCwEy2yq2smxQ212qAORxOZwuTTMVwugnkNSaQj+AEEUBCKrRZM83op5JNRFB6LRaMpqhjCGNwB0YF1ev1BlMZvMYIpFABuDJ4Io5PowcgQHK1PIFIqlNb45DoaQAJmkggAjABmZUABiUvOAAHoDQB+MxC4AisUkNU1XL5QolMrWfGGbJSYAqoSanV6w0msxAA

The error says `T` is referring to a Type but being used as a value. The function works with the error, but it is NOT type checking the arguments. I can put what I like. I am assuming that `ConstructorParameters&lt;typeof T&gt;` takes the parameters from the `T` and then enforces it, but it does not seem to do anything.

It is hard to believe that I just spent about 7 hours trying to work this out, I question my sanity.",Why is my mini factory function one liner unable to type check using ConstructorParameters&lt;typeof T&gt;?
681,2019-08-18 20:40:28,0,1,"This is a project I started a few months ago with normale javascript, and now I refactored it to typescript:

[https://github.com/JoshK2/jotils](https://github.com/JoshK2/jotils)

[https://bit.dev/joshk/jotils](https://bit.dev/joshk/jotils)

[https://www.npmjs.com/package/jotils](https://www.npmjs.com/package/jotils)","I refactored my project of utils functions, review are welcome!"
682,2019-08-19 10:29:25,5,1,"I have written type definitions for an external library by creating a X.d.ts file. Now, I want to use some of the type definitions from this file instead of redeclaring them in every module. So, I have the following code:

    /// &lt;reference types=""react"" /&gt;

    declare module '@mycompany/styled-library' {
        export interface BreadcrumbLinkProps {
            name: string;
            title: React.ReactNode;
            to?: string;
            hrefProp?: string;
            color: string;
        }

        ...
    }


When I import it from another module:

    import { BreadcrumbLinkProps } from '../../typings/X.d.ts';

I get an error that, ""Module not found.""

I have been reading through the docs and I am very confused on what to do on this as I am fairly new to typescript.","How can I export an interface from d.ts file; so that, modules can import the type definition?"
683,2019-08-20 16:32:43,5,1,"Hey guys!

The majority of projects I work with use Webpack + babel or typescript or whatever. Basically there's some chain of tools and transformations, which update the browser when I do any change.

On many of them the development is quite slow, so for example if I make a change in a file, then I have to wait like 4-5 seconds (an sometimes it can be worse) until I see the update in the browser...

Anyway, my question is is it because the tools are slow or is my laptop is slow. In particular which parameters should help speeding this up. Is it RAM? SSD disk? CPU?

P.S.L My working horse is early-2015 macbook pro 13 inches. I would happily upgrade to the fastest beast out there if I had a guarantee that it will speed up my flow significantly",[AskJS] Will updating my macbook pro make any difference for development with webpack and friends?
684,2019-08-21 12:19:40,0,1,"I'm traditionally more of a data scientist. This involves writing a lot of Python code and after I learned about type hinting the quality of my code increased significantly. Nowadays I use Javascript on a daily basis, so making the decision to use TypeScript was quite natural.

When we started using GraphQL at the start of this year, we discovered that we were able to leverage the type safety of TypeScript in communication between some of my services. Hunting bugs where using the keys with typos in REST api parameters (e.g. userID instead of userId) is now a thing of the past.

Recently, our development team has been using TypeScript + GraphQL to set up a microservices architecture in which all services make use of TypeScript, and all communication is done using GraphQL schemas generated from TypeScript code. Our CTO has written a two part article about how we did this:

\- [Type safety in microservices part I: Backend and frontend](https://medium.com/@borremosch/ensuring-type-safety-in-a-microservices-architecture-using-graphql-and-typescript-part-i-type-d79c7fad63a0)  
\- [Type safety in microservices part II: GraphQL schema combination](https://medium.com/@borremosch/ensuring-type-safety-in-a-microservices-architecture-using-graphql-and-typescript-part-ii-type-381c7b8f4da9)

I am very curious to learn if there are others leveraging TypeScript in a similar fashion. Are there people using a code-first approach to GraphQL? Are there people sharing types between their services another way?",Ensuring type safety in a microservices architecture using GraphQL and TypeScript
685,2019-08-23 11:26:35,5,7,"I want to use OneSignal in my Node.js server, but can not find types for onesginal npm library. Certainly i'm using typescript. :D",Need help in OneSignal and Node.js
686,2019-08-25 22:26:02,0,10,,express-generator-typescript now has an option to include user-authentication and client-side session storage
687,2019-08-28 09:28:37,10,2,"Hello r/typescript,

do you know if there is a way to inspect type/interface at the runtime? My use case is generating docs from type information. When I try to manipulate a type I get ""...only refers to a type, but is being used as a value here."". Any hints?",Inspectable types/interfaces
688,2019-08-29 13:53:24,33,15,"As the title mentioned, having read the book above authored by Kyle Simpson, I felt that people who know Javascript's behaviour in and out would not need to write their codes in typescript. I feel that typescript is for people who want to avoid ""unexpected behaviour"" in Javascript when they dont know that in fact, those are ""expected behaviours"" in JS. Yay or nay?",Is typescript useful for people who have read 'You-don't-know-JS' and understood JS well?
689,2019-08-29 20:35:39,16,17,"Hello!  
I tried to find some info about proper structure of typescript project but I think that I didn't find anything reliable. That's why I would like to ask you how do you organize your typescript project structure? Where do you store types/interfaces files? Do you have any good tips?",Typescript project structure
690,2019-08-30 09:01:13,2,1,[removed],Need code suggestion for my logic in angular (javascript or typescript)
691,2019-08-30 12:40:40,1,1,"I want to build a slack clone or trello clone app. I will be using React with hooks and typescript in the front end. I am confused for which technology should I go for in the backend. 
Initially I was thinking to use GraphQL in Apollo server with Typescript in the backend. But then also found that Golang is very good for backend. As you can see these apps will be realtime so I can use Subscriptions with Graphql in typescript backend but then there is also websockets for golang in the backend. And also Golang is fast and scalable. 
If I use GraphQL in the backend, I can use react-apollo in the front end with minimal redux (As I already know redux). 
I know there is a GraphQL module for Golang but seems it is not good/stable and clustered.
Database will be PostgreSQL.
Also if I use Golang it will be REST APIs and then I can't use react-apollo in the frontend. Will have to go for redux and middlewares.
I am confused here which technology should I go for  in the backend server. Please recommend.",Golang or Typescript for backend server ?
692,2019-08-30 13:10:31,12,1,"I want to build a slack clone or trello clone app. I will be using React with hooks and typescript in the front end. I am confused for which technology should I go for in the backend. 
Initially I was thinking to use GraphQL in Apollo server with Typescript in the backend. But then also found that Golang is very good for backend. As you can see these apps will be realtime so I can use Subscriptions with Graphql in typescript backend but then there is also websockets for golang in the backend. And also Golang is fast and scalable. 
If I use GraphQL in the backend, I can use react-apollo in the front end with minimal redux (As I already know redux). 
I know there is a GraphQL module for Golang but seems it is not good/stable and clustered.
Database will be PostgreSQL.
Also if I use Golang it will be REST APIs and then I can't use react-apollo in the frontend. Will have to go for redux and middlewares.
I am confused here which technology should I go for  in the backend server. Please recommend.",[AskJS] Golang or Typescript for backend?
693,2019-09-03 02:48:32,3,1,"I have a working asp.net core web project with signalr.  I wanted to replace my javascript with typescript.  I've been troubleshooting various errors.  At one point it compiled and run, but the generated javascript contained `Object.defineProperty(exports, ""__esModule"", { value: true });` and gave a ""exports not defined"" error in the browser.  I've tried various settings in the tsconfig as this seemed to be related to the default CommonJS.

After troubleshooting and trying different things I am a little worse off as my *.ts no longer compiles.

Currently I am getting the error ""cannot find module '@aspnet/signalr'""

I have run from the project root the command `npm install @aspnet/signalr` and it succeeds.

My Scene.ts file contains just this boilerplate code:
```
import * as signalR from ""@aspnet/signalr"";
import * as $ from ""jquery"";

const connection = new signalR.HubConnectionBuilder()
    .withUrl(""/chatHub"")
    .build();
```

libman.json (Created by using Add Client-side library)
```
{
  ""version"": ""1.0"",
  ""defaultProvider"": ""unpkg"",
  ""libraries"": [
    {
      ""library"": ""@aspnet/signalr@1.1.4"",
      ""destination"": ""wwwroot/lib/@aspnet/signalr/"",
      ""files"": [
        ""dist/browser/signalr.js"",
        ""dist/browser/signalr.min.js""
      ]
    }
  ]
}
```

package.json
```
{
  ""name"": ""testproject"",
  ""version"": ""1.0.0"",
  ""description"": """",
  ""main"": ""index.js"",
  ""private"": true,
  ""scripts"": {
    ""test"": ""echo \""Error: no test specified\"" &amp;&amp; exit 1""
  },
  ""keywords"": [],
  ""author"": """",
  ""license"": ""ISC"",
  ""dependencies"": {
    ""@aspnet/signalr"": ""^1.1.4"",
    ""@types/jquery"": ""^3.3.31"",
    ""@types/node"": ""^12.7.3"",
    ""jquery"": ""^3.4.1""
  }
}
```

tsconfig.json
```
{
  ""compilerOptions"": {
    ""target"": ""es5"", /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019' or 'ESNEXT'. */
    ""module"": ""es2015""
  }
}
```

The directory structure showing where my js and lib files are:
```
wwwroot
  /js/Scene.ts
  /lib/@aspnet/signalr/dist/browser/signalr.js
  /lib/signalr/dist/browser/signalr.js
  /lib/jquery/dist/jquery.js
```

Of course I have a ton of stuff in node-modules.  Usually when I've used npm in the past I need to also use gulp to copy select files from the node_modules folder into my project.  The tutorials I've tried to go through are complicated by them trying to use multiple build tools that I'm not familiar with like webpack, so everytime I get some obscure error I don't have enough familiarity with the tool to troubleshoot.",SignalR with typescript setup
694,2019-09-03 16:07:16,46,38,"So I've been trying to get my colleagues to use Typescript for the last year. Main reasons: 

1) They make too many mistakes that could be caught by a proper compiler, such as typing the wrong variable or function name.  

2) They have no absolutely no idea what they're working with half the time. What is user_id? Is it a string? Is it a number? Sometimes it's both. Sometimes it's neither.

3) They don't know when they change some code and break stuff. If there was a function(x), and they modified it to become function(x,y), they have no clue where things broke.

4) Intellisense. Seriously makes coding so much faster.

Anyway I've tried convincing them to give Typescript a try. However all of them literally seem to shiver and cower in fear the moment they hear the words ""Typescript"" or ""Java"".

Last week I was asked to bridge some SDK writtein in Java to React Native so my colleagues could call the Java code from Javascript. The SDK was large and had a confusing naming scheme with tons of functions, constants, and sometimes the function returned Strings, sometimes Promises, sometimes it emitted the response to the event bus.

How nice this would be in Typescript, I thought. But since they all had a phobia of Typescript, I decided I'd compromise and just write a header definition file.

A few days later they run into a bug while testing, and of course, the first thing they blame is this mysterious "".d.ts"" file. ""I don't understand what this file is, but it's ugly and in Typescript so it must be the cause of all the problems"" - My colleague probably. 

They spent 2 hours trying to solve the bug, which obviously had nothing to do with the header file. Turns out one of those idiots tried to mock an async function with a normal function, so it didn't work properly, and IF they had used a proper IDE, the type definition file would have told them that it's an async function and it returns a promise.

So this morning I was scolded for being inconsiderate for checking in a "".d.ts"" file. Because it looks like Typescript. And my teammates are not comfortable with Typescript and therefore may not know how to use a "".d.ts"" file. Doesn't matter that half the npm packages they are using also have "".d.ts"" files. Nope, I'm the inconsiderate one for ""checking in typescript"" and making them waste 2 hours because the file ""looked very suspicious"".",Scolded for checking in a Typescript Definition File today
695,2019-09-03 22:19:50,1,3,"I have a TypeScript/React application that I bootstrapped with create-react-app.  It used to do type checking when I ran `yarn start`, but recently it stopped.  Now it just compiles and runs without type checking.

I have no idea why it would have stopped, especially since I have another application that has the exact same yarn.lock, tsconfig.json, and pretty much every other settings file, and it still does type checking.

Any ideas on where I should look?  My google-fu is not working today.",CRA with typescript stopped type checking
696,2019-09-05 01:23:52,1,1,"# rc-leaflet

React Map Components of Leaflet.js, [github](https://github.com/Coder-JJ/rc-leaflet)

## Features

- [x] `TypeScript` support

- [x] `JSX` support for `Popup`, `Tooltip` and `DivIcon`

- [x] `MassPoints` support, about max 150k points. `(v1.1.0+)`

- [x] `ClusterPoints` support, about max 50k points. `(v1.1.0+)`

- [x] RCMap scope `Theme` support

- [x] Import on Demand (tree-shaking)

## Components

- [x] [RCMap](https://github.com/Coder-JJ/rc-leaflet/blob/master/docs/RCMap.md)

- [x] [Theme](https://github.com/Coder-JJ/rc-leaflet/blob/master/docs/Theme.md)

- [x] [TileLayer](https://github.com/Coder-JJ/rc-leaflet/blob/master/docs/TileLayer.md)

- [x] [LayerGroup](https://github.com/Coder-JJ/rc-leaflet/blob/master/docs/LayerGroup.md) `(v1.4.0+)`

- [x] [FeatureGroup](https://github.com/Coder-JJ/rc-leaflet/blob/master/docs/FeatureGroup.md) `(v1.4.0+)`

- [x] [GeoJSON](https://github.com/Coder-JJ/rc-leaflet/blob/master/docs/GeoJSON.md) `(v1.4.0+)`

- [x] [Point](https://github.com/Coder-JJ/rc-leaflet/blob/master/docs/Point.md)

- [x] [MassPoints](https://github.com/Coder-JJ/rc-leaflet/blob/master/docs/MassPoints.md) `(v1.1.0+)`

- [x] [ClusterPoints](https://github.com/Coder-JJ/rc-leaflet/blob/master/docs/ClusterPoints.md) `(v1.1.0+)` **will deprecate in `v1.5.0+`, use [rc-leaflet-cluster](https://github.com/Coder-JJ/rc-leaflet-cluster) instead**

- [x] [CircleMarker](https://github.com/Coder-JJ/rc-leaflet/blob/master/docs/CircleMarker.md)

- [x] [Circle](https://github.com/Coder-JJ/rc-leaflet/blob/master/docs/Circle.md)

- [x] [Polyline](https://github.com/Coder-JJ/rc-leaflet/blob/master/docs/Polyline.md)

- [x] [Polygon](https://github.com/Coder-JJ/rc-leaflet/blob/master/docs/Polygon.md)

- [x] [Rectangle](https://github.com/Coder-JJ/rc-leaflet/blob/master/docs/Rectangle.md)

- [x] [ImageOverlay](https://github.com/Coder-JJ/rc-leaflet/blob/master/docs/ImageOverlay.md) `(v1.4.0+)`

- [x] [VideoOverlay](https://github.com/Coder-JJ/rc-leaflet/blob/master/docs/VideoOverlay.md) `(v1.4.0+)`

- [x] [SVGOverlay](https://github.com/Coder-JJ/rc-leaflet/blob/master/docs/SVGOverlay.md) `(v1.4.0+)`

- [x] [Icon](https://github.com/Coder-JJ/rc-leaflet/blob/master/docs/Icon.md)

- [x] [DivIcon](https://github.com/Coder-JJ/rc-leaflet/blob/master/docs/DivIcon.md)

- [x] [Popup](https://github.com/Coder-JJ/rc-leaflet/blob/master/docs/Popup.md)

- [x] [Tooltip](https://github.com/Coder-JJ/rc-leaflet/blob/master/docs/Tooltip.md)

## Plugins

- [x] [rc-leaflet-heat](https://github.com/Coder-JJ/rc-leaflet-heat)

- [x] [rc-leaflet-drawing](https://github.com/Coder-JJ/rc-leaflet-drawing)

- [ ] [rc-leaflet-cluster](https://github.com/Coder-JJ/rc-leaflet-cluster)

- [ ] rc-leaflet-routing

## Configuration

- [x] [CRS](https://github.com/Coder-JJ/rc-leaflet/blob/master/docs/CRS.md)

- [x] [TileLayers](https://github.com/Coder-JJ/rc-leaflet/blob/master/docs/TileLayers.md)

## Usage

### Install

```cmd
npm install rc-leaflet --save
```

### Import on Demand

```cmd
npm install babel-plugin-import --save-dev
```

```js
// .babelrc or babel-loader option
{
  ""plugins"": [
    [
      ""import"",
      {
        ""libraryName"": ""rc-leaflet"",
        ""libraryDirectory"": ""es/components"",
        ""camel2DashComponentName"": false
      },
      ""rc-leaflet-import""
    ]
  ]
}
```","rc-leaflet: A react map componets lib based on leaflet, typescript support"
697,2019-09-05 01:34:17,3,4,,"rc-leaflet, a react map components lib base on leaflet.js, typescript support."
698,2019-09-05 13:24:33,0,0,"Hello, r/typescript.

I'm trying to plot a line chart (will convert from a bar chart later) but I am stuck on 2 very annoying issues. Critical issues.

My visual refuses to plot any type of data whatsoever. It also completely refuses to allow formatting options in the formatting pane. I have tried everything I can think of. I have even picked apart other visuals to see if I'm just making a stupid syntax error, but I can not find what is causing this issue. The ONLY thing I seem to be able to change are the names of the fields. (My Y axis and X axis) otherwise, this visual is blank static regardless of what I add or modify. 

&amp;#x200B;

If any of you guys can skim through this and see what could be wrong, I would greatly appreciate it. I will attach both my visual.ts and my capabilities code below.

&amp;#x200B;

visual.ts;

&amp;#x200B;

    ""use strict"";
    import ""@babel/polyfill"";
    import ""./../style/visual.less"";
    import powerbi from ""powerbi-visuals-api"";
    import VisualConstructorOptions = powerbi.extensibility.visual.VisualConstructorOptions;
    import VisualUpdateOptions = powerbi.extensibility.visual.VisualUpdateOptions;
    import IVisual = powerbi.extensibility.visual.IVisual;
    import EnumerateVisualObjectInstancesOptions = powerbi.EnumerateVisualObjectInstancesOptions;
    import VisualObjectInstance = powerbi.VisualObjectInstance;
    import DataView = powerbi.DataView;
    import VisualObjectInstanceEnumerationObject = powerbi.VisualObjectInstanceEnumerationObject;
    import * as d3 from ""d3"";
    import { VisualSettings } from ""./settings"";
    import ISelectionManager = powerbi.extensibility.ISelectionManager;
    import { ChartDataPoint, ChartViewModel } from ""./viewmodels/model"";
    import IVisualHost = powerbi.extensibility.visual.IVisualHost;
    import * as DataViewObject from 'powerbi-visuals-utils-dataviewutils';
    
    interface DataPoint {
        duration: number;
        value: number;
        details: number;
        wells: string;
        colour: string;
        identity: powerbi.visuals.ISelectionId;
        highlighted: boolean;
    };
    interface ViewModel {
        dataPoints: DataPoint[];
        maxValue: number;
        highlights: boolean;
    };
    
    export class Visual implements IVisual {
        private host: IVisualHost;
        private svg: d3.Selection&lt;SVGElement&gt;;
        private barGroup: d3.Selection&lt;SVGElement&gt;;
        private viewModel: ViewModel;
        private locale: string;
        private selectionManager: ISelectionManager;
        private xAxisGroup: d3.Selection&lt;SVGElement&gt;;
        private yAxisGroup: d3.Selection&lt;SVGElement&gt;;
        private settings = {
            axis: {
                x: {
                    padding: {
                        default: 50,
                        value: 50
                    },
                    show: {
                        default: true,
                        value: true
                    }
                },
                y: {
                    padding: {
                        default: 50,
                        value: 50
                    }
                },
                border: {
                    top: {
                        default: 10,
                        value: 10
                    }
                }
            }
        }
    
        constructor(options: VisualConstructorOptions) {
            this.host = options.host;
            this.locale = this.host.locale;
            this.svg = d3.select(options.element)
                .append(""svg"")
                .classed(""Visual"", true);
            this.barGroup = this.svg.append(""g"")
                .classed(""bar-group"", true);         //this was chart
            this.xAxisGroup = this.svg.append(""g"")
                .classed(""x-axis"", true);
            this.selectionManager = this.host.createSelectionManager();
            this.yAxisGroup = this.svg.append(""g"")
                .classed(""y-axis"", true);
    
    
        }
    
        //This contains the 'canvas', its scaling, and how it can or cannot interact
        public update(options: VisualUpdateOptions) {
            //this.updateSettings(options);
            let viewModel = this.getViewModel(options);
            let width = options.viewport.width;
            let height = options.viewport.height;
            let xAxisPadding = this.settings.axis.x.show.value ? this.settings.axis.x.padding.value : 0;
            // let yAxisPadding = this.settings.axis.y.show.value ? this.settings.axis.y.padding.value : 0;
            this.svg.attr({
                width: width,
                height: height
            });
    
            let yScale = d3.scale.linear()
                .domain([0, this.viewModel.maxValue])
                .range([height - xAxisPadding, 0 + this.settings.axis.border.top.value]);
    
    
            let xScale = d3.scale.linear()
                .domain(viewModel.dataPoints.map(d =&gt; d.duration))
               // .rangeRoundBands([yAxisPadding, width], this.xPadding);
            let xAxis = d3.svg.axis()  //come back to this later if it causes issues. 
                .scale(xScale)
                .orient(""bottom"")
                .tickSize(.5);
            let yAxis = d3.svg.axis()
                .scale(yScale)
                .orient(""left"")
                .tickSize(.5);
    
            this.xAxisGroup
                .call(xAxis)
                .attr({
                    transform: ""translate(0 "" + (height - xAxisPadding) + "")""
                })
                .style({
                    fill: ""#777777""
                })
                .selectAll(""text"")
                .attr({
                    ""text-anchor"": ""end"",
                    ""font-size"": ""x-small""
    
                });
            this.yAxisGroup
                .call(yAxis)
                .attr({
                    transform: ""translate("" + this.settings.axis.y.padding + "",0)""
                })
                .style({
                    fill: ""#777777""
                })
                .selectAll(""text"")
                .style({
                    ""text-anchor"": ""end"",
                    ""font-size"": ""x-small""
                });
    
    
            let bars = this.barGroup
                .selectAll("".bar"")            //keep an eye on this. was '.lines'
                .data(viewModel.dataPoints);
            bars.enter()
                .append(""svg"")
                .classed(""bar"", true);    //this was chart
            bars
                .attr({
                    //width: xScale.range(),
                    height: d =&gt; height = yScale(d.value) - xAxisPadding,
                    x: d =&gt; xScale(d.duration),
    
                })
                .style({
                    fill: d =&gt; d.colour,
                    ""fill-opacity"": d =&gt; viewModel.highlights ? d.highlighted ? 1.0 : 0.5 : 1.0
                })
                .on(""click"", (d) =&gt; {
                    this.selectionManager
                        .select(d.identity, true)
                        .then(ids =&gt; {
                            bars.style({
                                ""fill-opacity"": ids.length &gt; 0 ?
                                    d =&gt; ids.indexOf(d.identity) &gt;= 0 ? 1.0 : 0.5
                                    : 1.0
    
    
                            });
    
                        })
    
                });
            bars.exit()
                .remove();
    
    
    
    
        }
        /* private updateSettings(options: VisualUpdateOptions) {
             this.settings.axis.x.show.value = DataViewObjects.getValue
                 (options.dataViews[0].metadata.objects, {
                     objectName: ""xAxis"",
                     propertyName: ""show""
             })
         }*/
    
        private getViewModel(options: VisualUpdateOptions): ViewModel {
            let dv = options.dataViews;
            let viewModel: ViewModel = {
                dataPoints: [],
                maxValue: 0,
                highlights: false
    
            };
    
            /* if (!dv
                 || !dv[0]
                 || !dv[0].categorical
                 || !dv[0].categorical.categories
                 || !dv[0].categorical.categories[0].source
                 || !dv[0].categorical.values)
                 return viewModel;*/
    
            let view = dv[0].categorical;
    
            let categories = view.categories[0];
            let values = view.values[0];
            let highlights = values.highlights;
            for (let i = 0, len = Math.max(categories.values.length, values.values.length); i &lt; len; i++) {
                viewModel.dataPoints.push({
                    duration: &lt;number&gt;values.values[i],
                    value: &lt;number&gt;values.values[i],
                    details: &lt;number&gt;categories.values[i],
                    wells: &lt;string&gt;categories.values[i],
                    colour: this.host.colorPalette.getColor(&lt;string&gt;categories.values[i]).value,
                    identity: this.host.createSelectionIdBuilder()
                        .withCategory(categories, i)
                        .createSelectionId(),
                    highlighted: highlights ? highlights[i] ? true : false : false
    
                });
            }
    
            viewModel.maxValue = d3.max(viewModel.dataPoints, d =&gt; d.value);
            viewModel.highlights = viewModel.dataPoints.filter(d =&gt; d.highlighted).length &gt; 0;
            return viewModel;
    
        }
    
    
    
        public enumerateObjectInstances(options: EnumerateVisualObjectInstancesOptions): VisualObjectInstance[] | VisualObjectInstanceEnumerationObject {
            let propertyGroupName = options.objectName;
            let properties: VisualObjectInstance[] = [];
            switch (propertyGroupName) {
                case ""duration"":
                    properties.push({
                        objectName: propertyGroupName,
                        properties: {
                            show: this.settings.axis.x.show.value
                        },
                        selector: null
                    });
                    break;
    
            };
            return properties
        }
    
    
    
    }
    

&amp;#x200B;

&amp;#x200B;

    capabilities;
    
    {
      ""dataRoles"": [
        {
          ""displayName"": ""Axis"",
          ""name"": ""duration"",
          ""kind"": ""GroupingOrMeasure""
        },
        {
          ""displayName"": ""Values"",
          ""name"": ""value"",
          ""kind"": ""GroupingOrMeasure""
        }
      ],
      ""dataViewMappings"": [
        {
          ""conditions"": [
            {
              ""category"": {
                ""max"": 1
              },
              ""measure"": {
                ""max"": 1
              }
            }
          ],
          ""categorical"": {
            ""categories"": {
              ""for"": {
                ""in"": ""duration""
              },
              ""dataReductionAlgorithm"": {
                ""top"": {}
              }
            },
            ""values"": {
              ""select"": [
                {
                  ""bind"": {
                    ""to"": ""value""
                  }
                }
              ]
            }
          }
        }
      ],
      ""objects"": {
        ""xAxis"": {
          ""displayName"": ""X Axis"",
          ""properties"": {
            ""show"": {
              ""displayName"": ""Show X Axis"",
              ""type"": {
                ""bool"": true
              }
            },
            ""padding"": {
              ""displayName"": ""Padding"",
              ""type"": {
                ""numeric"": true
              }
            },
            ""color"": {
              ""displayName"": ""Color"",
              ""type"": {
                ""fill"": {
                  ""solid"": {
                    ""color"": true
                  }
                }
              }
            }
          }
        },
        ""yAxis"": {
          ""displayName"": ""Y Axis"",
          ""properties"": {
            ""show"": {
              ""displayName"": ""Show Y Axis"",
              ""type"": {
                ""bool"": true
              }
            },
            ""padding"": {
              ""displayName"": ""Padding"",
              ""type"": {
                ""numeric"": true
              }
            },
            ""color"": {
              ""displayName"": ""Color"",
              ""type"": {
                ""fill"": {
                  ""solid"": {
                    ""color"": true
                  }
                }
              }
            }
          }
        },
        ""borders"": {
          ""displayName"": ""Borders"",
          ""properties"": {
            ""top"": {
              ""displayName"": ""Top"",
              ""type"": {
                ""numeric"": true
              }
            },
            ""bottom"": {
              ""displayName"": ""Bottom"",
              ""type"": {
                ""numeric"": true
              }
            }
          }
        },
        ""dataColors"": {
          ""displayName"": ""Data Colors"",
          ""properties"": {
            ""fill"": {
              ""displayName"": ""Color"",
              ""type"": {
                ""fill"": {
                  ""solid"": {
                    ""color"": true
                  }
                }
              }
            }
          }
        }
      },
      ""supportsHighlight"": true
    }",Formatting Options / Bars not displaying (PBI)
699,2019-09-06 12:49:31,5,6,"Hi,

I have seen that sonarqube has now a support for typescript ([https://www.sonarsource.com/products/codeanalyzers/sonarts.html](https://www.sonarsource.com/products/codeanalyzers/sonarts.html)) and I am looking for review about it.

Does some of you using it ?   
It is great ? 

I come from java and this is so usefull, I wonder if it could be the same with typescript.",Typescript support in sonarqube
700,2019-09-11 06:18:15,0,1,,"Web Clipper develop by react and typescript ( support Notion,Github issue,OneNote,bear)"
701,2019-09-13 09:12:28,12,3,"Hi there

There is a type like this

    export type PathType =
      | LivingstoneSouthernWhiteFacedOwl
      | ArakGroundhog
      | HubsCampaigns
      | HubsCampaignsItemID
      | HubsAlgos
      | HubsAlgosItemID
      | TartuGecko
      | HammerfestPonies
      | TrapaniSnowLeopard
      | BeijingPigeon
      | Link
      | LinksMhdSwsVisordeltas
      | MetadatahandlingName
      | MetadatahandlingGetmetadataSequencesNameSequenceNameLabelNameLabelName;

And I need to write a function like this one

    import { PathType } from '../types/path.type';
    
    const makeFormJSONSchema = (path: PathType) =&gt; {
      const schema = {};
      // 1. If there are any `parameters` put them into the schema
      if (path.hasOwnProperty('parameters')) {
        path.parameters;
      }
      // 2. then peek at the method object by the `method` prop
      // 3. Check for additional `parameters` and put into the schema
      // 4. Check for `requestBody` and put into the schema
    
      return schema;
    };
    
    export default makeFormJSONSchema;
    

Here as you can see I check if the `path` object got the `parameters` property then try to access it. 

However typescript gives an error

&amp;#x200B;

&amp;#x200B;

https://i.redd.it/wquwhabgvbm31.png

How can we tell typescript that yes we got this?",typescript still complains after hasOwnProperty check
702,2019-09-17 21:49:55,5,1,"Hi, I'm using node v12 which supports Intl.ListFormat, which I'd like to use.

&amp;#x200B;

The error I get when doing so is

\`ts2339\`

\`Property 'ListFormat' does not exist on type 'typeof Intl'.\`

I've tried various things I found on google with \`globals.d.ts\` files and declare statements but they haven't worked. I'm new to typescript but experienced with javascript. Stack Overflow could not help me, so I thought I'd try here:)

using typescript 3.6.3",types for Intl.ListFormat
703,2019-09-21 08:14:17,11,12,I'm building a react codebase in typescript for the first time and I'm not really sure if I should use typescript for my tests and config files that don't really touch my codebase or if I should just leave them as plain .js files?,Should I use typescript on all files (test files etc)?
704,2019-09-23 16:33:04,12,12,"Hello,

There is following example in ""Usage redux with typescript"" docs:

    export const SEND_MESSAGE = 'SEND_MESSAGE'
    export const DELETE_MESSAGE = 'DELETE_MESSAGE'
    
    interface SendMessageAction {
      type: typeof SEND_MESSAGE
      payload: Message
    }

I don't understand what exactly \`typeof SEND\_MESSAGE\` means?

Does it mean that \`type\` property of SendMessageAction should be any string (because typeof ""SEND\_MESSAGE"" is string) or does it means that type can by only specifically ""SEND\_MESSAGE"" string?",Confused with TS's `typeof` type guard
705,2019-09-24 18:33:09,37,14,"Hey there! I am currently studying Web development, and this week we have been tasked with finding something that we think could be cool and useful to learn (TLDR of the circumstances is that we've gotten 1 week of ""Do what you want aslong as its productive and web development related"")

My background:

I know javascript well i'd say and that is why i figured that i wanted to see what typescript could offer, as i read it was mostly the same as JS syntaxwise, but that it adds alot of features and can prevent alot of debugging time later on!

To my question! I think i'm having a hard time grasping which situations typescript actually excels at! I have so far only seen examples of Typescript being used in OOP projects and that got me thinking, is typescript something you only apply sometimes, and otherwise just go with plain old JS? or is typescript something that you embrace and completely replace JS with no matter what the project requires?

I can see the cleverness in using Typescript with OOP projects, but earlier today when i wanted to do something as simple as make a reference to a HTML element and style the height of it, I got all sorts of errors and i spend a good hour and a half figuring out exactly what was going on before i realised i had to mention &lt;HTMLElement&gt; before document.querySelector.

I guess my question after all of this is, do you guys have any sort of beginner tips on how to grasp Typescript for a guy who has literally only ever used Javascript, CSS and HTML? I really want to learn this because it looks really fun when you know what you are doing! But i am struggling! Help me :D

PS. I am a student, my knowledge may vary greatly on different areas in coding, so keep it simple :P",When to use Typescript and when not to? (Very new at TS)
706,2019-09-25 12:31:01,6,5,"I have been covering a project over to Typescript as I want learn how to use it with node js and react. The issue is that when I have come to convert it over with Webpack I cannot seem to be able to get both client and serverside to work at the same time. When I use exclude node modules the client side does not work (regarding bundle.js not liking require) and then removing this won't allow me to compile the webpack file

&amp;#x200B;

Attached all config files if anyone is able to tell me what I am doing wrong. Thanks for any help

&amp;#x200B;

webpack.config.js

    const path = require('path');
    
    module.exports = {
        entry: [""./src/index.tsx""],
        target: 'web',
        resolve: {
            extensions: ['.ts', '.js', '.json', '.tsx']
        },
        output: {
            path: path.resolve(__dirname, ""public""),
            filename: 'bundle.js'
        },
        module: {
            rules: [
                {
                    test: /\.ts$/,
                    exclude: /node_modules/,
                    use: {
                        loader: 'ts-loader',
                    }
                },
                {
                    test: /\.tsx?$/,
                    loader: ""awesome-typescript-loader""
                }
            ]
           
        }
        
    }

tsconfig.json

    {
      ""compilerOptions"": {
        ""target"": ""es5"",                          /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019' or 'ESNEXT'. */
        ""module"": ""commonjs"",                     /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
        ""lib"": [""es5"",""dom""],                     /* Specify library files to be included in the compilation. */
        ""outDir"": ""lib"",                          /* Redirect output structure to the directory. */
        ""rootDir"": ""src"",                         /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
        ""strict"": true,                           /* Enable all strict type-checking options. */
        ""esModuleInterop"": true,                  /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
        ""resolveJsonModule"": true,                 /* Include modules imported with '.json' extension */
        ""jsx"": ""react"",
        ""moduleResolution"": ""node"",
        ""skipLibCheck"": true
      }
    }",Converting JS to TS and having issues with Webpack
707,2019-09-25 14:53:29,3,2,[removed],What are all the ways to consume styles to typescript?
708,2019-09-26 00:29:17,8,6,"```ts
interface IProps extends SpaceProps, ColorProps, LayoutProps, TypographyProps, FlexboxProps, GridProps, OtherProps {}  
type Props = Omit&lt;LinkProps, ""color""&gt; &amp; IProps  
export default Props;
```

and...

```ts
interface Props extends SpaceProps, ColorProps, LayoutProps, TypographyProps, FlexboxProps, GridProps, OtherProps, Omit&lt;LinkProps, ""color""&gt; {} 
export default Props;
```

The second one, which seems like the more correct way to me, doesn't work and give the error:

Type 'Props' does not satisfy the constraint 'Pick&lt;Pick&lt;LinkProps&lt;unknown&gt; &amp; RefAttributes&lt;Link&lt;unknown&gt;&gt;, ""color"" | ""to"" | ""replace"" | ""innerRef"" | ""download"" | ""href"" | ""hrefLang"" | ""media"" | ""ping"" | ""rel"" | ""target"" | ""type"" | ""referrerPolicy"" | ... 251 more ... | ""onTransitionEndCapture""&gt;, ""color"" | ... 263 more ... | ""onTransitionEndCapture""&gt;'.
  Types of property 'color' are incompatible.
    Type 'string | (string | null)[] | { [key: string]: string; } | undefined' is not assignable to type 'string | undefined'.
      Type '(string | null)[]' is not assignable to type 'string'.ts(2344)

Some more info:
- these are the extra props for an @emotion/styled react-router-dom Link component.
- cra typescript project

Please let me know if you need any more details, and thanks!",Can someone please explain the difference between these 2 snippets? New to ts
709,2019-09-26 02:36:09,0,1,"Hey y'all,

This post is about a package I finally feel comfortable sharing. Basically, it's an exposed class that leverages a definition abstracted from the NWS's OpenAPI conformant API. While it still needs work, [dtsgenerator](https://github.com/horiuchi/dtsgenerator) got me a long way there (and it's a build dependency).

With the power of typescript, this package will indicate what query parameters exist for a given endpoint. Hm, I should probably make a gif to better illustrate what I mean.

Here's the example I put on GitHub:

    import { NationalWeatherServicePublicDataAPIServices } from ""@paxperscientiam/national-weather-service-api.ts""
    const NWS = new NationalWeatherServicePublicDataAPIServices() 
    const alerts = NWS.AlertsService({     active: true, }) 
    const url = alerts.buildURI() // =&gt; ""https://api.weather.gov/alerts?active=true""

Link: [https://github.com/paxperscientiam/national-weather-service-types](https://github.com/paxperscientiam/national-weather-service-types)

Critique is very welcome.",[OC] US National Weather Service forecast API
710,2019-09-26 09:04:30,7,6,,"JS, Types and the road to sanity (flow, typescript)"
711,2019-09-30 19:54:38,5,1,"Hi, I'm developing an open source hardware and software project and have chosen to write the frontend in electron and typescript.  This is my first time programming in typescript, I'm a Qt programmer.

My intention is to have a pool of objects, I originally tried using the template class but it didn't seem possible to find out if an object supported a particular interface, which is a requirement for me.

So with a bit of tinkering, I came up with this pattern, every object has a function named with a UUID and a hasInterface static function which tests an object for that function, this seems to work beautifully.

`import { IObject } from ""./IObject"";`

`import { IDevice} from ""./IDevice"";`

`export abstract class IDeviceFactory extends IObject {`

`id_cf09ac795c434310b77dfe3ca5d3e843():string {`

`return(""IDeviceFactory"");`

`}`  

&amp;#x200B;

`static hasInterface(arg: any) {`

`let obj:IDeviceFactory = arg as IDeviceFactory;`   

`return (arg.id_cf09ac795c434310b77dfe3ca5d3e843 !== undefined);`

`}`

`}` 

...

`if (IDevice.hasInterface(obj)) {`

`// has IDevice`

`}`

Has anybody else done anything similar, any issues, downsides, problems etc?  As I said, I'm coming from a Qt background and this is the first typescript code I've written, so I've probably already made a hundred mistakes.

I was hoping typescript had a macro preprocessor as well so I could rearrange my test, so hasInterface(IDevice, obj) or hasInterface&lt;IDevice&gt;(obj)",Interface pattern
712,2019-10-01 18:15:12,6,60,"**TLDR; This is a status update on the .NET documentation. If you want me to do more of those (once a month), please let me know in the comments!**

**Comment: If you have suggestions, please let me know in the comments. Any product feedback will be forwarded to the proper product team.**

Hi everyone!

This is the fourth month where I post a summary of all .NET-related documentation that was significantly updated. This month covers all changes from September 1st to September 27th.

My name is Maxime Rouiller and I'm a Cloud Advocate with Microsoft. For this month, I'm covering three major products:

* .NET, which had ~474 commits, and 3,492 changed files on their [docs repository](https://github.com/dotnet/docs) and ~96 PRs on their [API docs repository](https://github.com/dotnet/dotnet-api-docs)
* ASP.NET, which had ~282 commits, and 1,102 changed files on their [docs repository](https://github.com/aspnet/AspNetCore.Docs)
* NuGet, which had ~109 commits, and 45 changed files on their [docs repository](https://github.com/NuGet/docs.microsoft.com-nuget)

For this month, I'll be trying something new. I will not be leaving a comment beside each article and will instead use a Legend with emojis (I know, it's Reddit. What am I doing!?). Thing is, it's easier to show you what's what than explain it. Where relevant, I will leave notes.

## Legend

* 📢: Major/Main article that everyone will want to read
* 💥: Important/Must read.
* ✨: Brand new page

Note: It's not because a page doesn't have an icon that it is not important. Everything here is either brand new or significantly modified.

## Themes this month

### .NET Core 3

* What's new for Preview 9 and GA release
* JSON serialization
* CLI updates
* Migration docs for 2.2 and 3.0

### Managed Languages

* C# 8.0 Updates
* C# 8.0 Spec updates

## .NET Core

* 💥 [Prerequisites for .NET Core on Windows](https://docs.microsoft.com/dotnet/core/windows-prerequisites?wt.mc_id=docsexp4-reddit-marouill)
* 💥 [Breaking changes, version 3.0 Preview 9 to 3.0 - .NET Core](https://docs.microsoft.com/dotnet/core/compatibility/3.0.9-3.0?wt.mc_id=docsexp4-reddit-marouill)

### eBook - Blazor for Web Forms Developers ✨

Are you a Web Form developer? This book is brand new and will help you bridge your knowledge between WebForms and Blazor.

Everything is linked below (expect more updates in later months) but you may want to start at the beginning.

&gt; ❗ Do not forget that you can download all eBooks with the **Download PDF** button in the bottom left of your screen (desktop) or through the `Content` menu if you are on mobile. ❗

* [Blazor for ASP.NET Web Forms Developers](https://docs.microsoft.com/dotnet/architecture/blazor-for-web-forms-developers/index?wt.mc_id=docsexp4-reddit-marouill)

### eBook Update - Architecting Cloud Native .NET Applications for Azure

Are you a developer, a lead or even an architect? Want to know how to build an application that is made for the cloud?

This is the book for you. Lots of new articles and updated chapters after the 3.0 GA release.

&gt; ❗ Do not forget that you can download all eBooks with the **Download PDF** button in the bottom left of your screen (desktop) or through the `Content` menu if you are on mobile. ❗

* [Architecting Cloud Native .NET Applications for Azure](https://docs.microsoft.com/dotnet/architecture/cloud-native/?wt.mc_id=docsexp4-reddit-marouill)

### eBook - ASP.NET Core gRPC for WCF Developers - gRPC for WCF Developers 💥✨

Lots of you have asked me last month about how to handle gRPC coming from a WCF point of view. Well, this month is your time to shine. There's a literal book being currently written about it. The whole thing is brand new is aimed at developers that were, surprise surprise, using WCF before.

These books take you from migration, load balancing, Kubernetes, error handling, security, to why even use it. It is a must-read.

&gt; ❗ Do not forget that you can download all eBooks with the **Download PDF** button in the bottom left of your screen (desktop) or through the `Content` menu if you are on mobile. ❗

* [ASP.NET Core gRPC for WCF Developers - gRPC for WCF Developers](https://docs.microsoft.com/dotnet/architecture/grpc-for-wcf-developers/index?wt.mc_id=docsexp4-reddit-marouill)

### Compatibility 💥

If something broke, it's listed here. They are all important if it impacts you. Go through the list and read those that apply to your current environment.

* [Breaking changes, version 2.2 to 3.0 - .NET Core](https://docs.microsoft.com/dotnet/core/compatibility/2.2-3.0?wt.mc_id=docsexp4-reddit-marouill)
* [Breaking changes, version 3.0 Preview 6 to 3.0 Preview 7 - .NET Core](https://docs.microsoft.com/dotnet/core/compatibility/3.0.6-3.0.7?wt.mc_id=docsexp4-reddit-marouill)
* [Breaking changes, version 3.0 Preview 7 to 3.0 Preview 8 - .NET Core](https://docs.microsoft.com/dotnet/core/compatibility/3.0.7-3.0.8?wt.mc_id=docsexp4-reddit-marouill)
* [Breaking changes, version 3.0 Preview 8 to 3.0 Preview 9 - .NET Core](https://docs.microsoft.com/dotnet/core/compatibility/3.0.8-3.0.9?wt.mc_id=docsexp4-reddit-marouill)
* [Breaking changes, version 3.0 Preview 9 to 3.0 - .NET Core](https://docs.microsoft.com/dotnet/core/compatibility/3.0.9-3.0?wt.mc_id=docsexp4-reddit-marouill)
* [.NET Core breaking changes](https://docs.microsoft.com/dotnet/core/compatibility/breaking-changes?wt.mc_id=docsexp4-reddit-marouill)
* [CoreFx breaking changes - .NET Core](https://docs.microsoft.com/dotnet/core/compatibility/corefx?wt.mc_id=docsexp4-reddit-marouill)
* [Cryptography breaking changes, version 2.2 to 3.0 - .NET Core](https://docs.microsoft.com/dotnet/core/compatibility/crypto?wt.mc_id=docsexp4-reddit-marouill)
* [Cryptography breaking changes - .NET Core](https://docs.microsoft.com/dotnet/core/compatibility/cryptography?wt.mc_id=docsexp4-reddit-marouill)
* [Breaking changes, .NET Framework to .NET Core 3.0 - .NET Core](https://docs.microsoft.com/dotnet/core/compatibility/framework-core?wt.mc_id=docsexp4-reddit-marouill)
* [Globalization breaking changes - .NET Core](https://docs.microsoft.com/dotnet/core/compatibility/globalization?wt.mc_id=docsexp4-reddit-marouill)
* [Visual Basic breaking changes - .NET Core](https://docs.microsoft.com/dotnet/core/compatibility/visualbasic?wt.mc_id=docsexp4-reddit-marouill)
* [Windows Forms breaking changes - .NET Core](https://docs.microsoft.com/dotnet/core/compatibility/winforms?wt.mc_id=docsexp4-reddit-marouill)

### .NET Desktop Guide - What is Windows Presentation Foundation 💥✨

New guide about WPF for .NET Core, what it is and its place within .NET Core 3.0. Whether you like XAML or not, It's a good thing to remember as there are tons of WPF applications in the wild and your chances of encountering one is mostly guaranteed.

This guide may save you some time in the future.

* [What is Windows Presentation Foundation](https://docs.microsoft.com/dotnet/desktop-wpf/overview/index?wt.mc_id=docsexp4-reddit-marouill)

### .NET Framework

Updates to the actual .NET Framework. Not-Core related.

* [How to: Build a multifile assembly](https://docs.microsoft.com/dotnet/framework/app-domains/build-multifile-assembly?wt.mc_id=docsexp4-reddit-marouill)
* [How to: Build a .NET Framework single-file assembly](https://docs.microsoft.com/dotnet/framework/app-domains/build-single-file-assembly?wt.mc_id=docsexp4-reddit-marouill)
* [How to: Share an assembly with other applications](https://docs.microsoft.com/dotnet/framework/app-domains/how-to-share-an-assembly-with-other-applications?wt.mc_id=docsexp4-reddit-marouill)
* [How to: Get type and member information by using reflection](https://docs.microsoft.com/dotnet/framework/reflection-and-codedom/get-type-member-information?wt.mc_id=docsexp4-reddit-marouill)
* [Storyboards Overview](https://docs.microsoft.com/dotnet/framework/wpf/graphics-multimedia/storyboards-overview?wt.mc_id=docsexp4-reddit-marouill)

### .NET Guide - Assemblies in .NET

Everything you ever wanted or didn't want to know about assemblies in .NET. To sign or not to sign isn't the question. Did you know? That is the question.

* [Assemblies in .NET](https://docs.microsoft.com/dotnet/standard/assembly/index?wt.mc_id=docsexp4-reddit-marouill)
* [Assembly contents](https://docs.microsoft.com/dotnet/standard/assembly/contents?wt.mc_id=docsexp4-reddit-marouill)
* [How to: Create a public-private key pair](https://docs.microsoft.com/dotnet/standard/assembly/create-public-private-key-pair?wt.mc_id=docsexp4-reddit-marouill)
* [How to: Create signed friend assemblies](https://docs.microsoft.com/dotnet/standard/assembly/create-signed-friend?wt.mc_id=docsexp4-reddit-marouill)
* [How to: Create unsigned friend assemblies](https://docs.microsoft.com/dotnet/standard/assembly/create-unsigned-friend?wt.mc_id=docsexp4-reddit-marouill)
* [Delay-sign an assembly](https://docs.microsoft.com/dotnet/standard/assembly/delay-sign?wt.mc_id=docsexp4-reddit-marouill)
* [Walkthrough: Embed types from managed assemblies in Visual Studio](https://docs.microsoft.com/dotnet/standard/assembly/embed-types-visual-studio?wt.mc_id=docsexp4-reddit-marouill)
* [How to: Find an assembly's fully qualified name](https://docs.microsoft.com/dotnet/standard/assembly/find-fully-qualified-name?wt.mc_id=docsexp4-reddit-marouill)
* [Friend assemblies](https://docs.microsoft.com/dotnet/standard/assembly/friend?wt.mc_id=docsexp4-reddit-marouill)
* [How to: Determine if a file is an assembly](https://docs.microsoft.com/dotnet/standard/assembly/identify?wt.mc_id=docsexp4-reddit-marouill)
* [How to: Load and unload assemblies](https://docs.microsoft.com/dotnet/standard/assembly/load-unload?wt.mc_id=docsexp4-reddit-marouill)
* [How to: Reference a strong-named assembly](https://docs.microsoft.com/dotnet/standard/assembly/reference-strong-named?wt.mc_id=docsexp4-reddit-marouill)
* [How to: Sign an assembly with a strong name](https://docs.microsoft.com/dotnet/standard/assembly/sign-strong-name?wt.mc_id=docsexp4-reddit-marouill)

### Tooling, Tutorial, Serialization, Exceptions, and Others

Machine learning tutorial? Yes. We haven't gotten enough of them that's for sure. Machine learning is becoming omnipresent and starting with a tutorial sure is a good way to learn.

* ['Tutorial: Analyze sentiment of movie reviews using a pre-trained TensorFlow model'](https://docs.microsoft.com/dotnet/machine-learning/tutorials/text-classification-tf?wt.mc_id=docsexp4-reddit-marouill)
* [Load data from files and other sources](https://docs.microsoft.com/dotnet/machine-learning/how-to-guides/load-data-ml-net?wt.mc_id=docsexp4-reddit-marouill)

The JSON serializer is brand new. Have you tried it? Those articles are your perfect start to understanding how it works. Including the most fun data type to serialize, `DateTime` and `DateTimeOffset`.

* [How to serialize JSON - .NET](https://docs.microsoft.com/dotnet/standard/serialization/system-text-json-how-to?wt.mc_id=docsexp4-reddit-marouill)
* [JSON serialization in .NET](https://docs.microsoft.com/dotnet/standard/serialization/system-text-json-overview?wt.mc_id=docsexp4-reddit-marouill)
* [DateTime and DateTimeOffset support in System.Text.Json](https://docs.microsoft.com/dotnet/standard/datetime/system-text-json-support?wt.mc_id=docsexp4-reddit-marouill)

With the new tooling and .NET being used on the daily, you're bound to run into issues. The first article handles the possible issues you might run into. The second shows you how to make localized exception messages. Neat 🤖📷.

* ✨ [Troubleshoot .NET Core tool usage issues](https://docs.microsoft.com/dotnet/core/tools/troubleshoot-usage-issues?wt.mc_id=docsexp4-reddit-marouill)
* ✨ [How to: create user-defined exceptions with localized exception messages](https://docs.microsoft.com/dotnet/standard/exceptions/how-to-create-localized-exception-messages?wt.mc_id=docsexp4-reddit-marouill)

## ASP.NET Core

* 📢 [What's new in ASP.NET Core 3.0](https://docs.microsoft.com/aspnet/core/release-notes/aspnetcore-3.0?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)
* 💥 [Migrate from ASP.NET Core 2.2 to 3.0](https://docs.microsoft.com/aspnet/core/migration/22-to-30?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)

### Blazor

If you are now reading this, it's because you are a fan of WebAssembly(aka WASM). Enjoy this small update.

Server-side Blazor has hit GA while the client-side is still in Preview.

* [Create and use ASP.NET Core Razor components](https://docs.microsoft.com/aspnet/core/blazor/components?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)
* [ASP.NET Core Blazor hosting models](https://docs.microsoft.com/aspnet/core/blazor/hosting-models?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)

### Fundamentals

Lots of fundamental articles have been updated to the 3.0 release. 

You will find here updated articles, samples, and general tidying of articles (typos, more snippets, clarifications).

* [Detect changes with change tokens in ASP.NET Core](https://docs.microsoft.com/aspnet/core/fundamentals/change-tokens?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)
* [Dependency injection in ASP.NET Core](https://docs.microsoft.com/aspnet/core/fundamentals/dependency-injection?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)
* [Background tasks with hosted services in ASP.NET Core](https://docs.microsoft.com/aspnet/core/fundamentals/host/hosted-services?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)
* [Microsoft.AspNetCore.App metapackage for ASP.NET Core](https://docs.microsoft.com/aspnet/core/fundamentals/metapackage-app?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)
* [Middleware activation with a third-party container in ASP.NET Core](https://docs.microsoft.com/aspnet/core/fundamentals/middleware/extensibility-third-party-container?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)
* [Factory-based middleware activation in ASP.NET Core](https://docs.microsoft.com/aspnet/core/fundamentals/middleware/extensibility?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)
* [ASP.NET Core Middleware](https://docs.microsoft.com/aspnet/core/fundamentals/middleware/index?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)
* [Routing in ASP.NET Core](https://docs.microsoft.com/aspnet/core/fundamentals/routing?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)
* [Kestrel web server implementation in ASP.NET Core](https://docs.microsoft.com/aspnet/core/fundamentals/servers/kestrel?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)

### gRPC

So you're not the *book* kind of developer. You'd rather jump in the code and try right away. I get that. After you get up to date as to what is gRPC on .NET Core, we're getting right into how to integrate with gRPC services. Straight to the code.

* [Introduction to gRPC on .NET Core](https://docs.microsoft.com/aspnet/core/grpc/index?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)
* ✨ [Call gRPC services with the .NET client](https://docs.microsoft.com/aspnet/core/grpc/client?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)
* ✨ [gRPC client factory integration in .NET Core](https://docs.microsoft.com/aspnet/core/grpc/clientfactory?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)
* ✨ [Logging and diagnostics in gRPC on .NET](https://docs.microsoft.com/aspnet/core/grpc/diagnostics?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)

### MVC

Updated article about testing controller logic. Finally, there were some docs missing about Tag Helpers. This is now a solved problem. See below.

* [Test controller logic in ASP.NET Core](https://docs.microsoft.com/aspnet/core/mvc/controllers/testing?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)
* ✨ [Link Tag Helper in ASP.NET Core](https://docs.microsoft.com/aspnet/core/mvc/views/tag-helpers/built-in/link-tag-helper?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)
* ✨ [Script Tag Helper in ASP.NET Core](https://docs.microsoft.com/aspnet/core/mvc/views/tag-helpers/built-in/script-tag-helper?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)

### SignalR

We were missing a page about what feature each of our client supports. Check out the brand new page below. Then, since SignalR has dropped `UseSignalR()` everywhere and you now need to use `UseEndpoints(...)`, all of our docs now accurately represent how to set this up.

* ✨ [SignalR client features](https://docs.microsoft.com/aspnet/core/signalr/client-features?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)
* [Authentication and authorization in ASP.NET Core SignalR](https://docs.microsoft.com/aspnet/core/signalr/authn-and-authz?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)
* [Host ASP.NET Core SignalR in background services](https://docs.microsoft.com/aspnet/core/signalr/background-services?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)
* [ASP.NET Core SignalR configuration](https://docs.microsoft.com/aspnet/core/signalr/configuration?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)
* [Security considerations in ASP.NET Core SignalR](https://docs.microsoft.com/aspnet/core/signalr/security?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)
* [Use ASP.NET Core SignalR with TypeScript and Webpack](https://docs.microsoft.com/aspnet/core/tutorials/signalr-typescript-webpack?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)

### WebAPI

After releasing the `Microsoft.dotnet-openapi` global tool, it is important to have documentation for it. That's in the first article. A new article on customizing your error handling with ASP.NET Core Web API is definitely a must-read as well.

For the rest, you will find here updated samples, and general tidying of articles (typos, more snippets, clarifications).

* ✨ [Develop ASP.NET Core apps using OpenAPI](https://docs.microsoft.com/aspnet/core/web-api/Microsoft.dotnet-openapi?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)
* ✨ [Handle errors in ASP.NET Core web APIs](https://docs.microsoft.com/aspnet/core/web-api/handle-errors?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)
* [Controller action return types in ASP.NET Core web API](https://docs.microsoft.com/aspnet/core/web-api/action-return-types?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)
* [Format response data in ASP.NET Core Web API](https://docs.microsoft.com/aspnet/core/web-api/advanced/formatting?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)
* [Create web APIs with ASP.NET Core](https://docs.microsoft.com/aspnet/core/web-api/index?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)

### Host and Deploy

Tons of updates on hosting with the new release of 3.0 in GA. With the release of Blazor Server-Side, this documentation also needed major updates. If you are using Blazor today, make sure to read this to avoid problems in the future. Health checks now get wrapped under `UseEndpoints` which required its documentation to be changed as well.

* [ASP.NET Core Module](https://docs.microsoft.com/aspnet/core/host-and-deploy/aspnet-core-module?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)
* 💥 [Host and deploy ASP.NET Core Blazor](https://docs.microsoft.com/aspnet/core/host-and-deploy/blazor/index?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)
* [Health checks in ASP.NET Core](https://docs.microsoft.com/aspnet/core/host-and-deploy/health-checks?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)

### Performance

Updated package names and new snippets.

* [Distributed caching in ASP.NET Core](https://docs.microsoft.com/aspnet/core/performance/caching/distributed?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)

### Razor Pages

The introduction has been completely rewritten with new code snippets for 3.0. Worth taking the time to refresh your knowledge on Razor Pages.

* 💥 [Introduction to Razor Pages in ASP.NET Core](https://docs.microsoft.com/aspnet/core/razor-pages/index?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)
* [Reusable Razor UI in class libraries with ASP.NET Core](https://docs.microsoft.com/aspnet/core/razor-pages/ui-class?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)

### Security

Updated for `UseEndpoints()` as well as including new API updates for 3.0. Updated documentation troubleshoot certification update. 

* [Use cookie authentication without ASP.NET Core Identity](https://docs.microsoft.com/aspnet/core/security/authentication/cookie?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)
* [Enable Cross-Origin Requests (CORS) in ASP.NET Core](https://docs.microsoft.com/aspnet/core/security/cors?wt.mc_id=docsexp4-reddit-marouill)
* [Enforce HTTPS in ASP.NET Core](https://docs.microsoft.com/aspnet/core/security/enforcing-ssl?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)

### Tests

* [Integration tests in ASP.NET Core](https://docs.microsoft.com/aspnet/core/test/integration-tests?wt.mc_id=docsexp4-reddit-marouill&amp;view=aspnetcore-3.0)

## NuGet

* 📢 [NuGet 5.3 Release Notes](https://docs.microsoft.com/nuget/release-notes/NuGet-5.3?wt.mc_id=docsexp4-reddit-marouill)
* 💥 [Deprecating packages on nuget.org](https://docs.microsoft.com/nuget/nuget-org/Deprecate-packages?wt.mc_id=docsexp4-reddit-marouill)

### Reference

* [.nuspec File Reference for NuGet](https://docs.microsoft.com/nuget/reference/nuspec?wt.mc_id=docsexp4-reddit-marouill)
  - deprecating `iconUrl`, adding `icon` to replace it.
* [NuGet pack and restore as MSBuild targets](https://docs.microsoft.com/nuget/reference/msbuild-targets?wt.mc_id=docsexp4-reddit-marouill)
  - adding instruction on how to pack an `icon` within your package",September 2019 .NET/ASP.NET Documentation Update
713,2019-10-02 09:03:20,8,1,"tsc does not like the generic arrow function declaration, vsCode doesn't seem like it considers it wrong.

Unexpected token, expected "";"" 

\&gt; 35 |  const set = useCallback&lt;&lt;T&gt;(k: string, v: T, o: boolean) =&gt; void&gt;(

|                                                                                                     \^

    const set = useCallback&lt;&lt;T&gt;(k: string, v: T, o: boolean) =&gt; void&gt;(
 // eslint-disable-next-line @typescript-eslint/no-inferrable-types
        &lt;T&gt;(key: string, value: T, override: boolean = true) =&gt; {
 const bucket = ensureBucket();
 if (bucket[key]) {
 override &amp;&amp; updateAndFlush(bucket, key, value);
 return override;
            }
 updateAndFlush(bucket, key, value);
 return true;
        },
        [ensureBucket, updateAndFlush],
    );",help with generic useCallback
714,2019-10-04 11:09:59,1,1,Prove me wrong,I prefer runtime errors to typescript errors
715,2019-10-04 11:11:22,2,1,[removed],I prefer runtime errors to typescript errors
716,2019-10-04 18:07:30,11,4,"Our client is proposing that we use Python to build out their solution, an e-commerce web and mobile app.

Our recent projects have all been nodejs + typescript backends with react (react native + expo for mobile) and redux handling the front end. We typically write REST backends via serverless framework and typeorm as our ORM, but have also have began shifting to nosql and graphql lately.

What would a modern scalable python stack look like in comparison? Let's assume were targeting a nosql db and graphql for the API. Is the de facto web framework still Django?

Thanks!",What's your production stack look like?
717,2019-10-05 18:06:34,1,1,"For a [syntax tree visualizer](https://raw.githubusercontent.com/hediet/vscode-debug-visualizer/master/docs/ast-viewer.png) I am implementing, I need a way to convert positions in a string to a line and column index.

I am looking for a lib (with typescript types) that does only that (optionally allowing to convert a line and column back to a position) and does that sufficiently fast.

So I searched on npm for ""position line"". And found quite a few packages:

1.  [https://www.npmjs.com/package/line-info](https://www.npmjs.com/package/line-info) (94)
2.  [https://www.npmjs.com/package/get-line-from-pos](https://www.npmjs.com/package/get-line-from-pos) (3.7k downloads per week)
3.  [https://www.npmjs.com/package/find-line-column](https://www.npmjs.com/package/find-line-column) (40k)
4.  [https://www.npmjs.com/package/src-location](https://www.npmjs.com/package/src-location) (58)
5.  [https://www.npmjs.com/package/vfile-location](https://www.npmjs.com/package/vfile-location) (1.533k)
6.  [https://www.npmjs.com/package/translocator](https://www.npmjs.com/package/translocator) (1)
7.  [https://www.npmjs.com/package/line-column](https://www.npmjs.com/package/line-column) (14k)

(1)-(4) all provide the functionality by having a function that takes a position and a string and returns something. This already is super inefficient when doing this thousands of times on the same string, as already their APIs don't allow (sane) implementations that support caching where the line breaks are.

(1) is providing a very specific functionality that returns the line string, words and word value but not the line and column number of the cursor (exactly what one would expect from a package called \`line-info\`... (irony)).

(2) only returns the line, its implementation fits into 4 very short lines.

(3) is **super** inefficient and does not support \`\\r\\n\`. They split the input two times by \`\\n\`. It's just horrible.

(4) is inefficient (not as inefficient as 3 though) due to absence of caching.

(5) caches, but has a very weird dependency to \`vfile\`. Only when you look at the code you see that this dependency is not a real one. It's algorithm is also not the best one (linear search on the cache).

(6) I cannot find its source and it's weird that it only operates on ranges, not single positions. You can easily implement the functionality for ranges if you already have it for positions, but the otherway round you are wasting a lot of cpu cycles.

(7) This is actually a decent implementation. Sadly, it does not have typescript type definitions. Typing that library is almost as much work (including a PR for definitely typed) as just writing my own library. Probably this is what all the other six guys thought too.

&amp;#x200B;

Conclusion: Of these 7 libraries, 6 are not of high quality. The single decent one has no typescript type definitions. Why are there 7 libs in the first place??

This happens a lot when I search a package on NPM. Most libraries have a bad design, use inefficient algorithms or are untypeable. This is sad.

What are your experiences when looking for a package that suits your needs?",What I think is Wrong with the Packages on NPM
718,2019-10-09 11:10:28,4,5,"Been using TS as my primary language for about 2 years and there's still some thing that I find really difficult to wrap my head around or figure out how to do.  

For example: How do I create an interface from an array of strings?  That is, if I have array ['alpha', 'beta', 'gamma], how can I create an interface that is equivalent to: 

```
const keys: string[] = ['alpha', 'beta', 'gamma']; 
interface MyInterface {
  alpha: string;
  beta: string;
  gamma: string;
} 
```
without having to enumerate them manually? Something like: 
```
const keys: string[] = ['alpha', 'beta', 'gamma']; 
// opt 1
interface MyInterface {
  [K: ...keys]: string;
}
//opt 2
interface MyInterface {
  [K in keyof keys]: string; 
}
```

Posting to here instead of Stack Overflow because I'm looking for an immediate answer but am also looking for other people's experiences of other things they're still having trouble wrapping their heads around in typescript, possibly for a talk later at a conference about how TS forces us to think about JS in different ways (mostly good).","Some things that I still have difficulty doing, even 2 years later"
719,2019-10-09 20:15:39,5,1,"Hi All,

Our group is currently in the process of migrating from javascript -&gt; typescript for a react app. Do any of you have any particular tools you use for tracking progress of the migration? Similar to code coverage tools?

Thanks!",Tool for measuring percentage of code in repo written in typescript vs. javascript
720,2019-10-09 21:36:53,2,1,,Setting up express with typescript project
721,2019-10-10 12:53:33,0,1,"I'm working on a node.js project which uses `hapi`. It also uses a custom hapi plugin called `cust-hapi-logging`. The latter doesn't have type definitions at all. This means I can't import the module because it'll fail with `Cannot find module 'cust-hapi-logging'.`

By putting `declare module 'cust-hapi-logger';` the problem becomes mostly solved, typescript now knows about this module and happily imports it. At least when I compile the project.

When run my app via `ts-node` I still get the error, because ts-node works it's way through imports starting from my index.ts file, and since .d.ts files are normally nor imported it's type definition is never used.

I generally solve this by creating a custom typings directory and adding it to typeRoots in tsconfig.json. This way each non-typed module needs a directory with an index.d.ts file declaring the module itself. 

Hapi plugins expose their stuff via hapi's server instance via `server.plugins[pluginName]`. 

*Generally speaking, my issue is defining a node module which alters the typings of other modules, especially when using typeRoots.*

I can extend the definition of `hapi` by putting this in a .d.ts file:

```
import * as winston from 'winston';

declare module 'hapi' {
  export interface PluginProperties {
    'cust-hapi-logger': {
      getLogger(label: string): winston.LoggerInstance;
    };
  }
}
```

The problem is that this only works, because there is an import outside of the define block.

Because of that, the compiler treats this file differently than it would if there were no imports (or the import would be inside. In that case I'd get an error telling me that `Module '""hapi""' has no exported member 'Server'.`.

So apparently:

When I declare a module which already has type definitions installed, my custom definition completely overrides the official ones. But if the definition file contains any code outside of the declare block, then it's not, it only appends...

This seems to be a rather unreliable behavior for something that seems so common.

So what is the correct way to define typings for a third party node module, that affects other modules?

Also, what is the correct way to define alterations of third party modules in libraries I author?",How to override module definitions
722,2019-10-11 20:47:17,26,0,"I know C++, C#, JS, typescript and a little rust and zig. I don't have a clue about Java. Can you guys give me some information? Such as

- What's the deal with Java and reflection?  
- Are there iterators? Are there streams? What kind of streams? (C++ has 5 different types of iterators and no streams, C# has one stream that acts like input and output but throws an exception if you're writing to a read only stream)  
- Is it normal to get an exception? (Such as reading a file when you already got to the end of file)  
- Why is XML used so much?  
- Why is there no 'struct' and if there is whats wrong with it because I never heard of it?  
- What's the hardest thing going from Java to another language?

Please don't answer all of these in a single comment. And I like both very short and very long answers.",Can you guys give me a little background in Java?
723,2019-10-13 20:44:05,12,22,"I've been looking into decent swagger to TS generators for some time but my google searches haven't been convincing. In the end I've rolled my own, but I'd like to know which alternatives the community has been using.

@remarks

Swagger contains most useful info in interfaciing an API to a front-end: available routes, request and response types. With an integration with typescript, one could abstract the transport (HTTP calls) and call API's ""transparently"", with its types integrating into the consumer code. API changes can also propagate into frontend typecheck errors through these means.",Do you use any swagger generators to communicate with the API? Which one?
724,2019-10-14 23:22:19,12,32,,SOLID code in typescript no nonsense with straight forward code exmaples
725,2019-10-16 00:15:53,4,3,"I've been working all day and I just can't figure this out... I'm sure it's super simple &amp; I also feel like I'm approaching this incorrectly

&amp;#x200B;

\`\`\`  
import React, {  
 createContext,  
 useContext,  
 FC,  
 useState,  
 Dispatch,  
 SetStateAction,  
} from 'react';  
type Flags = {  
 OCT19\_DEMO: string | undefined;  
};  
type UseFeatureFlagsValue = {  
 flags: Flags;  
 setFlags: Dispatch&lt;SetStateAction&lt;{}&gt;&gt;;  
};  
export const FeatureFlagsContext = createContext({  
 flags: { OCT19\_DEMO: undefined },  
 setFlags: () =&gt; {},  
});  
export const FEATURE\_FLAG\_PREFIX = 'REACT\_APP\_FEATURE\_FLAG\_';  
export const FeatureFlagsProvider: FC&lt;{  
 children: React.ReactNode;  
}&gt; = ({ *children* }): JSX.Element =&gt; {  
 const \[flags, setFlags\] = useState(  
 Object.entries(process.env).reduce(  
(*acc*, \[*key*, *val*\]) =&gt; {  
 if (!key.startsWith(FEATURE\_FLAG\_PREFIX)) return acc;  
 acc\[key.replace(FEATURE\_FLAG\_PREFIX, '')\] = val;  
 return acc;  
},  
{  
 OCT19\_DEMO: undefined,  
}  
)  
  );  
 return (  
 &lt;FeatureFlagsContext.Provider  
 *value*={{  
 flags,  
 setFlags,  
}}&gt;  
 {children}  
&lt;/FeatureFlagsContext.Provider&gt;  
  );  
};  
export const useFeatureFlags = (): UseFeatureFlagsValue =&gt;  
 useContext(FeatureFlagsContext);  


\`\`\`\`

&amp;#x200B;

\`\`\`  
TypeScript error in /Users/alex-wilmer/Projects/resideo/pro-portal/packages/web/src/utils/feature-flags/index.tsx(46,9):

Type 'Dispatch&lt;SetStateAction&lt;{ OCT19\_DEMO: undefined; }&gt;&gt;' is not assignable to type '() =&gt; void'.  TS2322

&amp;#x200B;

44 |       value={{

45 |         flags,

  \&gt; 46 |         setFlags,

|         \^

47 |       }}&gt;

48 |       {children}

49 |     &lt;/FeatureFlagsContext.Provider&gt;  
\`\`\`",I'm losing my mind trying to understand what typescript is telling me
726,2019-10-17 10:19:29,19,0,"I believe javascript/typescript community is missing a full stack ""framework"" with modern tools  for quick prototyping. I mean what tools are out there for someone who wants to:

* Quick start (not setting up from zero ORM, Webpack, Database, React app )
* Wants type safety (Typescript)
* Wants DB/migrations support out of the box

Those are the basics but there are more full stack people expect from full stack frameworks - plugins, auth, cms support etc.  
I believe the closest thing we have is SailsJS and MeteorJS which both of them I believe is steering away from tools that people actually use and inventing their own thing (which takes time from the developer learning them)

I am thinking of creating something in between framework and boilerplate (similar to create-react-app, having eject functionality). Giving high priority on type safety (all of them have robust typescript support) and integrating known libraries.

* typeorm - ORM and DB migrations
* nextjs - react + typescript
* express - backend
* styled-components - styling

What do you guys think? Is this something you would use? Do you agree with statements I made?",Javascript/typescript ecosystem is missing a prototyping tool like Laravel/Rails/Django
727,2019-10-17 10:20:31,2,0,,Javascript/typescript ecosystem is missing a prototyping tool like Laravel/Rails/Django
728,2019-10-19 10:47:58,2,1,[removed],Take only the best of typescript with 3.7
729,2019-10-19 17:25:53,1,1,"I think the docs say this but am not 100% sure. If it indeed does that it would make for a nice bonus as I was looking for a way to use npm modules with an old stack (wordpress plugin) without having to add webpack or another heavy task runner. 

Here is my .tsconfig. One concern is that I don't see any library-like files in my output folder `/compiledJs`

    {
      ""compilerOptions"" : {
        ""outDir"" : ""./compiledJs"",
        ""allowJs"" : true,
        ""module"" : ""commonjs"",
        ""target"" : ""es6"",
        ""sourceMap"" : true
        , ""noEmitOnError"" : false
      },
      ""include"" : [""./templates/**/*"", ""./tsClasses/**/*""],
      ""exclude"" : [
        ""node_modules""
      ]
      , ""lib"" : [""dom"", ""es6""]
    }",Does the typescript compiler also combine library modules into its output?
730,2019-10-21 10:20:41,20,0,"Now I am sure I am wrong but typescript seems to me hard, verbose and unnecessary. 


Please convince me.",Why typescript?
731,2019-10-21 19:32:58,1,2,"I'm new to typescript, and wanted to convert my google script app (using google forms) to a local development (on the pc) environment vs doing everything in the browser.

I got clasp working but found that if I want to test as I write (which i do all the time on pc) I need to push to google apps and run it as my live instance, which i don't want to do because its the ""production server"". Most of the stuff I do in the script is google apps agnostic, so I can test it locally to ensure it works correctly (and I can have tests) but I need to somehow ***override*** the type definitions for google.

I'm using ***@types/google-apps-scripts*** which gives me the types for all the google functions, but how can I override them? I created a `test.ts` that runs my `onSubmit(e)` function and creates an event (based on a dump of the google form data) but the function calls a few google functions (like `FormApp.getResponses()`) and I can't figure out how to override it only in the test function.

***formTools.ts***

    namespace FormApp {
        export function getActiveForm() : Array&lt;GoogleAppsScript.Forms.FormResponse&gt; {
            return [ ];
        }
    }
    
    // the error message
    // Duplicate identifier 'FormApp'.ts(2300)
    //
    // google-apps-script.forms.d.ts(1115, 13): 'FormApp' was also declared here.

I also tried making a variable but I don't now how I can make it 'global' in that it won't actually effect the real source files and only be shimmed (connect the fake wires) in the beginning when running the test.

Thanks",[Question] Implementing a DefinedType function?
732,2019-10-21 20:55:04,14,4,"Hey guys,

Im at a loss on how to properly google this, every tutorial Ive found skirts around the issue: I want to create a typescript only npm package (without any js + definition files combo). Is there a way? Or at least something that comes close to it?

I don’t want to publish said project, or do anything public with it.
I honestly just want to know if it is possible, no matter how bad of a practice, and if so how to do it?

Longer version:

The problem that I am trying to solve, it’s: I have X npm dependencies written in Typescript and one project importing them also in typescript.

And so far the only examples I’ve found online is of each dependency being coded, than transpiled into javascript and having its lib/output/dist folder (wherever the definition files and js files endup at) also committed.

I think this is either impossible or really stupid easy to fix, am I missing something? Am I exporting the dep packages wrong? Or importing them wrong?

Anyways, if anybody can help me not commit those dist files i’d be a very glad dev, thanks in advance!",Creating typescript only package
733,2019-10-22 09:04:54,2,1,"This is not just a typescript question, rather also a javascript one. I have an object which I am using as a constant in my angular app. It looks like this-

```
export const languageConfigsObj: { [key: string]: LanguageConfig } = {
    de: { key: 'de', flagKey: 'de', name: 'Deutsch' },
    en: { key: 'en', flagKey: 'gb', name: 'English' },
    fr: { key: 'fr', flagKey: 'fr', name: 'Français' },
    es: { key: 'es', flagKey: 'es', name: 'Español' },
    it: { key: 'it', flagKey: 'it', name: 'Italiano' },
    ...
}
```

Now, I need the languages in different form so I created some helper functions. One of those is-

```
export const languageConfigs: LanguageConfig[] = 
    Object.keys(languageConfigsObj)
          .map((x) =&gt; languageConfigsObj[x])
```

which would give me an array of \`LanguageConfig\`. My question is - is the \`Object.keys()\` method going to be evaluated every digest cycle (or something like that) that would impact performance? Because I am going to use the return value derived from the \`Object.keys()\` method during the whole application runtime. Is typescript or compiled javascript somehow keeps cache of the evaluated result to optimize performance?","Considering the performance issue, should I do this in my app?"
734,2019-10-22 12:18:57,1,1,Is leaning typescript if you already know javascript is important and how?,Is typescript important?
735,2019-10-25 01:01:13,12,5,"I ran into an issue today that's giving me flashbacks to C++...

[Typescript Playground version](https://www.typescriptlang.org/play/?ssl=19&amp;ssc=19&amp;pln=1&amp;pc=1#code/FAFwngDgpgBAIgSwE5QMYgQewHYwLwwDkImEhMAPkQEaYgkC25VhANlAGYjNFIIDmAC24BuYMA4BXbOiy4QSAIYA3KKwAUAE2RoMOAM4AueDtk4A2gF0AlDADewGE5gB6FzE2YY+zAyghBBGx+MQBfcVQDEBhSEH18GHM2Tm4AGl4BYUJLMTdvBSD+KxhsOhhFfX0BbEVqdhgSExQzbCtQJVUNUmsxYEjsfWjUAHkIOISk9i5CdMI+IW5Lcvj+wdz3ABVBWHBoGAA6fZgEeLmoRU9sVjByRWxNGFQ70ujqWAqq-mwoB8aA2AYkhAtXqu1ghEQzT0rUshH27RUanUIzG+h64gUiI0kxSMwyC2yPVc7g4QSgESiMWMkN0cmKBBx01m8yyOQRnXUmCJeVJ3yAA).

Basically, I have some string literal union &amp; a function parameter that takes an array of it:


    type Direction = 'top' | 'bottom' | 'left' | 'right';
    
    function travel(directions: Direction[]) {
        // do something;
    }

But then, say I would like to declare a variable to assign to it, using a literal array:

    const opts = ['left', 'right'];
    travel(op); // ERROR!

This fails, because `opts` is just a `string[]`. Silly error! I've fixed this so many times with `as const` since Typescript 3.4... right?

    const cOpts = ['left', 'right'] as const;
    travel(cOpts); // ERROR AGAIN!

Ah fuck. What now? `""// The type .. is 'readonly' and cannot be assigned to the mutable type 'Direction[]'.""`

Noooo....

So, obviously I have some choices for how to cast my variable to `Direction[]` if I want. But should I instead be marking my array parameters as `readonly` where possible? And if so, how many type definitions are going to need to change to support that? `const` correctness was a PITA in C++ and I hope we don't end up there in Typescript...","Is ""const correctness"" back in Typescript?"
736,2019-10-26 16:36:08,20,9,"Hello. I am new to React and am learning as I go. I like to solidify things by making snippets to reuse. There seems to be conflicting and changing ways of doing React with TypeScript. I am looking for best practice.

So far I just want to create a stateful component using a class, and a function component. Not onto Hooks yet. Are these a good starting template?

\`\`\`

import \* as React from 'react';  
   
 export interface ExampleOneProps {  
   
}  
   
 export const ExampleOne: React.FC&lt;ExampleOneProps&gt; = ({}) =&gt; {  
 return (  
 &lt;div&gt;  
   
 &lt;/div&gt;  
);  
}  
   
   
   
 export interface ExampleTwoProps {  
   
}  
   
 export interface ExampleTwoState {  
   
}  
   
 export class ExampleTwo extends React.Component&lt;ExampleTwoProps, ExampleTwoState&gt; {  
 constructor(props: ExampleTwoProps) {  
 super(props);  
   
 this.state = {  
}  
}  
   
 public render() {  
 return (  
 &lt;div&gt;  
   
 &lt;/div&gt;  
);  
}  
}  


\`\`\`

typescriptreact.json (add to typescript react snippets then use tsr... and autocomplete)

\`\`\`

   {  
 // Place your snippets for typescriptreact here. Each snippet is defined under a snippet name and has a prefix, body and  
 // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:  
 // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the  
 // same ids are connected.  
 // Example:  
 // ""Print to console"": {  
 //  ""prefix"": ""log"",  
 //  ""body"": \[  
 //    ""console.log('$1');"",  
 //    ""$2""  
 //  \],  
 //  ""description"": ""Log output to console""  
 // }  
   
 ""Typescript React Function Component"": {  
 ""prefix"": ""tsrfc"",  
 ""body"": \[  
 ""import \* as React from 'react';"",  
 """",  
 ""export interface ${1:App}Props {"",  
 """",  
 ""}"",  
 """",  
 ""export const ${1:App}: React.FC&lt;${1:App}Props&gt; = ({}) =&gt; {"",  
 ""    return ("",  
 ""      &lt;div&gt;"",  
 ""        ${2:}"",  
 ""      &lt;/div&gt;"",  
 ""    );"",  
 ""}""  
\],  
 ""description"": ""Create a Typescript React Function Component.""  
},  
   
   
 ""React Component - Full"": {  
 ""prefix"": ""tsrcfull"",  
 ""body"": \[  
 ""import \* as React from 'react';"",  
 """",  
 ""export interface ${1:App}Props {"",  
 """",        
 ""}"",  
 """",  
 ""export interface ${1:App}State {"",  
 """",        
 ""}"",  
 """",  
 ""export class ${1:} extends React.Component&lt;${1:}Props, ${1:}State&gt; {"",  
 ""  constructor(props: ${1:}Props) {"",  
 ""    super(props);"",  
 """",  
 ""    this.state = {"",  
 ""    }"",  
 ""  }"",  
 """",  
 ""  public render() {"",  
 ""    return ("",  
 ""      &lt;div&gt;"",  
 ""        ${2:}"",  
 ""      &lt;/div&gt;"",  
 ""    );"",  
 ""  }"",  
 ""}"",  
 """"  
\],  
 ""description"": ""Create a Typescript stateful React Component with Props, State, and a constructor.""  
}  
}  
 \`\`\`",I made a couple of TypeScript React VS Code Snippets.. are they best practice?
737,2019-10-26 20:51:03,12,10,"I have a bunch of javascript libraries written in typescript on my hard disk, that I used to have in a private npm repository. I decided to publish them on github and npmjs.org and thought of giving them new names while doing it. Since I'm not very creative in coming up with clever names, I thought I could leverage some of your inputs as inspiration or just flat out steal some of your suggestions.

In particular, I'm looking for new names of the following kinds of projects:
- implementation for a simple game loop, that aggregates user input and fires an event on each loop
- abstraction library for 2D canvas methods and loading sprites from image data
- implementation of sweep and prune in 2D and 3D
- library related to random number generation, like seedable RNGs and classes for procedural generation.
- logging library inspired by slf4j

please go nuts",[AskJS] Need names for my javascript libraries
738,2019-10-27 02:17:45,5,1,What is better: testing the javascript that is generated by the ts compiler or just testing the typescript? Is it even important to test the javascript code if you're already testing the ts code since any problems that occur from transpiling would be on the typescript developers?,Testing transpiled files vs typescript files
739,2019-10-27 13:40:46,16,4,"[See this article](https://www.mattgreer.org/articles/typescript-react-and-redux/)

Is there a solution for the problem described in the ""Step Two, component meets store"" section of the above blog post? It's a few years old now, but I'm stuck on the same thing as the author and can't seem to get around it.",Problems with react-redux
740,2019-10-27 18:01:37,2,1,,Working on generic compilation tools for javascript/#typescript
741,2019-10-28 08:20:07,15,3,"Hey guys!  
I've been writing typescript for almost a year now and recently started working in a new company, I suggested them to start moving slowly to typescript and they agreed. I have been thinking + googling how to do it as painless as possible but haven't gotten a really good solution yet so I'm asking for help on how to transfer the project to ts:  
The options I've came up with so far:  
1. Create new folder for typescript only files which in it we ignore .js files, problem is it changes the project structure, especially when we need to import things from js files in the ts  
2. Leave the files as they are and compile js into same folder. Problem is then how do we specify to only git ignore files generated by ts?  
3. Rename all files to .ts and make a very permissive tsconfig configuration. Problem is the millions of warnings in compile time and kind of losing the point of ts not being strict at all.

&amp;#x200B;

P.S Just to be clear I'm talking about backend node code  


I would really appreciate any suggestions you can give me as I'm dying to transfer it to ts.",Converting a big existing project to typescript slowly
742,2019-10-30 19:41:07,7,5,"Not sure if question is right, here what i want to do:
```typescript
type StateSetter&lt;S&gt; = (prevState: S) =&gt; S;
type ResolvableHookState&lt;S&gt; = S | StateSetter&lt;S&gt;;

export function resolveHookState&lt;S&gt;(state: S): S;
export function resolveHookState&lt;S&gt;(state: StateSetter&lt;S&gt;, currentState?: S): S;
export function resolveHookState&lt;S&gt;(state: ResolvableHookState&lt;S&gt;, currentState?: S): S {
  if (typeof state === 'function') {
    return (state as StateSetter&lt;S&gt;)(currentState as S);
  }

  return state;
}
```

I want it to infer the result type but actually have no clue how to do it.
Here is how i want to use it:
```typescript
function someFunction(initialState: ResolvableHookState&lt;number&gt; = 0){
  initialState = resolveHookState(initialState);
}
```
idea is to make `resolveHookState(initialState)` return the number type, but for obvious reasons it returns `ResolvableHookState&lt;number&gt;`",[Question] Partial type infering
743,2019-10-31 03:50:07,19,14,"Hi everybody, I'm writing a node.js api boilerplate on TypeScript for personal projects.

https://github.com/escalonc/nodejs-api-typescript-starter

I have seen others, but in this one I'm including my personal preferences. My motivation is to help other people finding good practices and create projects faster with this boilerplate.

If you like, please give me a star or send me a PR.

P.D. It's not finished yet, butI think I have a good start.",Check this node.js Typescript boilerplate
744,2019-11-03 03:25:31,12,5,"Hey all, migrating my React/Express app to typescript as I’m not that far along and interested in using it.

I’m wondering if it’s common practice to have both the front and back end share interfaces somehow or just rewrite interfaces that both applications use? 

For example, an IUser might be used to a user logging into the page. Would both applications have their own copy of IUser when performing the authentication or could they both pull from the same types.ts file? If so, how would that be done?

Let me know what you guys think.",[AskJS] Full-Stack Typescript Sharing Interfaces
745,2019-11-04 10:33:36,3,1,"I'm looking for a client to serve our json:api api.  
 There is no library for that including deceleration files for TS.   
We are using react with typescript language.",Is there any client to consume json:api ?
746,2019-11-04 20:30:32,0,1,,"Intel 8080 assembler and emulator, fully implemented on typescript (with GUI debugger)."
747,2019-11-05 19:09:16,0,1,[removed],"Intel 8080, fully implemented on typescript"
748,2019-11-06 20:44:16,4,0,"If you look at this chart python seems very successful: [http://sotagtrends.com/?tags=\[python,javascript,typescript,rust,go,kotlin,java,c%23\]](http://sotagtrends.com/?tags=[python,javascript,typescript,rust,go,kotlin,java,c%23])

&amp;#x200B;

&amp;#x200B;

https://preview.redd.it/7nx16sqrm4x31.png?width=758&amp;format=png&amp;auto=webp&amp;s=a15ce2d8c1fe76e92cb4fc6f6badd5c28d732453

But one major thing is still missing: 

I can't execute python in a browser.

At least AFAIK there is no feasible way up to now.

I don't like Javascript but sometimes you are forced to use it

I don't like to be forced to anything - I like free choice.

What do you think is more likely in the future (concerning running code in the browser)?

&amp;#x200B;

V1: Developers will use JavaScript/TypeScript because there is no alternative

&amp;#x200B;

V2: Developers will use a transcompiler which creates JavaScript from Python

&amp;#x200B;

V3: Developers will use WebAssembly to execute Python in the browser.

&amp;#x200B;

V4: Python developers will do backend stuff and avoid frontend and JavaScript development.

&amp;#x200B;

V5: other variants?

&amp;#x200B;

Of course some devs will do V1, some V2 ... But what will be the most common thing in  the future?",Python in the browser
749,2019-11-06 22:35:23,19,3,"I'd appreciate if you could run `npm list -g --depth 0` and share your list of the globally installed NPM packages. 

I'm configuring a new machine for NodeJS native add-on development and so far, mine is very limited:

    +-- eslint@6.6.0
    +-- jest@24.9.0
    +-- node-gyp@6.0.1
    +-- npm@6.13.0
    `-- typescript@3.7.2",[AskJS] What does your global NPM package list look like in 2019?
750,2019-11-07 14:27:35,3,1,"This is a toy example, but the premise is that when the array is populated, it should return one type, if not, another.  I am not sure about how to describe an empty array, and conditionally act upon that.

&amp;#x200B;

Could someone help me understand where I'm going wrong? Using never feels like a bit of a hack, so I accept it's probably the wrong way.

&amp;#x200B;

\[code\]([https://www.typescriptlang.org/play/index.html?ssl=17&amp;ssc=43&amp;pln=16&amp;pc=4#code/JYOwLgpgTgZghgYwgAgJLmvJyDeAoZQ5OALmQGcwpQBzAogIzMupDoF888EB7ES5DACuIBMgC8yADwBpZBAAekEABNyyANYQAnjxhoMsRCkkgIAN2gA+ABT1CcKDXJl0kI0gA09zTvIB+MhkAbQBdPABKIPklCFV1M0soZH9BOAAbchQgsIkrXGQAekLkPnTtZCgIMCEoEGQQ0ORgfTAAC2gURxQtbXIwnxbkG171ADIx3z6AOnS4mnbkfIAGCNwfIkrq2vrRgG4fTk2qmrq0zIg8Tjxi5F5+MEEeHjIAIjhX3MlhURscUmQr1enmQTEBr3YIOC71eoQiNxK9wEDEcZHgFwkghECD+AKBILBQPYESAA](https://www.typescriptlang.org/play/index.html?ssl=17&amp;ssc=43&amp;pln=16&amp;pc=4#code/JYOwLgpgTgZghgYwgAgJLmvJyDeAoZQ5OALmQGcwpQBzAogIzMupDoF888EB7ES5DACuIBMgC8yADwBpZBAAekEABNyyANYQAnjxhoMsRCkkgIAN2gA+ABT1CcKDXJl0kI0gA09zTvIB+MhkAbQBdPABKIPklCFV1M0soZH9BOAAbchQgsIkrXGQAekLkPnTtZCgIMCEoEGQQ0ORgfTAAC2gURxQtbXIwnxbkG171ADIx3z6AOnS4mnbkfIAGCNwfIkrq2vrRgG4fTk2qmrq0zIg8Tjxi5F5+MEEeHjIAIjhX3MlhURscUmQr1enmQTEBr3YIOC71eoQiNxK9wEDEcZHgFwkghECD+AKBILBQPYESAA))",Conditionally preserve generic type information
751,2019-11-09 06:07:23,4,1,"Hi, guys, I have just published the article about the optional operator that is one of the new features of TypeScript 3.7.

[https://www.imkrish.com/how-to-use-optional-operator-in-typescript-3-7/](https://www.imkrish.com/how-to-use-optional-operator-in-typescript-3-7/)",How to use optional operator in Typescript 3.7 (Tips and Tricks)
752,2019-11-10 10:53:29,4,1,"The last version of VS Code use TypeScript 3.6 by default. In order to use TypeScript 3.7:

1. Ensure TypeScript 3.7 is installed in your project;
2. `Ctrl+Shift+P` (run a command) then choose: _""TypeScript: Choose TypeScript Version…""_;
3. Select _""Use Workspace Version 3.7.2""_.

It'll add the parameter `""typescript.tsdk"": ""node_modules/typescript/lib""` to your workspace settings.",Use the new syntax from TypeScript 3.7 in VS Code 1.40
753,2019-11-10 16:07:22,14,1,"This is a common bug that keeps biting me...  Like 1-3x a week.

If I have two interfaces, say Foo and Bar.

interface Foo {
  name: string;
}

interface Bar {
  name: string;
  brokenFieldNotUsedInFoo: BrokenObject;
}

... then if I do this:

const foo: Foo = {...bar}

... this will work and I get no compilation issues BUT now foo has an extra property.

I want to only copy the properties from bar that are defined in the Foo interface. 

The problem, of course, is that typescript has erasure and nukes all my properties at runtime.

Is there anything I can do about this?

I'd LOVE there to be a way to just keep the schema a runtime.",Common typescript but: copying an object with too many properties.
754,2019-11-12 20:40:52,11,1,"I have a function that takes a function object and arguments to invoke that function later, this compiles and has nice IDE support (both names and types in `T` have hints when invoking the function).

```typescript
export function useDerivedState&lt;T extends any[], R&gt;(derivation: (...args: T) =&gt; R, ...args: T): R;
```

I want to change that signature or add another overload that'd take extra arguments that `derivation` doesn't normally take, but I can't find a way to express it. These don't work:

```typescript
// This will never work due to erasing to invalid javascript
export function useDerivedState&lt;T extends any[], R&gt;(derivation: (...args: T) =&gt; R, ...args: T, ...moreArgs: any[]): R;

// But maybe a type mapping is possible?
export function useDerivedState&lt;T extends any[], R&gt;(derivation: (...args: T) =&gt; R, ...args: { [K in keyof T]: T[K] }): R;
```

Is it possible to transform the signature captured in `T` from a fixed-length array to an unbounded one, while making sure it still starts with the original types?",Is it possible to extend a function signature captured as a type parameter?
755,2019-11-14 12:34:10,2,1,"Hi, I am using a `Vector2` system for coordinates, and each game character has a `position` and `velocity`. Each game loop updates the position by adding the velocity.

I would like each game character to be able to move towards another, so I have a function that accepts two positions, and returns a velocity that when added to `position` moves `entity` towards `entity2`

My code uses two ternary operators, and access the `x` and `y` coordinates using the properties directly with `[]`. I am wondering if this is the best way to do it, and if I am missing some simplifying logic that could reduce the size of my function? 

I am using the `targetVelocity` to store the velocity and add to it over both ternaries, which makes another mutable variable to live in developer headspace. I would love to delete it, but how could I do that without needed a switch statement and getting rid of the ternaries? Can your 'geek glasses' see something mine are missing? Any ideas? Cheers!

https://www.typescriptlang.org/play/#code/PTAEFEA8EMFsAcA2BTUB7AZqeaDOBLAF3zQDtQBXeAE2kOQFgAoEZkbCgI0XwGNKadZAAU8REqQAUASgBcoAG5p81UAG82YUKEIALfLgB0OAsTKgAvIuS9CaAE5Ho1apL0HjYs6QA0O-UYKyIhovEQAntIA3JqgAL7MzITh8KgAajZ29gBMlqAA2qQUsJzI9n5FJWUAujFMvGS4hNa2Drh5Gkzazq7Q8hmtOX6c-ZkO2XKgA1m5ndra9siEFPbk+dD5AAzVoADUoJxb1X4bAIw7+4fntczacT6JXaAA5ksCMqODs7fzi8urBU2fnOdTuDyer2a1DQAHcpJNpuN1D8FksVmsgaAALQgn73H6Q0AoDCED5TMY5ZFPVH-NY4vzbUHxcHaQn2fDPXSkhEU77U0B-dEFU4Mm5PfFMOJ1ZgYCikWwSUCwNBBAAqsOg9mouHApGIyUkP14K0WetEpgknxmLJ0msh5vEZCt43BPK+VO0KGaQRCYWSzpyTK9tvskIyvoiAdyVi2oulTx9oQilhRoGN9lNhAd3iOoAAfCH7V4JEdU9oAPygNx2pbhpPJPJBQZOFzV0O14L18J+JtZIzEwjSaRl0DyNthzt+8KNikt1yEGuEOtTnuzwzszmD6I-RNTlP89OZ7Ml875wtLY9kfLnEeV8cdiMNqy9tqGHr3peTiKr5uGaFwocRzHBd20-R9p2fNd3xAidwJ-PtDCoId4xpIVdwiOoEiYZgGlIJpQGQPUIlOKM8mvTYRVAU4KLFXD8MI-VwmyUiY2ozE2LFHDGm9L8nyVFVkHVGFNW1XVGMkBjiL8STkgmKJQHYRZcAoRBmgMApsUonFQGqZggA

```
    // Example of position update
    //
    // public updatePosition(): void {
    //   this.position = vectors.add(this.position, this.velocity);
    // }
    
    type Vector2 = [number, number];
    const vectors = {
      add(a: Vector2, b: Vector2): Vector2 {
        return [a[0] + b[0], a[1] + b[1]];
      },
    
      get up(): Vector2 {
        return [0, 1];
      },
      get down(): Vector2 {
        return [0, -1];
      },
      get left(): Vector2 {
        return [-1, 0];
      },
      get right(): Vector2 {
        return [1, 0];
      },
    };
    
    function moveTowardsEntity(
      currentPosition: Vector2,
      targetPosition: Vector2,
    ): Vector2 {
      let velocity: Vector2;
      let targetVelocity: Vector2 = [0, 0];
    
      velocity =
        currentPosition[0] &gt; targetPosition[0]
          ? (targetVelocity = vectors.add(targetVelocity, vectors.left))
          : (targetVelocity = vectors.add(targetVelocity, vectors.right));
      velocity =
        currentPosition[1] &gt; targetPosition[1]
          ? (targetVelocity = vectors.add(targetVelocity, vectors.down))
          : (targetVelocity = vectors.add(targetVelocity, vectors.up));
    
      return velocity;
    }
    
    const entity1: Vector2 = [101, 101];
    const entity2: Vector2 = [100, 100];
    
    const velocity = moveTowardsEntity(entity1, entity2); //?
```",Can anyone improve my logic for changing velocity for a game character so it moves towards another character?
756,2019-11-14 18:49:46,6,1,,deno (typescript) on aws lambda
757,2019-11-14 18:50:10,43,1,"I've already considered the obvious - type safety, enums, code analysis, complexity with adding another build tool, slower build times due to transpilation, etc. For those out there who have already taken the plunge, what have you found that wasn't immediately obvious? Also, did you wind up with larger bundle sizes?","I'm considering adopting typescript for my large-scale app, and..."
758,2019-11-15 18:09:37,8,1,"About to switch a project over from angular to react w/ redux and was wondering what are some good starter kits and why you prefer them over CRA.


Ideally I'm looking for something that has hot reload, maybe some cli generators, helpers/wrappers around common react or redux features, and a good ts config.",Favorite react+redux typescript starter kit/boilerplate
759,2019-11-17 23:59:53,8,1,"[https://www.typescriptlang.org/play/?ssl=1&amp;ssc=1&amp;pln=21&amp;pc=4#code/MYGwhgzhAECSB2AHArgFwMIHsC2jPwFN5VoBvAWAChpoUAjEAS2GgA8AuaeZbOggJwDcVKjWD4IqfsmCpM-ABQBKMqJrRUAC0YQAdK2gBeaAEZh1aAF8q1ylVCQYAUVZhcIAqov0mLRkjROBBQMHDxCYnM1cXhJaVl5BWDAuADQ3HwiVBUKCxotHV1-EKMuAgB3VJDlcxpbWyogA](https://www.typescriptlang.org/play/?ssl=1&amp;ssc=1&amp;pln=21&amp;pc=4#code/MYGwhgzhAECSB2AHArgFwMIHsC2jPwFN5VoBvAWAChpoUAjEAS2GgA8AuaeZbOggJwDcVKjWD4IqfsmCpM-ABQBKMqJrRUAC0YQAdK2gBeaAEZh1aAF8q1ylVCQYAUVZhcIAqov0mLRkjROBBQMHDxCYnM1cXhJaVl5BWDAuADQ3HwiVBUKCxotHV1-EKMuAgB3VJDlcxpbWyogA)

Clearly it is a class being stored in the \`input\` parameter variable and has a construct signature, I am not sure what is going on.",Why does my class not have a construct signature? (This expression is not constructable. Type 'InputComponent' has no construct signatures)
760,2019-11-19 00:18:46,1,1,,New post. 🔥 Javascript's setTimeout function accepts a string and is also variadic. But typescript users should probably not use the variadic signature 😄. Here is more on the subject! https://mrgregory.dev/posts/setTimeout-is-variadic 😄 New post man
761,2019-11-19 00:29:45,11,1,,Javascript's setTimeout function accepts a string and is also variadic. But typescript users should probably not use the variadic signature 😄. Here is more on the subject!
762,2019-11-19 23:02:18,5,1,"Question about generics. I have the following code:

    public newSubscription&lt;T&gt;(): Observable&lt;T&gt; {
        return new Observable&lt;T&gt;((subscriber): void =&gt; {
            subscriber.next(...);
        });
    }

And I have a typescript class:

    export class Person {
        constructor(public name: string) {
            this.name = name;
        }
    }

If I implement it like this:

    service.newSubscription&lt;Person&gt;().subscribe(res: Person =&gt; ...);

How can I have the `newSubscription()` create a new instance of the `Person` class for every value I pass back into `subscriber.next()`?",Using generics to create new instances of a generic's class
763,2019-11-20 04:12:25,11,1,"I just stumbled upon two broken (I think) typescript modules that had the same syntax for sub-functions.

Basically they're doing this:

        interface MyFunction {
            (): string;
            test: () =&gt; string;
        }

where MyFunction is exported and they want you to import it like:

    import * as myfunc from 'my-function;

But you can't then call myfunc as you get a compiler error of

   Type 'typeof myfunc' has no call signatures.

Totally confused here.  Is this a typescript bug?

Seems like it might be.",How do you call a functional interface with sub-functions? Typescript bug?
764,2019-11-20 13:55:26,3,1,"It seems a waste to define the interface for `Entities` and then make a special `EntityKeys` type if they could be inferred.

Is it possible to have something more like:

    entityFactory = &lt;
 T extends {
 new(...args: any[]): any;
    }
    K extends keyof ??this.entities??
  &gt;(
    classToCreate: T,
    entityKey: K
    ...

I am not sure if the syntax exists or it is just impossible? Cheers!

[https://www.typescriptlang.org/play/#code/JYOwLgpgTgZghgYwgAgOJwLYQPICMBWECYyA3sgL4CwAUAgDZwDOTyAEtAPZmW22iRYiFAFFwwMMAitStZMgAWXAFxpMOAkTABtALoBuOcgBenDLilNV6LHkLE9hmvNwBXevQhgra25ocGtNQ0tGAAngAOouLhANIQYawAvMgA1gmcMMhikpLSTrQQAB4RnFAkDMysAOpl9AAmZEYQMZaqORKWyCmyzvKKKsh6ADRG8qbmbUO6o30u7p7eqiNGFAV9LblhAGKIYGVh3cgAPGPIACrIxZAg9TJn8iAQAO4AFAB0n3BQAOY+cCAwnoAJSqAFhJz9Xh9AB8rzOlRY504AGEoBA4JBVOdZlDNhIwvEwu0YoSEkxhsgAPRU5AAfjpyBRAOQzxQCHRmJQYCUTBQriYoB+yABnB50GQ4SiyAAbt9gHBcJ5kLE6WcQK5zNBsDBVBqtVBcf1Pu9vn9VCjOCAmGAoK5iGUAArfdSCJjHc4woyg2WcYCNJIwppzSUKYBMd74vJMbRRslhXTvCIChTwkPyE3aE0AQSgUDgYVe+tw2pgwMTGDgEVer2B3SDT2eyERTGRaIxkA+X1+TGBwKN8mBkMoTmCtAQVptrLqAeQjeQtSgDVr62eM8jpN2DqghY4UE4lIA5Ep94fKQBGIdAA](https://www.typescriptlang.org/play/#code/JYOwLgpgTgZghgYwgAgOJwLYQPICMBWECYyA3sgL4CwAUAgDZwDOTyAEtAPZmW22iRYiFAFFwwMMAitStZMgAWXAFxpMOAkTABtALoBuOcgBenDLilNV6LHkLE9hmvNwBXevQhgra25ocGtNQ0tGAAngAOouLhANIQYawAvMgA1gmcMMhikpLSTrQQAB4RnFAkDMysAOpl9AAmZEYQMZaqORKWyCmyzvKKKsh6ADRG8qbmbUO6o30u7p7eqiNGFAV9LblhAGKIYGVh3cgAPGPIACrIxZAg9TJn8iAQAO4AFAB0n3BQAOY+cCAwnoAJSqAFhJz9Xh9AB8rzOlRY504AGEoBA4JBVOdZlDNhIwvEwu0YoSEkxhsgAPRU5AAfjpyBRAOQzxQCHRmJQYCUTBQriYoB+yABnB50GQ4SiyAAbt9gHBcJ5kLE6WcQK5zNBsDBVBqtVBcf1Pu9vn9VCjOCAmGAoK5iGUAArfdSCJjHc4woyg2WcYCNJIwppzSUKYBMd74vJMbRRslhXTvCIChTwkPyE3aE0AQSgUDgYVe+tw2pgwMTGDgEVer2B3SDT2eyERTGRaIxkA+X1+TGBwKN8mBkMoTmCtAQVptrLqAeQjeQtSgDVr62eM8jpN2DqghY4UE4lIA5Ep94fKQBGIdAA)",Can I use the keyof index type directly in the class to refer to properties rather than define an external interface?
765,2019-11-22 17:09:40,0,1,"Today I was searching through internet to find a way for getting constructor parameters types from abstract classes in TypeScript. So, I found that there is no such a thing, because declaring constructors as `new(...args: any[]) =&gt; any` never allowed using abstract classes. Reason is simple, they are not constructable, which means they will not be compatible with such declaration. We also have `Funcion &amp; { prototype: any }` which can identify an abstract class, but will give no more information about it than an instance type for the class. I've searched for few hours and couldn't find anything that will help me getting these parameters.

Out of curiosity I tried to trick TypeScript to compile properly and give me parameters types. Nothing really worked, because TypeScript is very well designed beast and doesn't really allow for such funny business. But there is one thing that came into my mind, which does not require any external tools and makes the compiler a bit stupid. The magic expression is a `// @ts-ignore` comment. It is a bit magical, because it tells the TypeScript to ignore the next line and don't check any typings, but what is more interesting the expressions in the line are still resolved as normal TypeScript code. That means for example, even if we have some generic type that does not meet the constraints we can still pass it and get back proper results. That was a big surprise for me. With a bit of fiddlling around I finally managed to make it work. It isn't pretty and I know it is hacky, but still if someone really wants their parameters from abstract class constructors then there you have it!

If there is a proper way to do it, then please let me know. This is a feature that would really help me with my code :). Remember that this may be a bug and there is a big chance that this will break. So do not use this in production when you are sure that you will upgrade to newer versions of TypeScript. 

Workaround works with TypeScript 3.6.3 and higher, never tested older versions.

Below there is some magical code that makes it work with two more helper types.

    abstract class MyAbstractType {
        constructor(a1: string, a2: number, a3: { x: number }) {}
    }
    
    class AbstractClassHelper&lt;T extends new(...args: any) =&gt; any&gt; {
        ex() {
            // @ts-ignore
            return class extends ({} as T) {};
        }
    }
    
    // @ts-ignore
    type AbstractContructorParameters&lt;T&gt; = ConstructorParameters&lt;ReturnType&lt;AbstractClassHelper&lt;T&gt;[""ex""]&gt;&gt;;
    
    type AbstractClass&lt;T = any&gt; = Function &amp; { prototype: T };
    type AbstractInstanceType&lt;T&gt; = T extends Function &amp; { prototype: infer U } ? U : never;
    
    // TypeScript tells me that resolved type for Params is: [string, number, { x: number }] 
    type Params = AbstractContructorParameters&lt;typeof MyAbstractType&gt;;

Playground link to check it out directly: [Here](http://www.typescriptlang.org/play/?ssl=1&amp;ssc=1&amp;pln=18&amp;pc=22#code/IYIwzgLgTsDGEAJYBthjAgsgTwILmjggBVsAHAUwQG8BYAKASaQHsA7SKAV3hagApgARgBcCTgEs2AcwA0CYACYxbLgFsQFKPOABmMdQQAPFes1QEAXwCUNBg2ZWGl+-RRoM+TkQDCqdAASFMiUUAA8xAgURhAUbAAmGGwUAO78AHSZwFDSYGLAbNi2ALwAfAqF5XSMzNH8ttWOjgD0zQgAAhBgALQS0mx8FA5NTFAUEFxQbEj+GNGxCRj81JYKGMQNlgDcw0wu9PsMrR1dvf2DDBDkVF6E8D7s0DwQfAAK2cBq41pgEeXFCAeHCevCg7xgX1iUF+ACVxpM2KRKGFbjB7rMgiEtH8ANoAImieIAuqVSjt6JdrghUb5ZhEEACCth-ggAGJcNjwCTsBAAMhoCDIUBYLyulDEkW2lMo1IIaIgAElgQVYBQkRQ-gyEJF5nFEmyOVyefzDEKRSLrmIpAAzLQIACqVgQAH4HQgVBQAG5aclHNrqgDKsCgEjIiFiyGQGC+CAgAAtgIgxmAWMhvfFY1TrXwEODPhgJHkEDjJDJ5KoNFp5IYTAgK+YrESENKqHm1BgATT7o9uKC299oWExRQWNasHg5UR1WSgA)","Getting parameters types from abstract class constructor with a bit ""hacky"" way."
766,2019-11-27 10:27:49,0,1,"*Hello, community!*  
Give me, please, *typed analog of simple curried javascript function like this:*  
`const getResponseGenerator = field =&gt; value =&gt; ({`  
   `payload: { [field]: value },`  
`})`  
*for use case like this:*  
`type GenericResponse&lt;Payload extends { [key: string]: string }&gt; = {`  
  `payload: Payload`  
`}`  
`// Payload variations for Test1Response`  
`type Test1Payload1 = {`  
  `payload1test1: string`  
`}`  
`type Test1Payload2 = {`  
  `payload1test2: string`  
`}`  
`type Test1Response = GenericResponse&lt;Test1Payload1 | Test1Payload2&gt;`  
`// Payload variations for Test2Response`  
`type Test2Payload1 = {`  
  `payload2test1: string`  
`}`  
`type Test2Payload2 = {`  
  `payload2test2: string`  
`}`  
`type Test2Response = GenericResponse&lt;Test2Payload1 | Test2Payload2&gt;`  
`// use case`  
`const getTest1Payload1Response = getResponseGenerator&lt;Test1Response&gt;('payload1test1')`  
`const getTest1Payload2Response = getResponseGenerator&lt;Test1Response&gt;('payload1test2')`  
`const getTest2Payload1Response = getResponseGenerator&lt;Test2Response&gt;('payload2test1')`  
`const getTest2Payload2Response = getResponseGenerator&lt;Test2Response&gt;('payload2test2')`  
`const test1Payload1Response = getTest1Payload1Response('value of payload1test1')`  
`// returns { payload: { payload1test1: 'value of payload1test1' } }`  
`const test1Payload2Response = getTest1Payload2Response('value of payload1test2')`  
`// returns { payload: { payload1test2: 'value of payload1test2' } }`  
`const test2Payload1Response = getTest2Payload1Response('value of payload1test1')`  
`// returns { payload: { payload2test1: 'value of payload2test1' } }`  
`const test2Payload2Response = getTest2Payload2Response('value of payload1test2')`  
`// returns { payload: { payload2test2: 'value of payload2test2' } }`

[example](https://www.typescriptlang.org/play/index.html?ssl=1&amp;ssc=1&amp;pln=49&amp;pc=60#code/C4TwDgpgBA4hB2EBOBLAxgJQgZzAe3mwgB4AFAQxABs9yATKCAD2ATuygG8oBtAawggAXFGzBU8AOYBdEWImSoAXwB8UALxcAsACgoUMJRr0RFarTq6lu3QHpbUM8YYA3cqnLAUBDgDM8SFAAKjjAAIxYuD4QuqCQwaFhThZhGtp6BkYprGJhcuIoUlax4NAhucn0AExpnLr6hub0YTnAVfkKxTol8eXhkfiE0JpwiKiYOINExH1JWc1QAD4JFfN0VSo2OvaOa1BuHl4+UP6BfVUD0T1loVWVdKmadRmNzlWteaIFRTrWOnE3MR3NY1J71TJNdatdpfTq-a4rNqXIZpUbIdDI6bne6pZbYkGbbrbBySBDotBQNAAVyQqAgDF8VPgaCO8F0aB8wCgpOAmIgaKQngCaRmjBYbA4Aoxk2ixE4qhUAApfCgIFQ6CIBCA8L5gjwAOSvCz66QASg0hP0+kVbioVIgIiCBqN9BN-EEOr1hrWJrNFqgiu4Lo1XF4KrVdFk+3IdugSmUpq2OypREp5CI7M53IgwFmOL5aR5fIFQqQM0SfKV9W9kJaiX1ABpdImdBzCFyeXmQQXNEWZUMS8AAuXcpXFdXg3WgY3m5n29nc7d8-3U72c8WyYKh2XzmOJyCPjOdC222IF-jIRcV8MFxuxqWR0jr1W9DW3tCjy252ePsuoii10XVZaz5RV9Vte0oE9SdDxbHYgzWEQENrD4RHAmNIOgtYp3CfVlGUb8uV-btr0LHMu0vUD0NjKDdRg259TghxkOcJCIWcHCYWozC6Owj98L+U8iKXbCe3PESQOvMCIOgLCUPrJjQ2DNjg3eRI0Jk2j2IsNTcjw+NBKzaF7ivf9V3EoETKozS5I4j9FJYiwVIPW4NIw2TeMvfiDKAA)",Need help to implement generic curried function
767,2019-11-27 11:30:29,0,1,"Need help to write typed analog of simple curried javascript function like this:

    const getResponseGenerator = field =&gt; value =&gt; ({
      payload: { [field]: value },
    })

for use case like this:

    type GenericResponse&lt;Payload extends { [key: string]: string }&gt; = {
      payload: Payload
    }
    // Payload variations for Test1Response
    type Test1Payload1 = {
      test1payload1: string
    }
    type Test1Payload2 = {
      test1payload2: string
    }
    
    type Test1Response = GenericResponse&lt;Test1Payload1 | Test1Payload2&gt;
    
    // Payload variations for Test2Response
    type Test2Payload1 = {
      test2payload1: string
    }
    type Test2Payload2 = {
      test2payload2: string
    }
    
    type Test2Response = GenericResponse&lt;Test2Payload1 | Test2Payload2&gt;
    
    // use case
    const getTest1Payload1Response = getResponseGenerator&lt;Test1Response&gt;('test1payload1')
    const getTest1Payload2Response = getResponseGenerator&lt;Test1Response&gt;('test1payload2')
    const getTest2Payload1Response = getResponseGenerator&lt;Test2Response&gt;('test2payload1')
    const getTest2Payload2Response = getResponseGenerator&lt;Test2Response&gt;('test2payload2')
    
    const test1Payload1Response = getTest1Payload1Response('value of test1payload1')
    // returns { payload: { test1payload1: 'value of test1payload1' } }
    const test1Payload2Response = getTest1Payload2Response('value of test1payload2')
    // returns { payload: { test1payload2: 'value of payload1test2' } }
    const test2Payload1Response = getTest2Payload1Response('value of test2payload1')
    // returns { payload: { test2payload1: 'value of test2payload1' } }
    const test2Payload2Response = getTest2Payload2Response('value of test2payload2')
    // returns { payload: { test2payload2: 'value of test2payload2' } }

[example](https://www.typescriptlang.org/play/index.html?ssl=29&amp;ssc=1&amp;pln=33&amp;pc=1#code/PTAEHMFMDtIJwJYGNRIK50ZAJqAZmtEgC4ID20AsAFBIUDOxEkxASpPQA4OQDiM8AIbEycUAF5QAHgAqoSAA9iMbPVD9YiJOy48pAbwC+APmMAKPAkgAbbAC5QAa0gBPMnlAyA2gHJOgl2syQWwfAF0ASgljGlA40DMAN0FrNEgHbz8AoJDwr2c3D0z-QODQsMjohP1QEpz7UBqvSxtsMIdk1MhQQx6ImhpiF05ujXhkHW5oekgpAAVssvklFTUmgodGRGhwdtAthB2e4wlG2NrFkIcF0pCaQxoQUBv60GTEYXJp-FFPDmIAIyTHiDYbdGT-AEvMoA076c7KRgAuowzbEbbge6gkZ-JHQkIAJjhCMhKMJaIxWOo2PBkOB026kjGWnpM1kkPx2FhAB9cYDOQSYtTqE9OW9BB9SAwfmIIYwCazIDS+QTObDJPDqHFEcQCWSuRTDpjqA9qEMcXLdQLiVrQDq9ZdsATDTsqcrLQqOFMZqdmRMvXoPWrQLyg47BQMRWA0D6kIIZjQ6NMmFBiJaoY6gQGGadU4rmcJROykYrzD4dcjMz5+rQGCmWOmBYrcyx8wI4IW4MXAaWzOXSeHq4m68w0-9VZnm5I89mZgWRF2Pb3+-L9QCh7Xk6Ow7cnVPR23NJ3u57dAyy-b9QSN8OtxW1fvU43J7PIH3OmlQO47QPd+ua08cAsBg3w1PqDg1BWa4OD4H7dN+UFVj0PS3owP54uGj4NhymGvu+KSfghv71NeAFgEBxAgWsFy7hB6GAleMFwV+HhrvaPjIaaSZofaD6vi2Y7ynxZ4zPhXQsfRDp-hugHAXAoE0fUdGXpmTEEfBHgqdJnGoUwvG4SJjLbuOTZ4bB6kSVpJEyeRckKeBjSSYxoDmeJRGroOnFAA)",Implementation of generic curried function
768,2019-11-30 17:37:04,49,1,"I've been trying to get my office to adopt Typescript for the whole year but I've still been failing. I have managed to get a bunch of juniors on board, but my team leads refuse to do any project in Typescript.

I've finally managed to strike a deal with one of the team leads. He doesn't mind it being written in Typescript since I'm the only one working on it, but his only concern is that if I'm unavailable, there won't be other people to work on it. So I'm allowed to write the code in Typescript ONLY if I maintain a Javascript file with the same code. 

The problem with the Typescript compiler is that it doesn't ""pretty compile"" typescript. 

All my imports become:

    const React = __importStar(require(""react""));

Something that was imported as 'Env' becomes 'Env_1'

    MixPanelToken = env.MIX_PANEL_TOKEN;

becomes

    this.MixPanelToken = Env_1.default.MIX_PANEL_TOKEN;

Anything in React Native .tsx becomes really ugly

        &lt;View style={{backgroundColor: Color.lightest_grey, padding:20, flexDirection:""row"", justifyContent:""space-between"",
            borderBottomWidth:width}}&gt;
            &lt;Text style={{color:Color.gold, textTransform:""uppercase"", fontSize:Font.size.xs}}&gt;{p.label}&lt;/Text&gt;
            &lt;Text style={{color:Color.grey, textTransform:""uppercase"", fontSize:Font.size.s}}&gt;{p.value}&lt;/Text&gt;
        &lt;/View&gt;

becomes

    &lt;react_native_1.View style={{ backgroundColor: Style_1.Color.lightest_grey, padding: 20, flexDirection: ""row"", justifyContent: ""space-between"",
        borderBottomWidth: width }}&gt;
            &lt;react_native_1.Text style={{ color: Style_1.Color.gold, textTransform: ""uppercase"", fontSize: Style_1.Font.size.xs }}&gt;{p.label}&lt;/react_native_1.Text&gt;
            &lt;react_native_1.Text style={{ color: Style_1.Color.grey, textTransform: ""uppercase"", fontSize: Style_1.Font.size.s }}&gt;{p.value}&lt;/react_native_1.Text&gt;
        &lt;/react_native_1.View&gt;);

Is there any way to simply 'strip' the types from Typescript so that it will make it valid JS, while still maintaining the original code style?","Is there any script to ""pretty compile"" (same code but without types) Typescript to Javascript?"
769,2019-12-02 09:44:15,14,1,"Every time I have to create a new frontend project it seems like I lose a disproportionate amount of time fiddling with arcane .conf magic that I have to look up on the internet and copy paste and figure out when something's 5 years out of date and so on.

Ok, some frameworks have a ""wizard"" like `create-react-app` or `create-vue-app` that will put together a certain combination of features, but if you want something that's not in the default recipe you're SoL.

Is there a command-line tool that will deal with all that babel/webpack/tsconf/eslint etc. stuff so I can just specify things to turn on/off and it will do it for you?

Something like `magically enable esnext typescript vue eslint sass mocha`, and it will do everything, and then I can just use `yarn/npm dev/build/test` without weird stuff happening. Like .scss being parsed as regular .css, or trying to do `require('ky')` and being told that it doesn't understand a spread operator in `ky/index.js`, or doing `&lt;script lang=""ts""&gt;` in a .vue file and receiving a completely obscure error, or me hanging myself in the stationery cupboard with a printer cable?

Alternatively, do you have any advice for a way to make all this easier that doesn't involve keeping up to date with all the minutia of a dozen different bundle and config and linting tools?",[AskJS] Is there something like NPM for Webpack?
770,2019-12-02 22:42:09,2,1,"Hello, I'm new typescript and encounter some issue regarding index signature with different data types as its members.  


Example below:  
 

    type StyleProperty = {
    [key: string]: string
} &amp; {
 style:
  | FlattenInterpolation&lt;ThemedCssFunction&lt;DefaultTheme&gt;&gt;
  | FlattenInterpolation&lt;ThemeProps&lt;DefaultTheme&gt;&gt;
}

Then it is used like the following:

&gt;const sizes: StyleProperty\[\] = \[  
    {  
 name: 'XSmall',  
 style: **css**\`  
            height: 32px;  
            font-size: 14px;  
            padding: 0 16px;  
        \`  
    },  
    {  
 name: 'Small',  
 style: **css**\`  
            height: 40px;  
            font-size: 16px;  
            padding: 0 16px;  
        \`  
    }  
&gt;  
&gt;\]  
&gt;  
&gt;const variants: StyleProperty\[\] = \[  
    {  
 name: 'LightGrey',  
 style: **css**\`  
            color: ${**getPaletteColor**('shades', 600)};  
            background: ${**getPaletteColor**('shades', 200)};  
            box-shadow: 0 1px 0 0 ${**getPaletteColor**('shades', 300)};  
            &amp;:hover,  
            &amp;:focus {  
                background: ${**getPaletteColor**('shades', 300)};  
                box-shadow: 0 1px 0 0 ${**getPaletteColor**('shades', 400)};  
            }  
            &amp;:active {  
                background: ${**getPaletteColor**('shades', 400)};  
                color: ${**getPaletteColor**('shades', 0)};  
                transition: background 0s ease;  
            }  
        \`  
    },  
    {  
 name: 'DarkGrey',  
 style: **css**\`  
            color: ${**getPaletteColor**('shades', 0)};  
            background: ${**getPaletteColor**('shades', 600)};  
            box-shadow: 0 1px 0 0 ${**getPaletteColor**('shades', 700)};  
            &amp;:hover,  
            &amp;:focus {  
                background: ${**getPaletteColor**('shades', 700)};  
                box-shadow: 0 1px 0 0 ${**getPaletteColor**('shades', 900)};  
            }  
            &amp;:active {  
                background: ${**getPaletteColor**('shades', 900)};  
                transition: background 0s ease;  
            }  
        \`  
    },  
&gt;  
&gt;const VARIANT = variants.**reduce**(  
    (*names*: StyleProperty, *variant*: StyleProperty) =&gt; {  
 names\[variant.name\] = variant.name  
 return names  
    },  
    {}  
)

 I really don't know what to do. I read some blogs that I will union but style property was not compatible with index signature.

 `Property 'style' is incompatible with index signature.`  
`Type 'FlattenInterpolation&lt;ThemeProps&lt;any&gt;&gt;' is not assignable to type 'string'` 

Hopefully someone can help. I really like typescript so I try to learn some more.",String index signature with other types as members
771,2019-12-03 06:45:25,0,1,"[https://github.com/srinivasreddy/companies-list](https://github.com/srinivasreddy/companies-list)

I have created a small library that fetches data from the Fortune - 500 website.  I see that I have omitted some packaging instructions or exporting types. Please forgive me.   And this is my first typescript lib. If someone finds this useful, or your opinions or feedback are most welcome. And I try to address them in the next version I release.

&amp;#x200B;

Happy Hacking 

Thanks,

/Srini",Lib to fetch fortune 500 data
772,2019-12-04 12:38:29,15,1,"Hello,

I've read all TS'basics, but I can't figure out what this definition is supposed to say: `&lt;T = { [key: string]: any }&gt;` in this context:

    export class MyClass {
      protected call&lt;T = { [key: string]: any }&gt;(path: string): Promise&lt;T&gt; {
        //do stuff
    }}

Thanks!",Whats does this mean in typescript?
773,2019-12-05 23:02:00,4,1,"I'm using a callback function parameter as a generic but when I invoke it, typescript has an issue `Type 'unknown' has no call signatures.ts(2349)` 

    const debounce = &lt;T&gt;(timoutId: number, cb: T, time: number = 500) =&gt; {
      clearTimeout(timoutId)
      window.setTimeout(() =&gt; cb(), time) // This expression is not callable.
                                          //     Type 'unknown' has no call signatures.ts(2349)
    }",Generic is not callable
774,2019-12-06 06:20:48,1,1,"I am newbie at typescript, I got error for ""Type string[] provides no match for the signature IterableIterator&lt;[number, ReactNode]&gt;"", and I cannot figure it out. The wrong part is between the &lt;ul&gt;&lt;/ul&gt;.

Can Someone tell me how to do this right in typescript react?

```
const Menu: React.FunctionComponent&lt;IMenuProps&gt; = (props) =&gt; {

    const entries: string[] = [""InvoiceNum"",
        ""SellerName"",
        ""CommodityTaxRate"",
        ""SellerBank"",
        ""Checker"",
        ""TotalAmount"",
        ""CommodityAmount"",
        ""InvoiceDate"",
        ""CommodityTax"",
        ""PurchaserName"",
        ""SellerRegisterNum"",
        ""CommodityNum"",
        ""PurchaserBank"",
        ""Remarks"",
        ""Password"",
        ""SellerAddress"",
        ""PurchaserAddress"",
        ""InvoiceCode"",
        ""CommodityUnit"",
        ""Payee"",
        ""PurchaserRegisterNum"",
        ""CommodityPrice"",
        ""NoteDrawer"",
        ""AmountInWords"",
        ""AmountInFiguers"",
        ""TotalTax"",
        ""InvoiceType"",
        ""InvoiceTypeOrg"",
        ""CommodityName"",
        ""CommodityType"",
        ""CheckCode""]

    return (
        &lt; aside className=""menu"" &gt;
            &lt;p className=""menu-label""&gt;
                General
            &lt;/p&gt;
            &lt;ul className=""menu-list""&gt;
                {{
                    entries.map((el: string, index: number) =&gt;
                        &lt;li key={{index}}&gt;
                            &lt;label className=""checkbox""&gt;
                                &lt;input type=""checkbox""&gt;&lt;/input&gt;
                                {{ el }}
                            &lt;/label&gt;
                        &lt;/li&gt;
                    )
                }}

            &lt;/ul&gt;
        &lt;/aside &gt;
    )
};
```
Thanks!",Typescript React no match error
775,2019-12-06 22:02:05,16,1,"I am writing a windows application that can act as an intranet web server (through .NET). I want to write the browser UI with typescript (which I am completely comfortable with). I'll be using no frameworks, no third party libraries, no dependencies; just what the browsers offer. I need the implementation to be as light as possible, so I'll be writing everything from scratch. This is not a website (as in, it isn't served from a real web server); it's a remote, browser accessible, temporary interface to a running desktop application that will be served 100% by the desktop application with sockets (no need for node anywhere). I am writing all of this using Visual Studio 2019 on windows. 

I can't even find tsc.exe to run it through the command line. I've been looking for hints in documentation on how to compile without node (and better yet, how to run the typescript compiler as part of the build process of a .NET project in visual studio) but have come up with nothing useful (or currently applicable) thus far. Any help would be greatly appreciated :D. 

If I made a stupid assumption or missed something super obvious, you'd be making my day a whole lot better if you pointed it out :D. You're welcome to be rude as long as you're right :)",Typescript without node?
776,2019-12-10 10:05:00,5,1,"I am newbie at Typescript. When I want to write a function that takes in an object as parameter, I found I cannot give the parameter Object type, since doing so will give me no properties that I can access later in my function body, for example, accessing [obj.name](https://obj.name). 

After some research, someone suggests create an interface that takes in all the properties you need. That is a good one, but if I need to deal with some response object with hundreds of properties that I might or might not use in future? Do I still need to manually write down all the properties into the interface?

And it turns out the final solution I use is the any type, I just jump back to js and I feel this is not the elegant way to do it.

I appreciate if you could share your thoughts on this!",Some Questions about object type in typescript
777,2019-12-11 13:32:09,4,1,"I wrote an article a while back, and someone suggested to automate the entire thing, which I am having a go at [https://www.elsewebdevelopment.com/typescript-airbnb-style-guide-optimized-for-prettier-in-one-json-file/](https://www.elsewebdevelopment.com/typescript-airbnb-style-guide-optimized-for-prettier-in-one-json-file/)

I am importing the eslint config JSON file, then I rebuild it based on various logic.

Please check this stripped down version of the core logic. NOTE there is something wrong with the playground in that it does not acknowledge \`fromEntries\` and \`entries\` but they work fine in TS3.7. I am also getting \`includes' does not exist on type 'string\[\]\`  which is not showing in VS Code. If you want to play with it then it needs to be copied into Code or similar :

[https://www.typescriptlang.org/play/?target=6#code/JYWwDg9gTgLgBAEwIYyXAZlCI4HIB0A9BAK4xhn4BWAzhAHa4DcAUCzAJ5gCmcAUgGUA8gDkAClFDAYwAG68AvHBoxJ9AOZwAPnHokQAI25RtcAxAgAbbknqm9ly6049+wkQDUklkoreiJKRl5U0FRIQMqbgBjeB0wkQBBKCgkDmcuXgSIqNi4JQBvOABtEG5DYwAuZVVgDQBdaoSvH14AXwzXBOTUjnz-T29fYvrWFmiGFThogAsYgGtuBAAhDgAVTJpoyTB4JWLcdW4YGGMAWihjkihGUbYJ+imDJBpgaIljmWMAYQZ0SzeMBo-WKLDgeAAAi5uFsdjAzjCAfQYIQDKlotwzioONZcAAaMGQ6Gw4C7BE0JEo9AkejRM7RbyWLFgJDROrqXAsO7jSbwejcADuAFEBAAZOowX70dDAdRNdw5GJ7OCK2L4TDYIXIyQwgAUhNVMHw3G1wD1yFQ+CgJGsNAAlOrgJZTlBdbriosOHi4LIhtx6nb8gA+OAFQngh5TegQGCJeg9NL9ACECY4+GANFTut9rTtrHBEd5cBg135CCE6HQ-RzwwADPV8golLgIJXmOHpkWSDQYQBJcDQGBiHzqOr9T34FRIWA0ADq0hmutwoEgsEIuDzHcj8Ae-0Bc4XHxOZpMSmer3el2PPz+ANiNHTtJ8CD1ns3Bc7jx3c2iixW6wEfpZgWJZVg2HgSV2R9omfV9uA4TcO2AKtdWjWN4xSNJAxgGYsAFXRBTgIUUmgJcACUbV4MAsB4WAzWBEBu3gIw4DHWw4GnXoN3zAtkLgXUSxuJYK3QQMww-cEr1LHjwTaJCUO7PsB1gYcSFHegxI7SSrhuGS4Dkj8+N1Xc7yBeccKPL4oE0iS4Ck3SOwM3iUOA39QIAmyJPs+g9Kc7TBLsD14O9Gt-R4to7RYRDCEIOBSHIShaAYFgYtDFLYvBAAiE1ZEy6ow1Sj9spoAA2PLi2tbgCUKgtMujF9ytUXx0oLNpqoyuBMvUSwIGeSwaHKgo2parKWSgHsoHKzLCBmbBuEIZBZGABBCFeU4aEIcDuAEbZSRRbgAA9VFZeFrVtQh6u4AB9EAIAQSiNvwMB6DAEBCEuUcVCgNMXpAWh8GgdRCChTZdrJREJUIMaJsIAAmfAAEYEfwWsroh5EIRK-AAHZ8FhgBqYkwZgCEAGYcfwUmLru67bvu86QYg4nyUpKHpxhhAMxRaHjGoAb2tqnmoCEXZgEmQaRtqmIQCQDxjFeBhyth2sEYADgFoq6GuDEtqmunKMyjWpeiGWADEbEEmEJZqoqjn5VIYGgAbqnQbweyNoretyGBxRdbwABESDAO8UG4CQIFor5nYwN3uEl2TJeGmrMuDtS6mj0Ebc6ldB0N+POsZmFmfRmBMsl+ojcys6rfy-PMrRVlMWxaxyszjrPcrPOs6yhGYAMfn8-BAr24kzLGQgAUBHZaxxX5RrKsH-T84ruvC8g+ES9RdEm84Fvqjb2zOuMLBJo92re-7ruR6HxesvHyfp+4WfuHn5ru6XrOV6zzKGTKSwGR7K3RemVWzoCvofYeh9Ro0WMFHKa-J5Cn1vtndQ0ZLj+xhE1WI1x2TlVdv1KqyDMqyjQdwfsq4gR4NjovOSn8Bb4AYSwIAA](https://www.typescriptlang.org/play/?target=6#code/JYWwDg9gTgLgBAEwIYyXAZlCI4HIB0A9BAK4xhn4BWAzhAHa4DcAUCzAJ5gCmcAUgGUA8gDkAClFDAYwAG68AvHBoxJ9AOZwAPnHokQAI25RtcAxAgAbbknqm9ly6049+wkQDUklkoreiJKRl5U0FRIQMqbgBjeB0wkQBBKCgkDmcuXgSIqNi4JQBvOABtEG5DYwAuZVVgDQBdaoSvH14AXwzXBOTUjnz-T29fYvrWFmiGFThogAsYgGtuBAAhDgAVTJpoyTB4JWLcdW4YGGMAWihjkihGUbYJ+imDJBpgaIljmWMAYQZ0SzeMBo-WKLDgeAAAi5uFsdjAzjCAfQYIQDKlotwzioONZcAAaMGQ6Gw4C7BE0JEo9AkejRM7RbyWLFgJDROrqXAsO7jSbwejcADuAFEBAAZOowX70dDAdRNdw5GJ7OCK2L4TDYIXIyQwgAUhNVMHw3G1wD1yFQ+CgJGsNAAlOrgJZTlBdbriosOHi4LIhtx6nb8gA+OAFQngh5TegQGCJeg9NL9ACECY4+GANFTut9rTtrHBEd5cBg135CCE6HQ-RzwwADPV8golLgIJXmOHpkWSDQYQBJcDQGBiHzqOr9T34FRIWA0ADq0hmutwoEgsEIuDzHcj8Ae-0Bc4XHxOZpMSmer3el2PPz+ANiNHTtJ8CD1ns3Bc7jx3c2iixW6wEfpZgWJZVg2HgSV2R9omfV9uA4TcO2AKtdWjWN4xSNJAxgGYsAFXRBTgIUUmgJcACUbV4MAsB4WAzWBEBu3gIw4DHWw4GnXoN3zAtkLgXUSxuJYK3QQMww-cEr1LHjwTaJCUO7PsB1gYcSFHegxI7SSrhuGS4Dkj8+N1Xc7yBeccKPL4oE0iS4Ck3SOwM3iUOA39QIAmyJPs+g9Kc7TBLsD14O9Gt-R4to7RYRDCEIOBSHIShaAYFgYtDFLYvBAAiE1ZEy6ow1Sj9spoAA2PLi2tbgCUKgtMujF9ytUXx0oLNpqoyuBMvUSwIGeSwaHKgo2parKWSgHsoHKzLCBmbBuEIZBZGABBCFeU4aEIcDuAEbZSRRbgAA9VFZeFrVtQh6u4AB9EAIAQSiNvwMB6DAEBCEuUcVCgNMXpAWh8GgdRCChTZdrJREJUIMaJsIAAmfAAEYEfwWsroh5EIRK-AAHZ8FhgBqYkwZgCEAGYcfwUmLru67bvu86QYg4nyUpKHpxhhAMxRaHjGoAb2tqnmoCEXZgEmQaRtqmIQCQDxjFeBhyth2sEYADgFoq6GuDEtqmunKMyjWpeiGWADEbEEmEJZqoqjn5VIYGgAbqnQbweyNoretyGBxRdbwABESDAO8UG4CQIFor5nYwN3uEl2TJeGmrMuDtS6mj0Ebc6ldB0N+POsZmFmfRmBMsl+ojcys6rfy-PMrRVlMWxaxyszjrPcrPOs6yhGYAMfn8-BAr24kzLGQgAUBHZaxxX5RrKsH-T84ruvC8g+ES9RdEm84Fvqjb2zOuMLBJo92re-7ruR6HxesvHyfp+4WfuHn5ru6XrOV6zzKGTKSwGR7K3RemVWzoCvofYeh9Ro0WMFHKa-J5Cn1vtndQ0ZLj+xhE1WI1x2TlVdv1KqyDMqyjQdwfsq4gR4NjovOSn8Bb4AYSwIAA)

I copy/pasted the JSON type definition from a thread on github. I am trying to create a valid JSON file, so though that would be the best type check to do that. I wish there was an official one built in, seems like something people would need?

In VS Code I am getting `Object.entries(data.rules).filter(([key, value])` `value` is type `unknown`. I do a check on value calling `const notAnArray = !Array.isArray(value);` , but that is not enough to satisfy TypeScript. Maybe I need to do a more explicit `if` statement, or some other trick?

I had another idea to change the `checkedByTypescript` and `basicPrettierConflicts` arrays to `as const`, but then `basicPrettierConflicts.includes(key)` gets `Argument of type 'string' is not assignable to parameter of type '""@typescript-eslint/brace-style"" | ""@typescript-eslint/func-call-spacing""...`

What is the best way to type this all accurately? The code executes OK, but it feels loose and fragile.",Help needed typing function that manipulates JSON
778,2019-12-11 17:12:14,18,1,"I like classes a lot. My first language was VBA and classes were the best way to structure code in a scalable fashion.

That being said, I use a lot of classes in my code. Is that wrong? Would instantiating a class slow down my code in any way?",Use of classes in typescript
779,2019-12-12 19:58:41,3,1,"The [TypeScript docs](http://www.typescriptlang.org/docs/handbook/compiler-options.html) say the following about the isolatedModules option:

&gt;Perform additional checks to ensure that separate compilation (such as with transpileModule or @babel/plugin-transform-typescript) would be safe.

And from [a separate source](https://kulshekhar.github.io/ts-jest/user/config/isolatedModules), isolatedModules is ""used to compile each file separately"".

My application scaffolding tool (create-react-app with TypeScript) requires this option to be enabled. Because of this, I cannot export a type or interface from a different file than where its declared.

For example, this will cause an error

    // my-dir/types.ts
    export interface MyInterface {
    }
    
    // my-dir/index.ts
    export { MyInterface } from './types';

I would like to disable isolatedModules so that I can define types in a types file and then export them from the directory index file, but I am not sure what problems that would cause.",isolatedModules prevents exporting a type from a different file than where its declared
780,2019-12-13 15:15:02,1,1,"jest-fetch-mock has a Typescript setup guide which I believe I specifically followed: [https://www.npmjs.com/package/jest-fetch-mock](https://www.npmjs.com/package/jest-fetch-mock)

&amp;#x200B;

    // package.json
    , ""devDependencies"": {
        ""@types/jest"": ""^24.0.23"",
        ""jest"": ""^24.9.0"",
        ""jest-fetch-mock"": ""^2.1.2"",
        ""ts-jest"": ""^24.2.0"",
        ""typescript"": ""^3.7.2""
      },
      ""jest"": {
        ""automock"": false,
        ""setupFiles"": [""./setupJest.ts""]
      }
    
    // setupJest.ts
    import {GlobalWithFetchMock} from ""jest-fetch-mock"";
    
    const customGlobal: GlobalWithFetchMock = global as GlobalWithFetchMock;
    
    customGlobal.fetch = require('jest-fetch-mock');
    customGlobal.fetchMock = customGlobal.fetch;

But then when I try to set a dummy resolved value:

    // ScriptTag.test.ts
      test(""createNew: creates new scriptTag"", async () =&gt; {
        // fetch.mockResponseOnce;
        fetch.mockResponseOnce(JSON.stringify(1));
        const data = await fetchMock(""x"");
      
        await expect(data.json()).resolves.toStrictEqual(2);
      })
    
    // terminal
     FAIL  functions/src/classes/__tests__/ScriptTag.test.ts
      ● Test suite failed to run
    
        TypeScript diagnostics (customize using `[jest-config].globals.ts-jest.diagnostics` option):
        functions/src/classes/__tests__/ScriptTag.test.ts:173:11 - error TS2339: Property 'mockResponseOnce' does not exist on type '(input: RequestInfo, init?: RequestInit | undefined) =&gt; Promise&lt;Response&gt;'.
    
        173     fetch.mockResponseOnce(JSON.stringify(1));
                      ~~~~~~~~~~~~~~~~
        functions/src/classes/__tests__/ScriptTag.test.ts:174:24 - error TS2349: This expression is not callable.
          Type 'typeof import(""/home/owner/PhpstormProjects/shopify/buyUsedServer/node_modules/jest-fetch-mock/types/index"")' has no call signatures.
    
        174     const data = await fetchMock(""x"");
                                   ~~~~~~~~~
    
    Test Suites: 1 failed, 1 total
    

When I comment out the offending lines for that test, and mark it as .skip(), then I get 1 skip, 7 passed. So this is a clue that the problem seems to occur first on this test even though it is that the bottom of the test file and should be tested last with results still accruing for the others.

I also notice there is no @ types/jest-fetch-mock, I assume it isn't needed.

Anyone know how to resolve this type of issue?","Typescript having issues with the library ""jest-fetch-mock"" (""no call signature"" and ""doesn't exist on object"" errors)"
781,2019-12-14 09:04:02,2,1,Any online courses or YouTube channels with some basics that move to advanced would be greatly appreciated. Cheers,New to typescript and finding it hard to locate resources when coding with React Native CLI. Anyone able to share some?
782,2019-12-14 10:21:27,6,1,,Why algebraic data types in typescript are called algebraic
783,2019-12-14 11:52:00,2,1,"Hi everybody,

I have a question, when building a backend app and I have some database model that has some fields different than the graphql type. how do you manage typescript interfaces in this case. 

ex:

Author  &amp; Post

&amp;#x200B;

in mongo db:

    Post {
        id: string
        title: string
        body: string
        authorId: string
    }
    

in graphQL

    Post {
        id: string
        title: string
        body: string
        author: Author
    }",DB model type VS GraphQL type
784,2019-12-17 02:57:03,5,1,"Hi all,  


I'm authoring a ReactJS library and I'm trying to migrate the existing codebase to \`.tsx\`. After compiling the \`.tsx\` file with Babel I get raw JavaScript w/ no type hints and thus losing the main benefit of Typescript.  


Here's what I have:  


    // .babelrc 
    {
        ""presets"": [""react-app"", ""@babel/env"", ""@babel/preset-typescript""],
        ""plugins"": [""@babel/proposal-class-properties"", ""@babel/proposal-object-rest-spread""]
    }
    
    // .package.json
    ""main"": ""./dist/index.js"",
    ""build:lib"": ""cross-env NODE_ENV=production babel src/lib --out-dir dist --extensions '.ts,.tsx' --copy-files --ignore __tests__,spec.js,test.js"",
    
    // App.tsx 
    // React component w/ Typescript
    
    // index.js (this is what ""main"" in package.json refers to after it's compiled)
    import { App } from ""./components/App"";
    export { App };

When I execute `npm run build:lib` my \`dist/index.js\` is just plain JavaScript. How do I retain the Typescript code so that when others are using the library they can get benefit from the type hints/checks via VS Code, etc?   


Also when I look at the source code of Typescript based libs I see everything in Typescript, not JavaScript. What am I doing wrong?   


Any tips would be much appreciated!  
Thanks in advance :D",Stuck for hours. Need help!
785,2019-12-17 10:50:25,4,1,"Hi, 

I have a function with several parameters. I wish to pass an Interface to it. Unfortunately, it only works if I put all parameters in an object. Then, when I call the function, the latter only expects one parameters instead of 3 or 4. How to fix that?

Exemple:

    interface IFoo{
    name: string;
    age: number;
    isCool: boolean;
    }
    
    function foo ({name, age, isCool}:IFoo){
    // do stuff
    }
    
    foo(""joe"", 33, true)
    // typescript will say: ""expected 1 parameter, got 3"".",How to add Interface to function parameters with Typescript?
786,2019-12-17 11:57:18,23,1,"Hi,
I'm currently consuming a French REST Api which has French fields.
Since all my client code is in English and I'm using typescript with interfaces to describe data structures, I thought I should translate these fields in English to be coherent with the code base.
What are your thoughts and what approach do you recommend?
I thought I could either replace the fields names with some sort of translating map, or I could instanciate new objects like so:
const myObject = new MyObject(frenchValues);
Obviously MyObject class would have English fields, but this also means I need to declare a class for each interface.",[AskJS] Translating rest api fields in English in the client
787,2019-12-19 03:53:58,11,1,"I'm trying to implement something similar to iterators from Rust, and got stuck. Here's the code I'm trying to get to play nicely with tsc: [https://www.typescriptlang.org/play/#code/MYGwhgzhAECSAuBTATgHgCoD5oG8BQ0h0AdogB7wBc0AFAJTQC8260APtAK7EAmiAZgEtSPJrQbMuvAcMQ8A3ASIBbMAAdqNfsU2Jq6CdgCqhuEjRHsjWv1P4iD6MkTxOyYiUQB3MygCy6loANNDwABaCEHSKDgC+SoRCIOaa2rr6pgBGAPbZIIhgxKYIKBhWNnYJjs6u7p4+JcgAYoLJKMGhEVFV8Q7AefnAVOJMLADaALpi9KO4VX3ZxBDw0GBik-NEXhH5tPDInIgM9o6n-UsrHtbhkQB0pBT0MaeOgvy0V4zW3HxCIsebF5ETLOMAAa2eQMIsWgiBAEEQcyhLzAtzUnAgYRoRUBjl6L3xpxqbg8YEh0Hi8TwoEgMAAgshkGAAJ6NMqwiiIXgwNlYJFEMCM-STcmCHhkajETjKTIocnnZYHIbZZA0QXIYUTAFAiCcNTtaK4m4QW7qsTq8kOY23MVkMQABh6VQeK2sM0kJ1Obz2XRt4ugmGuvvVt3yxAA5uFtcinC4SVJfrIFLiYXCEfzkfkVsgAG5ia3qsbW20TXFW322gDUlctL2JdVztehTqpNKgvmQATUGBClg5SG5HdQfc90EEKSHWHJqjUTR0tEF4YysyM8sWis4ytV-E0i+XkiMITUzhz1F5mGjp11+tVhqB1pnc7E-CbnTu45QYmPiBz5MJngoaZKiBBVLjzIN33Me5yHgJ5cXrDxiHAr4ExkERoAAflQv45GgagH3UOdsRzO8iEpPBqXAdtGhaNo0D5GCuR4HlzHZUcPw1SdMHJb8eEEYAwCQXdkCXaADFmHI8gKYg1wuJV4BVGheP4wS9AXET92wST8kKEIOLPVisEvRxrwNV9i3MMQOPM31lIEpAv2cPj7MQP9nRgoDZlHBYLhIfMKygl04KBb1sSYFCfjQ3C2A4ABCa07NU7E6GMoEEOwpNX1TeFEW8us4zqGSUxbCjQNWdYAEYQgAJhCABmEIABYQgAVhCAA2CZFGpdcpNDbJw2xbxoAZJlWXMNU6FuGcwskYhKwqqakgmq5sA8ABSaBqvC6x7Sm-oQEGWCUqAA](https://www.typescriptlang.org/play/#code/MYGwhgzhAECSAuBTATgHgCoD5oG8BQ0h0AdogB7wBc0AFAJTQC8260APtAK7EAmiAZgEtSPJrQbMuvAcMQ8A3ASIBbMAAdqNfsU2Jq6CdgCqhuEjRHsjWv1P4iD6MkTxOyYiUQB3MygCy6loANNDwABaCEHSKDgC+SoRCIOaa2rr6pgBGAPbZIIhgxKYIKBhWNnYJjs6u7p4+JcgAYoLJKMGhEVFV8Q7AefnAVOJMLADaALpi9KO4VX3ZxBDw0GBik-NEXhH5tPDInIgM9o6n-UsrHtbhkQB0pBT0MaeOgvy0V4zW3HxCIsebF5ETLOMAAa2eQMIsWgiBAEEQcyhLzAtzUnAgYRoRUBjl6L3xpxqbg8YEh0Hi8TwoEgMAAgshkGAAJ6NMqwiiIXgwNlYJFEMCM-STcmCHhkajETjKTIocnnZYHIbZZA0QXIYUTAFAiCcNTtaK4m4QW7qsTq8kOY23MVkMQABh6VQeK2sM0kJ1Obz2XRt4ugmGuvvVt3yxAA5uFtcinC4SVJfrIFLiYXCEfzkfkVsgAG5ia3qsbW20TXFW322gDUlctL2JdVztehTqpNKgvmQATUGBClg5SG5HdQfc90EEKSHWHJqjUTR0tEF4YysyM8sWis4ytV-E0i+XkiMITUzhz1F5mGjp11+tVhqB1pnc7E-CbnTu45QYmPiBz5MJngoaZKiBBVLjzIN33Me5yHgJ5cXrDxiHAr4ExkERoAAflQv45GgagH3UOdsRzO8iEpPBqXAdtGhaNo0D5GCuR4HlzHZUcPw1SdMHJb8eEEYAwCQXdkCXaADFmHI8gKYg1wuJV4BVGheP4wS9AXET92wST8kKEIOLPVisEvRxrwNV9i3MMQOPM31lIEpAv2cPj7MQP9nRgoDZlHBYLhIfMKygl04KBb1sSYFCfjQ3C2A4ABCa07NU7E6GMoEEOwpNX1TeFEW8us4zqGSUxbCjQNWdYAEYQgAJhCABmEIABYQgAVhCAA2CZFGpdcpNDbJw2xbxoAZJlWXMNU6FuGcwskYhKwqqakgmq5sA8ABSaBqvC6x7Sm-oQEGWCUqAA)

Everything is fine except for this:

    class Iter&lt;T&gt; {  
      ...
      map: (fn: (a: T) =&gt; U) =&gt; Iter&lt;U&gt; = (f) =&gt; {...}
      ...
    }

I need map to take return an Iter with a different generic parameter based on the return type of the function passed in, and I can't find a way to communicate this to the compiler. Right now, the last line

`new ArrayIter(a).map(n =&gt; n+1).filter(n =&gt; n % 2 === 0).collect()`

can't figure out that this is of type number\[\], since after the map() call it believes it to be of Iter&lt;any&gt; as opposed to Iter&lt;number&gt;.",Can you add generics to a class method?
788,2019-12-21 00:19:49,1,1,"So I'm new to all the bundling and minification stuff. I see options like, webpack, parcel and rollup for bundling, then tools like terser, closure, prepack, etc for minifying or optimizing code. If I use a tool like [https://github.com/theseanl/tscc](https://github.com/theseanl/tscc) to compile typescript code, do I have to still bundle my code with something like webpack? I'm hoping someone can clear the air here and explain to me what the best process is for producing optimal and efficient code.",How should I go about minifying and bundling my code?
789,2019-12-25 16:24:51,9,1,"I need to write a function in TypeScript which can round a number to 2 decimal places. For example:

123.45 =&gt; should return 123.46

123.3210 =&gt; should return 123.32

Can you identify the TypeScript function that I can use to accomplish this? Alternatively, is there is a commonly used third party library used for this, then what library and function should I use?",how to round to 2 decimal places with typescript?
790,2019-12-27 19:33:55,5,1,"I configured Typescript to work with VSCode and ESlint per this article: [https://www.robertcooper.me/using-eslint-and-prettier-in-a-typescript-project](https://www.robertcooper.me/using-eslint-and-prettier-in-a-typescript-project). Previously the project used TSLint. I changed any lines that used ""tslint-disable-next-line"" to ""eslint-disable-next-line"". This prevents the editor from complaining, but the disabled lines cause the the build to fail when I run the app. Using tslint-disable means the build succeeds, but the editor complains.

&amp;#x200B;

Am I missing something? Do I need both tslint-disable and eslint-disable statements to get a properly working setup?",ESlint with Typescript - eslint-disable not working?
791,2019-12-29 17:46:42,9,1,"I have some experience with express and react with javascript but doing this with typescript is bringing up errors I can't find a solution for online.

I keep getting errors like ""Cannot find name 'mongoose'.ts(2304)""

Do you guys know any resources/tutorials for creating a express-react project in typescript?",Any recommended resources for getting started creating an express-react app with Typescript?
792,2019-12-30 01:37:49,2,1,"I cannot find any mention of the Parameters type in the typescript documentation, can someone explain to me what purpose it has? I was looking a package and noticed they used that instead of T\[\] for spread operators and was curious why.",What is the purpose of Parameters&lt;T&gt; vs T[] for spread operators?
793,2019-12-30 16:23:40,1,1,"BDD (behavior-driven development) is an extension of TDD (test-driven development). It emphasizes writing tests specifically to test the behaviors of the application before the implementation process begins. DSLs are often used to facilitate the expression of behaviors and expected results in a format that resembles natural languages. BDD is an affective development process in dealing with complex business requirements.

## Motivation

&amp;#x200B;

https://preview.redd.it/myi9l9jvqs741.png?width=2324&amp;format=png&amp;auto=webp&amp;s=33bb4ba060820cf8acdfd3b75dba7686d8cfa1d0

A typical BDD development process begins with Epics, these Epics are then broken down into User Stories to describe the various features of the application. From User Stories, AC (Acceptance Criteria) will be listed to clearly define the behaviors and specifications of the feature. Because AC precisely defined the behaviors and test conditions for all the features of the application, they are perfect for writing into automated tests.

The emergence of Cucumber in 2008 popularized the use of BDD in software development, which had a lot of influence over other BDD tools the came after Cucumber. The core value of Cucumber is the DSL that provided a way to express behaviors and application features similar to natural languages, including the popular clauses of Given, When, and Then. However, the actual test code is often kept in ""steps"" files and are language agnostic. The implementation of the test driver relies heavily on string pattern matching to link the feature definitions implicitly to the steps, often leading to performance issues difficulties in managing the steps. As the complexity of the application grows, it is often increasingly difficult to define unique step names due to many steps sharing similar words.

From our years of BDD practice, we had found several shortcomings of Cucumber that we need to address:

1. String Pattern Matching
2. Implicit link between features and steps
3. Lacks simple ways to re-use scenarios or steps

These shortcomings eventually led to the advent of Crius.

## What's Crius

Crius is our answer to Cucumber. Let's see some example code:

    @autorun(test)
    @title('User add ${todo} item in todo list')
    class AddTodoItem extends Step {
    
      // cucumber-like example table, with JavaScript literals
      @examples`
        | todo       | object             |
        | 'learning' | { obj: 'literal' } |
        | 'crius'    | { obj: 'hello' }   |
      `
    
      //which is equivalent to:
      // @examples([{
      //     todo: 'learning',
      //     object: { obj: 'literal' }
      // }, {
      //     todo: 'crius',
      //     object: { obj: 'hello' }
      // }])
    
      run() {
    
        // JSX-like declarative feature description
        return (
          // explicit reference to actions
          &lt;Scenario desc='User login website' action={Login}&gt;
            &lt;Given desc='User navigate to todo list' action={Navigate} /&gt;
    
            { /* Allow Step class AddTodo to be used as an action to promote re-use */ }
            &lt;When desc='User type ${todo} in input field and click ""add"" button' action={AddTodo} /&gt;
            &lt;Then desc='User should see ${todo} item in todo list' action={CheckTodo} /&gt;
    
            { /* action is optional */ }
            &lt;Then desc='Just an description' /&gt;
          &lt;/Scenario&gt;
        )
      }
    }
    
    // Functional Step definition similar to Functional Components in React
    const Login = async () =&gt; {
      // actual code to perform login
    };
    
    const Navigate = async () =&gt; {
      // navigate to todo list
    }
    
    // Step is similar to React Component class
    class AddTodo extends Step {
      async run() {
        return (
          &lt;&gt;
            &lt;TypeTodoText text={this.context.example.todo} /&gt;
            &lt;SubmitTodo /&gt;
          &lt;/&gt;
        );
      };
    }
    
    const TypeTodoText = async (props) =&gt; {
      // `props.text` is the todo text.
    }
    
    const SubmitTodo = async () =&gt; {
      // click the ""add"" button
    };
    
    const CheckTodo = async (_, { example }) =&gt; {
      // check todo item
    };

## Features of Crius

* **Declarative and Expressive DSL** \- By combining DSL characteristics of Cucumber and React
* **Re-usable Step definitions** \- Provide better Step and Scenario composition
* **Step lifecycle** \- Provide lifecycle hooks to have more control over tests
* **Plugin Support** \- Allow more custom features to be easily added
* **Test Runner Agnostic** \- Compatible to Jest, Mocha, and Jasmine out of the box
* **Use JavaScript literals for examples** \- Easily define complex object in examples
* **Lightweight** \- Core source code is less than 17k

Compared to Cucumber, Crius offers the following benefits:

* **No string pattern matching** \- An explicit relationship between feature definition and test steps exist via direct reference
* **Syntax highlighting in IDE and Diff tools** \- Since the feature definitions are written in TSX or JSX
* **Extensible through lifecycle hooks and plugins** \- So you can customize the test solution to fit the project needs
* **Support static type checking (if using typescript)** \- Helps you avoid typos and/or type errors with IDE support

## Conclusion

Cucumber brought expressive DSL to BDD and popularized the practice. Crius aims to strengthen the current state of BDD by providing better composition, explicit and clear relationships between feature definitions and actions, better integration with the current generation of development tools, and better extensibility for developers to customize their workflow to their needs. We believe the introduction of Crius into our toolset will greatly enhance our developer experience in improving the overall maintainability and quality of our application and increasing the efficiency of our communications between developers, QA, and our product managers. We will continue to iterate Crius to bring in more analytic and collaborative tools to further increase our productivity and quality of our applications.

Crius Repository:

[https://github.com/unadlib/crius](https://github.com/unadlib/crius)",A new step from BDD - Crius
794,2019-12-31 01:07:14,0,1,"Hey Guys,

I'm trying to compile my react-typescript code that works on dev, into a bundle. Here is what I'm doing:

tsc -p .

&amp;#x200B;

but the issue is that it returns bellow error, multiple times and I can't find any solution for this, how can i resolve this?

""node\_modules/graphql-subscriptions/dist/pubsub-engine.d.ts:5:52 - error TS2583: Cannot find name 'AsyncIterator'. Do you need to change your target library? Try changing the \`lib\` compiler option to es2015 or later.""",Weird production error
795,2019-12-31 12:37:38,4,1,"So I know that tslint is being deprecated in favor of supporting the typescript parser/plugin for eslint. Ive only used tslint in the past for typescript, although I have experience with eslint with normal JavaScript.

So, if I'm starting a new project, is it recommended to stick with tslint now or to migrate to the new eslint ts process?",Should I use tslint or eslint with the new typescript parser/plugin
796,2020-01-01 00:05:29,12,1,"The monthly thread for people to post openings at their companies.

* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.

* Please only post if you personally are part of the hiring company—no recruiting firms or job boards **Please report recruiters or job boards**. 

* Only one post per company. 

* If it isn't a household name, explain what your company does. Sell it.

* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).


Commenters: please don't reply to job posts to complain about something. It's off topic here.

Readers: please only email if you are personally interested in the job. 

[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)",Who's hiring Typescript developers - January
797,2020-01-02 01:24:54,4,1,I'm integrating with a soap API and I was wondering if anyone knew of a jaxws-esque soap client/model generator for typescript. My googlefu isn't giving back any useful results.,XSD type generator/soap client generator
798,2020-01-02 10:21:26,13,1,"So basically, I want to bundle and compile my projects from typescript using tsickle and closure compiler, however some libraries I'm using are not written in typescript, but javascript. They do have type defs. I could just compile them separately with simple\_optimization level if I have to, but would prefer to compile and bundle everything together with the closure compiler using advanced\_optimization.","This is probably a dumb question, but can I compile js files as if it were typescript if I have type defs?"
799,2020-01-02 15:49:11,5,1,"Our component library has JS and TS consumers so we’d need to support both. Most of the examples I see using the InferProps symbol are a little simple/contrived. I was wondering if anyone has experience using it on a larger component library. 

I’ve also seen the Babel plugin, and would be curious to hear any opinions on it as well.",Anyone use typescript with prop-types to support JS and TS consumers of a component library?
800,2020-01-02 19:32:18,6,1,"I'm a student and have experience with vanilla javascript, react, and recently angular. After using angular, I'm pretty sure typescript will eventually become the norm, so I want to start picking it up. I think I get the gist of it since it's not so different from javascript, but I'm having trouble figuring out when I should use type annotation.

&amp;#x200B;

I tried just using it always, but it felt a bit redundant. I also tried using it only when the type is not obvious, but that's a bit subjective. Is there some sort of style guide or rules for this? Thanks.",When should I use type annotation?
801,2020-01-03 02:47:35,6,4,"Hi! I'm hoping this is the right place I can ask this question. I really like types and have gotten used to using typescript at work. I'm looking to work on a personal project where I generate high quality images programmatically (which in this case means pixel by pixel). Maybe if I actually get this off the ground it'll become clear what I mean.

Anyway, I'm seeing lots of libraries/npm packages online that talk about image manipulation (resizing, overlaying with text, etc) and ones that care about doing this on the web (like canvas). ~~If any of these are good for my use, it seems like it'd be at best by accident.~~ (Edit: To be clear, I don't think these are what I want but they are all I've been able to find.) Anyway, I'd like to be able to generate images that are of high enough quality to print. The point is looking the best over speed. Does anyone know of such a library?

Good typing would be a huge plus in my book.

Thanks so much for any advice!",Looking for a library to generate images
802,2020-01-03 07:35:30,18,11,,"Blogged Answers: Years in Review, 2018-2019 · Mark's Dev Blog - Story of redux and typescript"
803,2020-01-04 12:27:47,22,4,"Hi 👋 **Problem**:  I'm using es2015 modules, and targeting web browsers. When I move .ts files in VSCode, the updated module import paths will not have a .js suffix. E.g.: I had a module reference:

* ""/js/event.js"", upon move to a new directory, the reference was update to
* ""/js/util/event""

In other [VSCode extention](https://github.com/stringham/move-ts.git)s to move and refactor files they also seem to use no suffix. I'm using IIS or the *python -m http.server* command to test my code, and these seem to have no easy way to automatically rewrite all /thing to /thing.js.

What am I missing? The servers don't seem to like the syntax VSCode gives, yet I find no way to change the settings so the refactoring retains the .js suffix. Are modules generated by typescript usually not served as .js? If so, what servers should I be using?

Sorry for the broad scope of this question, but it's causing me some issues. I've searched for the answer and also tried rewrite rules.

\---

**Update**: seems there is no easy way to alter this refactoring behavior, but using webpack might be a solution, and one that does not require a large build pipeline and loads of dependencies. Thanks guys!

**Update 2**: the following webpack command makes debugging work as well, though you get the .js source maps instead of the .ts `webpack --entry .\js\main.js -o library.js --mode development --watch --devtool source-map`","Module suffixes problem - VSCode refactoring/servers not using "".js"" ?"
804,2020-01-05 10:05:46,13,4,I am trying to learn redux but almost everything is using Raw javascript. is there any resource which teaches redux with typescript (free or paid)?,Resources to learn Redux with Typescript
805,2020-01-06 14:45:14,11,1,"Hej Typescript people. :)

I need to override an existing type of a property. How can i achieve this?

I've made an codesandbox example: [https://codesandbox.io/s/typescript-playground-export-u2203](https://codesandbox.io/s/typescript-playground-export-u2203)

At the end, the test prop should accept strings and numbers.",How can i override a property type of a merged type?
806,2020-01-11 05:37:36,1,1,"I have created a REST API using nodeJs with typescript, MongoDB and express framework. Anyone lean to this pattern Please check my Github repo. Here is a link [https://github.com/devbinod/nodewithmongo.git](https://github.com/devbinod/nodewithmongo.git?fbclid=IwAR1bNwcfdYA8hlrJ2ZFJ0VlEQzrK1tC7mR_Y63Se9_TVpTNC4OGawdtm8zs). If anyone wants to give suggestion create an issue on GitHub. Thanks.","REST API using nodeJs with typescript, MongoDB and express framework."
807,2020-01-13 20:15:34,2,1,"I'm implementing typescript into my project for the first time and I have an error coming from `onPress`  
 which calls `toggleModal`. The error seems to be coming from the `newDate` function when the values `year, month, day` are passed. I have typed newDate as a Date with let newDate:Date.

&amp;#x200B;

According to the [React Native docs](https://facebook.github.io/react-native/docs/datepickerandroid), DatePickerAndroid.open() does the following:

&gt;Returns a Promise which will be invoked an object containing action, year, month (0-11), day if the user picked a date. If the user dismissed the dialog, the Promise will still be resolved with action being DatePickerAndroid.dismissedAction and all the other keys being undefined.

Can someone clarify if the error is coming from the following and how to fix it?

* The promise DatePickerAndroid.open() since it the response may or may not be returned
* Where I typed newDate:Date and since I'm passing it number values as year, month, day
* Do I need to type onPress as a function with onPress: Function?

**Error**

    src/DatePicker.tsx:56:39 - error TS2345: Argument of type 'number | undefined' is not assignable to parameter of type 'number'.  Type 'undefined' is not assignable to type 'number'.
              let newDate:Date = new Date(year, month, day);
                                             ~~~~
    src/DatePicker.tsx:109:25 - error TS2769: No overload matches this call.  Overload 1 of 2, '(props: Readonly&lt;TouchableOpacityProps&gt;): TouchableOpacity', gave the following error.    Type '(props: Props) =&gt; Promise&lt;void&gt;' is not assignable to type '(event: GestureResponderEvent) =&gt; void'.      Types of parameters 'props' and 'event' are incompatible.        Type 'GestureResponderEvent' is missing the following properties from type 'Props': title, onPress, onValueChange, mode  Overload 2 of 2, '(props: TouchableOpacityProps, context?: any): TouchableOpacity', gave the following error.
        Type '(props: Props) =&gt; Promise&lt;void&gt;' is not assignable to type '(event: GestureResponderEvent) =&gt; void'.
    
    &lt;TouchableOpacity onPress={toggleModal} style={styles.fieldTextContainer}&gt;                            ~~~~~~~  node_modules/@types/react-native/index.d.ts:4836:5
        onPress?: (event: GestureResponderEvent) =&gt; void; ~~~~~~~
        The expected type comes from property 'onPress' which is declared here on type 'IntrinsicAttributes &amp; IntrinsicClassAttributes&lt;TouchableOpacity&gt; &amp; Readonly&lt;TouchableOpacityProps&gt; &amp; Readonly&lt;...&gt;'  node_modules/@types/react-native/index.d.ts:4836:5
    
    onPress?: (event: GestureResponderEvent) =&gt; void;             ~~~~~~~    The expected type comes from property 'onPress' which is declared here on type 'IntrinsicAttributes &amp; IntrinsicClassAttributes&lt;TouchableOpacity&gt; &amp; Readonly&lt;TouchableOpacityProps&gt; &amp; Readonly&lt;...&gt;'

**Types**

    // TypeScript: Types
    interface Props {
      title: string,
      onPress: Function,
      onValueChange: Function,
      mode: 'calendar' | 'spinner' | 'default',
      minDate?: Date | number;
      maxDate?: Date | number;
    }
    
    interface AndroidProps {
      action: 'dateSetAction' | 'dismissedAction',
      newDate?: Date;
      year?: number;
      month?: number;
      day?: number;
    }

**toggleModal**

      // Toggle Modal
      const toggleModal = async (props: Props) =&gt; {
        try {
          // Check Platform (iOS)
          if (Platform.OS === 'ios') {
            // React Hook: Toggle Modal
            toggle((modalVisible) =&gt; !modalVisible);
          }
    
          // Check Platform (Android)
          if (Platform.OS === 'android') {
            const { action, year, month, day } : AndroidProps = await DatePickerAndroid.open({
              date: date,
              mode: props.mode,
            });
    
            // Action: Date Set
            if (action === DatePickerAndroid.dateSetAction) {
              // New Date
              let newDate:Date = new Date(year, month, day);
    
              // Select Date
              selectDate(newDate);
            }
    
            // Action: Dismissed
            if (action === DatePickerAndroid.dismissedAction) {
              // Do Nothing
            }
          };
        }
        catch (error) {
          console.log(error);
        }
      };

**DatePicker.tsx**

          &lt;TouchableOpacity onPress={toggleModal} style={styles.fieldTextContainer}&gt;
            &lt;Text style={styles.fieldText} numberOfLines={1}&gt;{date ? moment(date).format('MMM Do, YYYY') : 'Select'}&lt;/Text&gt;
    
            &lt;Icon name=""ios-arrow-forward"" size={22} style={styles.arrowForward}/&gt;
          &lt;/TouchableOpacity&gt;",Typescript Error: onPress with Promise returned typing
808,2020-01-15 13:17:26,1,1,"Hello,

im getting an error while running a bit complex tests in jest. When I try very primitive test its without an error.

&amp;#x200B;

 With the same settings I am able to run tests on another project.. any idea?

error message: 

`Test suite failed to run`

`Call retries were exceeded`

packages are in devDependencies:

`""devDependencies"": {`  
 `""@types/async"": ""^3.0.3"",`  
 `""@types/cron"": ""^1.7.1"",`  
 `""@types/express"": ""^4.17.2"",`  
 `""@types/jest"": ""^24.0.25"",`  
 `""@types/mongodb"": ""^3.3.14"",`  
 `""@types/node"": ""^13.1.6"",`  
 `""@types/request"": ""^2.48.4"",`  
 `""@types/supertest"": ""^2.0.8"",`  
 `""jest"": ""^24.9.0"",`  
 `""supertest"": ""^4.0.2"",`  
 `""ts-jest"": ""^24.1.0"",`  
 `""ts-node"": ""^8.6.1"",`  
 `""typescript"": ""^3.7.4""`  
    `}`

test code with error:

`const supertest = require('supertest');`  
`const server = require('./index').default;`  
`describe('GET /health', () =&gt; {`  
 `it('fictious source returns 200', (done) =&gt; {`  
 `supertest(server)`  
            `.get('/suppliers/health')`  
            `.set('Accept', 'application/json')`  
            `.expect(200)`  
            `.end(function(err: Error) {`  
 `if (err) return done(err);`  
 `done();`  
            `});`  
    `});`  
`});`",JESTJS with nodejs error
809,2020-01-16 13:15:42,1,1,"I started to test my logic skills in CodeWars, but CodeWars don't accept latest version of ecma. There is a way to my eslint or typescript shows me a warning or error when I write a function or somethint that doesn't exist or is not accepted in ecma6?

&amp;#x200B;

To answer curiosity I'm using VSCODE.",[Help] ECMA6 + VScode
810,2020-01-17 23:21:22,1,1,"Did you know barrel 🛢️ files in ES6 and it helps you to organize your imports of module in your Javascript or Angular projects? Know more herehttps://youtu.be/2MI_GqVBZDM
#rupeshtiwari #fullstackmaster #javascript #typescript #es6",What is Barrel File in ES6
811,2020-01-18 06:17:25,4,1,"Hello:  
I am using **lite server** to watch and run my code.  
However, each time I make a code change to a typescript file nothing happens, the only time the browser refreshes is when I make changes to the index.html file.

To see any updates I have to stop **lite server,**  compiled the code and then run the server again.

I attempted watching the code with **tsc --watch** but I have to run the code on a server.  


Are there solutions where you can run a server which compile on any code change and update the browser?",Is it possible to Compile and Update the Browser at the same time?
812,2020-01-20 05:04:24,8,1,"Hi everyone,

I'm considering learning Typescript as I'm hearing lots of great things about it however my dilemma is that I'm half way through a React Native project, are there any downsides to using Typescript for only part of you code base instead of the entire project?

I should mention that if I like typescript I would consider rewriting the code base overtime

Thanks!","Question, considering learning Typescript"
813,2020-01-20 13:24:20,8,1,[removed],typescript in a nodejs project starter
814,2020-01-21 22:38:37,18,1,"Hey beautiful people!

I just ported my project (react native) over to typescript but dont get the hang when to use **type and when to use interface**

I looked at some examples, but just added to the confusion, because apparently both have their place but i cannot figure it out

Could you tell me on a high level the difference between these two and if you have expereicne with React/React-Native where to use which?

&amp;#x200B;

Thanks a lot!",Type vs Interface (React/React-native)
815,2020-01-22 07:10:31,14,1,"Hi All

Is there a easy way for us to extend the language of typescript?  adding my own syntax?

thanks

Peter",Is there a easy way for us to extend the language of typescript
816,2020-01-22 17:16:11,0,1,[https://stackoverflow.com/questions/59865000/typescript-object-is-possibly-null-window-open](https://stackoverflow.com/questions/59865000/typescript-object-is-possibly-null-window-open),PUBLIC Stack Overflow Tags Users Jobs TEAMS What’s this? Free 30 Day Trial TypeScript: Object is possibly 'null'. window.open
817,2020-01-22 17:29:58,9,1,"I was wondering if anyone happens to know if what I am trying to achieve is even possible.

What I have in regular Javascript is the following:

    let functions = {
        add: (state, x, y) =&gt; state + x + y,
        subtract: (state, x) =&gt; state - x,
        decrement: (state) =&gt; state - 1,
        increment: (state) =&gt; state + 1,
    };
    
    function wrapper(func) {
        return (...args) =&gt; func(5, ...args);
    }
    
    function wrapObject(obj) {
        const newFunctions = {};
        Object.keys(obj).map(key =&gt; {
            newFunctions[key] = wrapper(obj[key]);
        });
        return newFunctions;
    }
    
    const newFunctions = wrapObject(functions);
    
    newFunctions.add()

The idea is simple. You have an object with functions that all have state as the first argument. I want to create a new object where I return the same functions except where the state is injected. In the above example it's just the number 5 that's always injected but that's beside the point. I achieve this by simply looping over the keys and returning an object with those keys and the values wrapped in a wrapper function.

The problem with this code is that the editor doesn't know what parameters the function add (or any of them) takes. I would like to keep this intact so I figured I would use typescript.

I came up with the following:

    type Dictionary = { [key: string]: (state: number, ...args: any[]) =&gt; any }
    type StateFunction = (state: any, ...args: any[]) =&gt; any
    type OmitFirstParam&lt;T&gt; = T extends (state: number, ...args: infer P) =&gt; any ? P : never;
    type NewFunction&lt;T&gt; = T extends (state: number, ...args: infer P) =&gt; any ? (...args: P) =&gt; void :  never;
    type NewDictionary&lt;T&gt; = T extends { [key: string]: infer F } ? { [key: string]:  NewFunction&lt;F&gt;  } : never;
    
    
    let functions = {
        add: (state: number, x: number, y: number) =&gt; state + x + y,
        subtract: (state: number, x: number) =&gt; state - x,
        decrement: (state: number) =&gt; state - 1,
        increment: (state: number) =&gt; state + 1,
    };
    
    
    function wrapper&lt;T extends StateFunction&gt;(func: T): (...funcArgs: OmitFirstParam&lt;T&gt;) =&gt; void {
        return (...args) =&gt; func(5, ...args);
    }
    
    
    function wrapObject&lt;T extends { [key: string]: (state: number, ...args: any[]) =&gt; any }&gt;(obj: T): NewDictionary&lt;T&gt; {
        const newFunctions: any = {};
        Object.keys(obj).map(key =&gt; {
            newFunctions[key] = wrapper(obj[key])
        });
        return newFunctions;
    }
    
    
    const newFunctions = wrapObject(functions);
    
    newFunctions.increment();

the code in [typescriptlang playground](https://www.typescriptlang.org/play/?ssl=32&amp;ssc=26&amp;pln=1&amp;pc=1#code/C4TwDgpgBAIglgY2HA9gOwIYCcRQLxQDeUA2gNYQgBcUAzsFnGgOYC6NAFPRsBDWgFcAtgCMIWADRQAdLOzNaNDGhAlWASnwA+KMtwBfALAAoUJCgBlYDwgAxAWiSo0+KF2u8lKqbOnzFuipqmng6eiZm0ADyQnDAtnBY9AAK2BhCADwAKjoEWVAQAB68aAAmtG7cnlCCouI+clgKNEwAZuJQySFhKlAA-J1Q-BAAbuIA3BHg0AByEADu9o7I6Nm5UPlFJeWVHnw1wmKSMo3NUG0dXdqBuAMcvv40V6FQIyhwpUNQNaMTU+ZzebwJzobAgNauTbFCBlCrEciUGj0RgsdjnNDtLBQWxQfT9IikCjUOgMJhsGhQQFLEFoDK2HS4r5oX5YSbGEwmAA2EGAUFaDhpFQIhBM32+GFKpU4VX2tSOUkK-EO9SgxLl4m6JJsUAA1FBCrrVRJRWLaAIRAwMEhpXslXVjoqDvbNTKoABafXG4xiqClCAILAQIQw4A2mx2o4uvbuqAARi9PqYAaDIbD1XVWCj2r18ZM+jZHOM-OWzig8ywGDAkCw2QK0Nhlj21JWaC0HGLCBoWXUnF8HYAgk0AjE4gkksBUhXMjlNW8PkQTd9A8ABFgXPdTrRNR2OABWBp+IfqNlGdlnjstssVsBREQAK39wFrWxhO3hRKRpNRadlyuODyHLxVA0a49FxNsUHvLse0pBZgRbMEIRFb0xQQdB6B+RYBRbAIwOFfNFygW8HyQaQiVoDhILvdRpCESsOCJa5kJ9H1mSwkt0IREBWFcctK2rSj7y4jRCP0Y9COXVcXDY5tnFoE9CxMNC0AwmTsLk3jr2Ix923U9DxLPNSOJU6Qk0DYM0GADhjyAA)

It almost works. It correctly realizes that the state parameter is not needed anymore but it thinks that every function takes the same arguments namely x and y. What I think is going wrong is that typescript has to pick one function for the type `key: string]: (state: number, ...args: any[]) =&gt; any` and uses that to build the Dictionary type that I created.

I have a feeling it's not possible.",TypeScript generic higher order functions
818,2020-01-22 21:31:08,2,1,[removed],cloudpaint photo tech demo in typescript
819,2020-01-23 22:20:25,5,1,"&amp;#x200B;

https://preview.redd.it/6xjpi8f6slc41.png?width=913&amp;format=png&amp;auto=webp&amp;s=65540e7469a6f7abe5ed0facb700e0ade505db77

Type inference has always stumped me, leaving me to use explicit types in generics. I finally figured it out!

&amp;#x200B;

[The dropdown includes values that are all fields in the \`data\` array passed to \`useSearchItems\`.](https://preview.redd.it/hoc218ubslc41.png?width=760&amp;format=png&amp;auto=webp&amp;s=ba41378ccf7732168eadb5b97e2294e9a71b57fe)

If there are any experts on how typescript's \`infer\` keyword works, I think it could make for a super useful Medium article.",I finally understand how to infer types!
820,2020-01-24 17:25:22,2,1,"Hey!

I just ported my react-native project to typescript and have a question about functions as props

im passing:

`&lt;DisplayCardsWithLikes`  
 `data={testData}`  
 `likes={500}`  
 **onPress={() =&gt; this.props.navigation.navigate(""CardDetailScreen"")}**  
 `/&gt;`

&amp;#x200B;

to 

`type Props = {`  
 `onPress: Function`  
`}`

&amp;#x200B;

`const FloatingActionButtonSimple = (props:Props) =&gt; {`  
 `const {onPress} = props`  
 `return (`  
 `&lt;View style={styles.containerFab}&gt;`  
 `&lt;TouchableOpacity style={styles.fab} onPress={onPress}&gt;`  
 `&lt;Icon name=""plus"" size={16} color={""white""} /&gt;`  
 `&lt;/TouchableOpacity&gt;`  
 `&lt;/View&gt;`  
  `);`  
`};`

&amp;#x200B;

So nothing crazy, but if i define onPress as a function it doesn't work. Does anybody of you have an idea on how to do it with types?

Thanks a lot!",Question: React onPress function type
821,2020-01-25 15:01:34,15,1,"Hi all,

&amp;#x200B;

I'm a little confused as to why the compiler is letting me get away with the following code. I would normally be expecting a noImplicitAny error inside of the catch param. Please note, this is also happening for the 'then' block - I have just chosen to manually type it.

&amp;#x200B;

I understand on a basic level that's it to do with the return type of request, and that typescript is doing some inference under the covers, but could someone explain why in this case you wouldn't be forced to explicitly type it? Could you explain on a deeper level what is happening? How do I fix this? What other scenarios does this happen in?

&amp;#x200B;

I'm using the axios types inside of their index.d.ts module, so there doesn't appear to be a nice way to get around this. This is obviously a problem in a shared codebase. As you can see in the 'catch' block, I can basically do anything I want at compile time. Obviously at runtime, the response.couldLiterallyHaveAnything here obviously won't exist - and IMO should be something I can pick up at compile time (if you were forced to type it).

&amp;#x200B;

Code sandbox: [https://codesandbox.io/s/typescript-playground-export-lrwfn?fontsize=14&amp;hidenavigation=1&amp;theme=dark](https://codesandbox.io/s/typescript-playground-export-lrwfn?fontsize=14&amp;hidenavigation=1&amp;theme=dark)

&amp;#x200B;

Code snippet:

    import axios, { AxiosError, AxiosRequestConfig, AxiosResponse } from 'axios';
    
    export const APIService = {
      getAll: async () =&gt; {
        const requestConfig: AxiosRequestConfig = {
          method: 'get',
          url: `someUrl`,
        };
    
        //Why is the compiler letting me have untyped/implicit anys as shown in catch block
    
        return axios
          .request(requestConfig)
          .catch((response) =&gt; Promise.reject(response.couldLiterallyHaveAnythingHere))
          .then((response: AxiosResponse) =&gt; response.data.result);
      },
    };",Why does TS consider this code valid?
822,2020-01-29 22:01:01,0,1,,How to add types to javascript with typescript
823,2020-01-29 22:25:46,0,1,,How to add types to javascript with typescript
824,2020-01-31 13:30:58,1,1,"Been thinking to switch from a frontend developer to backend and recently got a job offer as Java/Spring developer. 

I've already studied the types and the different data structures present in Java. 

Although I would really want to come prepared and was wondering if any of you guys had a similar experience and could give me any tips on what concepts I should focus on to be able to progress faster without overlapping with existing typescript concepts and best practices?",Moving from typescript to java
825,2020-01-31 13:53:10,4,1,"Hi. I have a type A with several properties which can be of different keys: strings, numbers, types B, irrelevant. I want to copy over certain fields from object a1 being type A to object a2, that is also of type A, but I do not know in advance which fields i want to copy over. The fields that I want to copy over I get in an array of string literals which tell me which field i want to copy.   
I do not understand how to ""type"" this correctly..

Example on codesandbox: [https://codesandbox.io/s/typescript-playground-export-fjol9](https://codesandbox.io/s/typescript-playground-export-fjol9)  


https://preview.redd.it/sk2k3apwc4e41.png?width=738&amp;format=png&amp;auto=webp&amp;s=9dd30a17952037ccb437a9a0b4887fe080029d30",Need help with dynamic properties
826,2020-02-01 00:05:18,7,1,"The monthly thread for people to post openings at their companies.

* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.

* Please only post if you personally are part of the hiring company—no recruiting firms or job boards **Please report recruiters or job boards**. 

* Only one post per company. 

* If it isn't a household name, explain what your company does. Sell it.

* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).


Commenters: please don't reply to job posts to complain about something. It's off topic here.

Readers: please only email if you are personally interested in the job. 

Posting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)

[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)",Who's hiring Typescript developers - February
827,2020-02-03 13:17:46,31,1,,"Is there demand for a ""typescript"" php? Any thoughts on how it could be done?"
828,2020-02-05 21:05:01,7,1,,"Tip: type npx typescript-react , to bootstrap a starter application"
829,2020-02-06 08:32:05,0,1,"I'm working on a web app in a Node-ish environment where the input for `POST` data comes in a `req.body` object. I've come up with the following (elegant, I think) way of both checking that the `POST` variables are valid while also inferring them in the code:

- `extract` is the function that does the extraction by taking `req.body` as a parameter and a definition object that is a mapping of the field name to a type narrowing function (such as the commonplace `isString` -- also found in the [TypeScript documentation](https://www.typescriptlang.org/docs/handbook/advanced-types.html#typeof-type-guards));

    const {shouldBeString} = extract(req.body, {
        shouldBeString: isString,
    });
    
    // hover here to see that the right type is inferred
    type ShouldAlsoBeString = typeof shouldBeString;

The code that makes this happen is the following:

    type Narrower&lt;T&gt; = (v: unknown) =&gt; v is T;
    type Narrowed&lt;P&gt; = P extends Narrower&lt;infer X&gt; ? X : never;
    type Definition = { [k: string]: Narrower&lt;any&gt; };
    type Extracted&lt;T&gt; = { [P in keyof T]: Narrowed&lt;T[P]&gt; }
    
    const extract = &lt;T extends Definition&gt;(obj: { [k: string]: unknown }, def: T): Extracted&lt;T&gt; =&gt;
        Object.entries(def).reduce((result, [field, isRightType]) =&gt; {
            const value = obj[field];
            if (!isRightType(value)) {
                throw Error(`Invalid value for field ${field}`);
            }
            return ({...result, [field]: value});
        }, {} as Extracted&lt;T&gt;);
    
    // hover here to see that the right type is inferred
    type ShouldBeString = Narrowed&lt;typeof isString&gt;;

What do you think? Any suggestions as to naming? Code style? Anything else?

Thanks!",Verifying and inferring type
830,2020-02-06 09:08:52,9,1,"I have a junior developer who sometimes needs examples how to use typescript properly. I'm a full .NET developer and I love my Visual Studio. I can create a new TS file with code highlighting and even proper intellisense to demonstrate code snippets. It would be perfect if I could interactively execute these snippets too without setting out the whole webpage or switching IDE. I mean, it runs the whole npm / ts engine when I open up the file, it must be possible to execute it somehow? 

What I'm looking for are C#-, F#- and Python-like interactive windows.

Has anyone got it working under full Visual Studio IDE?",How to execute TS code in Visual Studio (full IDE)?
831,2020-02-06 10:45:05,6,1,"I'm just getting started with typescript and what I'd like to achieve is to export/build a single ES6 module from all files with just typescript. It seems like typescript can do that for AMD or system but I didn't find a way to do it with ES6. Is this not possible? Tbh, that would be a dealbreaker for me. I want to avoid webpack and rollup because they add unnecessary overhead.",Create single ES6 module?
832,2020-02-06 11:41:52,7,1,"I want to try using typescript within a browser context but I haven't really found what is the best way to set-up such a project. I'm mainly having trouble with what I should do with npm downloaded packages, I'm using PHPStorm so the typescript compiling itself is handled.",How do I setup a Typescript project?
833,2020-02-06 20:12:50,10,1,"Hi there, i'd really like to use the cool new features like optional chaining..

I followed the npm i instructions from the blog

 [https://devblogs.microsoft.com/typescript/announcing-typescript-3-8-beta/](https://devblogs.microsoft.com/typescript/announcing-typescript-3-8-beta/) 

however after it downloaded, tsc -- version still says i'm on Version 3.6.4

And the compiler still complains about optional chaining... do you know how to fix this?

Thanks much!",TypeScript Beta for using Optional Chaining
834,2020-02-07 10:38:57,0,1,,What is typescript and how to use it in applications?
835,2020-02-07 11:41:10,6,1,"Hi, everyone I'm somewhat kinda new to typescript but not oblivious to JavaScript, What I'm wanting to do (if possible) is wanting to combine my 3+ .ts files when it transpiles / compiles I would like for it to be in one .js file using the modular pattern.",Could use a little help
836,2020-02-08 16:21:11,0,1,,clean-code-typescript
837,2020-02-09 03:41:04,8,1,"I'm new to TypeScript, so this is probably a stupid question.  I'm working on a discord bot, and I have each command in its own file.  I have a function that loads all of the commands by looping through all of the files in my ""commands"" directory.  I also created a simple `BotCommand` interface I'm trying to use.

1) In my command file, if I type `const cmd: BotCommand = {}`, TypeScript complains that `cmd` doesn't properly implement the `BotCommand` interface.  That's helpful, but it doesn't offer an option to auto-complete the object; I have to type all of the property names manually.  This leads me to believe I'm using interfaces improperly, because if this was an intended use there would be an auto-complete option, I think.

2) There's nothing that says I *have* to use my `BotCommand` interface in my `command.js` files.  I could just say `module.exports = {}`, and typescript would be okay with that.  This would probably cause problems when my load function loads the command, because it assumes `require('./commands/cmd')` will return a `BotCommand`.  Is there some way to make sure all of my source files in the `./commands` directory to export objects that implement the`BotCommands` interface?

A command file looks like this:

    import {BotCommand} from ""./MyTypes"";  // BotCommand is an interface that describes what a BotCommand should have
    
    const cmd: BotCommand = {
        name: ""cmdname"",
        aliases: [""altname1"", ""altname2""], 
        description: ""does something"",
        usage: ""&lt;args&gt;""
        run: function(msg) {/*stuff*/}
    }
    
    module.exports = cmd;

My load commands function looks similar to this:

    import {promises as fs} from ""fs"";
    
    async function loadCmds() {
        const files = (await readdir(""./commands"")).filter(fname =&gt; /\.js$/i.test(fname));
        const cmds = new Map();
        files.forEach(file =&gt; {
            const cmd: BotCommand = require(`./commands/${file}`);
            cmds.set(cmd.name, cmd);
        });
        return cmds;
    }",I think I'm doing everything wrong and need a bit of guidance.
838,2020-02-09 23:36:35,14,1,"Hi does anyone know of an [typescript-eslint](https://github.com/typescript-eslint/typescript-eslint) rule to disallow implicit any?

I know there is a rule to disallow *explicit* any, but I am wondering if there is a rule for disallowing implicit any?

Example:

    // instead of this:
    let s;
    
    // I want to force the use of a type here.. like this:
    let s: string;
    
    // disallowing explicit any solves this:
    let s: any;
    
    // but not this:
    let s;

Thank you!!",typescript-eslint no implicit any rule?
839,2020-02-10 09:56:03,1,1,"```javascript
const f = (a) =&gt; [a * 2] 
const g = (b) =&gt; [b * 4]
const bind = (mOfV, apply) =&gt; apply(mOfV[0])
const composed = (v) =&gt; f(bind([v], g))
```

Am I understanding this correctly? Please ignore the fact, that this could be better expressed with typescript.

so ```f``` is ```a -&gt; Ma```
```g``` is ```b -&gt; Mb```

```bind``` is ```Ma -&gt; b -&gt; Mb -&gt; Mb``` (kind of)

I feel like im off in some application thing but close to the truth.","Could anyone assure, or correct me about monadic binding?"
840,2020-02-10 12:35:16,0,1,,Learn typescript with examples
841,2020-02-10 21:26:38,7,2,"Hello typscript community! I have a question. Is there anyway for typescript to conditionally match types? I have the following dynamic react component, and I want **parameters** to be set based on the **type** property in the **SidebarProps** interface. Currently I can only escape an error by passing **any** to parameters which is obviously not ideal.

```typescript

type T = keyof typeof components;

type propertiesMap = {
  default: any;
  job: AddEditJobsProps;
  customer: AddEditCustomersProps;
};

interface SidebarProps {
  type: keyof typeof components,     
  parameters: propertiesMap[T] | any; 
} 

const components = {
  default: Loading,   
  job: AddEditJobs,   
  customer: AddEditCustomers 
}; 

export default function Sidebar(props: SidebarProps) { 
  const { open, toggle } = useToggle(); 
  const SelectComponent = components[props.type]; 

  return ( 
    &lt;RightSidebar open={open} toggleDrawer={toggle}&gt; 
      &lt;SelectComponent {...props.props} /&gt; 
    &lt;/RightSidebar&gt; 
  ); 
}
```",Conditional types for a dynamic React component in Typescript?
842,2020-02-11 18:11:06,0,1,,Redux Controllers -&gt; Less verbose Redux for people who love typescript - State Observables | State Subscriptions | State Watchers | Async Actions | Inbuilt Caching | React | Angular | Node | Redux Effects | Provided States
843,2020-02-11 18:13:19,0,1,,Redux Controllers -&gt; Less verbose Redux for people who love typescript
844,2020-02-11 18:27:47,0,1,,Redux Controllers -&gt; Less verbose Redux for people who prefer typescript - State Observables | State Subscriptions | State Watchers | Async Actions | Inbuilt Caching | React | Angular | Node | Redux Effects | Provided States
845,2020-02-12 06:15:40,0,1,,How to define and use variables in typescript?
846,2020-02-12 06:42:12,0,1,"I've been using interfaces to type incoming data because, unlike classes, I can just declare the incoming data to be that interface.  This works great until I need methods.

So, I then try to implement the interfaces to add methods.  What I don't like though is I have to repeat all the property declarations, which increases maintenance, and potential breaks of they are not in the same library.

Is there a way to do this w/o repeating the property declarations?

Here is an example:

    export interface PositionI&lt;I extends InstrumentI&gt; {
      ""shortQuantity"": number,
      ""averagePrice"": number,
      ""currentDayProfitLoss"": number,
      ""currentDayProfitLossPercentage"": number,
      ""longQuantity"": number,
      ""settledLongQuantity"": number,
      ""settledShortQuantity"": number,
      ""instrument"": I,
      ""marketValue"": number,
    }

```typescript
export class Position&lt;I extends InstrumentI | OptionI&gt; implements PositionI&lt;I&gt; {
    public shortQuantity: number;
    public averagePrice: number;
    public currentDayProfitLoss: number;
    public currentDayProfitLossPercentage: number;
    public longQuantity: number;
    public settledLongQuantity: number;
    public settledShortQuantity: number;
    public instrument: I;
    public marketValue: number;

  constructor(
    position?: PositionI&lt;I&gt;
  ) {
    if (position)
      ObjectUtilities.copy(position, this);
  }

  public get quantity() {
    return this.longQuantity - this.shortQuantity;
  }
  public get settledQuantity() {
    return this.settledLongQuantity + this.settledShortQuantity;
  }
}
```",Less interface implementation boilerplate
847,2020-02-12 11:13:21,0,1,"I'm having a problem implementing the correct generics for a function interface.

The interface contains type parameters both in the interface name and calling function:

&amp;#x200B;

\`\`\`

interface Pipeline&lt;Final = {}&gt; {

&lt;T0, T1&gt;(step1: Step&lt;T0, T1&gt;): Step&lt;T0, T1 &amp; Final&gt;;

&lt;T0, T1, T2&gt; (step1: Step&lt;T0, T1&gt;, step2: Step&lt;T1, T2&gt;): Step&lt;T0, T2 &amp; Final&gt;;

...

}

\`\`\`

&amp;#x200B;

I'm not sure how to implement this. Here's a broken solution:

&amp;#x200B;

\`\`\`

const pipeline: Pipeline&lt;Final&gt; = &lt;Final&gt;(...steps: Step&lt;any, any&gt;\[\]) =&gt; {

return (data: any) =&gt; {

for (const step of steps) {

data = step(data)

}

return data

}

}

\`\`\`

&amp;#x200B;

such that I can do:

&amp;#x200B;

\`\`\`

pipeline&lt;P2Output&gt;(s1, s2)

\`\`\`

&amp;#x200B;

The context is that I'm trying to use fancy generics for validating pipelines of steps.

See the full example before adding the \`Final\` type parameter on the playground \[here\]([http://www.typescriptlang.org/play/?ssl=8&amp;ssc=55&amp;pln=8&amp;pc=52#code/C4TwDgpgBAysFgDwEkB2AaKB5ArsAfFALxQAUAlqmHgFxRoCUxhaUAZNngLABQvl8AE4AzAIYBjaAAVykADaVoAb15Q1URABUADJk0BGfKQDO8MPrpwEW3VAP4Glszb2GA3KvUu7+vQCZCEzMLWGcdV3xMUwQ-J2sDfwc4pHC7AI8eAF9eXnEAe1RTKDBZCAVUCDoZeUViMgA6RuiwY2TEPIAjACsIcWBMTp6+-ABtAF0mIkIVHnUoQQhgHEFUMgATUWBROlFUEEnpzzm1YTzBMnzC4ChmqDzhG7NjJhnjt6gNrbrm0k-RBiOx2ys3eCyWKw+m1EgOBwP4qCEYkksH0aGo11e6m2j0ElAA5rw4TwBBARBJoDB9LhgOioJi1B06KZcagCVkcjxLkVjCErEhKWi8JhKdT0YQSBQqHgDmQlFBGvVKOjMIyoEq8PVRFAANRQADkHT1UEyAL4xIRpKRFL8goxgNVzPxhI5JLJyJgflFeDpgPEsRxTvZZq512M-r5iA9tuFnrwYrqkvRMtIcoV6v6UD9dHT9Q6Ov14iNJo5IeK+jqJRqFRM+lNuQKRTAfgrpXKEBrUT8DCAA](http://www.typescriptlang.org/play/?ssl=8&amp;ssc=55&amp;pln=8&amp;pc=52#code/C4TwDgpgBAysFgDwEkB2AaKB5ArsAfFALxQAUAlqmHgFxRoCUxhaUAZNngLABQvl8AE4AzAIYBjaAAVykADaVoAb15Q1URABUADJk0BGfKQDO8MPrpwEW3VAP4Glszb2GA3KvUu7+vQCZCEzMLWGcdV3xMUwQ-J2sDfwc4pHC7AI8eAF9eXnEAe1RTKDBZCAVUCDoZeUViMgA6RuiwY2TEPIAjACsIcWBMTp6+-ABtAF0mIkIVHnUoQQhgHEFUMgATUWBROlFUEEnpzzm1YTzBMnzC4ChmqDzhG7NjJhnjt6gNrbrm0k-RBiOx2ys3eCyWKw+m1EgOBwP4qCEYkksH0aGo11e6m2j0ElAA5rw4TwBBARBJoDB9LhgOioJi1B06KZcagCVkcjxLkVjCErEhKWi8JhKdT0YQSBQqHgDmQlFBGvVKOjMIyoEq8PVRFAANRQADkHT1UEyAL4xIRpKRFL8goxgNVzPxhI5JLJyJgflFeDpgPEsRxTvZZq512M-r5iA9tuFnrwYrqkvRMtIcoV6v6UD9dHT9Q6Ov14iNJo5IeK+jqJRqFRM+lNuQKRTAfgrpXKEBrUT8DCAA))

And the broken solution after adding the \`Final\` type parameter \[here\]([http://www.typescriptlang.org/play/?ssl=48&amp;ssc=38&amp;pln=48&amp;pc=12#code/C4TwDgpgBAysFgDwEkB2AaKB5ArsAfFALxQAUAlqmHgFxRoCUxhaUAZNngLABQvl8AE4AzAIYBjaAAVykADaUIiAGKVRc4lADeAX0JbeUI1EQAVAAyZTARnykAzvDDW6cBGctQb+Bq6cera3YoVVR1fABuQ2MAr2srACZCBycXWH8LQPxMRwQEv3cbRJ8CpEyvBODQ8KieHV5ecQB7VEcoMFkIBVQIOhl5RRU1OUISIbCR0gA6Gdywe1LEUVQQTGWQfABtAF0mIn1oo0EIYBxBVDIAE1FgUTp1vYOeYxeoYSbBMmbW4Cg5qCawj+TnsTAMz1ekOut00c1I0NEDEOr3qEMhx1O5ygCORqNR-FQQjEklg1jQ1F+4Jed2BgkoAHNePieAIICIJNAYNZcMAKdpkQAjOiOOmoRl1Bo8b5texpNxILnkvCYLk8imjMiUCmPMhaKAzKZa5VQIVQI3AKaiKAAaigAHIBXaoDokXwWYS2cTOQklZTBcLgKLxczWeySTAEmq8Py0VBxAGg0zJdLfvZ8ul3BHfSrI3h1ZoKFQ8DrSHqDebMPGzUWLQKbfbxE6XZLQ16oFJuXno1TjKaRQyk26U+0giQOgMeogO1GCA5rK6CUSOe3c7zu-7aQPY1X+2LB40Wm0wJUx51ukopKv1XOcgkGEA](http://www.typescriptlang.org/play/?ssl=48&amp;ssc=38&amp;pln=48&amp;pc=12#code/C4TwDgpgBAysFgDwEkB2AaKB5ArsAfFALxQAUAlqmHgFxRoCUxhaUAZNngLABQvl8AE4AzAIYBjaAAVykADaUIiAGKVRc4lADeAX0JbeUI1EQAVAAyZTARnykAzvDDW6cBGctQb+Bq6cera3YoVVR1fABuQ2MAr2srACZCBycXWH8LQPxMRwQEv3cbRJ8CpEyvBODQ8KieHV5ecQB7VEcoMFkIBVQIOhl5RRU1OUISIbCR0gA6Gdywe1LEUVQQTGWQfABtAF0mIn1oo0EIYBxBVDIAE1FgUTp1vYOeYxeoYSbBMmbW4Cg5qCawj+TnsTAMz1ekOut00c1I0NEDEOr3qEMhx1O5ygCORqNR-FQQjEklg1jQ1F+4Jed2BgkoAHNePieAIICIJNAYNZcMAKdpkQAjOiOOmoRl1Bo8b5texpNxILnkvCYLk8imjMiUCmPMhaKAzKZa5VQIVQI3AKaiKAAaigAHIBXaoDokXwWYS2cTOQklZTBcLgKLxczWeySTAEmq8Py0VBxAGg0zJdLfvZ8ul3BHfSrI3h1ZoKFQ8DrSHqDebMPGzUWLQKbfbxE6XZLQ16oFJuXno1TjKaRQyk26U+0giQOgMeogO1GCA5rK6CUSOe3c7zu-7aQPY1X+2LB40Wm0wJUx51ukopKv1XOcgkGEA)).

The second example is trying to extend the first to be able to specify what the final pipeline output should be in case you missed a step that no other step depends on. Currently I'm doing this by just adding a step for doing the typechecking but I'd rather not have the extra step just for typechecking if I can do the typechecking another way.",How to do advanced generics in function interface
848,2020-02-16 14:29:11,11,1,"Hello! So figured i was going to try and learn typescript by doing a frontend project in react and typescript. As i was setting up dev dependencies it hit me that, as far as i understand, the typescript compiler both transpiles and bundles your code. My question is: what role does tools like Babel and Webpack play when you are developing frontend with typescript?",Frontend build tools and typescript
849,2020-02-16 18:56:46,22,1,"I'm playing around with typescript just on the command line and am confused as to why the following compiles without any type errors.  If I deliberately type my mapper to use the same generic for input and output but then make use of it with an input and output of *different* types, shouldn't it fail to compile?  


`function map&lt;T&gt;(array: T[], f: (item: T) =&gt; T): T[] {`  
  `let result = []`   
  `for (let i = 0; i &lt; array.length; i++) {`  
`result[i] = f(array[i])`  
  `}`  
   `return result`  
`}`

`const arrayOfInts = [1,2,3]`

`function makeString(item) {`  
  `return== \`${item}\`;`  
`}`

`let mapped = map(arrayOfInts, makeString);`

`console.log(mapped)`",Typescript Generics - why doesn't this throw an error?
850,2020-02-16 19:30:42,0,1,[https://itnext.io/fun-with-functors-in-typescript-2c3268853d69?source=friends\_link&amp;sk=722004cc2e378b41a5a211f47a882432](https://itnext.io/fun-with-functors-in-typescript-2c3268853d69?source=friends_link&amp;sk=722004cc2e378b41a5a211f47a882432),Blog: Fun with Functors in TypeScript
851,2020-02-16 21:01:33,12,1,"When asked what features he regretted integrating into the language Anders Hejlsberg mentioned ``namespace`` invoking the fact that it was made deprecated by the ECMAScript module system.

This came as a shock to me as I am making extensive use of ``namespace``.
I do not see how ECMAScript module can replace namespace, using module imply splitting the code into different files.


Consider this example:
```typescript
export type Person = Person.Student | Person.Teacher;

export namespace Person {

    export type Common_ = {
        name: string;
        age: number;
    };

    export type Student = Common_ &amp; {
        type: ""STUDENT"";
        grades: {
            maths: number;
            compSci: number;
        };
    };

    export namespace Student {

        export const match = (person: Person): person is Student =&gt;
            person.type === ""STUDENT"";

        export const getAverageScore = (student: Student) =&gt;
            (student.grades.compSci + student.grades.maths) / 2;

    }

    export type Teacher = Common_ &amp; {
        type: ""TEACHER"";
        subject: ""MATH"" | ""COMP-SCI"";
    };

    export namespace Teacher {

        export const match = (person: Person): person is Teacher =&gt;
            person.type === ""TEACHER"";

    }

}

{

    const logPerson = (person: Person) =&gt;
        console.log([
            person.name,
            Person.Student.match(person) ?
            `is a student, averageScore is: ${Person.Student.getAverageScore(person)}` :
            `is a ${person.subject} teacher`
       ].join("" ""))
       ;


    const teacher: Person.Teacher = {
        ""type"": ""TEACHER"",
        ""age"": 53,
        ""name"": ""Bob"",
        ""subject"": ""MATH""
    };

    //Prints: ""Bob is a MATH teacher""
    logPerson(teacher);

}
```

I see many advantages to structuring the code types definition this way.  
First I can just import { Person } and get all the type hierarchy.  

If I do not put ``Student`` and ``Teacher`` in the ``Person``'s namespace nothing tells me that they are a subset of ``Person``.  

When I need a function that I know to be tightly coupled with a type I can easily find it and it doesn't matter if I don't remember exactly its name, IntelliSense will guide me to ``Person.Student.getAverageScrore(student)`` but if I define ``getStudentAverageScore(student)`` I will have to remember in which file I have defined it and Intellisense won't be of any help to find it.  

At last, when I am browsing to my code if I don't care about the type ``Person`` and everything that is related to it I can simply fold its namespace.  


Maybe my approach is not sound there is an obviously better design pattern?
What do you guys think about namespaces?",Why are namespaces regarded as deprecated?
852,2020-02-17 05:37:36,19,1,,swc is a typescript / javascript compiler. It's 20x faster than babel.
853,2020-02-17 18:09:54,3,1,"Given the following code:

&gt;interface Contract&lt;T&gt; {  
}  
class Deal&lt;D&gt; implements Contract&lt;D&gt; {  
}  
class Agreement&lt;A&gt; implements Contract&lt;A&gt; {  
}  


I would have expected this not to compile:

&amp;#x200B;

&gt;let deal:Contract&lt;number&gt; = new Deal&lt;number&gt;()  
let agreement:Contract&lt;string&gt; = new Agreement&lt;string&gt;()  
&gt;  
&gt;  
// expects this to not compile  
agreement = deal;

or this

&gt;let deal:Deal&lt;number&gt; = new Deal&lt;number&gt;()  
let agreement:Agreement&lt;string&gt; = new Agreement&lt;string&gt;()  
&gt;  
&gt;  
// expects this to not compile  
agreement = deal;

But they both compile!

Here is a playground link [https://www.typescriptlang.org/play/index.html?ssl=17&amp;ssc=18&amp;pln=17&amp;pc=26#code/JYOwLgpgTgZghgYwgAgMIHtxUWAPAFQD5kBvAKAF8yyEAbOAZweQBEI5bcXjgBbAB1oReEcMwxYcXYuSo16TZAEEA5lAjDReJTwFCRYtJjDYE2mZWpCwyACbtaALgkmpIAK68ARtGIBeZBAIAHdWB1wPb18ACgBKMmtkODUNAzBnY1M8BhNQFX9AkOUUzXBcHKg8wjjqAHpa5AgAD34IM2YwAAtgDvRA9BsEdAFgITJk9VKbAPsOAG46hsTZpzYOCM8fKAKg0LXOSK3q+PrkRInUrUdVSbTy3JB85ADd4tute8rH48XkU+bWu1kF0esC+uBkEMRmNThcps87A45kA](https://www.typescriptlang.org/play/index.html?ssl=17&amp;ssc=18&amp;pln=17&amp;pc=26#code/JYOwLgpgTgZghgYwgAgMIHtxUWAPAFQD5kBvAKAF8yyEAbOAZweQBEI5bcXjgBbAB1oReEcMwxYcXYuSo16TZAEEA5lAjDReJTwFCRYtJjDYE2mZWpCwyACbtaALgkmpIAK68ARtGIBeZBAIAHdWB1wPb18ACgBKMmtkODUNAzBnY1M8BhNQFX9AkOUUzXBcHKg8wjjqAHpa5AgAD34IM2YwAAtgDvRA9BsEdAFgITJk9VKbAPsOAG46hsTZpzYOCM8fKAKg0LXOSK3q+PrkRInUrUdVSbTy3JB85ADd4tute8rH48XkU+bWu1kF0esC+uBkEMRmNThcps87A45kA)

I would have expected that a Generic&lt;A&gt; is not the same as Generic&lt;B&gt; and the compiler should not allow assigning one to the other. What am I missing here?",No compile check for generics?
854,2020-02-17 21:41:55,2,1,"Hello! I wanted to share a blog post I wrote, [Typescript Namespace Tricks](https://www.gatlin.io/blog/post/typescript-namespace-tricks?utm_source=reddit&amp;utm_medium=link&amp;utm_campaign=1-blog-post), about ways to use Typescript Namespaces that I wish I knew back when I first started writing Typescript. I hope you enjoy :D",Typescript Namespace Tricks
855,2020-02-19 20:29:52,2,1,"I have a variety of records that look like this:
```typescript
{
   id: string;
   fields: number[];
   field1: Record&lt;string, unknown&gt;;
}

{
   other_id: string;
   more_fields: number[];
   field2: number
}
```

I'm trying to set the typing on a function where you pass the property name of the `number[]` field to the function so it knows where to grab the numbers from.

Something like:
```typescript
function sum_fields&lt;T, K extends keyof T &amp; number[]&gt;(obj: T, field: K): number {
  let sum = 0;
  obj[field].forEach((i: number) =&gt; {
      sum += i;
  });
  return sum;
}
```

How can I tell typescript that the property name I'm passing in has the type number[], and/or can I get typescript complain if the type of field is *not* number[]?","Trying to set type for single, dynamic property of indexed type"
856,2020-02-20 06:50:55,12,1,"Hello all,  


I am starting with Typescript and I would like to disable ESLint for JS files, my .eslintrc.json contains the following:  


\`\`\`

""parser"":  ""@typescript-eslint/parser"",  
 ""extends"": \[  
 ""airbnb"",  
 ""prettier"",  
 ""prettier/react"",  
 ""plugin:jsx-a11y/recommended"",  
 ""plugin:jest/recommended"",  
  ""plugin:@typescript-eslint/recommended""  
    \],  
 ""overrides"": \[  
      {  
 ""files"": \[""\*.js"", ""\*.jsx""\],  
 ""rules"": {  
 ""@typescript-eslint/..."": ""off""  
        }  
      }  
    \],  
\`\`\`  
But I continue getting eslint messages due to ""plugin:@typescript-eslint/recommended"". Any help with this please?  


Thank you in advance and regards.",How do I disable ESLint typescript for JS files?
857,2020-02-20 14:39:06,0,1,"Thanks for the enhancement by [topce](https://github.com/topce)

Here are 3 simple steps to generate TypeScript Angular 9 client given an OpenAPI spec (e.g. [Petstore API](https://raw.githubusercontent.com/OpenAPITools/openapi-generator/master/modules/openapi-generator/src/test/resources/2_0/petstore.yaml)):

1. Download the Java JAR (Snapshot) ([https://oss.sonatype.org/content/repositories/snapshots/org/openapitools/openapi-generator-cli/4.3.0-SNAPSHOT/openapi-generator-cli-4.3.0-20200220.141445-113.jar](https://oss.sonatype.org/content/repositories/snapshots/org/openapitools/openapi-generator-cli/4.3.0-SNAPSHOT/openapi-generator-cli-4.3.0-20200220.141445-113.jar))
2. Rename the JAR as ""openapi-generator-cli.jar""
3. Run the following command to generate a TypeScript Angular 9 client for the Petstore API ([https://raw.githubusercontent.com/OpenAPITools/openapi-generator/master/modules/openapi-generator/src/test/resources/2_0/petstore.yaml](https://raw.githubusercontent.com/OpenAPITools/openapi-generator/master/modules/openapi-generator/src/test/resources/2_0/petstore.yaml)):

Mac/Linux:

\- java -jar openapi-generator-cli.jar generate -g typescript-angular -i [https://raw.githubusercontent.com/OpenAPITools/openapi-generator/master/modules/openapi-generator/src/test/resources/2\_0/petstore.yaml](https://raw.githubusercontent.com/OpenAPITools/openapi-generator/master/modules/openapi-generator/src/test/resources/2_0/petstore.yaml) \-o /var/tmp/typescript-angular/

Windows:

\- java -jar openapi-generator-cli.jar generate -g typescript-angular -i [https://raw.githubusercontent.com/OpenAPITools/openapi-generator/master/modules/openapi-generator/src/test/resources/2\_0/petstore.yaml](https://raw.githubusercontent.com/OpenAPITools/openapi-generator/master/modules/openapi-generator/src/test/resources/2_0/petstore.yaml) \-o C:\\tmp\\typescript-angular

To generate an older version of TypeScript Angular client, use `ngVersion`. For example, to generate Angular 8 client:

```
java -jar openapi-generator-cli.jar generate -g typescript-angular -i [https://raw.githubusercontent.com/OpenAPITools/openapi-generator/master/modules/openapi-generator/src/test/resources/2\_0/petstore.yaml](https://raw.githubusercontent.com/OpenAPITools/openapi-generator/master/modules/openapi-generator/src/test/resources/2_0/petstore.yaml) \-o /var/tmp/typescript-angular/ --additional-properties ngVersion=8
```

For any questions/feedback, please let us know via [https://github.com/OpenAPITools/openapi-generator/issues/new](https://github.com/OpenAPITools/openapi-generator/issues/new)

Ref: https://github.com/OpenAPITools/openapi-generator/pull/5370",OpenAPI Generator now supports Angular
858,2020-02-21 22:11:08,26,1,,redturn.ts - Event-based/Queueing redis mutex lock in typescript
859,2020-02-22 15:53:14,7,1,"https://www.typescriptlang.org/play/index.html?target=99&amp;module=1&amp;ts=3.8-Beta#code/JYOwLgpgTgZghgYwgAgGIHt3IN4ChkHIBGcUAXMgBQAeFIArgLZHQCUyAvAHzIDOYUUAHN8hEgC8KlAJ4V+gkEPbdkDZtFwBfXLhj0QCMMHQhkMADwBpZBGqQQAE17IA1hGnoYaTF0oxMFBjoADTIjBBgABboDhSWoQB0SQAOpHCMvBQACmnhkFC85kEA2pYAulysFABu6MAOOKIE-ujFedEOZZRJCalQ6bysANxaQA

Any ideas why this doesn't work? Reproducing the code below:

```
interface Foo {
  bar: (x: number) =&gt; string
  baz: (y: string) =&gt; number
}

function f&lt;K extends keyof Foo&gt;(foo: Foo, method: K, ...params: Parameters&lt;Foo[K]&gt;): void {
  foo[method](...params);
}
```

Should be fairly obvious what I'm trying to do here, but I want to be able to pass a `Foo` object in and call it's method `method` with the correct parameters.",Calling a function generically by name... not sure why this doesn't work
860,2020-02-22 18:58:50,0,1,,redturn.ts - Event-based/Queueing redis mutex lock in typescript
861,2020-02-23 22:05:13,7,1,"I am thinking about the best way my app can deal with classic programming design problems like the following:

https://www.typescriptlang.org/play/?ssl=1&amp;ssc=1&amp;pln=69&amp;pc=89#code/PQKhFgCgAIWgxArgOwMYBcCWB7ZBDAGylmCk2XQFMAnAMz1UugGUBHRPapgb2OgGtyAEwBc0AEQBndp0riA3H0mYAXpTHJEAWwBGNRZAC+ZCjXqNoAJUoY8yAOYEefQclESuth04V8A7phC6AAWGtp61AbQ0MGUmPbB6GG6+lDGkFDoAJ4ADkzMwXh50AC8LDJc0AA+Vjbodo6UBlC0KBg4yNCyeAAUkmIFRZQAlNC8MNCSAeiowdB9AHSuQqPj0dGoeJJMUhVyInzr0FzoiNSdkgvKarCTV6pNh9Cb2x51DT4HE0cnZxcLsXiiVulwCQWCUWg6XSUFQuEk6EmewGe1KYwEwjEuw4XHEABpJg8xABGAAMUIMcOQCOO7286lqXkaaO4GLcWM89Xp+OgYJCJNJBMBCSS0AATOTDM1IN0+nthvJoMBgNAyaSoLLOR8RorleLSeqMpBQBAYHAAPLmgAKxBApEg5CodAY+UKeQAogAPPBaHJOMZ8eyUdAAQS4vWGyQiBhhkFQBC2knKOMo5uQTEwvqcWkoFCTgw93qzzgmVIR1EQGGw1B6OWomAAbngqIS1FGaKt0tEcogdARMKhoEHQ+Geqsnr9ztAQphLtcmHAZ3OHpDoVBYQnJEnrEynGmM8Wc3mWG7KF6fX6Sxt4egK1Wa3XG82mHzQtBNClqATH02W8LEu21CdnwPZ9gOQ7BmGlARgG3y0qcU5Lgsr63Eh-7oKuaTrnGN5IimxJoumfjJrI+49GSCqwrhWr0gRZREYyXKNGRZIEhKlGQNI+ELMOUERrqKpqlANGNMSPGQaOCrQEAA

I have done some research, and this was the best quote on the subject I could find, but it was not specific to TypeScript:
https://softwareengineering.stackexchange.com/questions/367510/sum-types-vs-polymorphism

&gt; ""It is important to recognize that interfaces and unions are kind of the opposite of each other: an interface defines some stuff the type has to implement, and the union defines some stuff the
&gt; consumer has to consider. If you add a method to an interface, you have changed that contract, and now every type that previously implemented it needs to be updated. If you add a new type to a union, &gt; you have changed that contract, and now every exhaustive pattern matching over the union has to be updated. They fill different roles, and while it may sometimes be possible to implement a system 
&gt; 'either way', which you go with is a design decision: neither is inherently better.""


When you compile away the TypeScript the discriminated union version is about a third of the size, but I am not sure it 'feels as good' as the OOP version. Maybe I have missed an optimization? (I know the discriminated union exhaustive pattern matching with never trick too, but left that out of the example for a more direct comparison)

What do you make of these two, I can't decide which I like best.",OOP Polymorphism vs Discriminated Unions. When and why would you use them? Example included.
862,2020-02-24 07:13:24,31,1,"Hello all,

I have started to port my Redux code to Redux Toolkit as it is the recommended way from the Redux community and also I have started converting my code into TS, however I am struggling with the below code:

[https://codesandbox.io/s/redux-toolkit-with-typescript-1ks8s](https://codesandbox.io/s/redux-toolkit-with-typescript-1ks8s)  


Particularly,  typescript-eslint complains about ""Missing return type on function"" on the reducers functions as well as the action creators i.e.  loginLocalUser  


I have tried to several things but unsuccessfully.   


Anyone has done something similar by any chance?  


Thank you in advance and regards.",Has someone used TS with Redux Toolkit?
863,2020-02-24 17:00:37,1,1,"I've written about some of the advanced types I use most. Those are - union types, nullable types, and type aliases.

I'm sharing here hoping that someone finds it useful.

https://www.ksharifbd.com/blog/typescript/typescript-advanced-types-with-examples/",TypeScript advanced types with examples
864,2020-02-25 02:32:41,12,1,"Relevant: https://www.reddit.com/r/typescript/comments/b8fphq/routing_with_typescript_decorators_for_node/

I'm looking for ways on `express` to make my controller life a little bit easier because the way I've been using it so far has been very verbose in nature. I've read that the decorator pattern solves that but I don't get what `reflect-metadata` has to do with it. Is it simply a convenience tool to get things done faster?

I've read the post and I've run the source code ([it's in GitHub](https://github.com/nehalist/ts-decorator-routing), by the way), but I still don't see why I shouldn't simply shoehorn the route parameters into the constructor as properties without using `Reflect.getMetadata` / `Reflect.hasMetadata` / `Reflect.defineMetadata` to read / write / check. I've experimented the code to not use `reflect-metadata` and it still works.

Could someone explain this to me, preferably like I'm five?",Why is reflect-metadata so important in the decorator pattern?
865,2020-02-25 04:07:46,4,1,,I feel like it’s hard to learn typescript without first learning a framework line angular or react. Is there anyone out there who learned type script without first learning a framework? If so how and why?
866,2020-02-25 18:35:04,14,1,"I was looking for something like this but could find nothing that fitted. The goal is to be a reference when looking things up with great examples that only demonstrate the syntax and problem/solution, not a load of other stuff which tends to be the case in blog examples.

Once I am happy with it I will create an attractive formatted PDF to print and have that as a link too.

I have taken examples from mainly the official docs and various blog posts by some great authors including quite a bit of Marius Schulz.

The other goal is to try and include only what most people would need, and omit any old ways of doing things, so it is quite opinionated like that. 

In my personal TS journey this is all the stuff I have needed and wanted a reference to come back to, especially with easy to understand examples. Obvious things are left out:

[https://github.com/David-Else/modern-typescript-with-examples-cheat-sheet](https://github.com/David-Else/modern-typescript-with-examples-cheat-sheet)

Feedback and pull requests very welcome, especially factual corrections!",Modern Typescript with Examples Cheat Sheet
867,2020-02-25 20:10:13,4,1,"Hi I tried to deploy to netlify a React TS app. The problem is that no of my css go built, I was using Styled-components together with typescript, is thier anything I should do before i build my project? Thank you all!",CSS not loaded
868,2020-02-25 20:26:45,3,1,"As the title says, I’m trying to bundle a typescript app with webpack using ts-loader. I have several other typescripts module as dependencies which are declared in tsconfig.json paths section. Tsc works great. When using webpack and tsconfig-paths-webpack-plugin, those modules are treated as external and are not bundled (with the message no static exports). If I’m importing them using a relative path, then their transpiled code is added into the bundle. Is there a way to add their code to the bundle without changing every import in the project to a relative path?",Serverside typescript bundling with webpack
869,2020-02-26 06:25:48,5,1,"tsparticles - Resurrecting particles.js

Hi all,

I'm resurrecting the old particles.js, updated and converted to typescript. I've implemented some new features and fixes requested by users on the old project.

[https://www.npmjs.com/package/tsparticles](https://www.npmjs.com/package/tsparticles)",tsParticles - Resurrecting particles.js
870,2020-02-27 06:04:23,0,1,,"When are we getting annotations/decorator/attributes in PHP... almost every language have this these days. typescript, python, java, c#, modern frameworks, next.js, flask you name it.. meanwhile we're stuck with doc comment because i don't know why.."
871,2020-02-27 06:10:56,12,1,,"When are we getting annotations/decorator/attributes in PHP... almost every language have this these days. typescript, python, java, c#, modern frameworks nest.js, flask you name it.. meanwhile we're stuck with doc comment because i don't know why.."
872,2020-02-27 16:30:04,0,1,,Curveball - A typescript micro framework with native AWS support
873,2020-02-27 16:32:38,1,1,,"Curveball - a modern typescript microframework, with built-in support for AWS Lambda"
874,2020-02-27 18:59:09,3,1,,"Curveball - a modern typescript microframework, with built-in support for AWS Lambda"
875,2020-02-28 07:23:29,0,1,,Curveball — A typescript microframework with first class AWS Lambda and HTTP/2 Push support
876,2020-02-28 07:31:00,1,1,"Hello hovering over a variable holding `Cntr` shows me a summary of the types. Does anyone know a way to show me the complete doc. Thanks

&amp;#x200B;

note: you can suggest me any other tool too",How can I get the full typescript doc for a variable in webstorm?
877,2020-02-28 10:50:42,0,1,,Node js application using typescript
878,2020-02-28 20:25:29,7,1,"Hi guys!

The library is still very young and is under heavy development, but getting feedback during this phase is crucial in my opinion.

Website and docs: [https://www.rosebox.dev/](https://www.rosebox.dev/0.1.4)

Github: [https://github.com/hugonteifeh/rosebox](https://github.com/hugonteifeh/rosebox)

Progress  of next release: [https://github.com/hugonteifeh/rosebox/projects/1](https://github.com/hugonteifeh/rosebox/projects/1)",Rosebox a functional typescript library for styling
879,2020-02-28 22:41:26,3,1,"Hi,

I'm struggling with some very basic things like importing packages I installed with NPM. I honestly tried googling it a lot, and tried out different tutorials, but I can't get it to work. Here is my current setup, trying with gulp, I guess I'm missing something quite basic..

&amp;#x200B;

&amp;#x200B;

I installed (e.g. webmidi via npm) and my folder structure looks like this:

    proj
    +--node_modules
        +--module1
        +--module2
        +--webmidi
    +--dist
    +--src
        +--main.ts
        +--index.html
    

&amp;#x200B;

My Gulpfile looks like this:

    var gulp = require('gulp');
    var webmidi = require('webmidi');
    var browserify = require('browserify');
    var source = require('vinyl-source-stream');
    var tsify = require('tsify');
    var paths = {
        pages: ['src/*.html']
    };
    
    gulp.task('copy-html', function () {
        return gulp.src(paths.pages)
            .pipe(gulp.dest('dist'));
    });
    
    gulp.task('default', gulp.series(gulp.parallel('copy-html'), function () {
        return browserify({
            basedir: '.',
            debug: true,
            entries: ['src/main.ts'],
            cache: {},
            packageCache: {}
        })
        .plugin(tsify)
        .bundle()
        .pipe(source('bundle.js'))
        .pipe(gulp.dest('dist'));
    }));
    

&amp;#x200B;

main.ts:

    import * as webmidi from ""webmidi"";
    
    console.log(WebMidi);

package.json:

    {
      ""name"": ""ts4"",
      ""version"": ""1.0.0"",
      ""description"": """",
      ""main"": ""./dist/main.js"",
      ""scripts"": {
        ""test"": ""echo \""Error: no test specified\"" &amp;&amp; exit 1""
      },
      ""author"": """",
      ""license"": ""ISC"",
      ""devDependencies"": {
        ""browserify"": ""^16.5.0"",
        ""gulp"": ""^4.0.0"",
        ""gulp-require-modules"": ""^1.1.4"",
        ""gulp-typescript"": ""^6.0.0-alpha.1"",
        ""tsify"": ""^4.0.1"",
        ""typescript"": ""^3.8.2"",
        ""vinyl-source-stream"": ""^2.0.0""
      },
      ""dependencies"": {
        ""webmidi"": ""^2.5.1""
      }
    }
    

and tsconfig.json:

    {
        ""files"": [
            ""src/main.ts""
        ],
        ""compilerOptions"": {
            ""noImplicitAny"": true,
            ""target"": ""es5""
        }
    }
    

&amp;#x200B;

The error I get when i do

    &gt;gulp
    [23:36:55] Using gulpfile ~\Documents\Projekte\code\ts4\gulpfile.js
    [23:36:55] Starting 'default'...
    [23:36:55] Starting 'copy-html'...
    [23:36:55] Finished 'copy-html' after 39 ms
    [23:36:55] Starting '&lt;anonymous&gt;'...
    [23:36:57] '&lt;anonymous&gt;' errored after 2.21 s
    [23:36:57] Error: TypeScript error: c:/users/username/documents/projekte/code/ts4/src/main.ts(4,13): Error TS2304: Cannot find name 'WebMidi'.
        at formatError (C:\Users\muellert\AppData\Roaming\npm\node_modules\gulp-cli\lib\versioned\^4.0.0\format-error.js:21:10)
        at Gulp.&lt;anonymous&gt; (C:\Users\muellert\AppData\Roaming\npm\node_modules\gulp-cli\lib\versioned\^4.0.0\log\events.js:33:15)
        at emitOne (events.js:121:20)
        at Gulp.emit (events.js:211:7)
        at Object.error (C:\Users\username\Documents\Projekte\code\ts4\node_modules\undertaker\lib\helpers\createExtensions.js:61:10)
        at handler (C:\Users\username\Documents\Projekte\code\ts4\node_modules\now-and-later\lib\mapSeries.js:47:14)
        at f (C:\Users\username\Documents\Projekte\code\ts4\node_modules\once\once.js:25:25)
        at f (C:\Users\username\Documents\Projekte\code\ts4\node_modules\once\once.js:25:25)
        at tryCatch (C:\Users\username\Documents\Projekte\code\ts4\node_modules\async-done\index.js:24:15)
        at done (C:\Users\username\Documents\Projekte\code\ts4\node_modules\async-done\index.js:40:12)
    [23:36:57] 'default' errored after 2.26 s

According to  [https://github.com/djipco/webmidi/issues/82](https://github.com/djipco/webmidi/issues/82)  this is the right way to import WebMidi, and it should work - i guess I'm doing something wrong, can anyone help me?",How to get started with gulp/browserify and npm
880,2020-03-01 12:39:15,1,1,"Hi guys, I wanted to use MaterialUI components with NestJS, and also wanted to use Typescript and wanted to be able to test it with Jest. 

Setting up all of these requires quite some time and effort. I managed to make it work all together and open sourced it for those who wants to use these technologies together.

Here is the repo, feel free to comment and collaborate.

[https://github.com/mehmetsefabalik/next-typescript-materialui-jest-starter](https://github.com/mehmetsefabalik/next-typescript-materialui-jest-starter)",NestJs Boilerplate with Typescript MaterialUI and Jest
881,2020-03-03 22:33:24,6,1,"This is my favorite feature in Typescript. Does it exist in Kotlin? Is it called something else?

[https://www.typescriptlang.org/docs/handbook/advanced-types.html#conditional-types](https://www.typescriptlang.org/docs/handbook/advanced-types.html#conditional-types)","Does Kotlin have (or plan to have) ""Conditional Types""?"
882,2020-03-04 00:22:51,1,1,"Building a web app is hard. Building a production-grade app with a high Developer Experience is even harder. Configuring all must-needed frameworks and libraries is quite a challenge, and takes weeks, if not months of hard work.

Monitoring, analytics, reusable styles (css-in-js), graphql, i18n, testing, end-to-end testing, deployment pipeline (CI/CD), typescript, serverless... All these things are must-haves in 2020, and making them all work together is another challenge.

That's why we released [https://github.com/UnlyEd/next-right-now](https://github.com/UnlyEd/next-right-now), a boilerplate to help get started with all that. Though opinionated, it's flexible enough to adapt to your own needs. The goal is to get started with a production-grade setup in a couple of hours, instead of a couple of weeks (at the very least).

There are so many tools in the JS ecosystem now that one must have an opinion on what's good-enough and what isn't. It takes time to compare all css-in-js libraries, and that's just one tiny choice one must do to build isomorphic/universal web applications nowadays.

Next Right Now will help you get started quickly, and can also be used as a great learning resource, because we've documented about everything.

You want to build your own blog? An e-commerce website? Some showcase web app? NRN can help, from development to production.

And, it's flexible. Because you will not agree with all our opinions, and that's fine. Just get rid of what you don't like, as simple as that.

Let us know what you like/dislike!","Next Right Now - Flexible production-grade boilerplate for building web apps (monorepo), with Next.js, Zeit and TypeScript"
883,2020-03-04 06:53:42,4,1,"Project is compiled to target ES5, no Babel. I polyfill promises for IE11 via whatwg-fetch (and others with core-js)

The problem is that debugging async functions results in a lot of stepping through awaiter functions and gets tiresome. 

I'd like for the typescript compiler to transform the async functions to good ol promises. Is this even possible? 

I've found that __generator [can be swapped out](https://www.typescriptlang.org/v2/en/tsconfig) with my own implementation, but there's not really any examples of this.",Can tsc compile async functions to Promises instead of generators?
884,2020-03-04 08:31:35,7,1,"The Eval type can perform basic arithmetic, comparisons, conditionals (if expresions), define local variables and lambda expressions.

e.g. this type `_` ""evaluates"" to `16` at compile time.

```
export type _ = Eval&lt;
  [Let, 'square', [Lambda, X, [X, '*', X]], ['square', 4]]
  &gt;;
```

[Typescript Playground](https://www.typescriptlang.org/play/#code/PTAEBUE8AcFMFoAysBusA2oCSA7ALrAOawBOoAsgIZ4AWoAljhDLAM4DGJ90eAUCKHhDhI0WPET4-YNNBzQAPlAAxAPZkAwpXTsArulU4A5KwYBbM+rzbQrVfoA0oQrranasUDl1mARqWwjM1BaRgBrRkJQVQAzWXklOSFQACVVX1U8UAARVHp0aXi5JQAichKixXlkgAUafPRuUAApADoVEkhCgRr0WEpWTwATQyMs3UGQ+tNGUGgSVSHddjx6Q1AACixQdkpjLPozSkJGTwB3GmpQSHsjIdAR2TP6WgY8Vo-QGPoAD1gh+CsegAL3+oDQK3UrAA-ABKN4mUB7UCwH5wLhmWD4BhMGiqM6gMzLOhnTy7HCyXY6fTUTxXSghFjwPpoTCzPAsDhcHitbpgADqsCMJE8IvmbCxqxwUUYBGIJFMAy8bAI90oJBIlEgrCcF1IngABgAtUiqA0Mdw0TywMw8SBIjVa2R7e4AagAjBbQGKRYN8GDfPazproNBIkimLKiAFZntMlayCyMNEYqBfJr2GFYHhWLyQLINuBpqALqo+oTFvpPPRTL4BvQqeh7cisexFuHYqAANpwOMOl40TGrdgAXQ2NDweGgrAAXCAsa1nhE4EN6JRWupCMAl-RgDV+jhVAB9Sg-NZmVgAYjUJCJ6GoaxwsNkqPYsB4Uyu2xG+1AYUPBIXF+QQPKokTPvmkFgHIXYjvIcgALygAADEUXawXBiGgO6aHoSO+GgEhABMvC8BycCgCaCyEd2I4ANxkSwoAAHKongAA8ACCShIV2nH0aRAiCjsyJDLA3w4J4HiTAmngxOoOyGGgOD0K2sBOL4ugHFk2h2CElBZqYdiYimUyeKweCaowsixKmHiMnA7BWpmAR6kwpLCnSmlAtKbygPeBAkIU5GeAA8pJNGsT8HFUaoCgMSFEBnKokVsex4WwPFjEUUWIqeEhUUceAyVZYlai6GQBVpblsCZQlTHKPQaCpdF7HlSQpVMQAyr8LUcY1aCdRRXWoFifXsT1PxDZ4ACi9CEBO40jcp00sac41zQteCreAY1Va1zGnFlsiMDE+o4G+SLoAYZymBMIQpclJBhGmlCZmc6pDKYMQLMEHoPQ84nrfAOECPQrSwO09CppxXr2ZJ0XgtorhfL9oAAKpOB4TDo3DVpzCKKBrPdKDI3JaOcdlng1ITXE8aAsNsViX0sWlp0BOjSjQhjoAzsqaAkAxsgASWZKiUDEWUEMq6rOs7KkBeKayCKegKk1GDNqGTbhv9LqCO6M58vIDKuihNGUEUyGgKbvg0b4RQm2mNEbCb7rwqbGy2yDEEyIlvQTFxTgAEL0wA3rwcgAFYTHgQd80HDFRzHnF85xicouggx8-7rDsTTqB004hXsSHWUAL58Si0XM6YsWgNzRjRxZQdGLzoBB1XBA4CzdcN03eCca3fNGBggxGAJshFuZkD4KeXwKaE7hMTWov0CQardxWFmmfYZAqxVQJoLIYkSS8j6mM813+aoqgvcZ2b1L5jRZlMNbtFgeCIgyT0veq9jd7IfwuwJhSQ4CWBoXhMhXRumZWwllKDzQnPJEgH116A1PrLJgz9YCyEXobKC8g-boADpxYOPFKgM07jXSipp67tyKPHKh3da60O5pTAQchs7ENzvnFAhdQC8JLgoLKBCP6bDbBqWAKwmzwjbLae8jBTCdnYGvPQ9497iXOm+HUaYtKixEkwVg0BGh8AEPZAwJx2CgF0NAHEeAUr2VYM8PATl8EyA4Q5am3CADSgd27kI8fIRm1dmE0Oon3GOLdKiMKZqE3uoBG7JyMNEhJo8hQMQIXreyuxBiziNnIIhEwUh+JDjRcOgTQD9xTgzDJ0F5D9zju3Wp8EM5ZwEdwvOtNuJFzSqXZpcgy61OdJvORvh1oeGCIGHEYkzy+WyQMNgmxkTpEjlIrIIV4TOLoB4WQTiXhOSWXArgT8XikBsBsvM7i6mFNzqQ-xzsc7FLuSHWEXYc6+OeQoAS+YnhiyYCfdarBdC+HgSsR8OIQgKyUamKWMtwUTHDOzEUF0cFgwhu0Bk8AnZISsdDGFdtrY7CphQRgJCyE0WCV3FmOcS5OCRaADQXMGVt0kgLIWAhOLoECjgB8rJIBOFkl6BkbYcAWRIMsVYzUAUqUwbYQ4+R1QAx2QIaVZ91idk4tLNVFICEFKYuQUltzyVIXKXUgp4rYCp36fIGIulLUku8DwrpCgnCCL6UUCuHdYk91YQkyyrgh4JNtZnIU3yrmgFCqmNsB9PB3lWMYhsD45amH7t6d8-RVRIi1ZgpwelSRZvuB3exJ0cwYBhiEQ4bBLmVAZAAKjNkhVCgTbb1qto2mtoB62eiQhbQJnp622yQvbQJdbsVOw9i2w5WK3Y+2JTTSsKwSlhwjqAUECw+axXTg0+OW7k5WpXfGUgzw2nzqWIuwR3T7nepmDgM6mg6E0qDk4RlLLRqC14BXSl1DYorobmu1QyTOHtyYT6hYv6En-sA23L9oSMrgcSc3KDMSQkszg3ICJFlB4ruHoelBNZQ3srALgWBrBKAmQ+vaWgVw43cEaLsWVK8xQZrBLC7VDgXxokMJKUw5I0yxsWBgPoapTBMdpPcGjCb6OPmrQIIsK8V4ECcipRs9oJEqzwBpPRjiQSeE7PZRKpJZDEEkpqAgoBBUrwiJvTsDIVJbSOCKCM9xsFNgBra-IvJEozU45JfAWB5ElwWa6-EpAnCcXYOwZd5rXCpwi+nYNJ6QtkGvRGySK70MCIWGejiQcgsMwiwodLbdvPQC435gLuXBiutpjUJLLrMsLpy3l8LkXy5vKSyBlh4S-UWsDUYBLBHSJeZ85KQLVWBF1ZoiVsreB-PGLG+pCbpISBOAysdWT+NTgAEddDaDPoshQPbN7sR7Y58Uk57T9FYJRlKhxjE2klM6UAJ2nYKYtQwfFpsrFDvnmQPY9oozylMC7DSTh2A+yc0iRQP23so2hk7F7FtiXIFYKwIsexQokBmjt7QS6aJepQ6YGldz-tMv9Z4PmA2haJQAOIilpCQdHOBMfY92+gPHSEUdo8uMzrHOP2dPoZutojTAPDqCDH8qu4pUfgtXETIE6wlT2UYALSYsRZASbo0mnAmmDhMHmG9VYkwXigTYL+H+osr4bFGpGOy0xj70HuD-OlWRDCuaONOAGgOAhy5rI+Ol6Koc-bAFYvUjnKDsYEL4JwesrHqjpFfb3CpYRuKKIlAAiroTIql8DsWyE1R3zMnD5-l+oAJZqcgF7sMlwnqXPDcxL4XzefNG9iU3il09Eq89V-UHS29HMmW4z5qy0gQyNuMezBVUVoADTk4NKnjxiUjw0Xap1hr2X2LFVUE4LfZP3uU7tWPsAQctNWkmBkV4Io8BT5nwN+f+TPGgGX0hVfHestd-pZjJKcU6FD6+IftPJiZ-FQXeNfTvRdLfPvO9DGQfNuKnI2YSaNdAe4RKBYTIG9EjMjc4LUXXEIMBZKX8fwczSgUMZsDIPRF4doTiQgBBHVMAReL0CSSGB-JfKbRBLIFLabXzIqZKHfGgPKPfFGA-ENI-duCg-vZFS6eTUXfGexFKS4NBOsVgLMPABfa5JiNITIdiZiYLZbemZiNfLg0belSrRbWrPQuhUw19NlQAiiYAzQjiTaCcPggQ61P2NgraQwkbXPEwvLGqTKSwhZaw0fI2ZifET8LIfNS4KVCWMEe+RSUVawfARUazdEbXJRGQm0UWSkcWJgqHEVZSHPLIa7WeH4aIUXVQWxTsE3exEsLgMzIEeRVFMAVEaXBXafPWVAZGWkMyMwGTAUIUK+JQqSfGEo6wMo2yV+UwQgTUCwdUGPHjAwQYVzJUfNckB-VosgeCGcHtexYIAAHxEivkOPh02Klxr3mCKEbBaR2POOiDSPsQuKCg8UqLOUeN5iQiMFdFbkOKMHgB+ISVrQBKMAAD1gSTtgTDtkkPFqBVBghtjG1QBDjPRDiiIkTQAABmdEgAFnRIAFZ0SAA2dEgAdnRIAA50SABOdE90JtCvFpeQQ48ndEgbPkYlGaUmdAObdnGaJwGaHAFAKLUADlPYhsc4twc+B0TwVNExM5TAbwPwAIEKVgFdAQNY+wZA2wGxUrEgLISwRzPTM-RbTSdZYsFeLEewBaX7NUsABkExPAcsMSSwFdWEswPmGaNfVCeCbmH9bY0AT0lLHCH0uvIrD0tfEiEMrfMMgMtfDEorbmfwmMwM2vbEhMkAiqZMtfPE9MgaHBf0lMqlUwQk9MyaLMlLEk0sm3cs2vck9MpwvgAstfKk9Mw6NLJsoM70+QRMrEGsoskIC1dM8nPs6hNkkMsc+QcMlLLMG4VMAUlAeswUtfFZNZIrDLecrsGaEcNc4IoKf0kfd9W037L4XQC6WVRsHRfNI4FxbZfGZBYIJUBka-e7TxQ2OQfMd8s1Lsc4pwV40zXvO47cz8ldRsI8XAb4H4Kc2vLselO5L4owKAgIIOIC7s9pAOTk7QHkvxec+rDC7kirfkwU4REc0JGCiQhmJwIwIExCsgZC9M8AxwrkrCu5HC-kpigigMoiwrDs6C2Cyi-4mi9uFCjLA1R1diPC5iwioUtizCjinC7iyc2MlLMi6AuCsEwSuikMow3PCSgLFioimS-C+bQXeSkilmFSgIOCqEjS4SuhOnZjRnHnFnfncS9i+bfS6SgMtygXKS4ini-siysgOCiEmy9MrnJnZytnVy2S9y3ywyrCkyrimMg8oWT8-yMjXwIYJUEUTEJUsgeyLEImBYHATEbEDwCXRzaVMERgDSKRSgEBI88q6UnYJYiqKtTLbMDkbUxzBgleBkEUHbNeB7bEZBV+aUVUtK7BWBI0L4X4f4eAUrWURSPwRgWEvc9KvwLKqCgKowe8TaygBCnEaAmodUMjDSxYSAWy7mE62YtfMVSIHc7mcORk+CaAU690gRd69OF6tMC6+OC676l6wqj0wUwG+CMuHc4fN9ZKt9VKo49Aba6hQKlQU8wSkrEgK6hmLWSAaKoy9nZQVGzizy3S+bdG3yhSoDFK0iNKjYeHAgbebGVpWAeELo4hWkUwEoemvAEoAGJyG+SYWo1m3bAgI82AAcAITmq0HAHmhSEoNJCoOQaGRG0iowaGQ6+lXaCyQSqeHXI6gIGaENTGkm9nTWjTImpQFLYcxk7mY2zfKW3yyGrymK3kkNB2-0+AldPoVQpS6C3a7MdW8i7xQSgANTJnOqGEuvTO8TussgeutqdrxpLguqktAAADJQBQ5uxvFYAAcmBvERwPTvL2JQ7iFFscLQAy4KbFKDyYabCK5CykbdqMqsrDr7rpQY8cBI6Msm79qkMfaAr-tc1Y726Iwu66EjBQLwLfg+6G6Va1aO7+VR6F6UKG41bsN+7G6vbW7h7CAF7l74Mt717Z7zLB7R6V6ElGw+6jA3Tx5qcmJvMqV2Jo6Us27d7QBg7fKaJwBHccaV1nr5Auxs7c7QB86+Zg704y406itQozAXhxLBSnBvFCtjpEpv6I72IUh6YUg18UgpF1Ahh2JT7SdwN-74JAGIUZzOwUgC7UhAGBJwb16qbiVOJsa2owt6ZlA19-63rZi+Z6UbqyN04MgI6+HyKg4AaV1ga9ayB5yGIIaMsBHggX6d76yi7xGI7+SUM853qwtyba7SBGHYbZBjbwEr50R7zYEqQ1FtdcCTcr8p9FRlQLIWNHQgxZJcF8ZJILJwwxIeA6AFN8Y9gnEAhTT9EPpsR7TTlNQFSfB-B8qWB+iIBRiywtJwUsAjBmo5FPAbFwFXgFMHFNRRULGnybFywvHM0DRmIDRj5apbFZRbt8AUoSmXzOw+hpRXhKnzQskpb9IX57IDQ2nCBaBzRqjTFw10nmpY6wRajU1ajzH1Bgh7I-z0jyiQhSnPBBnaBbHijaoLxcF5CTdGhYGcxCRiQUR1RGhSBeRWirBH90YcBcHoBN96ZwA18WTDiBs6FXm+Z7n5JkDN8nBYIFAuw-b2maBb7BIwBNV7gAAJJVO84q13VMV5jYC4Bsfxxx588sDZOdJjbudiGFnfNff7IF52ccfoIYPmQl0AD4VoawfIPmcAeEBCJQf7Fm2vDYFdWlxoCyUR6A9GXgZl1lzu8DAVymox2QDQJSUgHSJxzNLFzwDYQKWBnlKUGUJgFsW0LqhVzZAcKHBV0ybwa6Dxq4S4UwTZugWAfneFzwcp8MJMAoXVOQU8v5+4WCOQN6b7JECLSoF1ssN13QOCT1miP1rU3QTYcUOATeI1zAT12dAQSGQgdoUNt1vCAiFpd13iGNpwGN7cipaxW9f17sdCNN-CAiTN7sbNrwfQdAHNmtut66bcxKX5-1vxFrYlzu0lk1FdZCVONfd1thCLXc9OA2ShZSz-OCbmFt-5r-fOKNghqtlrYRYdj9SuZSyds2Pmd0CeRKRAZuhkT4vazKg6+qCiAADRoiMB+CMFPc8GQCyEPf9sI1sBSlAOgGBTozsVIFtUulTWDBINMBMa2QxgeffA7qdyFBFGVgpZu2WuOblQ6JoMUSyDkUsBwEBCxEmD1gNL2w5F4Bub1MfzwvEvpnucedxqwr5IzsruFxYnCLWORBAVgSFrWv8noD6emDUPkAABJH9gDiP0IMTKLvinBsSRxKLqLQAiIRwRF1C7CaJ3Q0z8PONCPWCkJiOV0ux73KLWAccRRDqtP92nAz3AWTPATDqz38JAWTA9OhRRP8IV0sogA)",A Type-Level Lisp Interpreter (-ish)
885,2020-03-05 14:58:58,8,1,"As the description implies i'm trying to store actual code from typescript file in a variable so that when I console.log it i'll see the typescript implementation instead of the compiled code.  
Have any of you tried anything similar?   


What I've tried:  
1. Using decorators and Reflection,  but struggle getting the actual code (as a string) as it is in the file.

2. looking at the typescript npm package. There's just so many functions to read up on. 

3.  Tried to retrofit this code [this code](https://github.com/microsoft/TypeScript/wiki/Using-the-Compiler-API#user-content-re-printing-sections-of-a-typescript-file) from the typescript compiler API docs for my purposes.

So far I haven't had any luck. All pointers welcome ;)",Trying to store typescript code in string to use in runtime. [Guidance Appreciated]
886,2020-03-08 07:10:27,13,1,"I was bored, so I made this music app with the help of `electron` and `react` in typescript.

It can play music out of any directory you choose and can even download songs into that directory. It stores metadeta about each song and shows you all artists and albums which the songs are from and stores youre last queue so you can pickup where you left off.

 

&amp;#x200B;

*Processing img mk3zlsszeel41...*

*Processing img vwmnemrzeel41...*

*Processing img mhxk4frzeel41...*

*Processing img 69ydvtrzeel41...*

&amp;#x200B;

The project is far from perfect and any suggestions will be welcome.

[GitHub Link](https://github.com/Lutetium-Vanadium/Music)

&amp;#x200B;

PS:

 I use linux so I'm not sure if there will be any bugs in mac or windows

Also you require a Napster API key(for music metadata) and a Google API key(for downloading a video) for proper functionality",Music App with electron and react
887,2020-03-08 14:56:04,6,1,"I am performing a serious rewrite oa package to make it more modular, extendable, testable, etc. In short: a lot of technical debt I want to pay.

I am tempted to use type hints, due to [my good experience with optional types](https://p.migdal.pl/2020/03/02/types-tests-typescript.html). However, I am not sure when it comes to the implications. AFAIR:

* it would be installable on Python 3.5+
* there are no Babel-like transpilers that make Python code compatible with previous versions.

Are there any other things I should take into account? 

  
If it matters, it is a simple, end-use package (I don't expect other packages to rely on it) for deep learning training visualization. I target it mostly at the Jupyter Notebook environment (e.g. in Colab). I don't expect people to install it in big and old projects. Repo: [https://github.com/stared/livelossplot](https://github.com/stared/livelossplot)",Using type hints for an end-user package
888,2020-03-09 00:39:44,0,1,,Angular workflow and why typescript in Angular
889,2020-03-14 15:25:18,0,1,"I'm trying to create a function that receives an array of functions and returns a new array but each function now has a function wrapper. My problem is that the function needs to return the same types for each function in the array, how can I do that?

This is the way I've tried

```typescript
    function useActions&lt;A extends ActionFunction&gt;(
      actions: A | A[]
    ): A[] {
    
      return Array.isArray(actions)
        ? actions.map(a =&gt; bindWrapper(a))
        : [bindWrapper(actions)];
    }
    
    const action1 = (name: string) =&gt; {}
    const action2 = (position: number) =&gt; {}
    
    const [actionWithWrapper1, actionWithWrapper2] = useActions([
    	action1,
      	action2
    ])
    
    actionWithWrapper1(""my-name"") // Error: it requires a number
```

But the actionWithWrapper1  has the same types for the parameters than the actionWithWrapper2, in other words, the useActions function always returns the types of the last element of the array.

Maybe this is a stupid question but I would be glad if someone can help me out",How to return the correct type according to an array parameter
890,2020-03-15 06:30:18,1,1,"I really like technology but working on it is really damn frustrating. I learned a lot in just 5 years now there's a new thing again. It's really frustrating. I do love to study but sometimes you just want to finish the job. I have 10 years experience as a web/server developer. I know php, python, javascript, typescript, html and a lot more.

Meanwhile, my friend who is working in firmware and driver development for 15 years. Still almost the same thing. He has more time studying other things because what he learned 15 years ago is still almost the same. And he damn earns more than me.

So if we get a web developer 15 years ago and hire him now, he knows almost nothing. Now do it the same with a C/C++ developer 15-20 years ago. He will be able to do his job like nothing or maybe learn few things but not like the web developer who has to learn a lot of frameworks or whatever. 

Now people are talking like, then don't even move? Just stay on what you are using now? Funny thing, I don't have control on that. The company or your boss has the power to do that. So in the end, you have to it and move to the new shiny thing anyway.

Okay.  I'm out.",Tech moves so fast. I'm out.
891,2020-03-15 15:06:55,4,1,"I finally went and read what all the let and const stuff is about. Turns out let is just a shitier, more restricted version of var. Like all the other solutions, it serves to restrict everything so much, so that lazy, messy developers can't make a mess and don't have to think, and can be able to use the same variable name in every block level of the code, because god forbid that the variables are corectly named and descriptive. It's just one of those C things. Just like type-ing with Typescript. The whole point of typescript is so lazy developers can inport someone elses drivel and then error-check it because reading the actual initial function is too hard. Why would you write something correctly, if you can make diarrhea, and then error-check it, and if it works, then it's ready for production. Reminds me of modern gaming. No wonder it's in the state it is. Only redeeming parts of ES6 are the goofy function shortener and const. Const only because allegedly it gives a performance boost, not because restricting yourself to not be able to overwrite a variable is in any way smart or logical. Hurr durr, let me throw an error if I try to overwrite a variable that should never be overwritten, and the program literally shouldn't be able to do it.



JS is great. Go play with the C languages if you like to pretend to be cavemen, and leave it alone. You moan about JSs permisiveness, but it is only dangerous if you write shit code like you do. Go write code that is good and you will never get into a situation that you are trying to ""prevent"" with all this unecessary crap.",[AskJS] I just realized that they are trying to make JS into just another C language and remove all the good parts from it.
892,2020-03-17 08:39:24,5,1,"As the title says,

I've spent the last week poking around and trying different starter, but I am still unable to compile the library correctly. It is driving me crazy and I don't understand why I can't compile it.

tsconfig.json
```json
{
	""compilerOptions"": {
		""outDir"": ""dist"",
		""module"": ""esnext"",
		""target"": ""es5"",
		""lib"": [""es6"", ""dom"", ""es2016"", ""es2017""],
		""sourceMap"": true,
		""allowJs"": false,
		""jsx"": ""react"",
		""declaration"": true,
		""moduleResolution"": ""node"",
		""allowSyntheticDefaultImports"": true,
		""esModuleInterop"": true,
		""plugins"": [{ ""name"": ""typescript-plugin-css-modules"" }]
	},
	""include"": [""src/**/*""],
	""exclude"": [""node_modules"", ""dist""]
}

```


rollup.config.js

```ts
import commonjs from 'rollup-plugin-commonjs';
import del from 'rollup-plugin-delete';
import external from 'rollup-plugin-peer-deps-external';
import postcss from 'rollup-plugin-postcss';
import resolve from 'rollup-plugin-node-resolve';
import ts from '@wessberg/rollup-plugin-ts';

import pkg from './package.json';

export default {
	input: 'src/index.tsx',
	output: [
		{
			file: pkg.module,
			format: 'es',
			exports: 'named',
			sourcemap: true
		}
	],
	plugins: [
		del({ targets: 'dist/*' }),

		external(),
		postcss({
			extract: false,
			writeDefinitions: true,
			modules: true,
			namedExports: true
		}),

		ts({
			transpiler: 'babel',
			exclude: ['**/__tests__/**']
		}),

		resolve(),
		commonjs({
			exclude: ['**/*.stories.js']
		})
	]
};

```

index.tsx
```ts
// some code and then

import * as styles from './surface.module.css';
// import styles from './surface.module.css'; // also this doesn't work

// exports ...
```",[HELP] Bundle CSS / SCSS modules library with rollup
893,2020-03-17 15:19:02,0,1,"While the adoption of TypeScript and also of LSP grows, somehow TypeScript language servers seem to have been dying a slow death. [SourceGraph's server](https://github.com/sourcegraph/javascript-typescript-langserver/) has not seen real updates in at least a year and while everybody has migrated off to [TypeFox' one](https://github.com/theia-ide/typescript-language-server), it has not been updated for several months either and is actively (but apparently not very successfully) [looking for maintainers](https://github.com/theia-ide/typescript-language-server/issues/141).

So what's going on, has everyone migrated to VSCode and not using language servers anymore? Is [Microsoft's LS](https://github.com/microsoft/vscode-languageserver-node) any good for using without VSCode?",What's up with language servers?
894,2020-03-18 09:17:01,9,1,"Hey, I know this may seem like a silly question, but I'm brand new to TS, and a bit confused about this.

I have it so that my typescript compiles into javascript in a dist folder, where a copy of the node_modules folder is placed.

The server then runs out of dist, and I noticed that, despite me using @types modules exclusively, the javascript compiled errors when I do not have the non @types module installed.

For example, I have a module @types/winston installed, so I uninstalled the normal winston module, and the entire project ceased to function. Typescript of course gives no errors about this, as it's the javascript it compiled causing the issues.

Is this normal behavior, or behavior I could fix?","Do I need both the @types modules, and the normal module?"
895,2020-03-19 06:21:13,0,1," 

Whether you believe or not, but the fact is [**TypeScript** ](https://solaceinfotech.com/blog/javascript-vs-typescript-a-comparison/)is spreading like wildfire. According to a survey, it was listed as the third most- loved programming language and the fourth most wanted. 

It’s so inevitable since it has replaced vanilla JavaScript as the language of choice for many packages in the JS ecosystem, with some like Yarn even, going similarly as rewriting their entire codebase in TypeScript. We feel one reason for this gigantic rise to be the fact that TypeScript fundamentally is simply JavaScript. This makes the entry bar a lot lower for existing JavaScript developers, and the way that it’s typed may also attract other devs who prefer the features typed languages provide.

This cuts the two different ways, as well, because the simplicity of choosing TypeScript has led to some cases where the language is not being used as effectively as it could be. Numerous developers still write TypeScript like they’re writing JavaScript, and this brings with it some disadvantages. We’ll be taking a look at some real world code written in TypeScript that could be improved to use the language’s strengths.

## Rules-

### 1. Don’t neglect interfaces-

In TypeScript, an interface basically specifies the expected shape of a variable. It’s as simple as that. Let us see the simple interface to drive the exact idea.

    interface FunctionProps {   foo: string;   bar: number; }

Now if any variable is defined to implement *FunctionProps*, it will have to be an object with the keys *foo* and *bar*. Some other key addition will make TypeScript fail to compile. Let us see this.

    const fProps: FunctionProps = {   foo: 'hello',   bar: 42, }

Now we have an object *fProps* that implements the  *FunctionProps* interface correctly. If I deviate from the shape specified in the interface by, say, writing fProps.foo = 100 or deleting fProps.bar, TypeScript will complain. fProps’ shape needs to match FunctionProps exactly or there will be hell to pay.

    fProps.foo = true ❌ // foo must be a string

Since we’ve gotten that out of the way, let’s look at an example. Take this React functional component method:

    const renderInputBox = (props, attribute, index) =&gt; {   return (     &lt;div key={index} className=""form-group""&gt;       {renderLabel(attribute)}       &lt;InputBox         name={attribute.key}         value={!!isAssetPropAvailable(props, attribute) &amp;&amp; props.inputValue}         onChange={props.handleInputChange}         placeholder={`Enter ${attribute.label}`}       /&gt;     &lt;/div&gt;   ); };

While this is totally fine if you were writing JavaScript, it doesn’t take advantage of interfaces. For what reason is this awful? You don’t get any IntelliSense features that you otherwise would if the method’s argument were typed.

Also, you could easily pass in a prop of an alternate expected that shape to this method and you would be none the wiser because TypeScript would not complain about it. This is simply vanilla JS, and you might as well eliminate TypeScript from the project altogether if everything was written this way. How might we improve this? Take a look at the arguments themselves, how they’re being used, and what shape is expected from them.

We should begin with props. Look at line 7 and you can see that it’s supposed to be an object with a key called inputValue. At line 8, we see another key being accessed from it called handleInputChange, which, from the context, has to an event handler for inputs. We now recognize what shape props should have, and we can create an interface for it.

    interface PropsShape {   inputValue: string;   handleInputChange: (event: React.FormEvent): void; }

Proceeding onward to attribute, we can use the same method to create an interface for it. Take a look at line 6. We’re accessing a key called key from it (clue: it’s an object). On line 9, we’re accessing another key from it called label, and with this information, we can create an interface for it.

    interface AttributeShape {   key: string;   label: string; }

We can now rewrite the method to look like this instead:

    const renderInputBox = (props:PropsShape, attribute:AttributeShape, index:number) =&gt; {   return (     &lt;div key={index} className=""form-group""&gt;       {renderLabel(attribute)}       &lt;InputBox         name={attribute.key}         value={!!isAssetPropAvailable(props, attribute) &amp;&amp; props.inputValue}         onChange={props.handleInputChange}         placeholder={`Enter ${attribute.label}`}       /&gt;     &lt;/div&gt;   ); };

consider the benefits of doing this:

* You get IntelliSense wherever you use this method. And you can immediately see what its arguments should look like without having a look at it.
* You can never abuse this method because TypeScript won’t allow you to pass in arguments with wrong shapes.
* Any change to the method definition- possibly index is now a string- and TypeScript will prevent your code from compiling until you fix all the instances where the method was used.

### 2. Stop abusing any-

The type *any* is a fabulous way for you to migrate a current JavaScript project gradually to TypeScript. Why is this? Well, if you type a variable as *any*, you’re advising TypeScript to skip type checking it. You can now assign and reassign various types to this variable. This allows you to select all through kind checking when necessary. While there might be different cases for utilizing *any*, for example, when you’re working with a third party API and you don’t know what will return, it is definitely possible to overuse it and, in effect, neglect the advantages of TypeScript in the process.

Let us see the case where it was definitely abused.

    export interface BudgetRequiredProps {   categoryDetails?: any[];   state?: any;   onInputChange?: (event) =&gt; void;   toggleSubCategory?: (type: any) =&gt; any;   displaySubCategory?: () =&gt; any[]; }

There are appropriate use cases for *any*, yet this isn’t one of them. For example, take a look at line 2, where we’re basically specifying an array  that can hold content of varying types. This is a big waiting to wherever we’re mapping over *categoryDetails*, and we don’t represent the way that it might contain items of different types.

Line 3 is more worse. There is no reason behind why *state*‘s shape should be unknown. This entire interface is essentially doing likewise as vanilla JS with regards to type checking, i.e., literally nothing. This is a terrific case of interface misuse.

Now, we’ve experienced the codebase where this example was chosen from to look at the expected states of the variables, and this is the means by which it should look:

    export interface BudgetRequiredProps {   categoryDetails?: CategoryShape[];   state?: string | null;   onInputChange?: (event: React.FormEvent) =&gt; void;   toggleSubCategory?: (type: string) =&gt; boolean;   displaySubCategory?: () =&gt; CategoryShape[]; }

Much better. You get all the benefits of utilizing TypeScript without changing the interface too much. Now, let us see, where using *any* really makes sense.

    export interface WeatherPageProps {   getCurrentWeatherStatus: (city: string): Promise&lt;any&gt;;   handleUserUpdate: (userContent: any): Promise&lt;any&gt;; }

Why would that be a valid use case for *any*? All things considered, for one, we’re working with an external API. On line 2, we’re specifying a function that makes a fetch request to a weather API, and we don’t know what the response should look like; possibly it’s an endpoint that returns dynamic data based on certain condition. In that case, specifying the return type as an assurance that resolves to *any* is acceptable.

On line 3, we’re also working with a function that takes in a prop that is a dynamic in content. For instance, say *userContent* comes from the user, and we don’t know what the user may type. For this situation, typing userContent as *any* is totally acceptable. Yes, there are valid use cases for the *any* type, but avoid it as much as you can without demolishing the developer experience.

### 3. Remember index signatures-

Presently this is a very subtle mistake we see quite a lot in React code where you may need to map over an object and access its properties dynamically. Consider this example:

    const obj = {   gasoline: 'flammable',   sauce: 'hot',   isTypeScriptCool: true, } Object.keys(obj).forEach(key =&gt; console.log(obj[key])) // 'flammable', 'hot', true

The above example won’t cause an issue with vanilla JavaScript, yet the equivalent isn’t true in TypeScript.

    interface ObjectShape {   gasoline: string;   sauce: string;   isTypeScriptCool: boolean; }   const obj: ObjectShape = {   gasoline: 'flammable',   sauce: 'hot',   isTypeScriptCool: true, }   Object.keys(obj).forEach(key =&gt; console.log(obj[key])) // ❌ you can't just do this

You can not do that because of type indexing. In TypeScript, you have to specify how an interface should be indexed into by giving it an index signature, i.e., a signature that depicts the types we can use to index into the interface, alongside the corresponding return types. Quick boost: indexing into an object looks like *obj\[‘sauce’\]* or *obj.gasoline*.

We didn’t tell to TypeScript what index signature *ObjectShape* should have, so it doesn’t know what to do when you index into an object that implements it like we do on line 13. But, how does this concern React?

All things considered, there are cases where you may need to iterate over a component’s state to get certain values, like so:  


    interface ComponentState {   nameError: string;   ageError: string;   numOfFields: number; }   this.state: ComponentState = {   nameError: 'your name is too awesome',   ageError: 'you seem immortal',   numOfFields: 2, }   Object.keys(this.state).forEach(err =&gt; this.handleError(this.state[err])); 

This is an exceptionally normal activity in React, yet you can see how we may run into an issue on line 13. We’re indexing into *this.state*, yet the interface it implements doesn’t have an index signature. 

But, that isn’t even the mistake I’m discussing, and I’ll get to it in a moment. To fix the warning TypeScript throws, some devs may update the state’s interface like so:

    interface ComponentState {   nameError: string;   ageError: string;   numOfFields: number;   [x: string]: any;  // index signature added }

Before we proceed, it’s significant that, by default, adding an index signature to an interface implies you will have the option to include values that don’t exist in the interface to any variable that implements it. This will effectively get rid of the error, but now you’ve introduced another side effect. This is the same as telling TypeScript that when *ComponentState* is indexed with a string, it should return a value of type any (basically all possible types). This could cause issues if *this.handleError* was not expecting anything apart from a string or a number. But more importantly, you can now be able to include another property with ANY type to whichever variable implements the interface, which, in our case, is *this.state*. So this gets valid:

    this.state['shouldNotBeHere'] = { bugs: 1, dev: 0 }

Now that is the mistake we are discussing. How do we fix it, though? All things considered, there are actually two things we need to look out for:

1. We need to determine all possible index return types in the object, but no more (no *any*)
2. We don’t want to add new values to an object because of indexing.

In many cases, the correct way to fix our initial issue (indexing into an object without TypeScript complaining) is do this:

    interface ComponentState {   nameError: string;   ageError: string;   numOfFields: number;   readonly [x: string]: string | number; }

Alright, so this is what this code is saying:

By simply specifying the index signature return values, we’re able to solve our first issue. And by marking it as read-only, we’re ready to solve the second issue. Keep an eye out for this inconspicuous issue when writing TypeScript code.

## Conclusion-

TypeScript is a great way to write type-safe JavaScript, yet you need to do it right. It’s possible to write TypeScript such that just causes headaches with no real benefit, yet fortunately, that can be easily solved by taking the time to learn the suddenly appearing issues in the language.",Important Rules For Writing Idiomatic TypeScript
896,2020-03-19 23:47:57,9,2,"So i have a type and I would like to dynamically update its fields based on a key value I pass into a function. However, the way I would like to do it (brokenFunction) is giving me an error on the assignment: Type '34' is not assignable to type 'never' and Type '34' is not assignable to type 'never'. workingFunction works but is not as handy. Does anyone have a way to make this work? I'm guessing it involves generics but I still dont understand why the type guards arent working.....

````
interface Todo {
  id: number;
  text: string;
}

const todo = {
  id: 1,
  text: ""Buy milk"",
};


function brokenFunction(x: Todo, field: keyof Todo): void {
  if (typeof field === 'number') {
    x[field] = 34
  } else if (typeof field === 'string') {
    x[field] = 'something else'
  }
}


function workingFunction(x: Todo, field: keyof Todo): void {
  if (field == 'id') {
    x[field] = 2345
  } else if (field == 'text') {
    x[field] = 'asdfsf'
  }
}
````
playground [link][1]


  [1]: https://www.typescriptlang.org/play/?ssl=28&amp;ssc=2&amp;pln=1&amp;pc=1#code/FASwdgLgpgTgZgQwMZQAQBUD2ATTqDewqqI2AXKmAK4C2ARrANxGrQAeEFAzhDOAObMAvsGBJMYHqxx4AvARakKARgA0Ldp1QAiAEJUAnqhogANgGtt6oc1FwqYJBBATUdGJnNQwAMQdOXMAAKNgosXFVUOBAoU3JULwNMOAwZAEoKADdMUgViEBSgiAMAByhkqJi41Fla1AByanpYerS84lQ2AG1o2OwAXRrUAGYAFhYhVFiuNALUItLylN7q2vl6nj4wflb24m6VgaGNzBooCAALASnTGfqJ4BE7f2dXAHdMGHMBP0dX4NCqQilT6FESFXCmAyqGyuUI%20UKhxq61Iu3hHQOVSO8gATGMAKwTG4zEiIrHIhqaNEsfY9LGDdYILjYOBcOD3YgiERAA",Inferring types with a key of a type object in typescript
897,2020-03-21 15:43:48,8,1,"Basically the code that I have that is leading to the compilation error is similar to this:

```
class Box&lt;T&gt; {

}

class Gen&lt;T extends Box&lt;number&gt;&gt; {
    private action(array: Array&lt;T&gt;): Array&lt;T&gt; {
        return new Array()
    }

    private useAction() {
        let x:Box&lt;number&gt;[] = new Array&lt;Box&lt;number&gt;&gt;();
        // This leads to the compilation error
        this.action(x)
    } 
}
```

I would expect this to work.

I defined `action` to take an array of any type, hence the `array:Array&lt;T&gt;`

In `useAction` I am calling the `action` method.

I am calling it with an array of `Box&lt;number&gt;`

Since I defined it to take any type, I expected passing a variable of type `Box&lt;number&gt;` to `action` should then work. 

But it fails with a compilation error:

&gt; Argument of type 'Box&lt;number&gt;[]' is not assignable to parameter of
&gt; type 'T[]'.   Type 'Box&lt;number&gt;' is not assignable to type 'T'.
&gt;     'Box&lt;number&gt;' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint
&gt; 'Box&lt;number&gt;'.

I can't decipher the error message. Why is it failing and how do I fix it?

I asked the question on StackOverflow, if you know how to crack this riddle, please feel free to answer the question over there

[https://stackoverflow.com/questions/60789275/how-to-fix-compilation-error-when-trying-to-call-a-generic-typescript-method](https://stackoverflow.com/questions/60789275/how-to-fix-compilation-error-when-trying-to-call-a-generic-typescript-method)",Confused by generic related compilation error.
898,2020-03-22 16:54:51,13,1," Good Morning I'm beginning to learn nestJS for a backend and so far liking it... 

I'm trying to wire up a front end React as i go along. this code snippet has no back end, it's just an example.

i'm puzzled by this typeScript issue.

The front end makes a request to the backend and what comes back is unknown, i know that it's a TaskI, because that's what the backend is responding with, but i wanted to emulate the case where the front end typescript can't know that and has to ""prove"" it out. so i set the data to type unknown... 

I was expecting a TS complaint, but here it allows me to push an any into my TaskI array, do you know why this is?

I shouldn't be able to push an any into a typed array.

More generally, not having worked with type unknown before, this is the concept of using type unknown, to prove to the compiler that a type is indeed a type?

Thanks for your time and consideration.

 [https://codesandbox.io/s/practical-shape-p5rko](https://codesandbox.io/s/practical-shape-p5rko)","why am able to push this ""any"" into a typed array?"
899,2020-03-23 07:52:22,29,1,"Hello all,

I am learning Typescript and I was naming my interfaces happily until I arrived to Mongodb/Mongoose.  


For example, I had before an interface called User. However, when I create my model schema, in mongo without Typescript I would have called this User as well. Therefore, that would create a conflict.  


Is there a common convention about this?  


I see this guy in the link down below uses IUser but I have read also that Typescript community does not like using Iwhatever... and personally I do not like that either.

[https://brianflove.com/2016/10/04/typescript-declaring-mongoose-schema-model/](https://brianflove.com/2016/10/04/typescript-declaring-mongoose-schema-model/)  


Therefore, do you know what is the most common way to naming mongo stuff and interfaces?  


Thank you in advance.",What is the common convention for interface names?
900,2020-03-23 08:55:10,0,1,,This is the starter kit project for node js with typescript programming. This project is with express js and mongoose frameworks to build a Rest APIs. This project structure also support with multiple API protocalls also we build the project with unit testing for end points and logic codes by supert
901,2020-03-23 09:55:24,7,1,"Consider the below code:
```
export function(date :string) : Date{  
 const dateNumbers : number[] = date.split(/,|-| |:/).map(numText =&gt; Number(numText))  
 console.log(...dateNumbers);  
 return new Date(...dateNumbers)  
}
```
I cannot use spread operator for the new Date in typescript, but I actually can use it in javascript, the error is Expected 0-7 arguments, but got 0 or more.ts(2556)

Please help me with that, I could not figure it out.",Need help with spread operator and Date in typescript
902,2020-03-23 22:16:53,0,1,,First typescript application: instagram bot
903,2020-03-25 04:30:24,2,1,[removed],Is typescript programmers should know about prototype in JavaScript in deep?
904,2020-03-25 04:32:00,2,1,If yes why?,Is typescript programmers should know about prototype in JavaScript in deep?
905,2020-03-25 08:04:48,0,1,[removed],Best typescript practices
906,2020-03-28 21:40:49,1,2,,qrite simple quadtree in typescript
907,2020-03-29 11:50:13,0,1,"I am just messing around with typescript and react-apollo for the first time. I have a component

`import React from 'react'`  
`import { gql, useQuery } from '@apollo/client'`  
`import { trailCount, trailCountVariables } from './__generated__/trailCount'`  
`import { TrailStatus } from '../../__generated__/globalTypes'`  
`export const TRAIL_COUNT = gql\``  
  `query trailCount($status: TrailStatus) {`  
`trailCount(status: $status)`  
 `}`  
`\``  
`export const Mountains: any = () =&gt; {`  
`const { data, loading, error } = useQuery&lt;trailCount, trailCountVariables&gt;(TRAIL_COUNT, {`  
`variables: { status: TrailStatus.OPEN }`  
`})`  
`if (loading) return &lt;div&gt;Grabing Trail Info&lt;/div&gt;`  
`if (error) return console.error(error)`  
   `return &lt;div&gt;{data?.trailCount}&lt;/div&gt;`  
`}`

1.) The types for the query and the queryVariables were auto generated by the apollo-codegen tool, and it generated `import { TrailStatus } from '../../__generated__/globalTypes'` outside of the project src/ directory which failed at compiled time because it wasn't within src/. I added the same file to src/ and it worked, but is this a problem with apollo or am I doing something wrong?

2.) The Function Component Mountains I typed as any because I couldn't figure out  what type it should be. How should I type function components that will have apollo queries and mutations?

3.) Why does the Mountains component have to return data?.trailCount and not trailCount? 

4.) Are there any resources out there that I'm not finding that will help me through this? I'm having trouble finding resources that help me with typescript+apollo+hooks/Function Components.",Questions about Types in a React-Apollo component
908,2020-03-29 16:46:34,0,1,"I have created a project with webpack, react and typescript. My entry point - ./src/index.tsx - is recognized. However, this file can't import anything else such as App.tsx.

The error is: `Module not found: Error: Can't resolve './App' in '/Users/username/Desktop/AppName/client/src'`

Here is my webpack config:

    /* eslint-env node */
    const path = require(""path"");
    const TerserPlugin = require(""terser-webpack-plugin"");
    const Dotenv = require(""dotenv-webpack"");
    const HtmlWebpackPlugin = require(""html-webpack-plugin"");
    
    const isProductionMode = (mode, success, fail) =&gt;
      mode === ""production"" ? success : fail;
    
    module.exports = () =&gt; {
      const env = require(""dotenv"").config({ path: __dirname + ""/.env"" });
      const nodeEnv = env.parsed.NODE_ENV;
      return {
        mode: ""development"",
        entry: ""./src/index.tsx"",
        output: {
          path: path.join(__dirname, ""./dist""),
          filename: ""[name].[hash].bundle.js"",
          publicPath: ""/""
        },
        resolve: {
          extensions: ["".ts"", "".tsx"", "".js"", ""jsx"", "".json""]
        },
        module: {
          rules: [
            {
              test: /\.(ts|js)x?$/,
              exclude: /node_modules/,
              use: { loader: ""babel-loader"" }
            },
            { test: /\.css$/, use: [""style-loader"", ""css-loader""] },
            { test: /\.(png|svg|jpg|gif)$/, use: [""file-loader""] }
          ]
        },
        devServer: {
          historyApiFallback: true,
          port: 3000,
          inline: true,
          hot: true
        },
        plugins: [
          new HtmlWebpackPlugin({
            template: ""./src/index.html""
          }),
          new Dotenv()
        ],
        optimization: {
          minimize: isProductionMode(nodeEnv, true, false),
          minimizer: isProductionMode(nodeEnv, [new TerserPlugin()], []),
          splitChunks: isProductionMode(nodeEnv, { chunks: ""all"" }, {})
        },
        resolve: {
          alias: {
            assets: path.resolve(__dirname, ""src/assets/""),
            components: path.resolve(__dirname, ""src/components/""),
            contexts: path.resolve(__dirname, ""src/contexts/""),
            pages: path.resolve(__dirname, ""src/pages/""),
            utils: path.resolve(__dirname, ""src/utils/""),
            src: path.resolve(__dirname, ""src/"")
          }
        }
      };
    };

My index.tsx file:

    import React, { memo } from ""react"";
    import ReactDOM from ""react-dom"";
    import App from ""./App"";
    import UserContext from ""./contexts/userContext"";
    
    const AppMemo = memo(App);
    
    ReactDOM.render(
      &lt;UserContext&gt;
        &lt;AppMemo /&gt;
      &lt;/UserContext&gt;,
      document.getElementById(""root"")
    );

And my App.tsx, which is located directly in ./src alongside index.html &amp; index.tsx:

    import React from ""react"";
    import { BrowserRouter, Switch, Route } from ""react-router-dom"";
    import Home from ""pages/Home"";
    
    export default function App() {
      return (
        &lt;&gt;
          &lt;BrowserRouter&gt;
            &lt;Switch&gt;
              &lt;Route exact path=""/"" component={Home} /&gt;
              &lt;Route render={() =&gt; 404} /&gt;
            &lt;/Switch&gt;
          &lt;/BrowserRouter&gt;
        &lt;/&gt;
      );
    }

How to fix this?",How to import tsx components in a react + typescript project
909,2020-03-30 00:03:52,12,1,"https://stackoverflow.com/questions/46696266/where-can-i-find-documentation-for-typescripts-built-in-types-and-standard-libr

I don't understand how one can overlook the need for standard library reference documentation.",Why does this question not have a decent answer?
910,2020-03-30 09:00:57,1,1,"**Monday, March 23 - Sunday, March 29**

###Top Posts

| score | comments | title &amp; link |
|--|--|--|
| 685  | [161 comments](https://www.reddit.com/r/javascript/comments/fqq8rr/bootstrap_5_is_dropping_ie_10_11_browser_support/) | [Bootstrap 5 is dropping IE 10 &amp;amp; 11 browser support](https://themesberg.com/blog/bootstrap/bootstrap-5-ie-11-browser-support)|
| 352  | [19 comments](https://www.reddit.com/r/javascript/comments/fnpzdx/stanford_cs253_web_security/) | [Stanford CS253: Web Security](https://cs253.stanford.edu)|
| 235  | [30 comments](https://www.reddit.com/r/javascript/comments/foqz4d/reactultimateresume_is_an_opensource_customizable/) | [react-ultimate-resume is an open-source customizable software developer resume to highlight your skills and experiences &amp;#40;built with React and JSONResume&amp;#41;](https://github.com/welovedevs/react-ultimate-resume)|
| 228  | [11 comments](https://www.reddit.com/r/javascript/comments/fpb7lq/learn_d3_a_guided_intro/) | [Learn D3: a guided intro](https://observablehq.com/@d3/learn-d3)|
| 222  | [34 comments](https://www.reddit.com/r/javascript/comments/fq4k5s/announcing_typescript_39_beta/) | [Announcing TypeScript 3.9 Beta](https://devblogs.microsoft.com/typescript/announcing-typescript-3-9-beta/)|
| 177  | [23 comments](https://www.reddit.com/r/javascript/comments/fnixfa/a_tiny_progress_bar_that_supports_promise_12kb/) | [A tiny progress bar that supports promise &amp;#40;1.2kb&amp;#41;](https://skt-t1-byungi.github.io/rsup-progress/)|
| 149  | [27 comments](https://www.reddit.com/r/javascript/comments/fqjmvi/how_to_speed_up_nodejs_modules_installation_in/) | [How to speed up Node.js modules installation in CI/CD Pipeline as of 2020](https://medium.com/@jeromewus/how-to-speed-up-node-js-modules-installation-in-ci-cd-pipeline-as-of-2020-4865d77c0eb7)|
| 147  | [19 comments](https://www.reddit.com/r/javascript/comments/fnf4na/common_tasks_of_managing_dom_with_native_apis/) | [Common tasks of managing DOM with native APIs](https://htmldom.dev)|
| 145  | [32 comments](https://www.reddit.com/r/javascript/comments/fo5up8/redux_toolkit_v130_final_new_createasyncthunk_and/) | [Redux Toolkit v1.3.0 final: New `createAsyncThunk` and `createEntityAdapter` APIs, Immer 6.0, smaller bundle sizes!](https://github.com/reduxjs/redux-toolkit/releases/tag/v1.3.0)|
| 133  | [35 comments](https://www.reddit.com/r/javascript/comments/fpc8ay/what_happens_when_the_maintainer_of_a_js_library/) | [What happens when the maintainer of a JS library downloaded 26m times a week goes to prison for killing someone with a motorcycle? Core-js just found out](https://www.theregister.co.uk/2020/03/26/corejs_maintainer_jailed_code_release/)|




&amp;nbsp;

###Most Commented Posts

| score | comments | title &amp; link |
|--|--|--|
| 102  | [22 comments](https://www.reddit.com/r/javascript/comments/fpu4dg/measuring_the_performance_of_javascript_functions/) | [Measuring the Performance of JavaScript Functions – JavaScript APIs explained and how to use them](https://felixgerschau.com/measuring-the-performance-of-java-script-functions)|
| 104  | [22 comments](https://www.reddit.com/r/javascript/comments/foqxp9/webkit_will_delete_all_local_storage_including/) | [WebKit will delete all local storage &amp;#40;including Indexed DB, etc.&amp;#41; after 7 days](https://ar.al/2020/03/25/apple-just-killed-offline-web-apps-while-purporting-to-protect-your-privacy-why-thats-a-bad-thing-and-why-you-should-care/)|
| 2  | [19 comments](https://www.reddit.com/r/javascript/comments/fqiplh/showoff_saturday_march_28_2020/) | `[Showoff Saturday]` Showoff Saturday &amp;#40;March 28, 2020&amp;#41;|
| 10  | [18 comments](https://www.reddit.com/r/javascript/comments/fpjsjy/askjs_do_you_use_lodash_underscore_or_vanilla_es6/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Do you use Lodash / Underscore or Vanilla / ES6 in 2020?|
| 9  | [16 comments](https://www.reddit.com/r/javascript/comments/fppcdb/askjs_self_studying_js_freelancing_prospects_and/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Self Studying JS, freelancing prospects and coronavirus|




&amp;nbsp;

###Top Ask JS

| score | comments | title &amp; link |
|--|--|--|
| 10  | [15 comments](https://www.reddit.com/r/javascript/comments/fojld6/askjs_how_to_make_an_interactive_story_like/) | `[AskJS]` &amp;#91;AskJS&amp;#93; How to make an interactive story like NewYorkTimes?|
| 4  | [1 comments](https://www.reddit.com/r/javascript/comments/fnfor5/askjs_how_do_you_structure_the_folders_your/) | `[AskJS]` &amp;#91;AskJS&amp;#93; how do you structure the folders your project?|
| 3  | [11 comments](https://www.reddit.com/r/javascript/comments/fpf748/askjs_redux_or_no_redux/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Redux or no redux?|




&amp;nbsp;

###Top Showoffs

| score  |  comment  |
|--|--|
| 6  |  /u/lakesare said [I developed a site for 3 years, because Memrise wasn't good enough for Rails flashcards :-&amp;#41;   Didn't publish it anywhere yet.     It's a spaced-repetition site, completely free, completely open-so...](/r/javascript/comments/fqiplh/showoff_saturday_march_28_2020/flr8j9k/?context=5) |
| 6  |  /u/Skymt1 said [I studied easing functions and css transitions, and wound up with a beer o'clock countdown. :&amp;#41;   https://codepen.io/skymt/pen/MWwZQXG](/r/javascript/comments/fqiplh/showoff_saturday_march_28_2020/flqo0q4/?context=5) |
| 4  |  /u/zenivinez said [Didn't make it this week but I still wanna show it off. I made a game. It's a fully progressive web app. https://zombuild.quasarke.com/](/r/javascript/comments/fqiplh/showoff_saturday_march_28_2020/flr5lfq/?context=5) |




&amp;nbsp;

###Top Comments

| score  |  comment  |
|--|--|
| 155  |  /u/jimmyayo said [Rejoice, developers at banks!](/r/javascript/comments/fqq8rr/bootstrap_5_is_dropping_ie_10_11_browser_support/flrurog/?context=5) |
| 108  |  /u/mycall said [Still using Bootstrap 3, it's all good.](/r/javascript/comments/fqq8rr/bootstrap_5_is_dropping_ie_10_11_browser_support/flrox0o/?context=5) |
| 91  |  /u/feross said [Hey folks! I taught a course on web security last quarter at Stanford. All the course materials, slides, and videos are freely available online and I wanted to share with the broader community, in cas...](/r/javascript/comments/fnpzdx/stanford_cs253_web_security/flauzp8/?context=5) |
| 71  |  /u/EricIO said [The obvious solution &amp;#40;that of course doesn't solve all problems&amp;#41; is the answer given by GitHub at the end of the article.  FORK  I'm not sure why we have forgotten one of the moan benefits of ...](/r/javascript/comments/fpc8ay/what_happens_when_the_maintainer_of_a_js_library/flkmdax/?context=5) |
| 67  |  /u/dogofpavlov said [this is well done nice job... that being said I don't think I'd ever use someone else's website builder to highlight my website building abilities... to each his own](/r/javascript/comments/foqz4d/reactultimateresume_is_an_opensource_customizable/flhf6bp/?context=5) |




&amp;nbsp;",Your weekly /r/javascript recap
911,2020-03-30 15:45:57,0,1,"Discerning between a touch event and mouse event should be trivial.  
However with Typescript, it seems damn near impossible and it really is a black hole of wasted time trying to figure it out.  
  
```javascript 
export function getPageCoordinates(event: React.TouchEvent | React.MouseEvent, index = 0): Point {

    //This wont work because you cant use the ""in"" operator to search.
  if ('changedTouches' in event) {
    const { pageX, pageY } =
      event.touches.length &gt; index - 1
        ? event.touches[index]
        : { pageX: 0, pageY: 0 };
    return [pageX, pageY];
  }

    //This wont work either.
  if (event.type === 'touchstart' || event.type === 'touchmove' || event.type === 'touchend' || event.type === 'touchcancel') {
    const { pageX, pageY } =
      event.touches.length &gt; index - 1
        ? event.touches[index]
        : { pageX: 0, pageY: 0 };
    return [pageX, pageY];
  }
 

  return [0, 0];
}
```

Can one of you guys help explain to me how the fuck you can please typescript for simply checking whether an event is a mouseevent or a touchevent?",Problems with Discerning Events in Typescript is a Nightmare
912,2020-03-31 20:01:10,2,2,"I can't seem to figure out the correct way to configure my .tsconfig in order to create a .js file that I can consume with regular import { thing } from ""./transpiledTypescript"".

I am consuming it in a Nuxt app.

In the end I gave up and I am now transpiling the .ts file with rollup to get the desired result. 

Can anyone point me in the correct direction to get this working with the typescript transpiler?",How to configure .tsconfig for es modules
913,2020-04-01 00:05:31,7,1,"The monthly thread for people to post openings at their companies.

* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.

* Please only post if you personally are part of the hiring company—no recruiting firms or job boards **Please report recruiters or job boards**. 

* Only one post per company. 

* If it isn't a household name, explain what your company does. Sell it.

* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).


Commenters: please don't reply to job posts to complain about something. It's off topic here.

Readers: please only email if you are personally interested in the job. 

Posting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)

[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)",Who's hiring Typescript developers - April
914,2020-04-01 07:42:40,26,1,Staff like arr.map().filter().map().reduce() - can theoretically be compiled to single for loop. Should it be?  TypeScript can even give users some superset of standart   library,Since typescript compiles itself can it optimize functional staff?
915,2020-04-01 20:07:53,2,1,"I'm following along with LevelupTutorials styled-components and most of it doesn't concern typescript vey much , but the lesson about media queries has me stumped about typing this function (mostly because I don't understand typing reduce functions:

`type SizesProps = {`  
`[key: string]: number`  
`}`

`const sizes: SizesProps = {`  
`small: 400,`  
`medium: 960,`  
`large: 1140,`  
`xlarge: 1792`  
`}`  
`const media = Object.keys(sizes).reduce((accumulator, label)=&gt; {`  
`accumulator[label] = (...args)=&gt; css\\`\``  
`u/media(min-width: ${sizes[label]}px) {`  
`${css(...args)}`  
`}`  
`\``  
`return accumulator`  
`}, {} )\``

The `accumulator[label]`  
 is telling me: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{}'.  
No index signature with a parameter of type 'string' was found on type '{}'.

`${css(...args)}`  
is saying Expected at least 1 arguments, but got 0.ts(2555)

index.d.ts(277, 9): An argument for 'first' was not provided.

I've been trying to fiddle around with this but I just don't get it. Please help",Help with a Styled-Components media query function
916,2020-04-01 22:10:21,5,1,"I recently discovered [Utility Types](https://www.typescriptlang.org/docs/handbook/utility-types.html) and found one that allows modification of readonly properties via [TypeScript/issues/24509](https://github.com/microsoft/TypeScript/issues/24509).

```typescript
export type Mutable&lt;Type&gt; = {
  -readonly [key in keyof Type]: Type[key]
}

class Foo{
  readonly bar: boolean = true
}

const foo = new Foo()

;(foo as Mutable&lt;Foo&gt;).bar = false
```
 
This is very useful because it maintains IntelliSense &amp; refactoring capabilities in VSCode, and allows you to make assignments in your library code while still keeping the end-user's property access as read-only. 

Here are some examples demonstrating the differences of several implementations:

- no cast, has error:  
[@Imgur](https://i.imgur.com/f7I6phu.png)  
- cast to `any`, no error, but removes IntelliSense &amp; refactoring:  
[@Imgur](https://i.imgur.com/khysPQB.png)  
- cast to `Mutable`, no error, maintains IntelliSense &amp; refactoring:  
[@Imgur](https://i.imgur.com/LMutHUA.png)  
 
&amp;nbsp;  

-----
&amp;nbsp;  
 
Similarly, I'd like to be able to modify private and protected properties while maintaining IntelliSense &amp; refactoring.

Is it possible to write a utility type that allows this?",Access Private/Protected via Utility Type?
917,2020-04-03 09:51:29,6,1,"Hi there! I'm fairly new to typescript, so maybe the question is wrong itself but, I need to do get the possible outputs of a function as the keys for an object. That is:

    interface Tagger {
        factory: (x: number) =&gt; T
        tags: { [key of T]: () =&gt; void }
    }
    
    const tagger: Tagger = {
        factory: x =&gt; x % 2 === 0 ? ""even"" : ""odd"",
        tags: {
            even: () =&gt; console.log('is even'),
            odd: () =&gt; console.log('is odd'),
        }
    }

The property `tags` should have possible keys `""even"" | ""odd""`.

Is this even possible? Thanks!",How to infer callback function return type?
918,2020-04-06 05:44:03,8,1,"in typescript if you don't define a type for an object, you get intellisense out of the box. 

```
const container = {
  row: { flexDirection: ""row"" },
  ...
}
```

how ever if you provide typing for the inner objects you lose typing on the outer one 

```
const container: Record&lt;string, ViewStyle&gt; = {
  row: { flexDirection: ""row"" },
  ...
}
```

is there a way to get both such that when u are using the `container` in the snippet above you get `row` as intellisense",typing for dynamic objects ?
919,2020-04-06 11:47:04,0,1,"I am a little confused by these definitions, I saw the official typescript documentation and I don't understand the most adequate definition of `ambient` and how it affects when the word module (`ambient module` and `ambient module declaration`) is used together.","what is the diference between ambient declaration, ambient module and ambient module declaration?"
920,2020-04-06 17:43:02,4,1,"Hi everyone,

Not sure if this has been posted here already, but here it goes.

At my company we have been using TS for about year now, and usually what we did when we have had some function declaration was:

`let myAdd = function(x: number, y: number): number { return x + y; };`

Note: this is C/P from [TS Docs page](https://www.typescriptlang.org/docs/handbook/functions.html#functions)

**BUT!**

What I have found out today, is that you can type function, ""as if you were typing the object"", this is snippet from our code:

Note: we almost always keep typings in separate file:

`type GetFuzzySearchServiceArgs&lt;T&gt; = {`  
  `dataToBeSearched: ReadonlyArray&lt;T&gt;;`  
  `searchBy: string;`  
  `searchType: SearchType;`  
`};`

`export type GetFuzzySearchService = &lt;T&gt;(args: GetFuzzySearchServiceArgs&lt;T&gt;) =&gt; FuzzySearcher&lt;T&gt;;`

  
`export type FuzzySearch = &lt;T&gt;(fuzzySearcher: FuzzySearcher&lt;T&gt;, keyword: string) =&gt; T[];`

&amp;#x200B;

Then, you can simply have function(in separate file)  as follows:

`export const getFuzzySearchService: GetFuzzySearchService = ({ dataToBeSearched, searchBy: key, searchType }) =&gt; { ... some code here }`

`export const search: FuzzySearch = (fuzzySearcher, keyword) =&gt;`  
  `fuzzySearcher.search(keyword).map(searchResult =&gt; ({ ...searchResult.item }));`  


And everything is correctly typed (and even generic) and looks  clean.

One of the popular reasons people don't like TS, as far as I know, is that types clutter code too much, but IMHO code above is pretty readable.

&amp;#x200B;

P.S.

Shout out to [fuse.js](https://fusejs.io) \- it's beyond awesome",Better (?) Typing of functions
921,2020-04-07 06:19:18,6,1,"the reason I'm asking this is, I wanna check for both type errors as well as eslint errors before commit my code, does running eslint covers all cases or should I run `tsc` or `typescript` too ?",what is the difference between `Ts` errors vs `Eslint` errors when using `@typescript-eslint/parser` ?
922,2020-04-08 14:12:22,17,1,"My App recieves a lot of data through axios, and currently I do not type check any of it. So basically I'm casting completely unknown values into typescript. Which is not ideal.

I wonder, does anyone check their axios responses somehow? Runtime typechecking doesn't really seem to be a thing for typescript.

I've read about user defined type guards, but I couldn't get them to do what I want them to do, which is something like this

    interface WhatIWant {
        ...
    }
    
    Axios.get(...).then(res =&gt; {
        if (verifyType(res.data, WhatIWant))
            setState(res.data)
        else throw new Error(""Unexpected Type"")
    }

Going full verbose shouldn't be the moral of the story

    let data;
    if (typeof res.data.foo === string) data = res.data.foo;

I've heard of libraries like yup. But that doesn't solve anything if I'm not using my typescript types/interfaces.",Do you guys verify your axios responses?
923,2020-04-09 19:40:16,1,1,"So I just started using GraphQL Nexus today and I'm just doing some basic setup and noodling around with some stuff. I coded a simple registerUser mutation like so:

`export const Mutation = objectType({`  
  `name: 'Mutation',`  
 `definition(t) {`  
 `t.boolean('register', {`  
`args: {`  
`email: stringArg({ required: true }),`  
`password: stringArg({ required: true }),`  
 `},`  
`async resolve(_, { email, password }) {`  
 `console.log(password, email)`  
`return true`  
 `},`  
 `})`  
 `},`  
`})`

But when I replaced the arguments to 'register' with a RegisterInput input like so:

`export const RegisterInput = inputObjectType({`  
  `name: 'RegisterInput',`  
 `definition(t) {`  
 `t.string('email', { required: true })`  
 `t.string('password', { required: true })`  
 `},`  
`})`  


`export const Mutation = objectType({`  
  `name: 'Mutation',`  
 `definition(t) {`  
 `t.boolean('register', {`  
`args: {`  
`input: arg({ type: RegisterInput }),`  
 `},`  
`async resolve(_, { input: { email, password } }) {`  
 `console.log(password, email)`  
`return true`  
 `},`  
 `})`  
 `},`  
`})`

Everything works, but he resolver input argument `{ input: { email, password } }` gets typescript a little complain - Property 'email'/'password' does not exist on type '{ email: string; password: string; } | null | undefined'? How do I get those annoying red squiggles to go away?",Typescript problem using GraphQL Nexus
924,2020-04-09 21:09:56,5,1,[removed],Why does typescript think my sort comparator is invalid?
925,2020-04-09 21:53:32,5,1,"I'm creating a new MongoDB document in a GraphQL Nexus resolver:

`async resolve(_, { input: { email, password } }, { userData }) {`  
 `const hashedPassword = await bcrypt.hash(password, 10)`  
 `let newUser = {`  
  `email,`  
  `password: hashedPassword,`  
 `}`  
 `const { insertedId } = await userData.insertOne(newUser)`  
 `newUser._id = insertedId`  
  `return newUser`  
 `},`

but typescript says property '\_id' does not exist on type '{ email: string; password: string; }'. I'm stuck because this is how I create a new document in mongo using plain JS. What is the proper way to add the insertedId?",Typescript problem with a GraphQl Nexus resolver
926,2020-04-10 02:02:57,5,1,"Hi,

so in typescript, once we define an object like this 

```
const parsedData = {
            serviceType,
            stops,
            deliveries,
            requesterContact: {
                name: pickup.personInChargeName,
                phone: merchantPhoneValidator(pickup.personInChargePhoneNum),
            },
            specialRequests,
        };
```
Then we cannot dynamically add more fields like javascript
```
// error 
if (isPreOrder) {
       parsedData.scheduleAt = new Date(pickup.startAt).toISOString();
}
```
Nor we can add dummy field just letting typescript know we have this field
```
const parsedData = {
            scheduleAt : undefined  // error
            serviceType,
            stops,
            deliveries,
            requesterContact: {
                name: pickup.personInChargeName,
                phone: merchantPhoneValidator(pickup.personInChargePhoneNum),
            },
            specialRequests,
        };
```

Any better way to get around with this except disabling typescript? Thanks!",typescript object literal problem
927,2020-04-10 04:10:30,2,1,"I've seen setups for debugging Frontend code with source maps, and complex configurations for debugging entire typescript projects in vscode with sourcemaps.  


However, what if I have a project that is in Vanilla Node.js, but some of my dependencies are in Typescript? How do I debug those in vscode or chrome?",Debugging typescript dependencies from a non typescript node project
928,2020-04-12 13:57:32,12,5,"Is there a good way in typescript to type a function that will recursively access object properties? Here's a hand-coded example of going two levels deep:

```
function deepProp&lt;T, K extends keyof T&gt;(obj: T, prop1: K, prop2: keyof T[K]) {
    return obj[prop1][prop2];
}

// Example use
const obj = {
    user: {
        pets: [{
            toys: [{
                name: ""Toughy"",
                price: 1999
            }]
        }]
    }
} as const
deepProp(obj, ""user"", ""pets"");
```

But I'm looking for a good way to take any number of `props` in the `deepProp` function to dive down as deep as necessary. I imagine that function's signature would be something like `function deepProp(obj, ...props) {  }`. Is there a good way to do this? Thanks!",Typed function to recursively access object properties?
929,2020-04-13 15:15:26,3,1,"Hello everyone,

(I have simplified the actual implementation and meaning here)

So I have this case where we define an abstract class say A which has drink(), drive() functions, and we have implementation class B C D that inherit from A (all B C D will have drink() and drive()), however we also have other functions unique to themselves like sing(name : string) for B, jump(height : number) for D.

Now I store all the instance of B C D in the AllType map, and I can get each instance by AllType\[type\] where type = B | C | D, **for each** of the instance I will call the common method, also I need to call their unique method.

In order to do so, I do a switch check, if it is B then do AllType\[type\].sing(name), if D then do Alltype\[type\].jump(height), **but now the typescript will not help me to check the function's parameters**, and I do want this feature for collaborations (we have several class like this and things could mess up if no type support here).

So initial try is to create another interface on top of the class, each interface defining the additional unique functions, and cast the interface to AllType\[type\], however this could not work perfectly, the function only check the number of params and not the type of params.

Any other suggestions on how to handle this? All we want is to have some arguments check and type check for cases like AllType\[type\].functions(args).

Really appreciate for the long reading and helps here :)

Short example
```
const riderInfos = await (partners[claimedPartner] as ILalamove).GetDriver(
                                        claimedJob.id,
                                        claimedJob.riderId,
                                        job.isTest, //should highlighting wrong, cause the type should be LogisticOptions
                                        );

interface ILalamove {
    GetDriver(id: string, riderId: string, options: LogisticOptions): DriverDetailResponse;
}
```",Need some help with interface for classes
930,2020-04-14 06:16:23,60,268,,Cypress now supports typescript for test files without using special preprocessors plugins
931,2020-04-15 15:19:29,9,8,"is there a way to dynamically generate a const assertion in typescript ?

I know you can create a `readonlyArray` assertion based on a staticly typed array, eg.

     const staticTyped = [1, 2, 3] as const // readonly [1, 2, 3]
     type TypeStatic = typeof staticTyped[number] // 1 | 2 | 3
    

Now that works as expected and elegantly. However, I need to create a large readonly array that's generated dynamically.

    const generateNumRange = (from: number, to: number): number[] =&gt; {
      const arr = []
      for (let i = from; i &lt;= to; i++) {
         arr.push(i)
      }
      return arr
    }
    
    const dynamicTyped = [...generateNumRange(0, 255)] as const // readonly number[]
    type TypeDynamic = typeof dynamicTyped[number] // number (oof)

Now I do understand where the issue lies, however I can't think of a way, that would allow me to return the `dyanmicTyped` as `[0, 1, 2, ..., 255]` rather than `number[]`.

Is there any way to do this / perhaps even more elegant solution to the problem altogether?",Is there a way to convert dynamic array to static type assertion?
932,2020-04-16 02:52:40,5,3,"I got annoyed that I kept forgetting to compile my TS before pushing. So I made a GitHub action to compile it for me and make another commit if I ever forget to compile it. I'm posting a link to the action here if you guys ever need that failsafe in the background for anything.

https://github.com/marketplace/actions/typescript-tsc-build-push",GitHub Action: Typescript compile failsafe
933,2020-04-17 19:58:23,6,1,"Hi,

I've created typescript (project reference, path mapping, ts-node-dev) + lerna + yarn workspace + jest (ts-jest) + eslint (\`overrides\` for supporting difference rules against js and ts) + etc boilerplate with explanation.

[https://github.com/jjangga0214/ts-yarn-lerna-boilerplate](https://github.com/jjangga0214/ts-yarn-lerna-boilerplate)

Hope it can be helpful to someone.",ts lerna boilerplate
934,2020-04-18 10:30:25,2,1,"Here is my [Code on TypeScript playground](https://www.typescriptlang.org/v2/en/play?#code/KYDwDg9gTgLgBASwHY2FAZgQwMbDgFVBgAUoIw0YFgBnOAbwCg4W4ByG4GKpAcxoB0IAJ4AvfMIpsAXHCQBXALYAjNAG5mrBDQCSKNFlwB5JLOUQIAG2CYkGgL6NGoSLDjYISGvDBkKsYT0AE1B8CABlGCh5bBh5KGAgo2UAKwBZTDBZejgAbWQQkEQkOABrYGEIdAIiUnJKahoAXVkFFTQ4ezgAXgZNFg4uHn4hMQkpWQAGABp+xF19DBxgE1kAJkZHZ3BoeGxLTBo6AHFgJDQEbD1UJdwAHlPzqEu6-ypaAD4+1ndPb2jYtAABS+BAAN0wqDgvnqAWCoQiURicQSyXSmWyeQKoGKZQqVTgjwu2FeDVoLTkSlUUE6AEoGFsfmB5MpLJc4LwuKTYI0gfSmD8fgB6IX0LraOAwCx44BgSUACwlNCQCDAFHgNHluwEcAASjZLHAAO7QSxBX4hY0QeRmuAJFElTDQvwdCCpYCxARzH72+IlMVwQ6Es7E7nvGgaH6OLYigCi4DZ2AQqEswjg8hoyF4NRAJBdPNocHQ0GDTxe+fDVqgpRojA8XngLkTyZ6cmARtLxOuBmWd0IubDjQ+IIrgSQhTCkQBKMSaIyYFpGnr3jgTYQydedF6a6TMAEnLzsPDfLUcBF8qDMEkeH7h7ejScIp0ijAzZTaeQ6AufE7zxJFcaBUyHkXh5QVPA3RSD0fDIMEEBCc1kHA34G2nEsgggQskAgeATWrOs-ngBAXzfVtzg7Ik-27W5gBHI8xwnRFp3iWdUnnRcCIbRASMuDc-C3bjX14vcD0HWgTzPIULzoK8KAYQZuCzQQRHEa8ZHTJBSmwo0kGmeZqMMFZTA0rSIB0+wgA) for interactive debugging  


Here a Text version of my code:  
 `export interface TextProperties {`  
 `'settings.xyzType': number;`  
    `isInterfaceOn: boolean;`  
`}`  
`export const propertyIndexToStructuredObjMap: { [index in keyof TextProperties]: number } = {`  
 `'settings.xyzType': 0,`  
    `isInterfaceOn: 2`  
`}`  
`export class GenericInterface&lt;GenericProperties&gt; {`  
 `constructor(private propertyIndexToStructureObjMap: { [index in keyof GenericProperties]: number }) {}`  
 `public getProperties() {`  
 `//{} is too keep this snippet short. Real world code would return a proper object.`  
 `return {} as GenericProperties;`  
 `}`  
`}`  
`//Explicitely using TextProperties for GenericProperties works`  
`const explicit = new GenericInterface&lt;TextProperties&gt;(propertyIndexToStructuredObjMap);`  
`const expliitProps = explicit.getProperties(); //has type TextProperties`  
`//Implicitely infering GenericProperties through the object provided in the constructor does not work`  
`const implicit = new GenericInterface(propertyIndexToStructuredObjMap);`  
`const implicitProps = implicit.getProperties(); //has type {'settings.xyzType': unknown, isInterfaceOn: unknown}`  


As described in the comments, submitting the type for the generic in the class explicitly makes it work like a charm and the getProperties function returns the correct type.

Implicit inferencing does not work completely. It returns an Object with the correct keys, but the types of it's values are all unknown.

Is there a way to make the implicit inferencing work in my case, so I don't have to explicitly state the type all the time?",Implicit inferencing of generic type in class through constructor property does not work
935,2020-04-20 09:01:11,2,1,"**Monday, April 13 - Sunday, April 19**

###Top Posts

| score | comments | title &amp; link |
|--|--|--|
| 651  | [128 comments](https://www.reddit.com/r/javascript/comments/g3tu59/built_this_website_with_javascript_that_lets_you/) | [Built this website with Javascript that lets you spend Jeff Bezos' money on expensive items like sports cars and mansions. &amp;#40;You can end world hunger&amp;#41;](https://3pic.github.io/money)|
| 368  | [61 comments](https://www.reddit.com/r/javascript/comments/g3k4s5/i_ported_the_microsoft_calculator_engine_to_web/) | [I ported the Microsoft Calculator &amp;#40;engine&amp;#41; to web, to run in browsers cross-platform, using WebAssembly. I wrote the UI layer myself using HTML-CSS and vanilla JavaScript while the engine layer is straight away port of original calculator written in cpp.](https://github.com/muzam1l/mcalculator)|
| 320  | [66 comments](https://www.reddit.com/r/javascript/comments/g2hmj6/puppeteer_300_now_supports_firefox_out_of_the_box/) | [Puppeteer 3.0.0 now supports Firefox out of the box](https://github.com/puppeteer/puppeteer/releases/tag/v3.0.0)|
| 286  | [182 comments](https://www.reddit.com/r/javascript/comments/g1zj87/crankjs_an_alternative_to_reactjs_with_built_in/) | [Crank.js - An alternative to React.js with built in support for promises and generator functions for state.](https://github.com/bikeshaving/crank)|
| 279  | [62 comments](https://www.reddit.com/r/javascript/comments/g1qmfg/any_fans_of_javascript_on_hardware_i_wanted_to/) | [Any fans of JavaScript on hardware? I wanted to share an IoT device I made that tells me when my next bus will arrive](https://medium.com/@robert.mcgui/onetesselaway-public-transit-status-iot-device-70b80ab8475b)|
| 279  | [60 comments](https://www.reddit.com/r/javascript/comments/g107vs/cypress_now_supports_typescript_for_test_files/) | [Cypress now supports typescript for test files without using special preprocessors plugins](https://github.com/cypress-io/cypress/issues/1859)|
| 206  | [14 comments](https://www.reddit.com/r/javascript/comments/g2nov4/simpsons_hit_run_api_this_is_a_library_to/) | [Simpsons: Hit &amp;amp; Run API - This is a library to automate the abandonware game Simpsons: Hit &amp;amp; Run with JavaScript. It uses frida to access internal state, and exposes JavaScript classes that can be used to query and control the game](https://github.com/taviso/sharapi)|
| 198  | [32 comments](https://www.reddit.com/r/javascript/comments/g33o3u/hi_everyone_ive_created_a_small_frontend_library/) | [Hi everyone! I've created a small frontend library that lets you submit HTML forms as nested objects. This is my first ever attempt at writing a Javascript library, and I'd appreciate it if you guys gave me your thoughts](https://github.com/rory660/deepforms)|
| 177  | [268 comments](https://www.reddit.com/r/javascript/comments/g0jwlu/jquery_350_released/) | [jQuery 3.5.0 Released](http://blog.jquery.com/2020/04/10/jquery-3-5-0-released/)|
| 176  | [17 comments](https://www.reddit.com/r/javascript/comments/g1lcnp/writing_an_emulator_in_javascript_and_interfacing/) | [Writing an Emulator in JavaScript &amp;#40;and Interfacing with Multiple UIs&amp;#41;](https://www.taniarascia.com/writing-an-emulator-in-javascript-chip8/)|




&amp;nbsp;

###Most Commented Posts

| score | comments | title &amp; link |
|--|--|--|
| 112  | [134 comments](https://www.reddit.com/r/javascript/comments/g17jir/webstorm_20201_has_been_released/) | [WebStorm 2020.1 has been released](https://blog.jetbrains.com/webstorm/2020/04/webstorm-2020-1/)|
| 94  | [85 comments](https://www.reddit.com/r/javascript/comments/g4f8ca/askjs_am_i_missing_out_on_anything_truly/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Am I missing out on anything truly important by avoiding classes entirely?|
| 28  | [51 comments](https://www.reddit.com/r/javascript/comments/g3ti5r/i_am_sharing_a_set_of_100_js_interview_questions/) | [I am sharing a set of 100 JS Interview questions that helped to crack last 9 consecutive JavaScript interviews. This is the first one, how to flatten a deeply nested array.](https://www.niksbay.com/2020/04/how-to-flatten-nested-array-js-interview-recursion.html?m=1)|
| 73  | [40 comments](https://www.reddit.com/r/javascript/comments/g1naew/although_json_web_tokens_have_become_incredibly/) | [Although JSON Web Tokens have become incredibly popular, its use for authenticating users sessions is controversial. Here's an attempt to demonstrate the pros and cons of using JWT for this context.](https://supertokens.io/blog/are-you-using-jwts-for-user-sessions-in-the-correct-way?utm_source=Reddit)|
| 143  | [32 comments](https://www.reddit.com/r/javascript/comments/g0gd6y/the_algebraic_structure_of_functions_illustrated/) | [The Algebraic Structure of Functions, illustrated using React components](https://jrsinclair.com/articles/2020/algebraic-structure-of-functions-illustrated-with-react-components/)|




&amp;nbsp;

###Top Ask JS

| score | comments | title &amp; link |
|--|--|--|
| 3  | [6 comments](https://www.reddit.com/r/javascript/comments/g2cl7e/askjs_resources_on_building_an_api_as_a_service/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Resources on building an API as a service with Express.js|
| 3  | [4 comments](https://www.reddit.com/r/javascript/comments/g1x83s/askjs_are_there_any_tests_that_would_suggest_what/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Are there any tests that would suggest what the recommended octane score is for my web application to run in client's browser|
| 3  | [10 comments](https://www.reddit.com/r/javascript/comments/g0gq5c/askjs_building_a_new_project_am_i_over/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Building a new project, am I over engineering or did I make the right decisions?|




&amp;nbsp;

###Top Showoffs

| score  |  comment  |
|--|--|
| 4  |  /u/rowadz said [A tool that generates a dashboard based on your GitHub public data   check it out here:      &amp;#91;https://mohammedal-rowad.github.io/vexpest/&amp;#93;&amp;#40;https://mohammedal-rowad.github.io/vexpest/&amp;#41; ...](/r/javascript/comments/g3m95m/showoff_saturday_april_18_2020/fnsar2l/?context=5) |
| 4  |  /u/RemiV2 said [Here's my personal site and blog. I just published it, and I'll be posting new content over the next few weeks. Let me know what you think!   &amp;#91;https://remi.space&amp;#93;&amp;#40;https://remi.space&amp;#41;](/r/javascript/comments/g3m95m/showoff_saturday_april_18_2020/fns7uwh/?context=5) |
| 2  |  /u/missionalpha_dev said [ Hey Guys, very long time reddit browser here but never made a post. I hope this is the appropriate way to post this.  So i'm a long time hobby programmer, was out of it for a while but recently becam...](/r/javascript/comments/g3m95m/showoff_saturday_april_18_2020/fnt026b/?context=5) |




&amp;nbsp;

###Top Comments

| score  |  comment  |
|--|--|
| 156  |  /u/unc4l1n said [Went straight for a fleet of F35s and didn't have enough left to end world hunger. Oh well.](/r/javascript/comments/g3tu59/built_this_website_with_javascript_that_lets_you/fntob1i/?context=5) |
| 115  |  /u/kerbal45 said [I ended homelessess by buying a thousand tigers and letting them roam the streets.](/r/javascript/comments/g3tu59/built_this_website_with_javascript_that_lets_you/fntyiv4/?context=5) |
| 111  |  /u/sickcodebruh420 said [I appreciate that the world is a gigantic flaming dumpster but you can still count on jQuery. There’s something kind of reassuring about the fact that it’s still being developed.](/r/javascript/comments/g0jwlu/jquery_350_released/fnbgrrk/?context=5) |
| 76  |  /u/leeoniya said [for anyone needing jquery-compatible DOM api sugar, i recommend the tiny, fast and well-structured https://umbrellajs.com/  it's 7.82KB min vs jQuery's 87.3KB min](/r/javascript/comments/g0jwlu/jquery_350_released/fnamfa6/?context=5) |
| 75  |  /u/safeforanything said [Helicopters seem to be bugged. I can buy 1000000000022 of them without spending a dollar.](/r/javascript/comments/g3tu59/built_this_website_with_javascript_that_lets_you/fntjsyl/?context=5) |




&amp;nbsp;",Your weekly /r/javascript recap
936,2020-04-21 08:37:34,18,1,,I tried offloading my typescript compilation to a remote machine
937,2020-04-21 09:39:58,5,1,"I am just started learning typescript and I want to know if this is the correct way to write the interface for a curried function

    interface Add {
      (a: number): (b: number) =&gt; number;
    }
    const add: Add = (a) =&gt; (b) =&gt; a + b
    console.log(add(1)(2))

Or do I have to explicitly add a return type to the function even though I already added it to the interface

    interface Add {
      (a: number): (b: number) =&gt; number;
    }
    const add: Add = (a) =&gt; (b): number =&gt; a + b
    console.log(add(1)(2))
    

My linter is warning me about not having the return type on the function. Should I add the return type twice (that feels like double work)? Also should I be using interfaces or types, or something else entirely that I don't know about?

This is my linter message btw *Missing return type on function.eslint*[*@typescript-eslint/explicit-function-return-type*](https://github.com/typescript-eslint/typescript-eslint/blob/v2.28.0/packages/eslint-plugin/docs/rules/explicit-function-return-type.md)

Thanks y'all",How should I write an interface for a curried function?
938,2020-04-21 13:11:31,31,1,"[Myzod](https://www.npmjs.com/package/myzod) is a runtime validation library who's goal is to use only typescript concepts to build type infer-able schemas.  The purpose of [myzod](https://www.npmjs.com/package/myzod) is to no longer have to match declared typescript types to the result of separately maintained validation logic, and in so doing minimise discrepancies between runtime  and the compile time types. Myzod is also inspired by [@hapi/joi](https://www.npmjs.com/package/@hapi/joi) and offers a similar validation api.  


At this time I am about ready to release version 1.0.0 but I am hoping to get more eyes on it before I do. Any feedback, issues, feature requests, or PRs would be extremely valuable.

Thanks in advance.",Myzod v1.0.0-alphar release - Schema Validation and Type Inference
939,2020-04-21 14:19:30,4,1,More information at [https://stackoverflow.com/questions/61328675/how-to-omit-a-property-from-a-partialtype-in-typescript](https://stackoverflow.com/questions/61328675/how-to-omit-a-property-from-a-partialtype-in-typescript),How can I omit a property in a Partial type? Combining Omit and Partial didn't work
940,2020-04-21 23:13:24,8,2,,"Ofnotes: Offline note taking application with live markdown rendering rewritten in typescript, hooks, context, and material-ui with improved user experience and 100% test coverage"
941,2020-04-22 13:14:54,5,1,"I have an interface:

```
interface FormProps {
  regexPreset?: RegexPresets;
  customRegex?: RegExp;
  description?: string;
  inputTitle: string;
  errorMessage?: string;
}
```
Implemented like this:
```
const Form: React.FC&lt;FormProps&gt; = props =&gt; {
  return &lt;div&gt; formstuff &lt;/div&gt;
} 
```
If I pass in a `customRegex`, I want the compiler to throw an error if `errorMessage` is not passed (make errorMessage a mandatory property). 
If `customRegex` is **not** passed, then **don't** make `errorMessage` mandatory.

The closest thing that I've come to is this (StackOverflow post)[https://stackoverflow.com/questions/52771626/typescript-react-conditionally-optional-props-based-on-the-type-of-another-prop], but I'm unsure whether I can apply this to my use case.

I asked this on StackOverflow and came up blank. I'm hoping the minds of /r/TypeScript can help me solve this!",How to make prop mandatory based on another prop being passed
942,2020-04-22 17:43:16,9,3,I'm an android developer at a small software development company. I'm interested in learning how to create API using typescript. I currently have zero know about backend web development. I'd like to know how I can go about leaning this language? Should I learn JavaScript and nodejs first before learning typescript? Is there any resource targeted towards people who don't know JavaScript?,Android developer looking to develop sever side ApI with typescript
943,2020-04-25 08:09:16,2,1,[removed],"I rewrite my Web Extension (60k users) with clean-architecture, typescript, redux-observable"
944,2020-04-25 08:20:17,18,1,,"I rewrote my Web Extension (60k users) with clean-architecture, typescript, redux-observable"
945,2020-04-25 12:35:59,24,1,"A popular bundle of .NET + SPA framework written in TypeScript has a notorious problem of enforcing contracts between the back-end and the front-end. 

[Here is my analysis of 6 options](https://alex-klaus.com/marry-csharp-typescript/) to generate TypeScript code from C#: NSwag, Swagger Codegen, OpenAPI Generator, AutoRest, WebApiClientGen and TypeWriter.

Have you used any of these tools, did you try others? Any feedback welcome",6 ways to marry C# with TypeScript
946,2020-04-25 15:33:12,1,1,,Consuming todoist API with fetch and typescript
947,2020-04-26 11:52:05,0,1,"Hello. 

So I'm making a typescript module that will be used by other project (ts and js). And **I CANNOT** make the declaration file work the way it is supposed to.

My module is made out of 3 files :

```
- mainClass.ts
- otherClass.ts
- types.d.ts
```
All my types are generated in the `types.d.ts` like this at top level.
```javascript
export type mainClassConstructor = new (
  config: Config,
) =&gt; void

export interface mainClassInterface {
  config: Config
  getIndex(indexUid: string): Index
  ...
}
```

in my `mainClass.ts` which is the entry point of my module my class is like this: 
```javascript

const mainClass: Types.mainClassConstructor = class implements Types.mainClassInterface {
  config: Types.Config
  constructor(config: Types.Config) {
    this.config = config
  }
  getIndex(indexUid: string): Index {
     return new Index(indexUid);
  }
}
```

Now, when I add this module to another typescript project using `types.d.ts` as typing in `package.json`. Upon creating my first object I receive this error:

&gt; Type 'typeof import(""/mymodule-js/src/types"")' has no construct signatures.  TS2351

### generated types in package.json
but when I generate the declaration files with the typescript module of rollup and 
use `mainClass.d.ts` as typing file in package.json",How to correctly make type files for a typescript module
948,2020-04-27 09:01:10,1,1,"**Monday, April 20 - Sunday, April 26**

###Top Posts

| score | comments | title &amp; link |
|--|--|--|
| 541  | [42 comments](https://www.reddit.com/r/javascript/comments/g6opsc/i_trained_a_recurrent_neural_network_in/) | [I trained a recurrent neural network in JavaScript trained to draw dick doodles](/r/MachineLearning/comments/g6og9l/p_i_trained_a_recurrent_neural_network_trained_to/)|
| 410  | [82 comments](https://www.reddit.com/r/javascript/comments/g5har3/nodejs_v14_released/) | [Node.js v14 released](https://medium.com/@nodejs/node-js-version-14-available-now-8170d384567e)|
| 334  | [50 comments](https://www.reddit.com/r/javascript/comments/g60fmg/codedoc_easily_create_beautiful_and_modern/) | [Codedoc: Easily create beautiful and modern docs/wiki for your software projects](https://codedoc.cc)|
| 286  | [64 comments](https://www.reddit.com/r/javascript/comments/g83evc/createreactapp_breaks_due_to_dependency_on/) | [create-react-app breaks due to dependency on one-liner package](https://github.com/then/is-promise/issues/13#issuecomment-619402307)|
| 249  | [74 comments](https://www.reddit.com/r/javascript/comments/g6xvtm/i_create_a_website_to_play_uno_with_your_friends/) | [I create a website to play Uno with your friends in the browser! Built with javascript and socket.io](https://www.playuno.net)|
| 246  | [21 comments](https://www.reddit.com/r/javascript/comments/g8rniy/eloquent_javascript_3rd_edition_full_text/) | [Eloquent JavaScript, 3rd Edition. Full text available online.](https://eloquentjavascript.net/)|
| 217  | [18 comments](https://www.reddit.com/r/javascript/comments/g7q274/i_rewrote_my_web_extension_60k_users_with/) | [I rewrote my Web Extension &amp;#40;60k users&amp;#41; with clean-architecture, typescript, redux-observable](https://github.com/puemos/hls-downloader-web-extension)|
| 189  | [26 comments](https://www.reddit.com/r/javascript/comments/g6k4v7/finally_v10_release_of_terrain_builder_my_fully/) | [Finally V1.0 release of Terrain Builder - my fully browser based Procedural Terrain Generator with Hydraulic Erosion. Written entirely in JavaScript using Three.js. Looking for feedback/feature requests. :&amp;#41;](https://github.com/FarazzShaikh/Terrain-Builder)|
| 168  | [69 comments](https://www.reddit.com/r/javascript/comments/g5a8bi/the_next_release_of_createreactapp_will_include/) | [The next release of create-react-app will include experimental support for React Fast Refresh](https://github.com/facebook/create-react-app/pull/8582)|
| 160  | [21 comments](https://www.reddit.com/r/javascript/comments/g7nm5x/browser_screenshots_in_javascript/) | [Browser screenshots in JavaScript](https://github.com/gripeless/pico#readme)|




&amp;nbsp;

###Most Commented Posts

| score | comments | title &amp; link |
|--|--|--|
| 38  | [109 comments](https://www.reddit.com/r/javascript/comments/g5xti2/askjs_why_javascript_is_your_favorite_language/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Why Javascript is your favorite language ?|
| 76  | [61 comments](https://www.reddit.com/r/javascript/comments/g8k54m/svelte_web_component_54kb_angular_web_component/) | [Svelte Web Component &amp;#40;5.4KB&amp;#41; &amp;amp; Angular Web Component &amp;#40;51KB&amp;#41;](https://medium.com/@gogakoreli/svelte-web-component-5-4kb-4afe46590d99)|
| 42  | [37 comments](https://www.reddit.com/r/javascript/comments/g5x6ry/i_rebuilt_my_website_using_gatsbyjs_and_im_loving/) | [I rebuilt my website using GatsbyJS, and I'm loving it!](https://amruthpillai.com/)|
| 97  | [26 comments](https://www.reddit.com/r/javascript/comments/g4o075/i_made_a_spreadsheet_engine_in_javascript/) | [I made a Spreadsheet engine in Javascript - super-powered spreadsheet engine with objects, arrays, and async support out-of-the-box — comments and suggestions are welcome](https://github.com/elis/djit)|
| 69  | [24 comments](https://www.reddit.com/r/javascript/comments/g795aq/can_javascript_detect_the_browsers_zoom_level/) | [Can JavaScript Detect the Browser's Zoom Level?](https://css-tricks.com/can-javascript-detect-the-browsers-zoom-level/)|




&amp;nbsp;

###Top Ask JS

| score | comments | title &amp; link |
|--|--|--|
| 16  | [7 comments](https://www.reddit.com/r/javascript/comments/g7rfga/askjs_using_consoletime_to_calculate_the_time_it/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Using console.time to calculate the time it takes a block of code to execute|
| 5  | [2 comments](https://www.reddit.com/r/javascript/comments/g4x96o/askjs_any_tipsresources_for_building_a_playpause/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Any tips/resources for building a play/pause image slides for a noob?|
| 3  | [11 comments](https://www.reddit.com/r/javascript/comments/g8q13l/askjs_what_is_the_best_way_to_make_my_js_library/) | `[AskJS]` &amp;#91;AskJS&amp;#93; What is the best way to make my JS library as hard to reverse engineer as possible? &amp;#40;50k lines of raw JS&amp;#41;|




&amp;nbsp;

###Top Showoffs

| score  |  comment  |
|--|--|
| 5  |  /u/amor-me-pls said [One - Uno card game playable completely in the browser  &amp;#91;https://www.onegame.us&amp;#93;&amp;#40;https://www.onegame.us&amp;#41;  &amp;#91;https://github.com/VietLongTran/UnoOnlineBackEnd&amp;#93;&amp;#40;https://github....](/r/javascript/comments/g7s8h6/showoff_saturday_april_25_2020/fojcns9/?context=5) |
| 3  |  /u/MarsJr said [A terminal simulator built in Typescript/React.   Given a JSON ""filesystem"", it supports many core terminal commands like `cd`, `pwd`, `mkdir`, `ls`, `cat`, and more. It supports using `&amp;lt;tab&amp;gt;` t...](/r/javascript/comments/g7s8h6/showoff_saturday_april_25_2020/fojwd3z/?context=5) |
| 2  |  /u/nomrah said [Hi Folks,  I am a JS + &amp;#91;Elixir&amp;#93;&amp;#40;https://elixir-lang.org/&amp;#41; dev who loves React on the front-end, but much prefer the robustness and scalability offered from Elixir/Erlang on the back-en...](/r/javascript/comments/g7s8h6/showoff_saturday_april_25_2020/foofqsm/?context=5) |




&amp;nbsp;

###Top Comments

| score  |  comment  |
|--|--|
| 135  |  /u/mastermind202 said [Looks like we finally get optional chaining and null coalescing!](/r/javascript/comments/g5har3/nodejs_v14_released/fo3ghvz/?context=5) |
| 112  |  /u/LAC-Tech said [You know I was just thinking the other day ""gee create-react-app is great and all, but it only installs 1373 libraries and 49 executables. Couldn't they add more?""](/r/javascript/comments/g5a8bi/the_next_release_of_createreactapp_will_include/fo2i9sn/?context=5) |
| 89  |  /u/crabmusket said [99% of NPM packages should be either an IDE snippet, or a short tutorial explaining why `instanceof Array` doesn't always work.](/r/javascript/comments/g83evc/createreactapp_breaks_due_to_dependency_on/fol9jut/?context=5) |
| 87  |  /u/AiexReddit said [Whenever I see stuff like this I always wonder where all these developers are who are so incredible and proficient and large scale project architecture, that the difference in a few KBs of the raw lib...](/r/javascript/comments/g8k54m/svelte_web_component_54kb_angular_web_component/foo3s6b/?context=5) |
| 82  |  /u/DrRavenSable said [Upvoted cause palindrome!](/r/javascript/comments/g60fmg/codedoc_easily_create_beautiful_and_modern/fo6n5yv/?context=5) |




&amp;nbsp;",Your weekly /r/javascript recap
949,2020-04-28 14:10:25,6,2,"Hi everyone, 

We are writing a library in typescript. So can you guys give us reference to some popular typescript projects to look into?",Needed some reference project
950,2020-04-29 13:22:08,0,1,,MeiliSearch search engine wrapper in JS made with typescript.
951,2020-04-30 18:00:08,8,1,"Changelog: [https://gigobyte.github.io/purify/changelog/0.15](https://gigobyte.github.io/purify/changelog/0.15)

**If you are not familiar with functional programming practices please take a look at the documentation, otherwise read below.**

I've finalized the API for async error handling, I feel like this might be best DX for this kind of thing (working with Either and Maybe inside Promises). I'd very much appreciate any feedback on how easy it is to use on the back-end, especially in complicated async flows.

I've already compared purify to fp-ts a [couple](https://www.reddit.com/r/functionalprogramming/comments/ebg4pc/purify_014_released_a_functional_programming/fb5uv16/) of [times](https://www.reddit.com/r/typescript/comments/8y20no/pure_010_released_a_functional_programming/e29e4yl/).",Purify 0.15 released! - A Functional programming library for TypeScript
952,2020-05-01 00:32:58,2,1,"... I don't think this is possible in typescript.  Maybe I'm wrong.

I have an API I'm trying to ship that I need a 'lens' to listen to a subscribe map and only update when specific fields have changed.

I want it to return a synthetic type contrained on the input.

the input API is simple. 

I can use fields: ReadonlyArray&lt;keyof Foo&gt;

... the problem I'm having is how to constrain the output to a map which only contains those input values.  

So if the map has keys name, address, city, state, zip, and the user specifies just city, state, and zip, I want a map with only city, state and zip.

I want name and address to be removed so that the caller doesn't attempt to read from name and address which could be stale.",Typescript generics 'lens' to constrain a type to selected fields?
953,2020-05-03 13:13:31,29,1,"I am new to typescript and not an expert in FE development. I've encountered issue that seems pretty basic, but I failed to found any solution. Maybe I just don't know how to google it properly.

In react component I have a button, that is disabled on some condition, which triggers a component's function: 

    import React, {Component} from 'react';
    
    type DraftCompany = {
        id: null
        name: string,
    };
    
    type Company = Omit&lt;DraftCompany, 'id'&gt; &amp; {
        id: number;
    };
    
    type Props = {
        company: Company | DraftCompany,
        onDeleteCompany: (companyId: number) =&gt; void,
    }
    
    class CompanyRow extends Component &lt;Props&gt; {
        handleDeleteCompany = () =&gt; {
            this.props.onDeleteCompany(this.props.company.id);
        };
    
        render = () =&gt; {
            return (
                &lt;div&gt;
                    &lt;div&gt;{this.props.company.name}&lt;/div&gt;
                    &lt;div&gt;
                        &lt;button disabled={this.props.company.id === null} onClick={this.handleDeleteCompany}/&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            )
        }
    }
    
    export default CompanyRow;

I am getting typescript error on calling `this.props.onDeleteCompany(``this.props.company.id``);` that says that there is a chance I will pass `null` as a parameter. I fully understand why typescript gives me this error, the question is: **what would be the best way to deal with this error?**

&amp;#x200B;

I have found multiple ways:

&amp;#x200B;

1) Add `if` guard

    handleDeleteCompany = () =&gt; {
            if (this.props.company.id) {
                this.props.onDeleteCompany(this.props.company.id);
            }
        };

It works, but I don't like the idea of adding such guards into every function, if someone removes `disabled` logic, I want to receive console error telling me about it immediately, not to have it be silently swallowed. In my project I have a lot of such code that relies on render, I doubt it is a best practice to add such checks everywhere. Correct me pls if I am wrong. 

&amp;#x200B;

2) Apply `as` operator  to field :

     handleDeleteCompany = () =&gt; {
            this.props.onDeleteCompany(this.props.company.id as number);
        };

It works, but looks kinda hacky. 

&amp;#x200B;

3) Apply `!` operator to field:

     handleDeleteCompany = () =&gt; {
            this.props.onDeleteCompany(this.props.company.id!);
        };

It works, but looks kinda hacky too. 

&amp;#x200B;

4) Apply \`as\` operator to whole object and pass it to function:

     &lt;button disabled={this.props.company.id === null} 
             onClick={() =&gt; this.handleDeleteCompany(this.props.company as Company)}/&gt;

and

     handleDeleteCompany = (company: Company) =&gt; {
            this.props.onDeleteCompany(company.id as number);
        };

It works, but it looks like I am unnecessary passing the value I could have grabbed in function itself from props. I am not sure it is best practice to do such things.

&amp;#x200B;

I am sure there should be some pure typescript solution like defining Props type as a union or using conditional types with some combination of `any` and `never`. But I haven't figured it out.

As I said, I am not a FE expert so there is a high chance I am wrong about what is considered best practice. Help me please. 

&amp;#x200B;

Here is a [playground](https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAJQKYEMDGMA0cDeBhCcCAOyWJgF84AzKQuAcilQwYG4BYAKG5gE8wSOABEoKajALgUxPnAC8ubnBVxgAEwBccYgFcANvuWriKEEm0BnGFGDEA5pm4VOPLv0FwpYGXMUB5EGAYAB5RcUlCH1lsBg0GAD44ADIlLlU1LR1dEAAjJChXF25eASEABTowSwU0jLQo321vXzgAHxExCRaY4xUSYSR9JBgkHr5tAAoG6VkASSy9PIKASgUkgDcIDScuChKuNH0USxrxhAgAdzgkAA9R4nUzqJIyeBDKiGqknD64AAsZOphoNhqNxrVJmt5D8-hkYP9gJYAHRgKoogZDEZjRqySYIpGo9HImbRPjIjQrVwZYpuDLMR4FSHQ2HpDKqZgwXRQYhwSZw9kqELqYAbBICwUZYWihI4AkotFfFGk3zI0zmCghAD0IrFEslQt14rZBtNcBCuV0MBgJDgIssKFyw3U8jliIVxJVsgp6gU8kUekMVBIeH0wDQAGtXfLkYDHiCseDcXwKFrjWbBdqjfqpTqZfqVn99nsDndILA7UhqCgDPBzlc2EA)",Typescript and react conditional render
954,2020-05-04 03:21:07,0,1,"Hello, I'm new to this sub. I'm starting to do some work with Phaser, as I am pretty familiar with typescript, html, and css. I started a project and got some work done before figuring I should strip back the assets and some implementation to provide a clean little template. I have a repo for it and thought I might share:

&amp;#x200B;

[https://github.com/TBosak/game-template](https://github.com/TBosak/game-template)

&amp;#x200B;

Enjoy! Feel free to fork and improve my mess.",Phaser Integration with Angular and Electron
955,2020-05-04 09:02:25,1,1,"**Monday, April 27 - Sunday, May 03**

###Top Posts

| score | comments | title &amp; link |
|--|--|--|
| 567  | [69 comments](https://www.reddit.com/r/javascript/comments/gazu2f/after_they_gave_100k_scholarships_to_students/) | [After they gave 100k scholarships to students, Codecademy is now giving away their pro membership to anyone whose work is affected due to the pandemic! Also, I had started learning JS from Codecademy about a month ago when they were giving student scholarship, and it's going pretty good!](https://aabhusanaryal.com.np/codecademy-pro/)|
| 361  | [97 comments](https://www.reddit.com/r/javascript/comments/gcok1a/favorite_javascript_utilities_in_a_single_line_of/) | [Favorite JavaScript utilities in a single line of code! No more!](https://1loc.dev/)|
| 351  | [31 comments](https://www.reddit.com/r/javascript/comments/gac6az/a_collection_of_challenging_typescript_exercises/) | [A collection of challenging TypeScript exercises](https://github.com/mdevils/typescript-exercises)|
| 239  | [137 comments](https://www.reddit.com/r/javascript/comments/gbpc6l/askjs_has_anyone_used_graphql_for_a_large_project/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Has anyone used GraphQL for a large project and regretted it?|
| 226  | [124 comments](https://www.reddit.com/r/javascript/comments/g9u433/battleship_game_in_browser_using_vanilla_js_and/) | [Battleship game in browser! Using vanilla JS ❤️ and Node.js](https://battleship-game-online.herokuapp.com/)|
| 212  | [147 comments](https://www.reddit.com/r/javascript/comments/g94pg7/ispromise_post_mortem/) | [is-promise Post Mortem](https://medium.com/@forbeslindesay/is-promise-post-mortem-cab807f18dcc)|
| 179  | [21 comments](https://www.reddit.com/r/javascript/comments/gckiuc/askjs_today_i_learned_of_the_textspeech_apis/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Today I learned of the text/speech apis.|
| 156  | [107 comments](https://www.reddit.com/r/javascript/comments/g9kg0g/askjs_why_are_getters_and_setters_so_underused/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Why are getters and setters so underused?|
| 147  | [51 comments](https://www.reddit.com/r/javascript/comments/gaifhe/i_made_my_website_to_look_like_windows_95_using/) | [I made my website to look like Windows 95 using FOS, a open source framework.](https://victorribeiro.com/)|
| 141  | [10 comments](https://www.reddit.com/r/javascript/comments/gc7m3c/app_like_native_share_for_mobile_websites_with/) | [App like native share for mobile websites with Web Share API](https://medium.com/@aksteps/adding-app-like-share-to-your-website-on-mobile-and-social-share-urls-on-desktop-560b2b687d9e)|




&amp;nbsp;

###Most Commented Posts

| score | comments | title &amp; link |
|--|--|--|
| 127  | [56 comments](https://www.reddit.com/r/javascript/comments/gbc6mc/0_dependency_dev_server_supporting_live_reloading/) | [0 dependency dev server, supporting live reloading and single page apps.](https://github.com/outwalk-studios/jolt-server)|
| 32  | [54 comments](https://www.reddit.com/r/javascript/comments/g98k5d/a_critique_of_react_hooks/) | [A Critique of React Hooks](https://dillonshook.com/a-critique-of-react-hooks/)|
| 14  | [35 comments](https://www.reddit.com/r/javascript/comments/gc55vc/showoff_saturday_may_02_2020/) | `[Showoff Saturday]` Showoff Saturday &amp;#40;May 02, 2020&amp;#41;|
| 134  | [34 comments](https://www.reddit.com/r/javascript/comments/gcb4ki/es2020_promiseany/) | [ES2020 - Promise.any](https://mariosfakiolas.com/blog/es2020-promise-any)|
| 22  | [25 comments](https://www.reddit.com/r/javascript/comments/g9bnuf/execute_program_courses_modern_js_typescript_js/) | [Execute Program courses &amp;#40;Modern JS, TypeScript, JS regexes, JS arrays&amp;#41; are free for April](https://www.executeprogram.com)|




&amp;nbsp;

###Top Ask JS

| score | comments | title &amp; link |
|--|--|--|
| 9  | [19 comments](https://www.reddit.com/r/javascript/comments/g96nl8/askjs_looking_for_practical_uses_of_symbol_and/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Looking for practical uses of Symbol and Iterators|
| 6  | [12 comments](https://www.reddit.com/r/javascript/comments/gd178v/askjs_how_much_knowledge_to_start_freelancing/) | `[AskJS]` &amp;#91;AskJS&amp;#93; How much knowledge to start freelancing?|
| 6  | [3 comments](https://www.reddit.com/r/javascript/comments/gc7x54/askjs_library_to_parse_one_line_query_strings_to/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Library to parse one line query strings to work with lists like Visual Studio Code or github?|




&amp;nbsp;

###Top Showoffs

| score  |  comment  |
|--|--|
| 9  |  /u/DistChicken said [I created this color guesser for the course I’m working on www.shane-williams.tech, nothing impressive but my first working creation](/r/javascript/comments/gc55vc/showoff_saturday_may_02_2020/fp9hf19/?context=5) |
| 4  |  /u/Benuuts said [I made this &amp;#91;simple calendar&amp;#93;&amp;#40;https://github.com/brospars/simple-calendar#simple-calendar&amp;#41; 5 years ago and updated it recently because I found out it was my most starred project](/r/javascript/comments/gc55vc/showoff_saturday_may_02_2020/fp9nfv2/?context=5) |
| 3  |  /u/Programmer1130 said [Registered my first domain name just for a simple tool I hope to get ads on soon, &amp;#91;pdfpaste.com&amp;#93;&amp;#40;www.pdfpaste.com&amp;#41;](/r/javascript/comments/gc55vc/showoff_saturday_may_02_2020/fp9tp6g/?context=5) |




&amp;nbsp;

###Top Comments

| score  |  comment  |
|--|--|
| 211  |  /u/cannotbecensored said [getters, setters and proxies are super cool, and they create super clean public apis.... the only problem is they create 10x more complexity, obfuscation and spaghetti code for your internal apis.  Ju...](/r/javascript/comments/g9kg0g/askjs_why_are_getters_and_setters_so_underused/fou2utw/?context=5) |
| 162  |  /u/everlong241 said [fuck medium](/r/javascript/comments/g94pg7/ispromise_post_mortem/fork37u/?context=5) |
| 118  |  /u/schteppe said [That’s a lot of drama for a single line of code](/r/javascript/comments/g94pg7/ispromise_post_mortem/formmt5/?context=5) |
| 109  |  /u/filipdanic said [I think there’s a lot of fear around the idea that you as a programmer don’t know whether you’ve assigned a value to a property or invoked a setter function. Similarly, you don’t know if you’ve just i...](/r/javascript/comments/g9kg0g/askjs_why_are_getters_and_setters_so_underused/fotwvpv/?context=5) |
| 104  |  /u/zsombro said [Someone is already working on a script that publishes each of them into a separate NPM package](/r/javascript/comments/gcok1a/favorite_javascript_utilities_in_a_single_line_of/fpd4d65/?context=5) |




&amp;nbsp;",Your weekly /r/javascript recap
956,2020-05-04 09:22:54,1,1,[removed],"Am trying to learn another language after using this for a while js, php MySQL, jquery, (html css). So which would you recommend I add between react js, django, typescript, python mongodb, Java etc. That I will use to in creating huge website."
957,2020-05-04 09:23:44,1,1,[removed],"Just trying to learn another language after using this for a while js, php MySQL, jquery, (html css). So which would you recommend I add between react js, django, typescript, python mongodb, Java etc. That I will use to in creating huge website."
958,2020-05-04 15:18:32,16,1,"I've seem some people in react use function / component definitions like this:

    function myFunction({foo, bar}) 

... and then they can pass a map which gets destructured.

I'd like do so something like this in typescript where I don't have to define an interface first.

Something like

    function myFunction({foo: string, bar: number}) 

... so that I don't have to constantly define a named interface for each function.  

Some are small and I don't want to have to pick a name for the props interface.

Is this possible?

I was thinking of maybe using Pick and having a main interface that I'm taking variables from.","Is it possible to do ""anonymous maps"" like in plain javascript?"
959,2020-05-05 12:43:20,4,1,,Simple and lightweight quadtree implementation to deal with 2D objects. For node/typescript/browser/...
960,2020-05-05 17:22:44,0,1,"I am a Typescript dev, not a legal guy. A reply, or a blog post link will be good. You may find it not related to typescript, but if you know the resources, please point me in the right direction.

I am developing a Minimum Viable Product myself. I have commercial interests. I want to know if there are any blog-posts for seeking software development collaboration properly. None of what I list may be necessary, just good faith and hardwork, but still I need to do things correctly, because I would like to create interest in good capable people. 

Such as: 

(1) what stage should the project be, before I seek collaboration (like completed frontend, front-end + severless, frontend+API, frontend+backend+testing). I am not doing a test driven development, to make time. 

(2) Memo of understanding, NDA 

(3) Membership certificates in LLC. (I have an LLC)",Adequate steps for seeking collaboration in a prospective commercial application
961,2020-05-05 23:05:59,3,3,"Hi all, I'm trying to import a package ([filestack-js](https://github.com/filestack/filestack-js)) into my typescript code which has multiple entry points defined in its `package.json` file.

When trying to run the typescript compiler i get type errors relating to not being able to find  '`@types/node'` (which I've excluded from the project as it causes other type problems with our browser typings).

&amp;#x200B;

I did some digging and saw that the typescript compiler is using the '`main`' entry point as described in the `package.json` file. However, the package authors only intend this entry point to be used in a node js environment. I see that they have defined a '`browser`' entry point that doesn't have these problems but the compiler is favoring main instead. Anyway I can force this resolution?

&amp;#x200B;

I imagine this isn't a unique problem, how do others resolve these conflicts?

&amp;#x200B;

If I set `skipLibCheck` to `true` the errors go away but that feels like overkill to me. I'm also using webpack to bundle my compiled js files and that happily resolves to the correct source code.",Incorrect module resolution causing type errors
962,2020-05-09 18:35:16,0,1,,Tutorial Django and Vue 3.0 with Webpack Loader and typescript support
963,2020-05-10 08:52:30,0,1,"Hey there, I wonder if some typescript wiz can help me with this. I'm writing a React hook basically which takes a function as its first argument:

`type Callback&lt;T&gt; = (args: T) =&gt; Promise&lt;void&gt;`

It then returns an array containing an object, and a new function which takes the same args

`type ReturnType&lt;T&gt; = [State, (args: T) =&gt; Promise&lt;void&gt;]`

I'm then combining them for my main function definition:

`function myFunction&lt;T&gt;(cb: Callback&lt;T&gt;): ReturnType&lt;T&gt; { ... }`

Now, this works fine for functions which take arguments. However I also want it to work for functions which take no arguments, i.e.

`() =&gt; Promise&lt;void&gt;`

Currently it returns me the type:

`(args: unknown) =&gt; Promise&lt;void&gt;`

which doesnt match. Any help would be amazing!! &lt;3",How should I type a function which returns a new function that takes the same args
964,2020-05-10 08:59:44,10,1,"Hey  there, I wonder if some typescript wiz can help me with this. I'm  writing a React hook basically which takes a function as its first  argument:

`type Callback&lt;T&gt; = (args: T) =&gt; Promise&lt;void&gt;`

It then returns an array containing an object, and a new function which takes the same args

`type ReturnType&lt;T&gt; = [State, (args: T) =&gt; Promise&lt;void&gt;]`

I'm then combining them for my main function definition:

`function myFunction&lt;T&gt;(cb: Callback&lt;T&gt;): ReturnType&lt;T&gt; { ... }`

Now,  this works fine for functions which take arguments. However I also want  it to work for functions which take no arguments, i.e.

`() =&gt; Promise&lt;void&gt;`

Currently it returns me the type:

`(args: unknown) =&gt; Promise&lt;void&gt;`

which doesnt match. Any help would be amazing!! &lt;3","How should I type a function, which takes a function as an argument and returns a new function with the identical type."
965,2020-05-11 09:01:13,1,1,"**Monday, May 04 - Sunday, May 10**

###Top Posts

| score | comments | title &amp; link |
|--|--|--|
| 662  | [95 comments](https://www.reddit.com/r/javascript/comments/ggcvly/ive_created_an_educational_page_to_teach_students/) | [I've created an educational page to teach students the structure of a URL](https://howurls.work)|
| 387  | [37 comments](https://www.reddit.com/r/javascript/comments/geajlx/modern_javascript_cheatsheet/) | [Modern JavaScript Cheatsheet](https://www.cyanhall.com/posts/notes/8.javascript-cheatsheet/)|
| 246  | [37 comments](https://www.reddit.com/r/javascript/comments/gdejhb/my_quarantine_project_coverify_create_your_own/) | [My quarantine project: Coverify - Create your own custom cover art for Spotify playlists.](http://coverify.now.sh/)|
| 238  | [36 comments](https://www.reddit.com/r/javascript/comments/gescea/esbuild_an_extremely_fast_javascript_bundler_and/) | [Esbuild - An extremely fast JavaScript bundler and minifier](https://github.com/evanw/esbuild)|
| 210  | [94 comments](https://www.reddit.com/r/javascript/comments/gfcoi0/visual_studio_code_april_2020/) | [Visual Studio Code April 2020](https://code.visualstudio.com/updates/v1_45)|
| 185  | [16 comments](https://www.reddit.com/r/javascript/comments/gfrhjk/underthehood_of_type_systems_eg_typescript_i_look/) | [""Under-the-hood of type systems &amp;#40;e.g. TypeScript&amp;#41;"" - I look to shine a light on some of the fundamentals at work in a type system compiler.](https://medium.com/@tabu_craig/under-the-hood-of-type-systems-e-g-typescript-b3b0b5c18963)|
| 174  | [60 comments](https://www.reddit.com/r/javascript/comments/gdwj1u/i_made_a_website_which_compares_the_most_popular/) | [I made a website, which compares the most popular Javascript frameworks in terms of Github development activities and is updated daily](https://gitgitlog.com/compare/js-frontend)|
| 167  | [10 comments](https://www.reddit.com/r/javascript/comments/gek5ir/im_making_a_video_series_building_a_16bit_virtual/) | [I'm making a video series building a 16-bit Virtual Machine. This episode is all about parsing nested expressions in the assembly language, and disambiguating the Order Of Operations](https://www.youtube.com/watch?v=EaUBBDESWCY)|
| 144  | [14 comments](https://www.reddit.com/r/javascript/comments/gh48sl/angularjs_migration_war_story/) | [AngularJS Migration War Story](https://codingwithjs.rocks/blog/angular-js-migration-war-story)|
| 131  | [7 comments](https://www.reddit.com/r/javascript/comments/gf7btz/midijs_sequencing_in_javascript/) | [MIDI.js - Sequencing in Javascript](https://galactic.ink/midi-js/)|




&amp;nbsp;

###Most Commented Posts

| score | comments | title &amp; link |
|--|--|--|
| 130  | [38 comments](https://www.reddit.com/r/javascript/comments/gd7bzj/nextjs_tips_collection/) | [Next.js Tips collection](https://nextjstips.com)|
| 0  | [34 comments](https://www.reddit.com/r/javascript/comments/gemrve/svelte_is_really_fast/) | [Svelte is really fast](https://medium.com/cacher-app/svelte-is-really-fast-45224f57bd86)|
| 2  | [31 comments](https://www.reddit.com/r/javascript/comments/ghb9tj/askjs_what_do_you_call_something_that_is_better/) | `[AskJS]` &amp;#91;AskJS&amp;#93; What Do You Call Something That Is Better Than HTML/JSX/Hyperscript?|
| 15  | [27 comments](https://www.reddit.com/r/javascript/comments/ge3snv/askjs_using_javascript_for_technical_interviews/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Using JavaScript for technical interviews?|
| 85  | [26 comments](https://www.reddit.com/r/javascript/comments/gdvqil/es2020_everything_you_need_to_know/) | [ES2020: Everything You Need to Know](https://www.martinmck.com/posts/es2020-everything-you-need-to-know/)|




&amp;nbsp;

###Top Ask JS

| score | comments | title &amp; link |
|--|--|--|
| 20  | [16 comments](https://www.reddit.com/r/javascript/comments/gdq3v6/askjs_anybody_use_cypress_for_ui_testing/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Anybody use Cypress for UI testing ?|
| 10  | [21 comments](https://www.reddit.com/r/javascript/comments/gecx2j/askjs_does_anyone_use_generators_why/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Does anyone use generators? Why?|
| 6  | [7 comments](https://www.reddit.com/r/javascript/comments/gf4ii1/askjs_what_do_you_think_about_my_first_npm_module/) | `[AskJS]` &amp;#91;AskJS&amp;#93; - What do you think about my first npm module ?|




&amp;nbsp;

###Top Showoffs

| score  |  comment  |
|--|--|
| 3  |  /u/0rtex said [Storacle - a decentralized file storage https://medium.com/@ortex/storacle-a-decentralized-file-storage-3f0c5c57591c https://github.com/ortexx/storacle](/r/javascript/comments/gge40y/showoff_saturday_may_09_2020/fpzy1c4/?context=5) |
| 1  |  /u/daybrush said [Selecto.js: Make Elements Selectable Within an Area  &amp;#91;https://github.com/daybrush/selecto&amp;#93;&amp;#40;https://github.com/daybrush/selecto&amp;#41;](/r/javascript/comments/gge40y/showoff_saturday_may_09_2020/fq5587e/?context=5) |
| 1  |  /u/va-com said [UpStamps - Manage every feature with a central visibility and control user interface.  Build with React, TypeScript, Hasura, and Vercel  https://www.upstamps.com](/r/javascript/comments/gge40y/showoff_saturday_may_09_2020/fq1tecd/?context=5) |




&amp;nbsp;

###Top Comments

| score  |  comment  |
|--|--|
| 73  |  /u/Razorspined said [It's simple , neat and does what it says on the tin. I like it !](/r/javascript/comments/ggcvly/ive_created_an_educational_page_to_teach_students/fpzp2p8/?context=5) |
| 69  |  /u/airick_94 said [Wow persistent undo - I always wanted this. It's really helpful when jumping between files copying things left right and accidentally closing the mistake you just did, right after you used your muscle...](/r/javascript/comments/gfcoi0/visual_studio_code_april_2020/fpsyupd/?context=5) |
| 64  |  /u/podgorniy said [Before using in production check the &amp;#91;disclamers&amp;#93;&amp;#40;https://github.com/evanw/esbuild#disclaimers&amp;#41;: it's a one-person hobby project with no serious usage in production. Yet it's amazing](/r/javascript/comments/gescea/esbuild_an_extremely_fast_javascript_bundler_and/fppf3ps/?context=5) |
| 57  |  /u/evert said [A few small suggestions:  1. Although it's common to call these URLs, the official word for them is URI and URL has technically been deprecated. 2. It might be better to use the official word `scheme`...](/r/javascript/comments/ggcvly/ive_created_an_educational_page_to_teach_students/fq0vogm/?context=5) |
| 50  |  /u/Mallanaga said [Can’t you do this with just css?](/r/javascript/comments/gd0dw9/darkmode_a_micro_library_360b_for_handling_dark/fpfef2d/?context=5) |




&amp;nbsp;",Your weekly /r/javascript recap
966,2020-05-11 14:32:07,6,1,"**Edit**: [I made a TS Playground to illustrate my issue](https://www.typescriptlang.org/play?ssl=11&amp;ssc=56&amp;pln=11&amp;pc=47#code/JYOwLgpgTgZghgYwgAgOJwLYQMJQnMYAexAGUBXBJAZ2oAU4BPAGyLgBNkBvAKGX+TUIYQiADm1AFzc+AuWMwQAcuQwAjaNOpgooMbP4BfA8gAOzJpply5wdlp16Tx4zwD0b5ABUAFilCQsIgQPBAAHqZEUGDIAdDwSMgA6hBq1EQIANbCALJ27MwQAO5weKTCohIAPHTIALzIRGoAVhAIYAB81gIeyAAyRGDUjTCNYH5QZlBEptCEENQmAI7k0IwMUIqBAELkwMzs0AD80gAUiIQk0lzIYIyzDrriANxmTKwc0rWGAJT1XU1Wu0eK5er5-BhzBAsOACMQQKEIlEYggSNpkAg8AQICk0hlsmA8uwCsVSigGqchCI9FJkql0llcvlCiUyhUaX86l1eHJUSB0bwAJC9QYTN6bLCBRY2AQrNYbLbQXb7Q6TCmcrqnLi-AA0znqgnZ4kWJl6AyGyAwURQqMOIJ47k84IxcGYhSgPEx+EguIZBKJJNZEC1PGFnnNwyIo1M01Mi0Fcqg61KiqgyoOVnO7XhGuQIcFgoUWBU6isF3hADpTO82OwK1TKtQK0XlKoNFA9QXzJYoABJezIcskKs1jhViyMaAVuyd3UgwfDX34pnEllk8rU41VdBYXDe+EUKgLeij9gdH5AA).

I'm writing a redux middleware that creates a websocket connection when it catches a specific action being dispatched. I'm also using eslint for the first time and I would like to respect it's recommended ""no any"" rule, but I just can't figure out how TS wants me to do this. I thought that's what the `object` type would do, tell TS I didn't care about the type or properties of the object, as long as it's an object.

Here's a sample of what I currently have:

    // The interface
    export interface WebsocketMiddlewareSettings&lt;P = object&gt; {
        // Lots of other properties
        queryParameterBuilder?: (action: { type: string; payload: P }) =&gt; object
    }
    
    // The implementation
    export const createWebsocketMiddleware = (settings: WebsocketMiddlewareSettings): Middleware =&gt; {
        const {
    	// other parameters
            queryParameterBuilder = () =&gt; ({}),
        } = settings
    
        // Lots more code
    }
    
    // The caller
    createWebsocketMiddleware({
    	// Lots of props
    	queryParameterBuilder: (action) =&gt; ({
    		gameNumber: action.payload.settings.gameNumber,
    		playerId: action.payload.player.id,
    	}),
    } as WebsocketMiddlewareSettings&lt;GameCreationSuccessPayload&gt;)

My issue in typing this is:

* As written above, the caller complains, because `GameCreationSuccessPayload` does comply with the `P = object` typing of the generic.
* If I don't put a default type for the generic, the implementation complains it needs me to type the generic, but I don't care about the type in the implementation, so I put `object` or `unknown`. However, if I do that, the caller still complains.

In the end, the implementer simply calls the given function and provides the received action, so what I would like is for the implementer to stop caring about the specifics of the `queryParameterBuilder`, but for the caller to be able to specify the possible actions that will be received. How could I type this?","Going crazy trying to understand how to type an interface where the implementer doesn't care about the type of something, but the caller does."
967,2020-05-11 16:44:13,10,3,"Hi everyone, i'm going to start a new Project in VueJS and was wondering, does javascript package imported from npm in my app will work if it's use in typescript file ?

Normally yes ? No problem with this ? Thanks !",Typescript compatibility with javascript package
968,2020-05-11 21:05:35,27,4,"Why did the typescript programmers add this complexity to the language?In my opinion, being able to declare a function like

`const func = ({arg1: string, arg2: number}) =&gt; {}`

is way cleaner and more intuitive, so why would they make it the default that to declare a functions argument types you would have to do something like

`const func = ({arg1, arg2} : {arg1: string, arg2: number}) =&gt; {}`","Whats the benefit of declaring a functions argument types as ({arg1, arg2} : {arg1: string, arg2: number}) rather than just ({arg1: string, arg2: number})"
969,2020-05-11 21:20:58,7,2,"I've been using utility types like [Pick](https://www.typescriptlang.org/docs/handbook/utility-types.html#picktk) and [Omit](https://www.typescriptlang.org/docs/handbook/utility-types.html#omittk) for some time now to reduce type repetition. I just stumbled across a scenario that struck me as odd though and would appreciate some explanation.

Say I have an interface like so:

    interface ComponentState {
       user?: User;
       loading: boolean;
       error: Error | null;
    }

And then I want to define a discriminated union that references properties from that interface:

    type ComponentActionTypes = 
    | {
        type: ComponentActions.SET_USER,
        payload: Pick&lt;ComponentState, 'user'&gt; //I would expect User | undefined
      }
    | {
       type: ComponentActions.SET_LOADING,
       payload: Pick&lt;ComponentState, 'loading'&gt; //I would expect boolean
      }
    | {
       type: ComponentActions.SET_ERROR,
       payload: Pick&lt;ComponentState, 'error'&gt; //I would expect Error | null
      }

I would expect the `payload` in each of the above `ComponentActionTypes` scenarios to conform to whatever the property type is for the `ComponentState` interface but the compiler interprets each of the payloads as objects with a key being that of the respective interface property and the value being the respective type. So the `payload` for `ComponentActionTypes` type `ComponentActions.SET_USER` is actually

    { user: User | undefined } //I want action.payload to be User | undefined

Clearly I misunderstood how `Pick` works. Any suggestions on how I can achieve what I'm after without having to just replicate each of the types defined in the `ComponentState` interface?

&amp;#x200B;

Much appreciated",Question about the Pick utility type
970,2020-05-12 15:00:27,0,1,,is learning typescript worth it
971,2020-05-13 05:39:33,8,1,"... so, I'm really new to TypeScript, but I was thinking, there's not really a way to validate a numerical range in typescript directly (without using something like a potentially massive union) ..  but is there a reason why you shouldn't use assertion function to validate that a number fits a specific range?  My current use case is just to validate that a number is zero or positive.  

Secondly, does anyone out here know of any useful libraries of assertion functions?  This seems like a feature that could be quite useful to use to build up quite a suite of things with.",Is using an assertion function to validate a number fits a range valid use? Is there a library of assertion functions?
972,2020-05-13 15:48:52,5,1,"I think there may be something wrong with my tsconfig? I really don't know. The source folder should have a grand total of 7 files so I'm unsure how it's going through 700. Does it go through the dependencies as well? Also does anyone know why I'm getting those errors with twilio types? tsc eventually compiles but if I try to use gulp is just hangs. Any help would be greatly appreciated.

image: [https://imgur.com/a/fIjs7zU](https://imgur.com/a/fIjs7zU)

""typescript"": 3.5.3

""@/types/twilio"": 2.11.0

""gulp-cli"": 2.2.0

""gulp local"": 4.0.2",Long compile times
973,2020-05-13 17:10:52,5,1,"So I'm trying to acheive something here and I can't figure out how to do this.

I want to refer to the type of the first argument of a function and get the correct infered type. It's better explained with an example.

```typescript
    type AllFood = 'grass' | 'meat' | 'grain' | 'corn' | 'tofu';
    
    type Constructable&lt;T&gt; = new (...args: any) =&gt; T;
    
    // I have a basic abstract class upon which a lot of class are built
    abstract class Animal&lt;Food extends AllFood = AllFood&gt; { 
        public food: Food;
    
        constructor(food: Food) { 
            this.food = food;
        }
    }
    
    // I have a lot of like these that supports only a specific subset of food
    class DollyTheCow extends Animal&lt;'grass' | 'grain' | 'corn'&gt; {}
    
    // Now I have a factory function to build the classes with the params it receives
    function createClass(
    SomeAnimalClass: Constructable&lt;Animal&gt;, // &lt;- The specific constructor
    food: InstanceType&lt;typeof SomeAnimalClass&gt;['food'] // &lt;- I want this to be typed according to the specific constructor just above, but it always fallsback to AllFood even when specifying a specific constructor that supports only a subset. 
    ) {
        const animal = new SomeAnimalClass(food);
    }
    
    createClass(DollyTheCow, 'meat'); // This should fail telling me DollyTheCow can't eat meat
    createClass(DollyTheCow, 'grass'); // This should be fine
```

[Playground Link](https://www.typescriptlang.org/play/?ssl=20&amp;ssc=26&amp;pln=20&amp;pc=29#)

Any idea on how I can acheive this? I tried A LOT of different options, but basically nothing works. I want to avoid adding a generic to the createClass  
 function since it'll be redundant.",Typescript Refer to first argument type of the current function
974,2020-05-14 12:40:12,0,1,"First of all is there such a thing as test types in TS or are they just a hack?

With the help of these two posts\[[1](https://www.reddit.com/r/typescript/comments/gj7pah/i_have_troubles_understanding_isnever/)\]\[[2](https://www.reddit.com/r/typescript/comments/gab4ic/how_to_make_ts_or_eslint_or_vscode_warn_me_about/)\] and after getting a little bit more comfortable with typescript I managed to do this :

    type obj1 = {
    	a : string,
    	b : number,
    }
    
    type obj2 = {
    	a : number,
    	c : string
    }
    
    type MustBeNever&lt;T extends never&gt; = T;
    
    type TestNoCollisionsInMixin = MustBeNever&lt;keyof obj1 &amp; keyof obj2&gt;;

to check whether the mixin of two objects (merging one object into another) has any key collision.

You can see that the error message I get is not really helpful . Is there any way to make the error message or the code more helpful ?",I have made a test type to check if there are any collisions in keys of obj1 &amp; obj2 . How to get a more helpful error message?
975,2020-05-14 12:58:40,1,1,"***Outline***

I'm writing a package (let's call it myPackage) for shared react components and their corresponding typescript types. I'm using npm symlink to link myPackage to a typescript/react app I'm working on.

the structure of myPackage is as follows:

    multilist   --index.tsx   --types.d.ts index.tx 

this is the content of the multilist/types.d.ts file

    type ILookup = {   readonly id: number;   readonly text: string; }; export type MultilistProps = {     readonly isEditing: boolean;     readonly id: string;     readonly labelText: string;     readonly value: ILookup | undefined;     readonly responseOptions: ILookup[];     readonly singleSelect: boolean;     readonly invalid: boolean;     readonly onChangeHandler: (value: any) =&gt; void; };

this is the content of the index.ts file

    import { Multilist } from './multilist'; import { MultilistProps as _MultilistProps } from './multilist/types'; export { Multilist }; export type MultilistProps = _MultilistProps;

***Problem***

When I import from myPackage, the type MultilistProps  
 doesn't retain it's type structure. A mouseover in VSCode looks like: type MulitlistProps: Any  
.

If I declare and export the MultilistProps type directly in myPackage/index.ts file; the problem is resolved.

If anybody has any idea's I would be very grateful!",exporting typescript types in a package
976,2020-05-14 13:25:24,5,1,"Coming back ( from rust and other stuff like typescript ) to xcode after a while for some development, i was surprised to see many incomplete approaches ( to my understanding ) to generate and manage projects and package dependencies: Different package managers and quite bloated syntax to manage projects. So far I found xcodegen and tuist quite okay, how do you manage this? Dependencies, sync project folders with xcode, generate projects? Seems a little messy to my naive mind. Any input?",What is your approach to reliably generate complex projects for xcode and manage dependencies?
977,2020-05-15 08:57:48,2,1,"It seems to take way much more time than needed for me to figure it out . I have installed eslint extension in vscode I have also done `npx eslint --init;` . Here is my `eslintrc.json` file :

    {
        ""env"": {
            ""browser"": true,
            ""es6"": true,
    		""node"": true
        },
        ""extends"": [
            ""eslint:recommended"",
            ""plugin:@typescript-eslint/eslint-recommended""
        ],
        ""globals"": {
            ""Atomics"": ""readonly"",
            ""SharedArrayBuffer"": ""readonly""
        },
        ""parser"": ""@typescript-eslint/parser"",
        ""parserOptions"": {
            ""ecmaVersion"": 11,
            ""sourceType"": ""module""
        },
        ""plugins"": [
            ""@typescript-eslint""
        ],
        ""rules"": {
    	}
    }

But I do not get all linting in errors that I should in a ts file . For example lets say I have a file with this code :

    let a;

Since I do not use `a` anywhere it should be red highlighted but it is not . When I hover over `a` I can see the error about not being used anywhere;",How do you guys lint a ts file while you are coding it in vscode ?
978,2020-05-15 14:01:57,4,0,"So I want to write a node js module in javascript that looks something like this :

    //myModule.js 
    const foo = function (aBigObject) {
    	[
    		function fn1(_) {/*lots of code*/},
    		function fn2(_) {/*lots of code*/},
    		/*a lot of other functions*/
    	].forEach(fn =&gt; fn(aBigObject))
    }

I created a file `myModule.d.ts` in the same folder that `myModule.js` is located , and declared the appropriates types in it .

Now when I import `foo` in some other project I have intellisense for its parameters .

My issues is that when I try to edit something in `myModule.js` I do not have the very much needed intellisense for `aBigObject`. So in `myModule.js` file I use a JSDoc comment and import the types from the file `myModule.d.ts`.

1)Why do I have to do that manually via a JSDoc comment and vscode does not understand automatically the type?

Another issue that I face is that there are internal types that are needed in `myModules.js` while I develop it .They are imported via JSDoc comments. They really make developing way much easier . Nobody will have a need to use these internal types except for me that I develop `myModule.js` .

2)The question is , where do I put the internal types and why? Till so far I have them in file `myModule.d.ts`. Would it be wise to create a separate file for them , e.g. `myModules.internals.d.ts`?

I am not into going full ts and then compiling it to js and d.ts (and to be honest I do not even know how to do it) . I am just not into compiling .",Importing typescript types in js files . How to organize the type files?
979,2020-05-15 21:09:19,7,2,"I really like typescript and what it tries to do and solve. I guess it's a fairly complex project that can level up my coding and engineering skills.

Right now I'm a mid-level typescript user, I use it in a front-end React project and a sometimes on Nestjs project. What I want to do is read ""Effective Typescript"" book and start answering typescript questions on SO and start looking at PRs and Issues on the Github repo. 

What I don't know is how much people outside Microsoft are involved in coding and how to get to know the codebase in like 3 month and what are the prerequisites? do we need compiler knowledge? (I know some, lexical analysis, syntax analysis and...)",How to start contributing to Typescript?
980,2020-05-16 10:29:09,3,1," A function that returns a promise is not necessarily an async function . That is because an async function executes its code asynchronously (i.e. in the end of the synchronous code) and a non async function that returns a promise executes its code synchronously .

Is it possible to typedef that a function is async ?",Is it possible to typedef an async function in typescript ?
981,2020-05-17 09:40:52,7,1,"How to solve that (I am using vscode):

1. eslint shows that I do not use **imported** types , despite the fact that I  use them.
2. eslint does shows error for types that I have **defined** but do not use, but when I hover over the unused type I see a ts error `""type"" is declared but never used.ts(6196)`. However there is no red highlighting . Just the color of syntax highlighter is deem and is difficult to spot .

What I have done so far :

    npm install --save-dev eslint typescript
    npx eslint --init

I have choosen that I use typescript and esmodules and installed the extra packages suggested by eslint.",linting types
982,2020-05-17 14:58:13,2,1,"I recently wrote a dynamodb library (https://github.com/tywalch/electrodb) that helps folks model their access patterns by supplying a schema and dynamically implementing an API for that schema. 

As an example, the user would  supply:
    const {Entity} = require(""electrodb"");
    const tasks = new Entity({
        attributes: {
            id: {
                type: ""string"",
                default: () =&gt; uuid()
            },
            user: {
                type: ""string"",
                required: true
            },
            project: {
                type: ""string"",
                required: true
            },
            name: {
                type: ""string"",
                required: true
            },
            description: {
                type: ""string"",
                required: false
            },
            isActive: {
                type: ""boolean"",
                required: true
            }
        },
        indexes: {
            task: {
                pk: {
                    field: ""pk"",
                    facets: [""id""]
                },
                sk: {
                    field: ""sk"",
                    facets: [""""]
                }
            },
            assigned: {
                index: ""gsi1pk-gsi1sk-index""
                pk: {
                    field: ""gsi1pk"",
                    facets: [""employee""]
                },
                sk: {
                    field: ""gsi1sk"",
                    facets: [""project"", ""id""]
                }
            }
        }
    })

The above example would yield an dynamic api implementing that model, for example:

    // ""task"" method comes from index ""task."" 
    // ""id"" comes from facets value ""id"" under pk.
    tasks.query.task({id: ""1""}).go()

    // ""assigned"" method comes from index ""assigned"".
    // ""user"" comes from facets value ""user"" under pk.
    // ""project"" comes from facets value ""project"" under sk.
    tasks.query.assigned({user: ""johnsmith""})
        .between(
            {project: ""project-a""},
            {project: ""project-z""})
        .go()
    
    // ""description"" property in required so no error expected.
    // ""isActive"" property is required but not included so error expected.
    tasks.put({
        id: ""23"", 
        project: ""project"",
        user: ""johnsmith"",
        name: ""task1""
    }).go()

It feels like this sort of API isnt really something that could be implemented in typescript, but I'm interested in how close I could get. It feels like the only way I'd accomplish this would be to write some sort of interface generation tool to parse and build the interfaces for the user.",How would I add types to dynamic modeling library?
983,2020-05-18 03:19:50,2,1,"I had a question that I posted here: [https://stackoverflow.com/questions/61861175/is-it-idiomatic-to-use-namespaces-in-typescript](https://stackoverflow.com/questions/61861175/is-it-idiomatic-to-use-namespaces-in-typescript), that I feel like the people on this sub would have the expertise to answer.

Long story short, I have a bunch of interfaces that represent internal data structures. I was thinking of sticking them all in a single namespace so that users of my library wouldn't be confused by them. However, I heard namespaces are not idiomatic in Typescript, so I'm not sure what to do.",Export internal data structures in library .d.ts files?
984,2020-05-18 07:19:39,9,1,"Hi, my requirement is upon refreshing or closing the browser tab, there should be my custom alert

instead of browser alert. I have to get this work done in typescript so I am returning the

$event.returnValue = false on beforeunload event which will stop my browser from closing or

refreshing but at the same time I want my custom pop-up to be shown instead of browser pop-up. 

Here is my Code - 

      @HostListener(""window:beforeunload"", [""$event""])
      beforeUnload($event: Event) {
    //loading my custom pop up
          $event.returnValue =false;
    }

My Custom Pop-up loads but loads after I cancel the browser popup-

&amp;#x200B;

[Browser Pop up](https://preview.redd.it/yk3gpe3j5hz41.png?width=557&amp;format=png&amp;auto=webp&amp;s=1448c4db23676aea55b105a78f5d930a523d859e)

&amp;#x200B;

How can I achieve this? Where am I going wrong? Please help.",[AskJS] Help with window.onbeforeunload()
985,2020-05-18 10:05:48,15,1,"10 days ago, I made [this post](https://www.reddit.com/r/typescript/comments/ges5r9/auto_generate_typechecker_from_typescript_types/) asking whether it was possible to automatically generate validation functions for Typescript types. Unfortunately, it seemed like that was not the case.

So I built a library (well, compile time macro) to do it: [https://github.com/vedantroy/typecheck.macro](https://github.com/vedantroy/typecheck.macro)

 Once you configure babel macros, you can seamlessly generate validation functions for your Typescript types. No need to write your types again in a DSL (like runtypes/zod/io-ts). Compile time macros automatically parse your type declarations and generate validation functions.

The library is pretty fresh, but it already handles unions/tuple types/optional types/index signatures/interfaces (no extending yet)/type aliases/generics/object patterns/arrays, so it's pretty functional/usable.

The resulting validation functions are also really fast because most other libraries (except ajv) don't do compile time code generation. After some bench marking (not that I'm a benchmarking expert), I found it was up to 3 times as fast as ajv.

This is my first open source library, so I'm excited to hear what you guys think!

Above all, I feel like this can be a community effort. I'm open to suggestions/any form of feedback/contribution/etc.",typecheck.macro - Automatically generate validation functions for Typescript types.
986,2020-05-19 06:49:24,7,1,"I noticed some weird behavior and I wonder if any of you have seen this before.

**1. So, in the end it boils down to this problem:**

    
    type Z = ((p: true) =&gt; void) | ((p: false) =&gt; void)
    const z: Z = 0 as any;
    z(true); // argument of type 'true' is not assignable to argument of type 'never'

The type Z is being generated by typescript (which is another weird story, see blow), but why does the above combine to a parameter of type never?

**2. What originally brings me to this problem:**

So, I try to infer the promise type and return a function type, which takes the promise type as parameter:

    type SampleFun = () =&gt; Promise&lt;boolean&gt;;
    type X = ReturnType&lt;SampleFun&gt; extends Promise&lt;infer TP&gt;
            ? (TP extends void
                ? () =&gt; void
                : (result: TP) =&gt; void)
            : () =&gt; void;
    // X = ((result: false) =&gt; void) | ((result: true) =&gt; void)

Why does it not create a simple function with result boolean?

I'm guessing these are issues I should report to the TypeScript team, but before I bug them, I wanted to see if anyone else noticed one of these and is aware of existing issues (as searching the \~4500 issues on github is painful).

The only thing I could find somewhat related was this one:  
[https://github.com/microsoft/TypeScript/issues/31663](https://github.com/microsoft/TypeScript/issues/31663)",Weirdness with booleans
987,2020-05-20 08:39:09,2,1,"I had typed array with an object with one optional field. Then I decided that instead of an optional prop what I really want is an array of objects not containing that property or all the elements containing such property, so I switched to a sum type.

&amp;#x200B;

The problem is that this makes destructuring of such prop impossible.

Here is an example of the sum type:

&amp;#x200B;

\`\`\`js

type tab&lt;T&gt; =

  | { label: string }

  | { label: string, value: T }

\`\`\`

&amp;#x200B;

This is what I can not do:

&amp;#x200B;

tabs.map(({ label, badge, value }, idx) =&gt; {

callSomeFun(value || idx)

})

&amp;#x200B;

This works for flow, but not for typescript:

&amp;#x200B;

tabs.map(({ label, badge, ...tab }, idx) =&gt; {

const value = tab.value || idx

callSomeFun(value)

})

&amp;#x200B;

Also because of this, some other parts of the code get an inferred type of mixed, which in runtime is not correct because I'm just ""or-ing"" them:

&amp;#x200B;

const \[activeTab, setActiveTab\] = useState(tabs\[0\].value || initialTab)

&amp;#x200B;

activeTab becomes of mixed type

&amp;#x200B;

Is there a better way of doing this while ensuring the type safety of having the prop on all items or no one?",Destructuring and sum types
988,2020-05-20 16:49:14,9,1,"Section [https://github.com/typescript-eslint/typescript-eslint/blob/master/docs/getting-started/linting/README.md#eslint-configs](https://github.com/typescript-eslint/typescript-eslint/blob/master/docs/getting-started/linting/README.md#eslint-configs) lists two list of ESLint rules:

* Airbnb's ESLint config - [https://www.npmjs.com/package/eslint-config-airbnb-typescript](https://www.npmjs.com/package/eslint-config-airbnb-typescript)
* Standard - [https://www.npmjs.com/package/eslint-config-standard-with-typescript](https://www.npmjs.com/package/eslint-config-standard-with-typescript)

What are the main differences between them?","ESLint - What are the main differences between ""eslint-config-airbnb-typescript"" and ""eslint-config-standard-with-typescript"" conventions?"
989,2020-05-20 22:30:20,0,1,[removed],Built a tiny html builder using typescript
990,2020-05-21 11:39:17,0,1,,Using twoslash to show typescript error &amp; type annotation in a code samples
991,2020-05-21 20:27:13,3,1,"Why the first interface is not checking the optional argument and the second one does?

    interface FuncInterface1 {
      fi1(id?: number): void;
    }
    interface FuncInterface2 {
      fi2: (id?: number) =&gt; void;
    }
    const func = (id: number) =&gt; {
      console.log(id);
    };
    const imp1: FuncInterface1 = {
      fi1: func,     // OK
    };
    const imp2: FuncInterface2 = {
      fi2: func,     // typescript argument error
    };",Failing function type check?
992,2020-05-21 21:18:22,7,1,"For example lets say I have the following project :

    ./myEsModule.js
    ./myFolder
    ./myFolder/types.d.ts

How do I make typescript understand that my esmodule has its declaration files somewhere else , without moving the declaration files and changing their name .",Make typescript understand that the esmodule I import has its declaration files somewhere else .
993,2020-05-22 11:25:03,1,1,"**Problem:**

I understand  what intrinsic means generally, but I'm  wondering if there is some concrete meaning it has in the context of Typescript.  


**Background:**

React has [JSX.IntrinsicElements](https://www.typescriptlang.org/docs/handbook/jsx.html#intrinsic-elements), Which is described as:  


*something intrinsic to the environment (browser)*  
e.g.  native elements (e.g. strings like ""div"", ""span"") as opposed to components  


But TypeScript when I  look through the [typescript source](https://github.com/microsoft/TypeScript/blob/master/tests/baselines/reference/intrinsics.js), I can't tell if Intrinsic simply denotes:  
\- inheritance (e.g. ""base type""),   or   
\- environment feature (e.g. ""div"")

  
This is further muddied, as I wonder ""Intrinsic"" is alluding to something  like an [intrinsic function](https://en.wikipedia.org/wiki/Intrinsic_function)

*a function whose implementation is handled specially by the* [*compiler*](https://en.wikipedia.org/wiki/Compiler)*.*  


Can anyone put me on the right track?","Confused by convention of using the word ""Intrinsic"""
994,2020-05-22 13:12:47,9,1,,"Generic not working for types imported via jsdoc comment , in js files , but works via typescript types defined in jsdoc comment . How to fix that ?"
995,2020-05-23 03:22:58,2,1,,A guide to typescript for javascript developers
996,2020-05-23 03:23:37,0,1,,A guide to typescript for newbies
997,2020-05-23 17:05:43,35,1,"Hey All,

I have some fairly extensive professional experience using python with sql alchemy, Django, etc. I am currently working on building a side project with typescript being my language of choice. 

I’ve noticed there is much more scaffolding necessary compared to the python ecosystem. Currently I’m using typeorm. It feels also though everything is extremely manual from setting up testing classes for end to end tests, connection management, simple things like get_or_create statements. 

I love typescript as a language but I feel far less productive building out a backend with the tools I’ve tried so far. 

I’m not sure if I’m simply approaching this with the wrong perspective or using poor tools. 

Does anyone have any recommendations or thoughts on the above? I may just have a poor perspective coming from a more mature python ecosystem.",ORM Challenges
998,2020-05-24 20:13:41,3,1,"Hello everyone. I started with typescript last week and wanted to redo one of my projects with typescript.

I'm trying to import a .gql file into my vue class component file but it gives me the following error.

"" **Cannot find module** ""

does anyone maybe know how to import .gql files?

I tried googling but couldn't get anything that is related to .gql files.",Need help importing a .gql file into my vue class component
999,2020-05-24 22:47:12,2,1,"**#1 learning this thing call 'data structure' is the most important thing of coding**

so most important thing is to find a site that shows what this thing does to learn it

&amp;#x200B;

""Programming is not really defined in the way you describe it. Namely, you describe functions as *actions* and arguments as *adjustments*. Sure, that’s a decent analogy. But you need to then comprehend how to actually write those functions (or actions as you describe them) to manipulate a *data structure*.

This is the key piece you are missing. You have to have data stored somewhere, and it has to have the correct *structure* for the data you want it to hold. And those actions need to change that data in a well-defined way so that the state of program can progress. You are calling functions on premade objects which is all well and good, but you need to understand how to make data structures, operate on them, and interpret them so that you can begin to write actual programs.

This is going to be very condensed and simplified, but in essence, you:

1. Start your program
2. Make your data structures to hold any data
3. Initialize them with the starting data they need (or they might not need any initialization at all).
4. Enter into the part of your program that does something with that data (actions and adjustments).
5. Exit out of the part that did something with that data
6. And either exit the program, or read the data and figure out what to do next to it
7. if you need to do more things to the data after reading it, do it

Here’s a good medium article [about different types of data structures and how to use them.](https://medium.com/swlh/introduction-to-data-structures-9134b7d064a6) But it might be a bit high level for you. Best is to take an intro course or typescript or python and learn them gradually. But don’t give up, people tend to hit a wall when “hard” stuff like this pops up in programming. But honestly, it isn’t hard once you get the hang of how it works. Best of luck.""

&amp;#x200B;

&amp;#x200B;

**here's all the sites i used to try to learn coding**

[https://www.reddit.com/r/learnpython/comments/gp0zsi/heres\_all\_the\_sites\_i\_used\_to\_try\_to\_learn\_coding/](https://www.reddit.com/r/learnpython/comments/gp0zsi/heres_all_the_sites_i_used_to_try_to_learn_coding/)

**here's everything i know about coding so far:**

[https://www.reddit.com/r/learnpython/comments/goy5xa/where\_to\_continue\_learning\_coding/](https://www.reddit.com/r/learnpython/comments/goy5xa/where_to_continue_learning_coding/)

&amp;#x200B;

**#2 random links to learn ts / js - no idea which is ACTUALLY for beginniners, ill test all the js ones**

 

First of all, TypeScript is a typed superset of JavaScript. So, you need to understand JavaScript/ECMAScript first.Few resource to learn:

* [A re-introduction to JavaScript (JS tutorial)](https://developer.mozilla.org/en-US/docs/Web/JavaScript/A_re-introduction_to_JavaScript)
* [The Modern JavaScript Tutorial](https://javascript.info/)
* [33 Concepts Every JavaScript Developer Should Know](https://github.com/leonardomso/33-js-concepts/)
* [Modern JavaScript Cheatsheet](https://github.com/mbeaudru/modern-js-cheatsheet)
* [Clean code JavaScript](https://github.com/ryanmcdermott/clean-code-javascript)

And after that, you can go with TS:

* [Official TypeScript docs](https://www.typescriptlang.org/docs/home)
* [TypeScript Cheatsheet](https://github.com/rmolinamir/typescript-cheatsheet)

&amp;#x200B;

&amp;#x200B;

**original question**

as this is liekly the most common question asked over time

im guessing some of the very knowledgable ppl here had sometimes during the past created a script in which other ppl would just copy / paste to new ppl that ask this question (since you're coders and would want to automate things so they can be made efficient &amp; effective)

&amp;#x200B;

&amp;#x200B;

**if coding was designed well, then it would be quick + easy to learn, just lilke hopscotch or walking**

'have quite a way to go ' - so is it cos coding is not at the state of progress where it could be easiely and quickly learned? kinda like how some things can be quickly and easiely learned, like hopscotch or walking (for example many or even every single thing is that designed well is easy to learn, but things that are not, are not easy to learn but hard)

i also asked if coding was not at the state of progress where it would be easy and quick  to learn (which it can if it was designed well which you didnt consider). you didnt consider the things taht are easy and quick to learn (especially when there are good sites / resources for new ppl)

&amp;#x200B;

&amp;#x200B;

**anything about 'enterpries' doesnt matter**

'why such and such language is an ""enterprise"" language will *fly* over your head at the moment, don't even read them, forget about them.'

it seems like typescript is mainly for 'enterprise use' and for 'angular'  [https://www.quora.com/Should-I-learn-JavaScript-before-learning-TypeScript](https://www.quora.com/Should-I-learn-JavaScript-before-learning-TypeScript) so maybe should learn something simpler but it doesnt seem like there are any simpler options out there...

&amp;#x200B;

**good learning sites are hard to find**

there are no beginning resources on r/reddit, for example the helpful thing i used to learn 'codecombat', its not even on there etc",#1 thing of coding is 'data structures' - everything learned about the first steps in learning typescript (and any other coding languages)
1000,2020-05-25 14:18:30,1,1,"Good example here

[https://medium.com/better-programming/when-to-declare-type-to-variables-in-typescript-d69a917ac1cf](https://medium.com/better-programming/when-to-declare-type-to-variables-in-typescript-d69a917ac1cf)",When to Declare the Type on a Variable in TypeScript
1001,2020-05-25 16:31:42,1,1,,"If you use pydantic in your python APIs, I made a basic CLI tool for converting all your models into typescript definitions"
1002,2020-05-25 22:25:12,260,1,"Hello guys,

I've been recently looking for a new job, and I noticed that some of my opinions are not very much widespread, so I wanted to confront with the wider community.

A few years ago, when I had to decide between Typescript and vanilla, I ended up picking vanilla due to the work of the tc39 committee. In particular for me the selling point was the pipeline operator ( |&gt; ) which was not supported in typescript back then, as I was already a fan of functional programming.

The more general problem was that, as usual in the JavaScript world, the abstraction layers or the fancy libraries you use make it harder to adopt new changes and web standards, which usually drove me to use the leanest architectures and stacks.

Another thing I disliked about TS, which instead is praised by many, is the type system. In general I think that the best option, especially for highly dynamic languages, is to write a large number of tests, to cover as many cases as possible, and to ensure that the application state is coherent. Many times I started from writing tests, and then wrote the code to solve those tests.

On the other hand the type system should catch many of the bugs the code could have. Yes, many, but not all. You will always have to write tests, so why write type annotations on a highly dynamic language, that are either not relevant or seriously limiting the dynamic part of the language?

My personal approach is to write functional code and use immutable states, because in my experience is the mutability that gives problems, and pure functions are so easy to test....

What do you guys think?",[AskJS] I prefer Vanilla.JS to Typescript. Change my mind.
1003,2020-05-26 23:49:21,17,1,"I'm trying to get on-board with TypeScript coming from a JavaScript background. All of the documentation only talks about the Types and how to use them. But I'm finding hidden secrets like TypeScript supporting [Optional Chaining](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html) or automatically setting instance variables based on private class constructor arguments.

```
class Test {
    constructor(private name) {}

    printName() {
        console.log(this.name); // &lt;- Somehow this is magically defined by TypeScript?
    }
}
```

I totally get the Type features that TypeScript adds. That's easy to follow and well documented. But there seems to be actual language features beyond just types that it adds to and I'd like to know what all of those are. Where can I find documentation for all of the changes to the JavaScript language TypeScript adds?",TypeScript's Language Features Documentation?
1004,2020-05-29 00:16:21,1,1,"What is your favorite npm modules do you use for AWS Lambda (serverless)

I like  typescript, Superstruct, axios, eslint and cypress",[AskJS] What are your top favorite npm modules for AWS Lambda (serverless)
1005,2020-05-30 08:19:44,8,1,"## Question

Hi,

I'm trying to build an application which will be available in the Browser &amp; native via Electron. Since both applications share components &amp; redux functionality I would like to have a shared source folder. I'm usually a C++ &amp; Golang developer, but I already have 2 medium projects worth of experience with create-react-app, electron-forge &amp; jsx. Since this project will probably be maintained for some years (hopefully) I thought Typescript would be the better option in this case. Since I already think in types when coding the transition from plain jsx shouldn't be to difficult.

I started the prototype with create-react-app + typescript &amp; electron-react-boilerplate, but soon found limitations with this setup. create-react-app doesn't allow source files outside of it's root, so the wanted folder structure sown below would be impossible. Also the although the electron boilerplate seems to be configured pretty feature rich, it's hard for me to tell exactly what configurations are really necessary and which ""nice to have"". 

**So basically my Question is:**

- Is typescript the right choice?
- What folder structure do you recommend?
- Should I use boilerplates or go from scratch?
- What is easier to keep up to date (boilerplate vs. scratch)

### Goals Summary

- typescript
- mono repo
- shared code
- react web
- react electron


#### Project Structure

```sh
.
├── electron
│   ├── package.json
│   └── src
├── shared
│   ├── package.json (if needed)
│   └── src
└── web
    ├── package.json
    └── src
```

### Packages

- react
- electron
- redux
- sass
- testing
- types
- and more",React Web &amp; Electron shared code mono repository
1006,2020-05-31 06:19:25,53,1,"Since it is compiled to JS, the performance cannot be better than a natively written JS. 

Besides static type checking, what benefits do TS offer? I don't think it offers a performance boost. I'm confused if I should port all my JS code to TS.",[NOOB QUESTION] How is typescript better if it is just compiled to javascript?
1007,2020-05-31 10:22:58,3,1,"i am starting to new project with nrwl nx 
there are shared codes between frontend and backend and mobile apps.

i could find a document about this subject

is there anyone point me the right documentation",does typescript compile unused codes?
1008,2020-06-01 09:01:27,1,1,"**Monday, May 25 - Sunday, May 31**

###Top Posts

| score | comments | title &amp; link |
|--|--|--|
| 551  | [81 comments](https://www.reddit.com/r/javascript/comments/gtq1nw/ebay_is_port_scanning_visitors_to_their_website/) | [Ebay is port scanning visitors to their website - and they aren't the only ones - nem.ec](https://blog.nem.ec/2020/05/24/ebay-port-scanning/)|
| 487  | [26 comments](https://www.reddit.com/r/javascript/comments/grk8kq/audiomass_a_fullfeatured_audio_editor_in_65kb_of/) | [AudioMass – a full-featured audio editor in 65kb of vanilla JavaScript](https://audiomass.co/)|
| 315  | [76 comments](https://www.reddit.com/r/javascript/comments/gs10h6/stack_overflow_developer_survey_2020_js_wins_with/) | [Stack Overflow Developer Survey 2020: JS wins with 67.6%](https://insights.stackoverflow.com/survey/2020#most-popular-technologies)|
| 270  | [19 comments](https://www.reddit.com/r/javascript/comments/gq5a4l/vscode_cheatsheet_for_jsreact_developers/) | [VSCode Cheatsheet for JS+React Developers](http://vscode-hacks.herokuapp.com)|
| 228  | [14 comments](https://www.reddit.com/r/javascript/comments/gqery3/case_study_analyzing_notion_app_performance_or/) | [Case study: Analyzing Notion app performance &amp;#40;or how to make a React app load 30% faster by tuning some configs&amp;#41;](https://3perf.com/blog/notion/)|
| 206  | [29 comments](https://www.reddit.com/r/javascript/comments/gqw9dp/new_progressive_apis_coming_to_chromium_browsers/) | [New progressive APIs coming to Chromium browsers](https://medium.com/swlh/how-microsoft-is-making-edge-the-best-browser-for-pwas-3b4ad1197be6)|
| 181  | [41 comments](https://www.reddit.com/r/javascript/comments/gsfkdn/ecmascript_4_the_missing_version/) | [ECMAscript 4: The missing version](https://evertpot.com/ecmascript-4-the-missing-version/)|
| 171  | [16 comments](https://www.reddit.com/r/javascript/comments/gsrxdg/using_git_to_run_eslint_on_changed_files_in_a/) | [Using Git to run ESLint on changed files in a feature branch](https://jdauriemma.com/programming/eslint-changed-files)|
| 165  | [260 comments](https://www.reddit.com/r/javascript/comments/gqkpob/askjs_i_prefer_vanillajs_to_typescript_change_my/) | `[AskJS]` &amp;#91;AskJS&amp;#93; I prefer Vanilla.JS to Typescript. Change my mind.|
| 153  | [99 comments](https://www.reddit.com/r/javascript/comments/gt0bue/askjs_what_are_your_must_have_react_tools_in_2020/) | `[AskJS]` &amp;#91;AskJS&amp;#93; What are your must have React tools in 2020?|




&amp;nbsp;

###Most Commented Posts

| score | comments | title &amp; link |
|--|--|--|
| 12  | [81 comments](https://www.reddit.com/r/javascript/comments/gtbdwl/askjs_is_it_just_javascript_in_the_next_decade/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Is it just JavaScript in the next decade?|
| 7  | [37 comments](https://www.reddit.com/r/javascript/comments/gtd0g9/showoff_saturday_may_30_2020/) | `[Showoff Saturday]` Showoff Saturday &amp;#40;May 30, 2020&amp;#41;|
| 23  | [29 comments](https://www.reddit.com/r/javascript/comments/gs8pjp/i_made_angelfire_a_js_library_to_add_custom/) | [I made Angelfire: a JS library to add custom context menus to elements](https://github.com/rish-16/Angelfire)|
| 20  | [29 comments](https://www.reddit.com/r/javascript/comments/gqn9y4/todays_javascript_from_an_outsiders_perspective/) | [Today’s JavaScript, from an outsider’s perspective](http://lea.verou.me/2020/05/todays-javascript-from-an-outsiders-perspective/)|
| 85  | [24 comments](https://www.reddit.com/r/javascript/comments/gtawnw/won_a_fast_html_css_and_json_converter_to_have/) | [WON, a fast HTML, CSS and JSON converter &amp;#40;to have code-understandable HTML and CSS documents&amp;#41;](https://gianlucatarantino.github.io/won/)|




&amp;nbsp;

###Top Ask JS

| score | comments | title &amp; link |
|--|--|--|
| 12  | [5 comments](https://www.reddit.com/r/javascript/comments/gswmh6/askjs_a_practical_course_for_gsap_do_you_want_it/) | `[AskJS]` &amp;#91;AskJS&amp;#93; A practical course for GSAP. Do you want it?|
| 6  | [13 comments](https://www.reddit.com/r/javascript/comments/gt39t5/askjs_how_do_you_sync_frontend_mock_data_with/) | `[AskJS]` &amp;#91;AskJS&amp;#93; How do you sync frontend mock data with backend data structure?|
| 5  | [11 comments](https://www.reddit.com/r/javascript/comments/gs8qyc/askjs_looking_for_feedback_on_questions_to/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Looking for feedback on questions to evaluate JavaScript engineers|




&amp;nbsp;

###Top Showoffs

| score  |  comment  |
|--|--|
| 5  |  /u/backlashsid said [## Made an instagram clone **supports mobile only. desktop css not optimized**  &amp;#91;https://www.thumbstacks.mobi/#welcome&amp;#93;&amp;#40;https://www.thumbstacks.mobi//#welcome&amp;#41;   minimal mvp includes  ...](/r/javascript/comments/gtd0g9/showoff_saturday_may_30_2020/fsc2k0t/?context=5) |
| 3  |  /u/web2033 said [ Node to Deno. Mystery solved. Animated version.  &amp;#91;https://codepen.io/web2033/full/jObgyXx&amp;#93;&amp;#40;https://codepen.io/web2033/full/jObgyXx&amp;#41;](/r/javascript/comments/gtd0g9/showoff_saturday_may_30_2020/fsbf3rc/?context=5) |
| 3  |  /u/mudgen said [Yes, I made Webscript:   &amp;#91;https://mudgen.github.io/webscript/docs/&amp;#93;&amp;#40;https://mudgen.github.io/webscript/docs/&amp;#41;   Webscript is like HTML but it is valid Javascript.  Webscript is an HTML...](/r/javascript/comments/gtd0g9/showoff_saturday_may_30_2020/fsaxz0r/?context=5) |




&amp;nbsp;

###Top Comments

| score  |  comment  |
|--|--|
| 233  |  /u/name_was_taken said [I think if you treat TS as just an alternative to unit tests, then it's probably not going to make you happy.  If you instead treat it as a helper to prevent accidentally making some very common mista...](/r/javascript/comments/gqkpob/askjs_i_prefer_vanillajs_to_typescript_change_my/frtc0ne/?context=5) |
| 182  |  /u/ryosen said [It's hard to take advice on learning JavaScript from a website that can't figure out how to make ""click to enlarge"" to actually work.](/r/javascript/comments/gtcejo/learn_it_faster_the_entire_javascript_language_in/fsbp327/?context=5) |
| 153  |  /u/CodeOnTheRocks said [Started using Typescript, won't ever go back. It prevents so many cruddy runtime errors where types were not checked and the wrong thing was passed.   I'm never gonna use untyped languages again.](/r/javascript/comments/gqkpob/askjs_i_prefer_vanillajs_to_typescript_change_my/frtcpkw/?context=5) |
| 96  |  /u/brainbag said [Who needs coding boot camps? Just print this out and make $100k/yr.](/r/javascript/comments/gtcejo/learn_it_faster_the_entire_javascript_language_in/fsb53go/?context=5) |
| 66  |  /u/ThomasAbraham said [What seems to be more surprising is JS being the second most wanted technology with 18.5% that means ""% of developers who are not developing with the language or technology but have expressed interest...](/r/javascript/comments/gs10h6/stack_overflow_developer_survey_2020_js_wins_with/fs2bquq/?context=5) |




&amp;nbsp;",Your weekly /r/javascript recap
1009,2020-06-01 10:29:46,11,1,"Check this first:
```
class A {
    static someStaticMethod(): any[] {
        return [new this(), new this()]
    }
}

class B extends A {
    someClassProp = 0
}

console.log(B.someStaticMethod())
```
1. What is the actual return type of `someStaticMethod` beyond `any[]`? How do I express the class which was used to call `someStaticMethod`? In this example it's `B` and the static's return type something like `new B()[]` but the `B` should be a generic. Do I use generics here? If yes, how?

2. Why does the TS compiler does not complain about the `any` type despite having all options set to strict:

Code sandbox: https://www.typescriptlang.org/play?#code/MYGwhgzhAECC0G8BQ1XQgFzBglsdA9gLYCmAylrsALIkYAWBAJgBQCUAXNGAHYCeAbQC6iFGnEAnOgFcJPaAJ4kA7tAY4I7ADTQlq9ZrZCxqAL5JzSUJBgAhaCQAeGEjyYx4ycRGIkAwuBQAAoSBAAO0AC80AAMFkhWBDw+ICQAdCAEAOYstmk+pBTYeLQMzOxsQA",What's the return type of a static method that returns new instances of its class?
1010,2020-06-01 11:09:28,45,1,"I used to use eslint with the plugins it suggested to me to install after executing :

    npx eslint --init;

and chooseing the option : I use typescript  , but I have found it to produce some akward linting errors recently like not allowing me to put type `any` on a function parameter. 

I have stopped using eslint since then. 

If you use eslint then what you use it for?

I was using it just because it was linting errors while I was writing js and so I believed it will also be useful in typescript.",Do you guys use eslint on your typescript projects?
1011,2020-06-01 16:23:23,1,1,"at this [playground link](https://www.typescriptlang.org/play/#code/JYOwLgpgTgZghgYwgAgKJSgHlQPmQbwChkTkw4BzALmQHJopaAaY0hgeyhtUIF9DCoSLEQoA8gGtMAFTxFSZSjVrsJzViQAmccjWl8BMAK4gEYYOxDJJMnAAoIegJQ0bsghuRQIYI1Cv4itR0qszI2rrIKLwA3AaExqbmlmgY2PaOaC6pWLgeCt6+-gRBygxhHFxRyLHxYACeAA4oAEoQAM5GADZgMkxoeAC81lLuAD456XGEECBGALbIAIJQwGAAFvM+wAjoUJz5pCYQAG6zyMO0x2cg6goglgCS4BAU0Bd0DyDPkG+M8YkzBYrD9XtAACLAE7ATQQOxwGhzeYAI2g-WRiIWqKg2TanR6mCR2P6KzWm22uwwnDknmAMGQdgAhHYAHJY6AAOmA7VBf3hTmQADJBcg2SjOdzedA7MinHLDgoSIU-FY9nZSRstuZKfsoByvlKcXEFPwFAhLO0wF4Oh84MgAPTIZHG0h0hmMsXYrk8l587zteXyRVKnwqnLq1aail7Tgc66zJwukim0jK4qSOz+xPxc0gdrsLoQDlddgUOyGyHQ2F2AAs-QArHK4rn84Xi6Xy76IVCYXCAJz9ADMTcILYLRZLZYrPerNY59f6ACYR6OLVarMNp1W4fWAGz9ADs2faAHc1gh1gyQBzyBQBUGSAg4O0UCo1FRPApC1aAI6Y8VQB814RHASbIE+L50OUH7BiQ37IOwNAauS2oxoBwzXpUcS8EAA) on line 46, it thinks `o` is of type `Result` instead of just the `Err`variant. Not sure why this is the case.",[help] Compiler doesn't seem to detect enum variants correctly
1012,2020-06-03 14:45:55,1,2,"I have the following project structure:

```
├── foo                   (workspace @project/foo)
│   ├── package.json
│   └── src
│       └── index.ts
├── bar                   (workspace @project/bar)
│   ├── package.json
│   └── src
│       └── index.ts
├── package.json          (monorepo root)
└── tsconfig.json         (base tsconfig)
```

If I run `tsc --watch` in each child workspace, TypeScript watches the file changes correctly and rebuilds the package. However, If I run the same command at the monorepo root, it doesn't work - it doesn't throw an error but if I change anything in file, the package is not rebuilt.

Reading the [docs](https://www.typescriptlang.org/docs/handbook/project-references.html#build-mode-for-typescript), I understand the the `--build` flag does have an option to pass multiple child projects (or `tsconfig.json` files). Is there something equivalent for `--watch`?",Watch mode for multiple child workspaces?
1013,2020-06-04 00:00:59,23,1,"`utility-types` is a typescript library of utility type functions. Since some of those functions end up in the `d.ts` file that `package.json` point with the field `types` I was wondering if it is a dependency and not a dev dependency.

Here is how I see stuff :

* dev depedency is any package of which the code does not end up in the  entry point files
* depedency is any package of which some part (or all)  of the code ends up in the entry point files",Is utility types a dev depedency or a depedency ?
1014,2020-06-04 14:04:22,0,2," Your Vue project is running well for now. Greeeeat! 💥💥💥

All text is in English and it’s a good bet since you target all English speakers (a large part of the population). But it could be interesting to manage several languages to make your app world wide 🌐

[https://medium.com/@admiquel/manage-vue-i18n-with-typescript-958b2f69846f?source=friends\_link&amp;sk=f27dfc1fc390c696fc55ed5db5864124](https://medium.com/@admiquel/manage-vue-i18n-with-typescript-958b2f69846f?source=friends_link&amp;sk=f27dfc1fc390c696fc55ed5db5864124)",Manage Vue i18n with Typescript
1015,2020-06-05 02:28:16,21,1,"Hello, I'm finding a good functional programming library for typescript, currently I found [purify](https://gigobyte.github.io/purify) and [fp-ts](https://gcanti.github.io/fp-ts) and wondering which one I should learn or are there any other libraries that worth looking at. Oh and I'm just finding a library to learn functional programming, not working on any projects. Thank you.",Good typescript function programming library
1016,2020-06-05 09:07:52,3,1,"Hi everyone,

I'm trying to write a type (or interface) that receives an `HTMLElement` and returns its tag. For example:

```typescript
const divtag: Foo&lt;HTMLDivElement&gt; // ""div""
```

We have dom's built in `HTMLElementTagNameMap` that does the opposite, i.e.:

```typescript
const divelem: HTMLElementTagNameMap[""div""] // HTMLDivElement
```

How would you go about it?

Thanks!",Is it possible to get an interface key by value?
1017,2020-06-05 19:36:28,2,1,"Hi, i'm currently testing out firebase and its Google Authentication ..  


I'm using firebase and firebaseui in the dependencies.

&amp;#x200B;

in my App.tsx i have my authenticated state that is set via onAuthStateChanged(() =&gt; {....} in useEffect

That state i pass down to the child component AuthScreen. In the AuthScreen i want to display the username from firebase with firebase.auth().currentUser.displayName .. but heres the problem.. typescript complains that currentUser is possibly null so i cant access displayName. And i thought i can check this with firebase.auth().currentuser?.displayName or at lease with if(....currentUser !== null) .. but both doesn' work.. does someone has any idea? I would appreciate! 

&amp;#x200B;

Here is some code example from my project: 

`function App() {`  
 `const [authenticated, setAuthenticated] = useState&lt;boolean&gt;(false);`  
 `const handleLogout = () =&gt; {`  
 `firebase.auth().signOut();`  
  `};`  
 `useEffect(() =&gt; {`  
 `firebase.auth().onAuthStateChanged(user =&gt; {`  
 `setAuthenticated(!!user);`  
`});`  
  `}, []);`  
 `return (`  
 `&lt;AppContextProvider value={{ authenticated: !authenticated }}&gt;`  
 `&lt;Styled.LoginBody&gt;`  
 `&lt;Suspense fallback={&lt;div&gt;Loading...&lt;/div&gt;}&gt;`  
 `&lt;AuthScreenComponent`  
 `authenticated={authenticated}`  
 `handleLogout={handleLogout}`  
 `/&gt;`  
 `&lt;/Suspense&gt;`  
 `&lt;/Styled.LoginBody&gt;`  
 `&lt;/AppContextProvider&gt;`  
  `);`  
`}`

&amp;#x200B;

`interface IProps {`  
 `authenticated: boolean;`  
 `handleLogout: () =&gt; void;`  
`}`  
`function AuthScreen(props: IProps) {`  
 `const context = useContext(AppContext);`  
 `const uiConfig = {`  
 `signInFlow: 'popup',`  
 `signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],`  
 `callbacks: {`  
 `// Avoid redirects after sign-in.`  
 `signInSuccessWithAuthResult: () =&gt; false`  
`}`  
  `};`  
 `return (`  
 `&lt;Styled.LoginForm&gt;`  
 `&lt;&gt;`  
 `{props.authenticated ? (`  
 `&lt;&gt;`  
 `&lt;h1&gt;`  
`Welcome{' '}`  
 `{console.log(`  
 `firebase.auth().currentUser !== null`  
`? firebase.auth().currentUser.displayName`  
`: console.log('user null')`  
`)}`  
 `&lt;/h1&gt;`  
 `&lt;button onClick={props.handleLogout}&gt;Logout&lt;/button&gt;`  
 `&lt;/&gt;`  
`) : (`  
 `&lt;StyledFirebaseAuth`  
 `uiConfig={uiConfig}`  
 `firebaseAuth={firebase.auth()}`  
 `/&gt;`  
`)}`  
 `&lt;/&gt;`  
 `&lt;/Styled.LoginForm&gt;`  
  `);`  
`}`

&amp;#x200B;

https://preview.redd.it/tj1zijfe95351.png?width=1080&amp;format=png&amp;auto=webp&amp;s=3e9e669bc23511b076fca9fa8d9ff6455e388c1c",Accessing an item in an Object that is possibly null
1018,2020-06-05 20:48:24,9,1,"I am learning typescript, and I don't really have a mentor. I am struggling with a lot of new concepts. 

I have a module that exports a function that returns a result. I want to indicate in the return value if there was an error, and provide feedback to be relayed to the user.

Is this a good way to implement this?

`type ProcessResult = { error: false; results: number[] } | { error: true; message: string };`  


`export function processFile(filePath: string): ProcessResult {`      
`// process the file, and produce the result, or return a descriptive error message`  
`}`

My gut instinct is it's better to check a boolean in the return value, than check typeof the return value. But maybe that's not the best way to do it. Also, that may be because I'm coming from Python, where checking the type of anything is considered bad form.",How to indicate error status in a return value.
1019,2020-06-05 22:39:39,2,1,"I thought interfaces should be limited to class implementations. However:

    // https://www.typescriptlang.org/docs/handbook/generics.html
    interface Lengthwise {
        length: number;
    }
    
    function loggingIdentity&lt;T extends Lengthwise&gt;(arg: T): T {
        console.log(arg.length);  // Now we know it has a .length property, so no more error
        return arg;
    }

I checked this code and it also compiles. Can you guys tell me which you would prefer? I would think the below type definition should almost always be preferred unless the generic is being used to create a class factory.

    
    type Lengthwise = {
        length: number;
    }
    
    function loggingIdentity&lt;T extends Lengthwise&gt;(arg: T): T {
        console.log(arg.length); 
        return arg;
    }",Use types or interfaces to constrain generics?
1020,2020-06-06 14:48:00,16,1,"Steps to reproduce :

create a folder and in it execute :

    npm init -y;
    npm install --save-dev typescript;
    npm install @types/jest-environment-puppeteer;

create file `./tsconfig.json` that has content :

    {
    	""compilerOptions"": {
    		""module"": ""commonjs"",
    		""outDir"": ""./dist"",
    		""rootDir"": ""./src"",
    		""target"": ""ESNext"",
    		""declaration"": true
    	},
    	""include"": [
    		""./src""
    	],
    	""exclude"": [
    		""node_modules""
    	]
    }

create file `./src/index.ts` that has content :

    const a = 3;

Run `npx tsc` and look at the errors you get :

    node_modules/@jest/environment/build/index.d.ts:8:23 - error TS2688: Cannot find type definition file for 'jest'.
    
    8 /// &lt;reference types=""jest"" /&gt;
                            ~~~~
    
    node_modules/@jest/environment/build/index.d.ts:11:8 - error TS1259: Module '""~/Desktop/test_jest_types_bug_with_tsc/node_modules/jest-mock/build/index""' can only be default-imported using the 'esModuleInterop' flag
    
    11 import jestMock, { ModuleMocker } from 'jest-mock';
              ~~~~~~~~
    
      node_modules/jest-mock/build/index.d.ts:133:1
        133 export = JestMock;
            ~~~~~~~~~~~~~~~~~~
        This module is declared with using 'export =', and can only be used with a default import when using the 'esModuleInterop' flag.
    
    node_modules/@jest/source-map/build/getCallsite.d.ts:8:100 - error TS2503: Cannot find namespace 'callsites'.
    
    8 declare const _default: (level: number, sourceMaps?: Record&lt;string, string&gt; | null | undefined) =&gt; callsites.CallSite;
                                                                                                         ~~~~~~~~~
    
    
    Found 3 errors.

Why am I getting errors for types that I have installed and dont use ?",Getting error for types that I have installed but dont use when I tsc .
1021,2020-06-06 15:14:59,18,1,"A while back, I made[ this post](https://www.reddit.com/r/typescript/comments/ges5r9/auto_generate_typechecker_from_typescript_types/) asking whether it was automatically possible to generate validation functions for Typescript types. It seems like this is not the case. Libraries like ajv, io-ts, zod, and runtypes exist, but none of them are truly automatic (and there are other issues as well).

About 3 weeks ago, I[ released](https://www.reddit.com/r/typescript/comments/glyq1m/typecheckmacro_automatically_generate_validation/)[ typecheck.macro](https://github.com/vedantroy/typecheck.macro), a compile macro/library for automatically generating validation functions for Typescript types. I've been working on it non-stop since then, and I've added a bunch more features.

The macro supports a fairly large portion of the Typescript type system, so you can automatically generate a validator for most Typescript interfaces. (Look at the README/the bottom of this post for a full list of supported features).

So why use this library/macro? A few reasons:

\- It's seamless. You don't need to define your types in a DSL. Just use... Typescript! The macro automatically parses your type declarations and generates validation functions. This removes a lot of mental overhead and makes the overall process way easier since you don't need to worry about issues like,[ io-ts](https://github.com/gcanti/io-ts/issues/477) or[ runtypes](https://github.com/pelotom/runtypes/issues/147) not supporting rest types. (Note: These libraries are also super cool, all comparisons are friendly!)

\- It's really really really fast. I did some benchmarking in the original post and some more benchmarking for this post. It turns out when you generate ""boolean validators"" (validators that only return true/false) this library is consistently 2x - 3x faster than ajv, which is the fastest JSON schema validation library. When you enable error messages, this library is still generally faster than ajv, **and** it gives waayyy better error messages.

The reason this macro is fast is because it generates optimized code at compile time whereas other libraries don't generate code. (ajv does generate code, but it 1. only does this at runtime 2. can't handle circular references and 3. this library tends to generate less/faster code).

Here's an example of an error message for the following type with this library:[ https://pastebin.com/SiibGU2w](https://pastebin.com/SiibGU2w)

Here's ajv's equivalent of the same error message: ""data should be number, data should be object, data should match some schema in anyOf""

Supported Typescript constructs:

\- interfaces/object literals (no extends, but all the other goodies are there, such as index signatures and optional properties)

\- intersection types

\- union types

\- generics

\- literals

\- arrays/maps/sets

\- tuples

\- type aliases

\- circular types/circular references","typecheck.macro - A library/macro for automatically generating validation functions from Typescript types now supports intersection types, circular references/recursive types, detailed error messages, type analysis, maps, sets, and more!"
1022,2020-06-06 18:17:35,5,1,[removed],Why does visual studio code run my typescript files as if they're written in plain javascript? [please help-- noob question]
1023,2020-06-09 09:33:46,0,3,"hi, i was using typescript recently(using my limited ES knowledges on server side)

and there were a 3rd party library, which used to be a pure ES module, but now they had wrote some \`.d.ts\` files, unfortunately they havnt wrote for all the members inside the module, while only about 1/3 had. this caused my project throw error when compiling(i guess since the new version had types file, compiler might treate it as a pure TS module)

so my question is how to add more declaration for this 3rd party library? without sending PR to the upstream?  

if that's impossible, is there anyway to indicate the compiler(tsc) to fallback to treat the library as a ES module?

also i noticed that in the existing declarations, there were some types which can not be accept by my compiler, should i explicit import them from that library?

sorry for the poor english and knowledges",How to add more declaration for an existing library
1024,2020-06-10 04:56:15,14,6,Pnpm is a package manager that uses symlinks for node modules. Yesterday I started learning typescript but the code doesn't runs with pnpm. Using the npm instead of pnpm works. I stumbled upon few stackoverflow and github questions but none had the answer.,Does typescript works with pnpm?
1025,2020-06-10 16:50:10,32,10,,"Can i use typescript in express.js with functional programming, will everything works fine ?"
1026,2020-06-11 03:03:42,3,5,"I'm trying to pass a 1st class function to a another function while have the generic inferred without calling it, but I can't get typescript to infer the type, only if I explicitly call the function.

    sql.parseTable = &lt;T&gt;(res: QueryResult): T[] =&gt;
        pipe(sqlResRows, map(convertToCamelCase))(res)
    
    const songs = await sql.query({
        sql: SELECT_SONGS,
        parse: sql.parseTable, // in this line the generic can't be inferred
        parse: res =&gt; sql.parseTable(res), // the generic correctly inferred
    })

I would prefer the first one as it's cleaner and would mean i don't have to change all my graphql resolvers, but the generic can't be inferred.

Any ideas?

TS: 3.9.5, Node: 14.4.0",Passing generic to function without calling it (1st class function)
1027,2020-06-11 15:45:52,17,8,"We're trying to build a command line app to find orphan code in a larger typescript project.

Parsing the imports is an issue as they could be multiline.

Is there a parse that can take a .ts or .tsx file and parse out the imports reliably into an AST?",Reliable typescript language parser.
1028,2020-06-12 13:00:07,2,2,I could not quite come up with a valid use case to justify why typescript supports interface with indexers. plain javascript provides you with indexing objects then why one would need to define an indexer in an interface.?,What is a valid use case for Interfaces with indexers in typescript?
1029,2020-06-12 21:58:05,13,7,"When working with rather complex state models it becomes quite messy using the spread operator to partially update the state only. Also you lose with the spread operator the actual class instance.

For example my state model (just an example, not my real state)


```typescript
class Content {
    articles: Article[];
    //..
    getArticle(id: string) { return; }
}

class AppState {
    loggedIn: boolean;
    user: User;
    content: Content;
    uiState: UIState;
}
```

When doing action-&gt;state reduction you would have a reducer like this

```typescript
on(action, (state) =&gt; {
    return {...state, loggedIn: true, content: {...state.content, articles: articles};
}
```
where you basically lose class instances. That gets also more and more unsuitable the more my state model grows in complexity.
I wonder if there are libraries out there that help with this uses cases. Do you know any, or do you limit yourself to work with plain objects and a shallow store all the time? NgRx for examples write in their docs it's recommended to keep the store state as shallow as possible, and now I wonder if this is because of exactly this reason or if there is another reason involved here. Seems like an arbitrary limitation because they don't provide a library to easily patch frozen objects.

I ask because I created a solution for that which allows to patch frozen objects (by returning a new patched one which contains only updates where actual change happened), without using that dirty spread operator and wonder if there are other pitfalls.

My current code (which works for frozen states and returns a new one instead of modifying the original):

```typescript
on(action, (state) =&gt; {
    return applyPatch(state, state =&gt; {
        state.loggedIn = true;
        state.content.articles = articles;
    });
}
```",How do you manage complex state models? (NgRx etc)
1030,2020-06-13 15:18:53,5,2,"I have the following two functions : `getAllTextNodesDeep` , `recurseDomTreeNodes` , in my own personal browser-specific typescript library .

In my library there is an entry point file that exports both of them .

Each of the functions has its own file that default exports it .

The first function uses the second function.

When I `tsc` my library the compiler changes the internal variable names . So instead of `recurseDomTreeNodes` there is `recurseDomTreeNodes_1` all over the place inside the `getAllTextNodesDeep` function definition .

That cause no issues at all except in the following case :

I want to add some functions in the window object of the puppeteer `page` instance . When I do that , and then invoke `getAllTextNodesDeep` , the function looks for `recurseDomTreeNodes_1` and not `recurseDomTreeNodes` , which makes my function throw error.

Do you know if there is any way to make tsc not change internal names?

Or am I writing bad practice code and I should go for a dependency injection or something else ?",Prevent tsc from renaming variables that are not exposed .
1031,2020-06-14 14:14:45,4,1,"So I will try to explain my issue:  


""account"" is an object containing the usual stuff like name/password/etc..

In my updateAccount function I have a parameter ""data"" which can contain the Id and whatever fields needs updating. 

&amp;#x200B;

Now, here arises my struggle with typescript, in normal javascript I would simply do:

&amp;#x200B;

Object.keys(data).forEach(key =&gt; {

if(account\[key\]) { this is a valid key to update }

});

This allows me to only update what I need and filter out anything unneeded.  


Yet... typescript seems to be annoyed as hell when you try do this claiming that strings are not a valid child of an account and what not. (the code runs it just gives TS warnings)

Looking into it... it should be fixed by doing:

Object.keys(data).forEach(&lt;T extends keyof AccountModel&gt;(key: T) =&gt; {  


But then it nags about key and value being incompatible... Can anyone shed some light on how you are supposed to do this?",Question regarding a dynamic key to get values from an object.
1032,2020-06-15 02:10:03,17,1,"Using vscode.

A component have many props, eg. - `props.navigation`, `props.showMenu`, etc. But typescript is giving me error saying `navigation does not exist in Object` and squiggly red underlines `navigation`. I can resolve this by clicking Quick Fix and then declare property 'navigation'. This adds navigation in the Object interface.

Do I really have to do this for every property inside props?",React: Do I really have to declare every properties inside props?
1033,2020-06-15 15:44:30,11,3,"Idk if I found a bug or something is going over my head, but I've written out a super simplified example of code I wrote where the type error is displayed, and one where it is not.

[example code 1 (error)](https://www.typescriptlang.org/play/#code/MYewdgzgLgBAygFQKIAUD6BJAIjAvDAbwCgZSYAzASwCdoAueATwFsAjEAGwDpyRqAKAOQBGQQEoANCTIQApqDAATBnBbtuvAYIBM4qQF8iRKIwAOs+FFmm8haaUrKYENZwDc9mGFkAPKAH4VK1MPQyIFaGdgiCDrAG0AXVs4z2IydJhHFWR0bB4aaCkMsm8-BgJMp0RUTCwuOQVFGH0isha7YocqnNr6+XBFVuLSqAYAVyVZKm9Bz0MEjyJyCeAoSnAKSiU4YIAhRgxFfmhrQ4YAa1lGEHIYE3Mb+B7sMQ6yDllYE9NYmwAfGATRRTLayJr4b4QOIABgWRnSlFu-AAhN9XmlOtRPmNqGAPOkwukAO4AC0oHxgx2CXEcMGRuHw1VyWDi30OCXRnnSEVgI1s3y4I0WnUySORI1eWKgOLx8M631sQrmctIUplUWsoSIQA)

[example code 2 (working)](https://www.typescriptlang.org/play/#code/MYewdgzgLgBAygFQKIAUD6BJAIjAvDAbwCgZSYAzASwCdoAueATwFsAjEAGwDpyRqAKAOQBGQQEoANCTIQApqDAATBnBbtuvAYIBM4qQF8iRKIwAOs+FFmm8haaUrKYENZwDc9mGFkAPKAH4VK1MPQyIFaGdgiCDrAG0AXVs4z2IydJhHFWR0bB4aaCkMsm8-BgJMp0RUTCwuOQVFGH0isha7YocqnNr6+XBFVuLSqAYAVyVZKm9Bz0MEjyJyCeAoSnAKSiU4YIAhRgxFfmhrQ4YAa1lGEHIYE3Mb+B7sMQ6yDllYE9NYmwAfGATRRTLayJr4b4QOIABgWRnSlFu-AAhN9XmlOtRPmNqGAPOkwukAO4AC0oHxgx2CXEcMGRuHw1VyWDi30OCXRngRSNR1JGryxUBxePhnW+tm+XBG+LaotIguFUWsoSIQA)

Does anyone know why the guard at line 24-26 in example code 1 does not work, but does work in example 2? I'm fairly confident in my TypeScript abilities but this one is not making sense in my brain.","Type guard is acting strange. Is this a bug, or am I confused?"
1034,2020-06-16 05:27:27,5,1,"    async homeApi(_source: any, _args: any) { const body = {           door: _args.door,           window: _args.window         }; }

I have a typescript code like above where I create a JSON Object called body  
 using door  
 and window  
 arguments. Typically the body should be:

    {     door: 3,     window: 4 }

What I want is if \_args.door  
 is empty/blank, the body  
 should be

    {window: 4}

It should not be: {         door: 3,         window: 4        }",How to create a JSON Object's element based on if it is null or not?
1035,2020-06-17 12:07:49,4,1," `type personType = { name: string }`

`const displayPerson = (person2: personType) =&gt; {     console.log(person2) }`

`let person1 = {     name: ""aaa"",     address: ""bbb"",     age: 30 }`

`displayPerson(person1)` 

This code should give error, because person1 type is not personType but the code is still running with out any error or warning!!!",typescript object type alias signature working!!!
1036,2020-06-18 15:46:28,7,2,"I am attempting to do this

&amp;#x200B;

```typescript

let username: String | HTMLInputElement = document.querySelector('#username')



if (username.reportValidity()) {

  username = (username as HTMLInputElement).value

  verify({ username })

}

```

&amp;#x200B;

But typescript wont let me make a union type with String and HTMLInputElement

&amp;#x200B;

```typescript

Type 'Element' is not assignable to type 'String | HTMLInputElement'.

  Type 'Element' is missing the following properties from type 'HTMLInputElement': accept, align, alt, autocomplete, and 159 more.ts(2322)

```

what do I need to do to make this happen?

Thank you so much",Newbie Help with union types
1037,2020-06-19 00:27:02,2,1,"Supposedly Stryker as it working for nearly 3 years: https://stryker-mutator.io/blog/2017-10-06/typescript-support

There's even a [short guide](https://github.com/stryker-mutator/stryker-handbook/blob/master/stryker/guides/vuejs.md#jest-configuration) suitable for [my small project](https://gitlab.com/bss03/vue-webpack-ts-lambda).

Unfortunately I'm experiencing a failure before even the first test: https://pastebin.com/WWdPEXf4

I commented on a closed [issue](https://github.com/stryker-mutator/stryker/issues/1229#issuecomment-645721873), but it hasn't been reopened (nor has anyone commented on it since I did).

Anyone got mutation testing (Skryker or otherwise) working with typescript that could point me the right direction?  It looks like I might need to tell stryker to do some transpiling, but I'm not sure.  I think I tried `""transpiler"": [ ""typescript"" ]` in the Stryker configuration, but it didn't help.

Thanks for reading, and thanks in advance for any help you can provide.",[Help Wanted] Mutation Testing with Typescript
1038,2020-06-20 16:56:31,7,4,"I'm learning typescript and trying to use it on a personal project.I have this function:

```
const fn = ({
   resourceId,
   select = resourceId ? state =&gt; state : id =&gt; state =&gt; state[id],
}) =&gt; {
   const selector = state =&gt;`
   resourceId ? select(resourceId(state) : select(state);)`
};
```
and I cannot make it build successfully. Here is my best attempt:

```
type Attr = string | number;
type LikeState = {
   [key: string]: any;
   [key: number]: any;
};

interface IfcFn&lt;ResourceId extends Attr | undefined&gt; {
   resourceId?: ResourceId;
   select: ResourceId extends Attr
      ? (x: Attr) =&gt; (y: LikeState) =&gt; LikeState
      : (x: LikeState) =&gt; LikeState;
}

const fn = ({
   resourceId,
   select = resourceId ? state =&gt; state : id =&gt; state =&gt; state[id],
}: IfcFn&lt;Attr | undefined&gt;) =&gt; {
   const selector = (state: LikeState) =&gt; 
      resourceId ? select(resourceId)(state) : select(state);
};
```

I know I'm not there. So, any suggestions? Thank you!",Noobie trying to do something advanced I guess - conditional arguments
1039,2020-06-20 20:28:57,21,8,"Hello, thanks in advance for anyone that can help!

In Typescript:

    type Thing {
      foo: number
      bar: number
      baz: number
    }
    
    // original
    const t: Thing = { foo: 1, bar: 2, baz: 3 }
    // partial update
    const pt: Partial&lt;Thing&gt; = { bar: 999 }
    // new
    const nt: Thing = {
      ...t,
      ...pt,
    }
    // is { foo: 1, bar: 999, baz: 3 }

In C#, I'm trying to do the same thing, and I end up writing things like:

    class Thing {
      public int? foo;
      public int? bar;
      public int? baz;
    
      public Thing Clone(Thing p) {
        return new Thing {
          foo = p.foo ?? this.foo,
          bar = p.bar ?? this.bar,
          baz = p.baz ?? this.baz,
        }
      }
    }
    // original
    Thing t = new Thing { foo = 1, bar = 2, baz = 3 }
    // partial update
    Thing pt = new Thing { bar = 999 }
    // new
    Thing nt = t.Clone(pt);

Any suggestions for other ways to implement this pattern in c#?  I specifically miss:

* The terseness of the TS version, I don't have to write a Clone() function with the ... spread operator
* In TS I am guaranteed that the properties of an instance of the Thing type are not null.  I'm having to litter my C# code with null checks that TS would catch at compile time.",How to do this typescript pattern in c#?
1040,2020-06-21 05:10:19,19,1,Hi everybody. I have this repo in typescript and I would like to know how it can be improved. Looking for feedback. This is a package for managing permissions.,How can improve my tsconfig?
1041,2020-06-21 07:55:12,14,1,"So, I have a react app and my Webstorm is just not appropriately linting things. Everything seems to be building fine, but all my "".js"" files are littered with linting errors EVEN though I pre-commit with linting and its fine.  


Can you look over my babel, eslintrc file and let me know if anything jumps out as incorrect or ""out of ordering"". I am trying TRYING to ONLY use typescript on "".ts/.tsx"" files and ignore the '.js' files for typing... basically ""oh its a .js, ignore typescript linting etc..."".  


ESLINTRC

    
  const path = require('path')
    
    module.exports = {
      parserOptions: {
        ecmaVersion: 2019,
        sourceType: 'module',
        ecmaFeatures: {
          jsx: true,
        },
      },
      extends: [
        'eslint:recommended',
        'plugin:react-hooks/recommended',
        'plugin:react/recommended',
        'eslint-config-prettier',
        'eslint-config-prettier/@typescript-eslint',
        'airbnb-base',
        'prettier',
        'prettier/react',
      ],
      globals: {},
      rules: {
        strict: ['error', 'never'],
        'import/prefer-default-export': 1,
        'global-require': 1,
        'react/jsx-key': 1,
        'prefer-destructuring': 1,
      },
      env: {
        browser: true,
        jest: true,
        es2020: true,
      },
      settings: {
        'import/resolver': {
          'babel-module': {
            'import/resolver': {
              src: path.join(__dirname, '/src'),
            },
          },
        },
        react: {
          version: 'detect',
        },
      },
      overrides: [
        {
          files: '**/*.+(ts|tsx)',
          parser: '@typescript-eslint/parser',
          parserOptions: {
            project: './tsconfig.json',
            jsx: true,
          },
          plugins: [
            '@typescript-eslint/eslint-plugin',
            '@typescript-eslint/eslint-recommended',
            '@typescript-eslint/recommended',
          ],
        },
        {
          files: ['**/__tests__/**'],
          settings: {
            'import/resolver': {
              jest: {
                jestConfigFile: path.join(__dirname, '/jest.config.js'),
              },
            },
          },
        },
      ],
    }
    

HERE IS MY BABELRC FILE  


      {
      ""presets"": [
          ""@babel/preset-react"",
          ""@babel/preset-env"",
          ""@babel/preset-typescript""
      ],
      ""plugins"": [
        ""@babel/plugin-proposal-optional-chaining"",
        ""@babel/plugin-proposal-nullish-coalescing-operator"",
        ""@babel/plugin-syntax-dynamic-import"",
        [""module-resolver"", {
          ""root"": [""./src""],
          ""alias"": {
            ""src"": ""./src""
          }
        }]
      ]
    }
    

HERE IS WHAT MY WEBSTORM IS SHOWING AS ERRORS. These are "".js"" files. I have used Webstorm on all my projects and never any issues... even when jump to other repos, all good. So, I am thinking its my introducing with typescript to this project,  as my other projects do not use it. Anybody see any issues? Remember, I want to use both "".js"" and "".ts"" extensions.. and only ""type"" the ts files.  


errors webstorm show.  
[https://imgur.com/a/xYJowaO](https://imgur.com/a/xYJowaO)  
[https://imgur.com/uJSIFyj](https://imgur.com/uJSIFyj)  


P.S. --- IF you want to work thru this with me, let me know and I will venmo you some $ for your time. We can google hangout and I can share my screen etc... message me. I do NOT need coding help, I am in need of configurations help.","Having a real tough time ""optionally"" using typescript in my react app. see configs"
1042,2020-06-23 15:52:31,3,2,"I want to have our app translated into multiple languages but I also want to do it the 'typescript way' where our strings aren't just in an 'object' but are in a TS interface.

Has anyone done anything like this before?

I've only seen these mapped to basic JSON objects and not typescript interfaces.

I think the following issues exist for Typescript:

 - how do you do hierarchy?  I'd like to avoid excessive nesting and possibly without the need to constantly name and define a new interface for each component.  For example a key of onboarding.hello could/should be used so that the 'onboarding' component can have multiple keys.

- Is it better to isolate internationalizations per component rather than have one big internationalization blob with all of the internationalizations?  So for example you could have a React component like Onboarding.tsx and then a translation of Onboarding.i18 that is a properties file with each translation inside it...  That might be cleaner rather than having one big object. One challenge here is it would have to survive refactoring and still work with the translation service.

- How do you handle interpolation with Typescript strings and get compiler safety?  For example, an interpolation could take 'name' and 'date' properties and these would need to be applied at runtime. If we forget one we would need to get a compiler error.",Typescript interfaces for i18 translations?
1043,2020-06-24 00:32:40,7,1,"Hey there! 

I have a project in mind that would require broadcasting video from user to user, with some features that allow for applying filters to video frames in-between (in node/typescript backend service). 

I've read about webrtc a bit, but there aren't a ton of resources out there and the examples on webrtc site are a bit vague. 

Any ideas / suggestions / alternatives? 

Thank you!",Best approach for video streaming web app
1044,2020-06-25 00:35:30,4,1,"Hello friends, I need your help ASAP.
I'm making this school project in React and NestJs, where I'm using tsx instead of js on the front.
I couldn't find any examples of google maps in typescript, and I really don't know what to do.

Due is in 18 hours so I'm pretty cucked :(",Google Maps in React
1045,2020-06-26 13:55:46,0,1,"I'm trying to create a module for type definitions to be shared across multiple typescript projects (mostly angular, but also typescript cloud functions). I was able to create a simple package with just a single index.d.ts file with all my types exported. However I've come across the issue of wanting a union type that I also need to access the members of in an array. What I did before I tried creating the shared module was the following:

`export const UnionTypeList= [ 'type1', 'type2'] as const;`

`export interface UnionType = typeof UnionTypeList[number]`

However if I try declare a const array in the index.d.ts file it won't let me. I've moved it to a separate ts file and imported that into the definition file, but now Angular is telling me that file is not being included in typescript compilation despite me adding it to the .tsconfig files array.

Is there any easier way I should be doing this? And please don't just tell me to use a monorepo, that's not the answer I'm looking for.",How to properly package a module for type definitions
1046,2020-06-27 08:14:41,3,1,"Basically, I have a legacy site in "".js"" (react). I am moving it over to "".tsx"", BUT I get sooo many errors when I change any file names to "".tsx"". Its not only type errors, but I literally get errors on something simple like:  


     const App =&gt; {
       return &lt;div&gt;I am App home &lt;/div&gt;
     }

  My compiler shows that ""I"" ""am"" etc.. are variables and the &lt;div&gt; is generating errors. It's all a mess. So, I am thinking my babelrc or perhaps my webpack is jacked. I need to be able to leave the "".js"" files alone and have them build as usual, and just add up date files with "".tsx"" and slowly move to typescript. See anything wrong, or do you have an example of a repo with BOTH being used?  


 Here are my configs:  


     babelrc
      -----------
      {
      ""presets"": [
          ""@babel/preset-react"",
          ""@babel/preset-env"",
          ""@babel/preset-typescript""
      ],
      ""plugins"": [
        ""@babel/plugin-proposal-optional-chaining"",
        ""@babel/plugin-proposal-nullish-coalescing-operator"",
        ""@babel/plugin-proposal-class-properties"",
        ""@babel/plugin-syntax-dynamic-import"",
        ""@babel/proposal-object-rest-spread"",
        [""module-resolver"", {
          ""root"": [""./src""],
          ""alias"": {
            ""src"": ""./src"",
            ""utils"": ""./src/utils/"",
            ""components"": ""./src/components"",
            ""features"": ""./src/features"",
          }
        }]
      ]
    }
    

 webpack:

     const path = require('path');
     const webpack = require('webpack');
     const {CleanWebpackPlugin} = require('clean-webpack-plugin');
     const HtmlWebpackPlugin = require('html-webpack-plugin');
     const MiniCssExtractPlugin = require('mini-css-extract-plugin');
    
     const isDevelopment = process.env.NODE_ENV === 'development';
    
     module.exports = {
       entry: ['./node_modules/regenerator-runtime/runtime.js', './src/index.js'],
       module: {
         rules: [
           {
            test: /\.js?$/,
            exclude: /node_modules/,
            use: ['babel-loader'],
          },
          {
            test: /\.module\.s(a|c)ss$/,
            loader: [
              isDevelopment ? 'style-loader' : MiniCssExtractPlugin.loader,
              {
                loader: 'css-loader',
                options: {
                  modules: true,
                  sourceMap: isDevelopment,
                },
              },
              {
                loader: 'sass-loader',
                options: {
                  sourceMap: isDevelopment,
                },
              },
            ],
          },
          {
            test: /\.s?(css)$/,
            exclude: [/node_modules/, /styles/],
            use: [
              isDevelopment ? 'style-loader' : MiniCssExtractPlugin.loader,
              {
                loader: 'css-loader',
                query: {
                  modules: {
                    localIdentName: '[path][name]__[local]--[hash:base64:5]',
                  },
                  importLoaders: true,
                  sourceMap: true,
                },
              },
              'css-modules-typescript-loader',
              'postcss-loader',
              'sass-loader',
            ],
          },
          {
            test: /\.s?(css)$/,
            include: [/styles/],
            use: [
              isDevelopment ? 'style-loader' : MiniCssExtractPlugin.loader,
              {
                loader: 'css-loader',
                query: {
                  modules: false,
                  importLoaders: true,
                  sourceMap: true,
                },
              },
              'postcss-loader',
              'sass-loader',
            ],
          },
          {
            test: /\.(eot|otf|ttf|woff|woff2)$/,
            use: 'file-loader?name=[name]_[hash:base64:5].[ext]',
          },
          {
            test: /\.(jpg|png|gif|svg)$/,
            use: 'file-loader',
          },
          {
            test: /\.(ts|tsx)?$/,
            include: path.resolve(__dirname, 'src'),
            use: ['ts-loader'],
          },
        ],
      },
      resolve: {
        modules: ['src', 'node_modules'],
        extensions: ['*', '.js', '.jsx', '.ts', '.tsx']
      },
      plugins: [
        new CleanWebpackPlugin(),
        new HtmlWebpackPlugin({
          title: 'My Site',
          template: './src/index.html',
        }),
        new MiniCssExtractPlugin({
          filename: isDevelopment ? '[name].css' : '[name].[hash].css',
          chunkFilename: isDevelopment ? '[id].css' : '[id].[hash].css',
        }),
      ],
      output: {
        path: path.join(__dirname, '../dist'),
        chunkFilename: '[name].[hash].chunk.js',
        filename: '[name].[hash].js',
      },
    };
    

 tsconfig

      {
      ""compilerOptions"": {
        // because we're compiling with Babel instead of TypeScript
        // and we're only using TypeScript for type checking, we'll set ""noEmit""
        // to true so running type checking doesn't generate any files.
        ""strict"": false,
        ""noEmit"": true,
        ""forceConsistentCasingInFileNames"": true,
        ""baseUrl"": ""./src"",
        ""jsx"": ""preserve"",
        ""allowJs"": true,
        ""lib"": [""dom"", ""es2018""],
        ""paths"": {
           ""test-utils"": [""./tools/tests/test-utils""]
         }
      },
      ""include"": [""./src/**/*.ts"", ""./src/**/*.tsx"", ""*.ts"", ""*.tsx"", ""./@types""],
      ""exclude"": [
        ""./src/**/__tests__/**/*.ts"",
        ""./src/**/__tests__/**/*.js"",
        ""node_modules"",
        ""build"",
        ""dist"",
        ""./src/**/*.js"",
        ""./src/**/*.jsx""
      ]
    }",I need a repo/github example that shows a project with BOTH js/tsx files?
1047,2020-06-30 09:22:59,9,1,"Hello,

I am working an an application that is deployed as some microservices that are mostly written with Typescript and run with Node. We have split some functionality that is used in many backends to small NPM packages that those backends consume. Some of these packages provide abstractions for others and all is well so far.

But we encountered a problem on some packages that is keeping us busy for a while now. \[I'll asked on stack overflow\]([https://stackoverflow.com/questions/61363752/typescript-import-type-from-package-without-dependencies-from-other-types-in-th](https://stackoverflow.com/questions/61363752/typescript-import-type-from-package-without-dependencies-from-other-types-in-th)) about this some months ago with no avail. So I hope somebody here can help us or provide us with some ideas.

&amp;#x200B;

To outline the problem a little bit:

Consider a package that provides a class A and class B. Class A is using an external dependency that also some other packages use. Class B is not using this dependency. To avoid having the dependency installed multiple times and to not having to install the dependency if you don't need it, it is set as peerDependency.

Now when I consume class A in a project and also make use of the dependency I install it and everything works fine. But if in another project I only need class B one could argue, that the dependency won't bring anything of value here, thus should not be installed. However if we try to use class B in a project, Typescript would always complain about the missing dependency.

&gt;error TS2307: Cannot find module 'x' or its corresponding type declarations.

&amp;#x200B;

Note: we use an index.ts for all our packages, where all classes, types and interfaces that should be used outside of the package itself are exported.

&amp;#x200B;

Now, is there any way, apart from splitting class B in it's own package or having to set ""skipLibCheck"": true in every tsconfig file, to avoid the typescript error?.",Import from package with dependencies
1048,2020-07-01 00:05:33,7,1,"The monthly thread for people to post openings at their companies.

* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.

* Please only post if you personally are part of the hiring company—no recruiting firms or job boards **Please report recruiters or job boards**. 

* Only one post per company. 

* If it isn't a household name, explain what your company does. Sell it.

* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).


Commenters: please don't reply to job posts to complain about something. It's off topic here.

Readers: please only email if you are personally interested in the job. 

Posting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)

[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)",Who's hiring Typescript developers - July
1049,2020-07-01 10:10:09,0,1,,Prints a dependency graph in dot format for your typescript project.
1050,2020-07-01 18:13:14,0,1,[removed],GitHub - FSou1/typescript-algorithms: 📝 Algorithms and data structures implemented in TypeScript with explanations and links to further readings (contributors welcomed!)
1051,2020-07-01 18:47:23,6,1,"I am trying to use the [tfjs](https://github.com/tensorflow/tfjs) library for machine learning in a typescript project with `strictNullChecks`. Unfortunately, `tfjs` doesn't use `strictNullChecks` internally. As a result, TypeScript fails to compile my project, because there are `.ts` files in `tfjs` where `null` or `undefined` is passed to functions without being explicitly allowed.

I know that `skipLibCheck` option exists for these cases, but it seems like it only affects `.d.ts` files. In the case of tfjs, there are actual `.ts` files (e.g. `node_modules/@tensorflow/tfjs-core/src/environment.ts`) which cause the failure.

It also seems like adding ""node_modules/@tensorflow"" to tsconfig's ""exclude"" does not change anything.

What can I do to make my project build without issues?

Thanks!",skipLibCheck but for .ts files?
1052,2020-07-01 20:31:28,12,1,"Imagine having multiple different interfaces that all together are mixed into a big interface .

Before some time I [asked](https://www.reddit.com/r/typescript/comments/gab4ic/how_to_make_ts_or_eslint_or_vscode_warn_me_about/) how can I check for collisions when I merge two interfaces and I got an answer that worked . Here is a more simple version of it :

    type isNever&lt;T extends never&gt; = T;
    //I just look if I get a linting error in the following type 
    //If yes then there is a collision
    type mustBeNever = isNever&lt;keyof interface1 &amp; keyof interface2&gt;;

Now I have to merge more than two interfaces . With that way , for n interfaces I need to do `n!/(2!(n-2)!)` manual checks (if you are interested in how that number is calculated take a look [here](https://en.wikipedia.org/wiki/Combination)) , something that is not practical .

Is there any solution via using a type function like I have already done or should I create a unit test ?",Checking for interface collisions .
1053,2020-07-02 06:27:34,5,1,"I am new with typescript and I had before .net / C# experience, nowadays I am dealing with typescript epubjs library. I developed epub-reader component and it is working as it should work, but there are cases with some epub files, where first page of book is always aligned on left side, when normally is on center. Those alignments are setup on popup window where you can choose ""spread to one page"" OR ""spread to two pages""

&amp;#x200B;

dialog example : 

    &lt;mat-radio-group [(ngModel)]=""epubTextOptions.selectedTwoPages"" class=""inline-button""&gt; &lt;mat-radio-button [value]=""false"" [checked]=""!epubTextOptions.selectedTwoPages"" class=""inline-button""&gt;{{'reader.textOptions.dialog.onePage' | translate}}&lt;/mat-radio-button&gt; &lt;mat-radio-button [value]=""true"" [checked]=""epubTextOptions.selectedTwoPages"" class=""inline-button""&gt;{{'reader.textOptions.dialog.twoPages' | translate}}&lt;/mat-radio-button&gt; &lt;/mat-radio-group&gt;

 typescript example:  

    export class MyClass implements OnInit {   book: Book;   rendition: Rendition; private myMethod() { this.rendition = this.book.renderTo(this.ePub.nativeElement, {       width: '100%',       height: '100%' }); this.rendition.spread(this.epubTextOptions.selectedTwoPages ? 'always' : 'none'); } }

 html component : 

    &lt;div id=""epubContent"" class=""d-flex align-items-center"" [style.height]=""contentHeight + 'px'""&gt; &lt;app-button *ngIf=""displayPrevPageButton() &amp;&amp; !isMobileDevice()"" (btnClick)=""prevPage()""               btnClass=""mat-icon-button epub-action""&gt;&lt;span class=""far fa-chevron-left""&gt;&lt;/span&gt;&lt;/app-button&gt; &lt;div #ePub class=""epub-container""&gt;&lt;/div&gt; &lt;app-button *ngIf=""displayNextPageButton() &amp;&amp; !isMobileDevice()"" (btnClick)=""nextPage()""               btnClass=""mat-icon-button epub-action""&gt;&lt;span class=""far fa-chevron-right""&gt;&lt;/span&gt;&lt;/app-button&gt; &lt;/div&gt;

 Everything is implemented from epubjs library examples and adapted to reader, but as I said with most of epub spread() functionality is working, but there are epub files, where first page align to left side when ""one page"" is selected instead of center align. Maybe some how I can check if file have no more than one page and if yes, then force to align to center?",epubjs library
1054,2020-07-02 17:44:50,20,1,"I am very new to typescript and when vscode threw that error after doing some search I mixed few stuffs from the results and came up with this solution.

`interface Body {`  
   `name: string;`  
   `email: string;`  
   `password: string;`  
 `}`  
 `const body: Body = request.body as Body;`  
 `const { name, email, password } = body;`

How can I improve this as it seems a lot of code for de-structuring.","How do I de-structure express request.body without ""Unsafe assignment of an any value."" error?"
1055,2020-07-02 18:55:35,18,1,"So my code looks like this:

An abstract class named Component with nothing inside which all component inherit from. 

An abstract generic base Entity class functioning as an Array abstraction with methods to add/get instances of classes,

A Entity class which extends BaseEntity with all the getters, one for each component, the reason I created it is because I must always force the type like &lt;Health&gt; this.getComponent(Health), I want to get rid of it, is there a way to type check BaseEntity so that when I do  this.getComponent(Health), the compiler knows its Health instance?

&amp;#x200B;

    export class Component {}
    export class Health extends Component { ............}
    export class Position extends Component { ............. }
    
    .....................
    export abstract class BaseEntity&lt;R&gt; {
    private readonly entity: Array&lt;R&gt; = [];

    protected getComponent&lt;T extends { new(...args: any[]): R }&gt;(component: T): R {
        return this.entity.find(
             currentComponent =&gt; currentComponent instanceof component
        );
    }
}
    
    .....................
    export abstract class Entity extends BaseEntity&lt;Component | Entity&gt; {
        get getHealth(): Health {
            return &lt;Health&gt; this.getComponent(Health)
        }
    
        get getPosition(): Health {
            return &lt;Position&gt; this.getComponent(Position)
        }
    }
    export class Player extends Entity {}
    export class Monster extends Entity {}",How to deal with array of different class instances in typescript
1056,2020-07-03 06:52:31,0,1,,How To loop or get names &amp; values of Enums in typescript | Angular Wiki
1057,2020-07-03 18:49:53,0,1,"[removed]

[View Poll](https://www.reddit.com/poll/hkomq2)",What is the best way to interact with data using express and typescript for PRODUCTION apps
1058,2020-07-05 23:24:26,7,6,"So I have an interface that looks like this:
```
interface Task {
   name: string;
   command: string;
   ...
}
```
And I want to make a function that would take an array of that interface, something like this: 
```
function execute([{ name: ""TEST"", ... }, { name: ""MSG"", ... }]) 
```
do some things and return an object looking like this: `{ TEST: any, MSG: any }`

But the trick is that the typescript compiler would be aware of the keys and not return the generic `[key: string]: any` or anything like that.

I've seen it being implemented in the `@types/inquirer` but I couldn't implement it myself even after looking at that code for several hours. 

Can someone guide me into solving this or give me a solution on how to do this? Please.",Function return type as an object where the keys are values from the input.
1059,2020-07-06 23:05:59,0,1,[removed],trying typescript with WS and mongoose
1060,2020-07-07 10:56:55,2,1," Queues and stacks are used in programming to process a collection of items in a certain order. Those data structures work either with a *first-in-first-out* or *last-in-first-out* system in which the order of processing is always directly coupled to the order of insertion. However, sometimes you need to have more control over the processing order then offered by the insertion order. 

[https://medium.com/@wim\_jongeneel/priority-queue-in-typescript-6ef23116901?source=friends\_link&amp;sk=a35b45b2a26f4cd5daafb84feafb6c88](https://medium.com/@wim_jongeneel/priority-queue-in-typescript-6ef23116901?source=friends_link&amp;sk=a35b45b2a26f4cd5daafb84feafb6c88)",Priority Queue in TypeScript
1061,2020-07-07 14:19:26,5,1,"I am new to typescript so I apologize if this sounds dumb. 

I can not figure out how to get types to work with any modules I have not written. Here an example. 

I am trying to use the http library to set up a simple server with one endpoint. I have tsc setup and @types/node installed but my code still isn’t providing me types when using vscode. Is their something I have to do to get the types to show up in intellisense?

I went to the @types/nodes page on GitHub and their is no documentation their. Is that normal for types? Is their a rule of thumb of where I can find what type different objects and functions are in any given package?",Newbie question for dev coming from static world.
1062,2020-07-07 15:06:09,1,1,"I have a generic function that will return data in an object like:
```ts
{
   data: T[],
   isLoading: boolean,
   error: Error | null,
}
```
This correctly gives me a return type of `T[]` for data.

I want to be able to pass a key name as a `string` so that the key does not always have to be data.

When I change my function to take in a `dataKey: string` and try to return the same object like: 
```ts
{
   [dataKey]: data,
   error,
   isLoading,
}
```

I get typescripts implied return type of 
```ts
{
    [x: string]: boolean | T[] | Error | null;
    error: Error | null;
    isLoading: boolean;
}
```

It seems like when I use the dynamic [dataKey], then my `data` type takes all the return object's possible types. What am I doing wrong here? Thank you",Return an object with a generic string key
1063,2020-07-10 18:41:33,3,1,"I'm having a bit of difficulty finding any useful resources on best publishing practices. One thing I would like to do is expose some interfaces along with a class, so people can type their variables if they're using TS

So for example, say I'm publishing a module called `house`, and I have a class called House with a method to open a door

    export class House {
        openDoor(door: Door) { /** code */ }
    }

    interface Door {
        id: string;
        location: string;
    }

And then index.ts looks typical:

     export {House} from './House';

I have declarations being made, typing works fine when you do `new House().openDoor({ id: ""123"" })` and stuff. But what if the user wants to create a typed array of doors?

    import {House} from 'house-library';

    const doors: House.Door[] = [];

Problem is the `House.Door` interface is not accessible since it's not actually a part of the class. I've noticed in like React or Express, you can do things like `const middleware = (req: Express.Request)` or `const handleClick = (e: React.MouseEvent)` without having to import the individual types.

I'd like to provide the same typings in my library but can't figure how to do it, anybody have tips?",Proper way to publish a typescript project and exposing types?
1064,2020-07-11 04:42:41,5,1,"&gt; All files must be modules when the '--isolatedModules' flag is provided

I've googled this error but I honestly don't think I'm violating anything. 

    import React from 'react';
    import Hero from '../components/Hero';
    
    const About: React.FC = () =&gt; (
      &lt;Hero /&gt;
    );
    
    export default About;
    
The error occurs at ""(1,1)""..so  the first character. 

I have an almost exactly similar file that doesn't produce the error. It is also super strange because when I was working on this file yesterday and saved it in this state, it was rendering fine. But right now as I run the app again..I get that error. Does anyone know what it could be?

One answer from S/O: This error happens when there is no import or export statement in a file (these make a file a module). But I do have an export statement..","""--isolatedModules flag"" in typescript"
1065,2020-07-12 07:01:28,3,1,"Hi friends! Hope you are having a great day. I have a project in typescript on Algorithm visualization. It's just a task I got from my friend. Can someone help me to understand how it works. 
Thanks for your time 🙂",I have a project in typescript. Can someone explain me the structure of it.
1066,2020-07-13 07:12:21,33,1,"For the most part, I try to program in a functional style - simple, reusable functions, accessing state, where needed, via closure, etc.  And certainly \*anything\* you can write as a class in JS/TS can be written as functions.  But sometimes classes are a simpler, easier solution and I find that when you have complex state to manage, they're nice to use. (Basically, when I start thinking that something will require a monad, I think it might be okay to switch to classes. :) ) 

The question occurs when I have a class definition that Is more or less useless outside the class, but is purely functional - that is, no access to state, no mutations. 

Now, I would insist these functions be defined \*outside the class\* so that they can be independently unit tested.  (Though to keep concerns together, I'd put them in the same \*file\* where the class is the default export).  But is that being pedantic?    


In other words, I'm refactoring this: 

```typescript
export default class Match {
  private checkCondition = (condition: Condition, input: any): boolean =&gt; {
    if (typeof condition === ""function"") {
      return condition(input);
    }
    return condition === input;
  };
}
```

to this:
```typescript
export const checkCondition = (condition: Condition, input: any): boolean =&gt; {
  if (typeof condition === ""function"") {
    return condition(input);
  }
  return condition === input;
};

export default class Match {
  /* OPTIONAL!
  private checkCondition = checkCondition;
  */
}
```",Am I being pedantic when it comes to helper methods in classes?
1067,2020-07-13 09:19:45,0,1,"Hi,

We have an old [ASP.NET](https://ASP.NET) Webforms project hosted on IIS.

This project is not a MVC project and unfortunately re-creating the whole project in another platform / framework is not an option.

I have a case where we are creating a components library project in React framework.

In this components project we wish to create react components, such as a grid view containing data, and publish it to a private npm repository.

What I want to do is to in my [ASP.NET](https://ASP.NET) webforms project, do an npm install of the package, and bind this to a custom element tag e.g.

        &lt;npm-package component=""refer to npm package"" args={}/&gt;

and having a binding e.g. could be something similar to this:

        ko.bindingHandlers.react = {
            init: function (el, valueAccessor, allBindings) {
                var Component = ko.unwrap(valueAccessor());
                var props = ko.toJS(allBindings.get('props'));
        
                // render to react? initial setup maybe?
        
                return {
                    controlsDescendantBindings: true
                }; // important
            },
        
            update: function (el, valueAccessor, allBindings) {
                var Component = ko.unwrap(valueAccessor());
                var props = ko.toJS(allBindings.get('props'));
        
                // tell react to re-render
                React.render(React.createElement(Component, props), el);
            }
        };
    

But how can I achieve this? The case is that I don't know where to start or how to reason my self to an solution, and I was hoping maybe there are some experts here on stack overflow who might be able to guide me through this task.

Is someone here familiar with this case?

Would appreciate all help I can get.

&amp;#x200B;

I was also looking on this project, but I'm not sure if this is the solution I'm looking for as I see the typescript components is in the project.

[https://github.com/MarkOGDev/ReactWebForms](https://github.com/MarkOGDev/ReactWebForms)",How to bind react packages from npm to ASP.NET Webforms? Student help
1068,2020-07-13 20:41:56,5,1,"Hello, I'm a novice typescript developer that is loving the language so far but is having some issues understanding how types definitions works.

What I'm trying to achieve is creating a library that I would like to publish in a github repo and that should contains type definitions shared between multiple projects.   


What's the best approach to achieve something similar?",Create a library with only type definitions
1069,2020-07-14 14:14:42,10,2,"```ts
    export function createMultiple&lt;T&gt;(size: number, factory: () =&gt; T): T[] {
      return [...Array(size)].map(() =&gt; factory());
    } // red squiggle under ...Array(size): Unsafe spread of an any value in an array

    // Arrange
    class Test {}
    function factory(): Test {
      return new Test();
    }
    // Act
    const zombieArray = createMultiple(5, factory);

    // Assert
    assert(zombieArray[0] instanceof Test); // OK, it passes
    assertEquals(zombieArray, [{}, {}, {}, {}, {}]); // OK, it passes
```
https://www.typescriptlang.org/play/?ssl=1&amp;ssc=1&amp;pln=15&amp;pc=73#code/AQ4UwDwBwewJwC7AGYFcB2BjBBLG7hM4wBDBMAWVQBtcpqwAeAFQD4AKAZxwC8wAuYOlQBbAEZg4AGhQls8AJ6D2ASmABeVsGYrBzANoBdYAG8AsAChQoYglRwC+gHQuAgnDgkFXXmBWGnERIodlUNLWQ5BEVVFQBuS2sAX2AAelTgYgATYE4AR1QcAHMihmAMLMlgFyd3T29uPl1gAFV0ThJkMFyoYhIcmGRgEgIRhWAANxJqVG6cUdGPL0tE0HTgOpGisFWQTGoSTk5tME4kEyTdlAxsPAJI+ThvZuZT86uQW3sCdDAAdxOZ1UCSsoEuoJA61c2CumHwZ2APBg4hwYE243UhD65CotBw9DA7AArDIHtEnvEVhC0hlXEdJAgrutDpwGewkSi0UsFPoAAzGeZnEaYMCDQEIeI04AAeQA0jIcEgoCzTkyMirEABRArTTjs5FiVHomT6C4yM2mJLmq2WwyS9ZyhVKlWcIA

(the error is from `typescript-eslint`, so it is not highlighted)",How can I type the ArrayConstructor to get rid of Unsafe spread of an any value in an array?
1070,2020-07-14 19:52:54,17,2,"[AskJS] Should Use Typescript?

----
Hi guys, I'm looking for comments about use Typescript in the backend and frontend. I'm pretty sure that use TS for backend its a good practice and solves a lot of problems.

----
|Vote Button| Poll Options|Current Vote Count|
|:-----------:|:------------:|:------------|
|**[Vote](http://redditpoll.com/vote/xblmsejqP)**|Frontend|**2** Votes 
|**[Vote](http://redditpoll.com/vote/9E9AI4MVO)**|Backend|**2** Votes 
|**[Vote](http://redditpoll.com/vote/zzGJFpg2V)**|Both|**35** Votes 
|**[Vote](http://redditpoll.com/vote/keOxC6Zvp)**|Never!|**5** Votes 
----
**Instructions:**

* Click Vote to Register Your Vote.

----
**Note:** Vote Count in this post will be updated real time with new data.

----
Make Your Own Poll Here **[redditpoll.com](http://redditpoll.com)**.

----
See live vote count **[here](http://redditpoll.com/poll/askjs-should-use-typescript)**",[AskJS] Should Use Typescript?
1071,2020-07-15 09:53:33,51,1," I'm getting an error say that it cannot find age, when trying to assign to 18, 

Does someone know why?

    declare var age: number  
    
    age = 18 // error


When I try to build binder with webpack it say variable cannot be found.",Why does my typescript file complain about not finding the declared variable and assign its number?
1072,2020-07-15 10:25:42,0,1,,Schema validation done right with typescript type inference.
1073,2020-07-15 11:02:53,2,0,,Schema validation done right with typescript type inference
1074,2020-07-16 04:31:11,3,1,"Hey Guys,

Can you please let me know good opensource node(may be with typescript) project that are active in GitHub.",Active Open source server project in GitHub
1075,2020-07-18 05:51:45,3,1,"https://www.typescriptlang.org/docs/handbook/interfaces.html#excess-property-checks

It says ""If an object literal has any properties that the “target type” doesn’t have, you’ll get an error:"". The error is only because of the typo of color/colour. So by excess property checking does it mean it typescript checks for what it thinks is an error, i.e. a typo error? Because in the previous example when it was

    interface LabeledValue {
        label: string;
    }
    
    function printLabel(labeledObj: LabeledValue) {
        console.log(labeledObj.label);
    }
    
    let myObj = {size: 10, label: ""Size 10 Object""};
    printLabel(myObj);

""it’s only the shape that matters. If the object we pass to the function meets the requirements listed, then it’s allowed."", so it's allowed here even though there's no size. So what I'm trying to figure out is what's the criteria for the typescript amigo to judge? Possible typos and?",Excess property check question
1076,2020-07-18 17:12:05,2,1,[removed],Essential knowledge javascript and typescript for AWS CDK
1077,2020-07-18 19:10:50,7,3,"I'm working on an in memory expressJs typescript project. It is currenlty in memory because I haven't set up any sort of database to work with.  I'm trying to set up a delete request to the api and get this error:

S7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{}'

Here is the weights object:

*let* weights = {};

&amp;#x200B;

Here is my delete request:

&amp;#x200B;

app.delete('weights/:id', (req , res) =&gt; {  


// This is where the error is  
weights\[req.body.id\] = *null*;  
res.status(200).send({message: 'Delete successful.'})  
});

&amp;#x200B;

I apologize for the lack of formatting, it won't work for me. What am I missing?",How do I get around this error?
1078,2020-07-19 13:39:01,2,1,[removed],"A question about typescript, just started my js journey and I have a couple of questions I’d appreciate if you answer"
1079,2020-07-20 00:08:08,43,8,"Hey guys, I'm pretty stuck as to how to get around using :any here. Any ideas?

&amp;#x200B;

    import { useState } from 'react';
    
    export const useFormFields = (initialState: any) =&gt; {
      const [fields, setValues] = useState(initialState);
    
      return [
        fields,
        (event: React.ChangeEvent&lt;HTMLInputElement&gt;) =&gt; {
          setValues({
            ...fields,
            [event.target.name]: event.target.value,
          });
        },
      ];
    };

I've tried using interfaces and types and then adding it in, but ...fields expects an object and the whole thing breaks.",Custom hook with typescript?
1080,2020-07-20 00:14:10,18,16,"Hi all. I've recently started using typescript more heavily, and  I'm working a generic form-validation library. One of the things I'd like to be able to do is pass in a data model, and be able to get type inference/intellisense from the keys from that object. I've not learned all the details of how to use generics yet, which I know will be key for this question, so any pointers towards what I am missing would be greatly appreciated.

A simplified example:

```
interface SpecificSchemaInterface {
    fields: Record&lt;String, any&gt;
}

interface SpecificSchemaInterface {
    fields: {
      firstName: string;
      lastName: string;
      age: number;
    }
}

const schema = {
  fields: {
    firstName: 'Bob,
    lastName: 'Bobson',
    age: 25,
  },
};

function createValidatorFromSchema(s: SpecificSchemaInterface) {
  // ???
}

const validator: Validator&lt;SpecificSchemaInterface&gt; = createValidatorFromSchema(schema)

// Then validator would have an interface like:
interface Validator {
  rules: {
    firstName(firstName: string): boolean,
    lastName(lastName: string): boolean,
    age(age: number): boolean, // note that the type is inferred here from the schema
  }
}
```

My questions are that then
1) I probably want something like `Validator&lt;SpecificSchemaInterface&gt;`?
2) I need to be able to both extract the object keys, and the types from the schema in a reusable way inside my new `Validator`

I hope this isn't too vague, but if there is some terminology I should be looking into (beyond just ""look at generics"") or guides that go into this sort of thing, that would be very helpful.",How to Infer Types from Schema
1081,2020-07-21 23:28:41,29,5,"Here's the thing. I have an Enum in my Prisma schema like so:

    enum Exchange {
      NSE
      BSE
      MCX
    }

For all intents and purposes, it can be considered as typescript enum. Now let's say, I have a string `const x = ""NSE""`. Is there any way to convert x into `Exchange.NSE`, without using pesky ternary operations or a pattern matching switch-case or cascading if statements?",Conversion of String to Enum
1082,2020-07-23 14:41:12,0,1,,"First 100% typescript fullstack app, I'd appreciate it if you could give me some feedback"
1083,2020-07-24 00:20:16,4,3,"I'm getting the error `TypeError: is not a function` for several Typescript methods I'm testing using mocha. All the importing/exporting for the mocha test seems to be working fine. I'm receiving the error for the specific methods referenced in the code in my StackOverflow post. 

[https://stackoverflow.com/questions/63064952/typescript-mocha-testing-how-to-solve-typeerror-is-not-a-function](https://stackoverflow.com/questions/63064952/typescript-mocha-testing-how-to-solve-typeerror-is-not-a-function)

Any advice would be greatly appreciated!","Typescript Mocha Testing, How to solve TypeError: is not a function?"
1084,2020-07-25 09:34:17,7,1,"I am trying to convert https://github.com/camwiegert/typical/blob/master/typical.js into TypeScript.

In Vanilla JS, it looks like:

# typical.js

```js
export async function type(node, ...args) {
    for (const arg of args) {
        switch (typeof arg) {
            case 'string':
                await edit(node, arg);
                break;
            case 'number':
                await wait(arg);
                break;
            case 'function':
                await arg(node, ...args);
                break;
            default:
                await arg;
        }
    }
}

async function edit(node, text) {
    const overlap = getOverlap(node.textContent, text);
    await perform(node, [...deleter(node.textContent, overlap), ...writer(text, overlap)]);
}

async function wait(ms) {
    await new Promise(resolve =&gt; setTimeout(resolve, ms));
}

async function perform(node, edits, speed = 60) {
    for (const op of editor(edits)) {
        op(node);
        await wait(speed + speed * (Math.random() - 0.5));
    }
}

export function* editor(edits) {
    for (const edit of edits) {
        yield (node) =&gt; requestAnimationFrame(() =&gt; node.textContent = edit);
    }
}

export function* writer([...text], startIndex = 0, endIndex = text.length) {
    while (startIndex &lt; endIndex) {
        yield text.slice(0, ++startIndex).join('');
    }
}

export function* deleter([...text], startIndex = 0, endIndex = text.length) {
    while (endIndex &gt; startIndex) {
        yield text.slice(0, --endIndex).join('');
    }
}

export function getOverlap(start, [...end]) {
    return [...start, NaN].findIndex((char, i) =&gt; end[i] !== char);
}
```

In TypeScript, it looks like:

# typical.ts

```ts
export async function type(node: HTMLElement, ...args: any[]): Promise&lt;void&gt; {
  for (const arg of args) {
    switch (typeof arg) {
      case 'string':
        await edit(node, arg);
        break;
      case 'number':
        await wait(arg);
        break;
      case 'function':
        await arg(node, ...args);
        break;
      default:
        await arg;
    }
  }
}

async function edit(node: HTMLElement, text: string): Promise&lt;void&gt; {
  const overlap = getOverlap(node.textContent, text);
  await perform(node, [
    ...deleter(node.textContent, overlap),
    ...writer(text, overlap),
  ]);
}

async function wait(ms: number): Promise&lt;void&gt; {
  await new Promise(resolve =&gt; setTimeout(resolve, ms));
}

async function perform(
  node: HTMLElement,
  edits: Iterable&lt;string | null&gt;,
  speed: number = 60
): Promise&lt;void&gt; {
  for (const op of editor(edits)) {
    op(node);
    await wait(speed + speed * (Math.random() - 0.5));
  }
}

export function* editor(
  edits: Iterable&lt;string | null&gt;
): Generator&lt;(node: any) =&gt; number, void, unknown&gt; {
  for (const edit of edits) {
    yield node =&gt; requestAnimationFrame(() =&gt; (node.textContent = edit));
  }
}

export function* writer(
  [...text]: string,
  startIndex: number = 0,
  endIndex: number = text.length
): Generator&lt;string, void, unknown&gt; {
  while (startIndex &lt; endIndex) {
    yield text.slice(0, ++startIndex).join('');
  }
}

export function* deleter(
  text: string | null,
  startIndex: number = 0
): Generator&lt;string, void, unknown&gt; {
  if (text === null) {
    yield '';
    return;
  }
  const [...chars] = text;
  let endIndex = chars.length;
  while (endIndex &gt; startIndex) {
    yield chars.slice(0, --endIndex).join('');
  }
}

export function getOverlap(start: string | null, [...end]: string): number {
  if (start === null) return 0;
  return [...start, NaN].findIndex((char, i) =&gt; end[i] !== char);
}
```

I am getting an error saying `Path was expected to have a container!` which I am not getting. It shows the following in the terminal:

```bash
1 | export async function type(node, ...args) {
  2 |     for (const arg of args) {
&gt; 3 |         switch (typeof arg) {
    |         ^
  4 |             case 'string':
  5 |                 await edit(node, arg);
  6 |                 break;
TypeError: ~/react-typical/src/typical.ts: Path was expected to have a container!
  1 | export async function type(node, ...args) {
  2 |     for (const arg of args) {
&gt; 3 |         switch (typeof arg) {
    |         ^
  4 |             case 'string':
  5 |                 await edit(node, arg);
  6 |                 break;
    at File.buildCodeFrameError (~/react-typical/node_modules/@babel/core/lib/transformation/file/file.js:248:12)
    at NodePath.buildCodeFrameError (~/react-typical/node_modules/@babel/traverse/lib/path/index.js:144:21)
    at checkPathValidity (~/react-typical/node_modules/babel-plugin-transform-async-to-promises/async-to-promises.js:1085:24)
    at relocateTail (~/react-typical/node_modules/babel-plugin-transform-async-to-promises/async-to-promises.js:1095:9)
    at Object.rewriteAwaitOrYieldPath (~/react-typical/node_modules/babel-plugin-transform-async-to-promises/async-to-promises.js:2685:21)
    at NodePath._call (~/react-typical/node_modules/@babel/traverse/lib/path/context.js:55:20)
    at NodePath.call (~/react-typical/node_modules/@babel/traverse/lib/path/context.js:42:17)
    at NodePath.visit (~/react-typical/node_modules/@babel/traverse/lib/path/context.js:90:31)
    at TraversalContext.visitQueue (~/react-typical/node_modules/@babel/traverse/lib/context.js:112:16)
    at TraversalContext.visitSingle (~/react-typical/node_modules/@babel/traverse/lib/context.js:84:19)
```

How do I solve this?

PS: I posted https://www.reddit.com/r/typescript/comments/hwzeo6/ts2488_type_string_null_must_have_a/ yesterday &amp; I did everything suggested there but couldn't solve it completely",(babel plugin) TypeError: Path was expected to have a container
1085,2020-07-25 17:55:10,5,1,"It seems there is an error on the playground to confound things further, but I get no error on `result.groups` in VS Code and it runs with type checking off. The errors are:
```
Property 'time' does not exist on type '{ [key: string]: string; } | undefined'.ts(2339)
Property 'chapterTitle' does not exist on type '{ [key: string]: string; } | undefined'.ts(2339)
```
How can I fix this and make it compile properly in strict mode?

```
#!/usr/bin/env -S deno run --allow-read --allow-write --no-check

const example = `Introduction
---------------------
⌨️ (00:00:00) Introduction`;

const SEARCH_PATTERN = /(?&lt;time&gt;\d{2}:\d{2}:\d{2})\)\u0020(?&lt;chapterTitle&gt;.*)/;

const lines = example.split(""\n"");

lines.forEach((line) =&gt; {
  const result = line.match(SEARCH_PATTERN)!;

  if (result !== null) {
    let { time, chapterTitle } = result.groups;
    console.log(time, chapterTitle);
  }
});

```

[Playground Link](https://www.typescriptlang.org/play?#code/MYewdgzgLgBApgDwIYFsAOAbOMC8MAGAkmFAE4gAmArsFAJbgBQAtK2+x544BTEg8H8wAKAAxCAXCPFCAlDGJlKNeuHyNGoSLADKAUQCCAJQDCACQD6ABV0AVK9v0A5XDAD0AgPwAeeijgA+ADoUAN4ATAC+ooGhEVHhUv7xVCIhQu4ewAAWSGhQcKRWdFBYvgB0AFRSzgDcqurQMBh0YHAQToiomHAlEJiFAgBE-mD9UjWMjc0QJQBmIKTaSJkCAhNwMji+MEGMMLswdbCkLVQYsHirJShIUEs6BiYW1rYOUgCEY3swdNOCRxAnsFeODwYBOGBk20+nywsCCMG8cAANPssjk8gUitgwk4-gCSgBzchUNAQGpQvZ1EBYEoYED4gQI5GZbK5fKFLBSVSfMKMMKjIA)","Regex groups say 'property does not exist on type', how can I fix it?"
1086,2020-07-25 20:01:29,2,1,"I awoke at the usual time to the glistening rays of the cheerful morning sun. As I went to retrieve my buttplug, I spotted the frame of my favourite typescript error on the wall. It read ""HTMLDocument | null"" cannot be assigned to ""Document | undefined"" and it was such a poignant reminder that this is my master's realm, and I merely exist to serve. ""Technically the truth"", I whispered, as my heart filled with renewed resolve to submit to my master's every perverse demand.  After I had my morning coffee, I strapped on my ball gag and sat down in front of the computer to check the emails I had received the night before. It was the usual fare, a bunch of marketing emails I had received from sites I don't remember giving my email to. I was halfway done skimming an article about how to enforce your functional programming beliefs onto your coworkers by commenting on their PRs until they gave in when I decided to exit out and get on with my day. ""Converting infidels is a waste of time"" I mouthed through my ball gag, referring to programmers who define a variable for one type but later change it to another. Saliva drooled down my naked chest, but I was pretty used to it by then. At this point I've pretty much given up hope that the typeless could even begin to grasp the sheer beauty that the theoretical maintainability of strict typing offered. As I was exiting out, I accidentally clicked on an email. The words ""A new way to submit"" flashed on the screen momentarily as I rectified my mistake. After a moment of comprehension, my interest was piqued and I opened the email with a lustful haste. The world came to a standstill as I read it over once, then twice to make sure I hadn't made a mistake. My heartbeat became impossibly slow and all sounds faded into the background. The world came rushing back as I started to exclaim ""YES! YES! YES!"" over and over. Microsoft research had just invented a new programming language that enforced verifiable correctness at all times. It was as if somebody was constantly running the Turing test on your code while you were writing it, and wouldn't let you compile unless it passed. I sank to my knees as I realized just much more arbitrary this was than typescript. Typescript was unreasonable and unwieldy, but only inconveniently so. This was downright absurd. I pictured the scantily clad women who wore sling bikinis at my local beach, and I knew the supposed benefits would do just a poor a job masking my naked desire to obey as the sling bikinis did those women's bodies. As I passed out from overexertion, I knew I finally had what I wanted for so long. Total Submission.",My first attempt at Erotic Typescript Fanfiction
1087,2020-07-25 21:17:59,13,1,"This tutorial teaches how to create an application, a game called Animal Tribes, from scratch using  Typescript, Graphql, NodeJs, ReactJS, and MongoDB.

* [Part 1—Project Overview]( https://medium.com/@samarony.barros/animal-tribes-how-to-create-your-first-full-stack-typescript-graphql-application-76786e5520ed?source=friends_link&amp;sk=1430f7c8bc45d0192f8052bb0569fd3e)

* [Part 2— Backend](https://medium.com/@samarony.barros/animal-tribes-how-to-create-your-first-full-stack-typescript-graphql-application-pt-2-backend-cae1735f13dd?source=friends_link&amp;sk=8fbd56e780dedf980ecbcb23358e9148)

* [Part 3— Frontend](https://medium.com/@samarony.barros/animal-tribes-how-to-create-your-first-full-stack-typescript-graphql-application-pt-3-frontend-dc69f71e1d62?source=friends_link&amp;sk=dbd77c7eef65c081f0c1053bbb1335af)

* [Part 4— Deploy to Heroku](https://medium.com/@samarony.barros/animal-tribes-how-to-create-your-first-full-stack-typescript-graphql-application-e7891ec4963a?source=friends_link&amp;sk=d3a77a7a3d0e4ab45c0b8750250d8595)",Animal Tribes: How to create a full-stack Typescript GraphQL Application
1088,2020-07-26 19:41:14,7,1,"Hello, I'm interested in building a monorepo using typescript for learning purposes.

I'd like to have two distinct services communicating through a Queue, and I'd like to share the messages types between these two services.

Is there any good resource or tutorial on this? Most of the ones I see involve React and/or browser related stuff. So I'm not sure what's the best way of developing for the backend in a microservice architecture.

Also, what is the best workflow in your opinion? As in build, run watching, and generating deployable artifact?",Looking for tutorials on backend monorepo
1089,2020-07-27 05:22:15,33,1,,Where is the best place to learn typescript?
1090,2020-07-27 16:26:18,1,1,"I want to test a warning process for a Typescript project. The code that I'm trying to test is the following and the specific error that I'm getting is in the following StackOverflow post. 

[https://stackoverflow.com/questions/63119397/how-to-resolve-process-on-test-typescript-mocha-testing-using-sinon-spy](https://stackoverflow.com/questions/63119397/how-to-resolve-process-on-test-typescript-mocha-testing-using-sinon-spy)

Any advice on this would be greatly appreciated!",How to resolve process.on() unit test error?
1091,2020-07-29 14:52:22,14,1,"I have been experimenting with using \`Array.from\` and \`reduce\` to build the output file instead of the \`for of\`, but keep on running into syntax problems. Any input? Would be great to get a mini code review.

I had the whole thing as a function before, but have been reading about domain-driven design and now think it belongs in a class. The 'chapter file' is definitely a 'domain concept'

[https://typescript-play.js.org/#code/MYewdgzgLgBAJgQygmBeGADACgJxAKwFNhYBaGAZQFccA3QgTxgQAcWAoUr7n3v09oApiQPB-MABQAGAIwAuAKwB2GRIBMAShgBJSMgA2umCAQBrGADMcCALaEA7iBymEYODAiEoVFjABGCCACWwG6EdKFCopIqygDMMgAsUhra0Aj68IRg4OYOzFRQIFZIQSFhODA4hKk4sNlmAbqEMMAAFs4A5oQR4qrKAGyxGgCi-g1MRWAInTD0OIHgEMwuGSyZcJnAAVXdUcoAHP0aAPI47c4BAF5NePnbIj3REgCcMjF9GgDClUhNAIL5LQ+4CgeH0oSWrlAYHq7RoTQAMiB2gEwDAAGQwABKhGR0HBNygd0ivSkcTk8Q0FA8Xma4DAxCgAWytgCUBaMAAsuB2iAACIAIR2JJe8Qkn2+hJgAFV3OUrCB1gZnK4AlYWI0bGBYJVcSDiuAhdFRQl1Fo1RrMrBdEiUYb5PEZFJ3lodGkDHBgZlaBDmhKmgA6L3mBqEDDsdjAXT+RYfNosQk4ABiIZgAG92DBMzAWDgArQfjBdCiqgAVEAcpCtNAwAD0YgA-AAeRk2AB8AB04KmVABfGSd7t9ge9tTt0dUCSqCQNxutVgJkusxqt-0AKjUNfaAG4M1mc3mC3P46EIDI3CCUe0ANoAXWrt53WezufzkvqjQActZCGfoLmwNu4ZPlCf5UCQDhiCiLD5Mmn7fr+F4AQANDAUEwSGCH-u0Gjpk+T4BGY4gAIRsgEED+kW9IQGWFZQK0-qEtAkFgNBUCwYQag4bueF4WyeC2DAABEH4gM0cYJqh0IOEUjJ1CAVAuIJj48TAPbcbxLRkf676EF+NjVmhbEhnphA7upT6NLAR4Jh+VBWD44LoBIyk8ZZMAya0hBwPCxaLOghnsf6HktL8+hiKR5GUaW5aVi0aguXhZi5GIblRYYhHBV5PlUVxKl4W5qYwC2hAodZoSLlAjSqdWUX+u0NwsBAREJXlEX+mVcz+tBEAtGI5l5VmGAfAAEr8WAlkMmIACSph1tn2aEPaoDNxU9v6k4SO2YAjWNE3TbN4mhPNDk4D2H6-ByQzLQd87lUuhA9mGA1ZvF-WZmpT4fVm8lQKx7FiLlKmVJ4OCom1HXkfgIAomIglbYJr2fepP1-cZ34A2mb0VNSoOYCtmnkTpJk9gA+hDGAJWpakRgsVmHUmKboPSAmxrdDONH1T4AOSEAAHtY6qEAxvNQFzSHqYgyDsK9NOQCAjQUUiYgdYFKPoRznHsEAA](https://typescript-play.js.org/#code/MYewdgzgLgBAJgQygmBeGADACgJxAKwFNhYBaGAZQFccA3QgTxgQAcWAoUr7n3v09oApiQPB-MABQAGAIwAuAKwB2GRIBMAShgBJSMgA2umCAQBrGADMcCALaEA7iBymEYODAiEoVFjABGCCACWwG6EdKFCopIqygDMMgAsUhra0Aj68IRg4OYOzFRQIFZIQSFhODA4hKk4sNlmAbqEMMAAFs4A5oQR4qrKAGyxGgCi-g1MRWAInTD0OIHgEMwuGSyZcJnAAVXdUcoAHP0aAPI47c4BAF5NePnbIj3REgCcMjF9GgDClUhNAIL5LQ+4CgeH0oSWrlAYHq7RoTQAMiB2gEwDAAGQwABKhGR0HBNygd0ivSkcTk8Q0FA8Xma4DAxCgAWytgCUBaMAAsuB2iAACIAIR2JJe8Qkn2+hJgAFV3OUrCB1gZnK4AlYWI0bGBYJVcSDiuAhdFRQl1Fo1RrMrBdEiUYb5PEZFJ3lodGkDHBgZlaBDmhKmgA6L3mBqEDDsdjAXT+RYfNosQk4ABiIZgAG92DBMzAWDgArQfjBdCiqgAVEAcpCtNAwAD0YgA-AAeRk2AB8AB04KmVABfGSd7t9ge9tTt0dUCSqCQNxutVgJkusxqt-0AKjUNfaAG4M1mc3mC3P46EIDI3CCUe0ANoAXWrt53WezufzkvqjQActZCGfoLmwNu4ZPlCf5UCQDhiCiLD5Mmn7fr+F4AQANDAUEwSGCH-u0Gjpk+T4BGY4gAIRsgEED+kW9IQGWFZQK0-qEtAkFgNBUCwYQag4bueF4WyeC2DAABEH4gM0cYJqh0IOEUjJ1CAVAuIJj48TAPbcbxLRkf676EF+NjVmhbEhnphA7upT6NLAR4Jh+VBWD44LoBIyk8ZZMAya0hBwPCxaLOghnsf6HktL8+hiKR5GUaW5aVi0aguXhZi5GIblRYYhHBV5PlUVxKl4W5qYwC2hAodZoSLlAjSqdWUX+u0NwsBAREJXlEX+mVcz+tBEAtGI5l5VmGAfAAEr8WAlkMmIACSph1tn2aEPaoDNxU9v6k4SO2YAjWNE3TbN4mhPNDk4D2H6-ByQzLQd87lUuhA9mGA1ZvF-WZmpT4fVm8lQKx7FiLlKmVJ4OCom1HXkfgIAomIglbYJr2fepP1-cZ34A2mb0VNSoOYCtmnkTpJk9gA+hDGAJWpakRgsVmHUmKboPSAmxrdDONH1T4AOSEAAHtY6qEAxvNQFzSHqYgyDsK9NOQCAjQUUiYgdYFKPoRznHsEAA)",Any ideas to refactor this class any further? (Stong use of `.matchAll`)
1092,2020-07-29 19:39:38,20,1,"New TS user here and while setting up a dev workflow, I am confused between the two for local development:  

1. Use `ts-node` to watch for changes and run `*.ts` files without transpiling to JS.
2. Transpile to JS first and then run the `*.js` files.

Option 1 looks more natural to me but I wouldn't know for sure if my transpiled JS files work as expected. Option 2 would make sure my transpiled JS files work as expected but that would require transpiling on EVERY file change. This question was asked last year [0] as well but I couldn't find a satisfactory answer.

Thanks!

[0]: https://www.reddit.com/r/typescript/comments/9o1zzp/tsnode_vs_compiling_for_development/",Running ts-node vs compiled JS files
1093,2020-07-29 21:10:59,3,1,"After researching this I found the best response would be to test the private variables of an object against the prototype of the object. Effectively then inside the test creating a prototype and accessing the variables in that way. When I do this, however, it seems that all variables are not null but are undefined. How am I able to test the private variables, so that they remain defined? For reference, this is what I'm doing now:

[https://stackoverflow.com/questions/63162403/how-to-unit-test-private-variables-mocha-chai-for-typescript-project](https://stackoverflow.com/questions/63162403/how-to-unit-test-private-variables-mocha-chai-for-typescript-project)",How to unit test private object variables mocha chai for typescript project?
1094,2020-07-31 13:32:40,0,1,"I'm having an issue importing various classes for mocha testing, for my Typescript project. I have included the following stackoverflow post for reference:

[https://stackoverflow.com/questions/63192719/how-to-resolve-class-is-not-a-constructor-error-in-typescript-mocha-testing](https://stackoverflow.com/questions/63192719/how-to-resolve-class-is-not-a-constructor-error-in-typescript-mocha-testing)

npm start works just fine but npm test is throwing an error where \[Class\] is not a constructor for most classes in my project.",How to resolve imports in Typescript Mocha Testing?
1095,2020-08-01 00:05:58,3,1,"The monthly thread for people to post openings at their companies.

* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.

* Please only post if you personally are part of the hiring company—no recruiting firms or job boards **Please report recruiters or job boards**. 

* Only one post per company. 

* If it isn't a household name, explain what your company does. Sell it.

* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).


Commenters: please don't reply to job posts to complain about something. It's off topic here.

Readers: please only email if you are personally interested in the job. 

Posting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)

[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)",Who's hiring Typescript developers - August
1096,2020-08-01 08:38:45,4,1,"Hi, I'm having trouble configuring the package.json and tsconfig.json for a package with the following structure:

    package-name
        build               \
            lib             |
                index.js    |
            test            | tsc output
                specs.js    |
            index.js        /

        src                 \
            lib             |
                index.ts    |
            test            | source files
                specs.ts    |
            index.ts        /
        package.json
        tsconfig.json

When I'm trying to import something from such a package, the auto-import (I'm using Webstorm if that makes a difference)
is always something like `import { Something } from 'package-name/build';` while I would want it to be simply
`import { Something } from 'package-name';`.

Imports from `package-name/build` seems to work at runtime, but my IDE can not resolve it properly. If I manually fix
the import from `package-name/build` to `package-name`, my IDE can resolve the types and it also works fine at runtime.

I tried a lot of things with the `main` and `types` properties in the package.json, also with the `sourceRoot`,
`baseUrl` and `rootDir` properties in the tsconfig.json but to no avail, I never succeeded at making auto-imports be
imported from `package-name`.

You can try it yourself by pulling this project (which uses yarn workspaces to link the packages locally):

    git clone https://gitlab.com/gpascal/export-types-example
    cd export-types-example
    yarn install

Any help would be greatly appreciated.

---------------------

For reference, the tsconfig.json and package.json look like this:

tsconfig.json:

    {
        ""compileOnSave"": true,
        ""compilerOptions"": {
            ""target"": ""es2017"",
            ""module"": ""commonjs"",
            ""outDir"": ""build"",
            ""noImplicitAny"": false,
            ""moduleResolution"": ""node"",
            ""inlineSources"": true,
            ""inlineSourceMap"": true
        },
        ""include"": [""src""]
    }

package.json:

    {
        ""name"": ""package-name"",
        ""version"": ""1.0.0"",
        ""main"": ""build/index.js"",
        ""types"": ""src/index.ts"",
        ""devDependencies"": {
            ""@types/node"": ""^14.0.27"",
            ""typescript"": ""^3.9.7""
        }
    }",Problem exporting typings from a package: module is imported from 'package-name/build'
1097,2020-08-02 20:38:35,3,1,"In the [first article](https://itnext.io/reflecting-business-logic-rules-into-the-domain-models-using-typescript-part-1-e696773ae4ae?source=friends_link&amp;sk=76085024d8b1a731ed47cabb761d0e3a), we learned how to create self-documented types and models. but they were just types and didn't have any functionality.
In the [second article](https://itnext.io/reflecting-business-logic-rules-into-the-domain-models-using-typescript-part-2-61a19fba069d?source=friends_link&amp;sk=d596490ba47c075a0648a31294b5fa33), we are going to write some code that creates and validates those types.",Reflecting business logic rules into the domain models using typescript by Mohsen Sareminia
1098,2020-08-04 15:22:33,11,1,"Hi, first time here and a newbie so i apologize if im talking like an idiot or breaking any rule.

Im doing a Udemy course that requires me to install typescript and/or its compiler (not sure the difference)  so i can use it in VScode. 

FIrst it required me to install Nodejs, which i already have, and checked in the cmd with ""node --version"" and it seems properly installed, telling me the version.

Then im supposed to run this command ""npm install -g typescript"", which i did and got this in response, which made me think its properly installed:

"" C:\\Usr\\local\\tsc -&gt; C:\\Usr\\local\\node\_modules\\typescript\\bin\\tsc

C:\\Usr\\local\\tsserver -&gt; C:\\Usr\\local\\node\_modules\\typescript\\bin\\tsserver

\+ typescript@3.9.7

added 1 package from 1 contributor in 3.336s ""

But then i tried to make the version check, but unlike node, i get the following message:

"" 'D\\AppData\\Roaming\\npm\\' is not recognized as an internal or external command,

operable program or batch file.

internal/modules/cjs/loader.js:968

  throw err;

  \^

Error: Cannot find module 'C:\\Users\\D\\node\_modules\\typescript\\bin\\tsc'

\[90m    at Function.Module.\_resolveFilename (internal/modules/cjs/loader.js:965:15)\[39m

\[90m    at Function.Module.\_load (internal/modules/cjs/loader.js:841:27)\[39m

\[90m    at Function.executeUserEntryPoint \[as runMain\] (internal/modules/run\_main.js:71:12)\[39m

\[90m    at internal/main/run\_main\_module.js:17:47\[39m {

  code: \[32m'MODULE\_NOT\_FOUND'\[39m,

  requireStack: \[\]

} ""

&amp;#x200B;

Any help is much appreciated, thanks in advance.",Need help installing Typescript compiler to run in VSCode
1099,2020-08-04 16:16:40,3,1,"Might be a dumb question, but I have an express middleware that checks for the existence of various headers and sends an error response if they don't exist. Then in my route function I try to access some of those headers, but I am met with various typing problems where I would need to check for the existence of the headers again to make sure I'm not passing an undefined variable to a function.

So I guess my question is am I going to need to duplicate my header checks again, or is there any way to make typescript have scope of the middleware used and see that the checks have already been done? Or is having a middleware do this a silly thing to do in the first place?",Express middleware - What is the best way to do undefined checking?
1100,2020-08-04 18:26:33,0,1,"The following StackOverflow Post is a more detailed account of this error with the code included ([https://stackoverflow.com/questions/63252915/how-to-resolve-error-not-assignable-to-parameter-of-type-disconnect](https://stackoverflow.com/questions/63252915/how-to-resolve-error-not-assignable-to-parameter-of-type-disconnect)).

I'm testing a process with mocha chai sinon for my typescript project. I'm unable to emit this particular event. In particular, I have the following error on the line process.emit('unhandledRejection'):

Argument of type '""unhandledRejection""' is not assignable to parameter of type '""disconnect""'.

Might anyone know why that is and how I may be able to resolve it so that I can test this process? Any advice as to why this may be happening would be greatly appreciated. Thanks in advance!","How to resolve the error: not assignable to parameter of type '""disconnect""'?"
1101,2020-08-04 19:04:30,13,1,"I'm trying to create the following base class:

```typescript
export class Event&lt;T = any&gt; {
  public data: T;

  constructor(data: T) {
    if (data) {
      this.data = data;
    }
  }
}
```

The problem is I may have events that when constructed I need an argument:
`new PostAddedEvent({ postId: string });`

Or events where I don't need them:
`new KernelShutdown()`

If I'm putting my constructor(data?: T), then for events that extend event like:
```typescript
class PostAddedEvent extends Event&lt;{ postId: string}&gt; {}
```

I can instantiate it without arguments (new PostAddedEvent()), which is something I don't want.

Is there an elegant way to have best of both worlds? Like a sort-of advanced type that makes the argument of the constructor optional?",Optional Generic Type of Class for Constructor Arguments
1102,2020-08-06 14:54:43,27,1,"I'm dealing with this error right now:

    TS2345: Argument of type 'MemoExoticComponent&lt;ForwardRefExoticComponent&lt;IProps &amp; RefAttributes&lt;HTMLElement&gt;&gt;&gt;' is not assignable to parameter of type 'ReactRefComponent&lt;IProps &amp; IRefProps&gt;'.   Type 'ReactElement&lt;any, string | ((props: any) =&gt; ReactElement&lt;any, string | ... | (new (props: any) =&gt; Component&lt;any, any, any&gt;)&gt; | null) | (new (props: any) =&gt; Component&lt;any, any, any&gt;)&gt; | null' is not assignable to type 'Element'.     Type 'null' is not assignable to type 'Element'.

... this is a nightmare.

It forces me to jump between all the types.

Why not just show the above BUT show the canonical type as an 'interface' declaration showing what the type SHOULD be if I were to code it without using type or interface references/inheritance.

So it would just say something like:

    the canonical type is:
    
    interface Foo {
        readonly bar: string;
        ....
    }

This would make my life 100x easier!",Typescript compiler errors with typescript are a nightmare and could be improved by showing the *canonical* type.
1103,2020-08-06 18:36:36,10,1,"So I'm using yarn workspaces to split a project up into ""micro packages"" for better code separation. This is a backend node project. I've got your standard setup of a `packages/` folder which also includes a `packages/app` which is the entry point to run

    packages/
        app/
        module-1/
        module-2/

Running `yarn run build` correctly builds each module so I can import it, and running `yarn run dev` runs `ts-node-dev src/index.ts` in the app package, all that is gravy

The part that I'm stumbling on is during development; when using `yarn run dev`, changes to the `module-1` package don't trigger a restart. If I want to work on module-1, I have to use `yarn workspace @group/module-1 run build:watch` alongside the dev script

Is there a way to set it up so that running my dev script can start a watch on all the separate packages?",Watching and compiling packages in a workspace monorepo with typescript?
1104,2020-08-07 11:53:00,5,1,"This is just an example to illustrate my issue.

Say I have a class

    class Person {
      
      constuctor(public firstName: string, public lastName: string) {}
 
      getName() {
        return this.firstName + "" "" + this.lastName;
      }
    }

Now, say that I make an API call to get an array of Persons, so I might write it like this

    fetchPeople(url: string) {
      return Axios
        .get&lt;Person[]&gt;(url)
        .then(res =&gt; res.data.map(p =&gt; new Person(p.firstName, p.lastName));
    }

Now, this does work, but it involves lying to Typescript, because of course Typescript would also now accept 

    fetchNames(url: string) {
      return Axios
        .get&lt;Person[]&gt;(url)
        .then(res =&gt; res.data.map(p =&gt; p.getName());
    }

and then that would give a runtime error.

Another possibility is to type out an interface `IPerson` with properties `firstName: string` and `lastName: string`. The problem I have with this is that in my actual use case this involves hundreds of lines of code to create a load of interfaces that will be used exactly once each. So that seems like a waste of time just for a bit of extra type checking.

The third possibility is to just pass `any` as the type to `Axios.get`. This is even more honest than the first option, but it also does away with my typechecking. 
Does anyone have a sensible solution?",What's the best way to initiate classes from an api call without lying to typescript?
1105,2020-08-08 03:07:12,8,1,"Hey all,

I’m curious if anyone has any good suggestions on ways to manage types across multiple frontends and services that have overlapping uses of types or use similar types. I’m trying to slowly move our org to typescript and would like a good way to manage types that won’t get super unruly.",Managing Types across multiple front-ends and services
1106,2020-08-08 22:57:20,8,1,"Or at least do they plan to add that feature in the future in typescript ?

Here is an example of what I am talking about :  


    type shallowSerializableReference = unknown[] | {[x:string] : unknown};
function shouldDiff(oldVal: unknown, newVal: unknown): oldVal is shallowSerializableReference , newVal is shallowSerializableReference {
 return (
        (isOfInternalClass(oldVal, ""Object"") &amp;&amp; isOfInternalClass(newVal, ""Object"")) ||
        (isOfInternalClass(oldVal, ""Array"") &amp;&amp; isOfInternalClass(newVal, ""Array""))
    );
}","Is there any such think as type assertion via is , but via a more than one parameter asserting function ?"
1107,2020-08-09 04:15:59,12,1,"I've been playing around with using an object, hashed by action types, that maps to a state reducer. I've done this with JS in the past and the TypeScript(ing) is a bit complicated for my liking.

Here's my sample code - 

    const INCREMENT = 'increment'
    type IncrementAction = { type: typeof INCREMENT; amount: number }
    export const increment = (amount: number): IncrementAction =&gt; ({ type: INCREMENT, amount })
    
    const DECREMENT = 'decrement'
    type DecrementAction = { type: typeof DECREMENT; amount: number }
    export const decrement = (amount: number): DecrementAction =&gt; ({ type: DECREMENT, amount })
    
    type StoreState = { readonly amount: number }
    type StoreActions = IncrementAction | DecrementAction
    
    type StoreReducer&lt;S, A extends StoreActions&gt; = {
      [key in A['type']]?: (state: S, action: A extends StoreActions ? (A['type'] extends key ? A : never) : never) =&gt; S
    }
    
    const reducers: StoreReducer&lt;StoreState, StoreActions&gt; = {
      [INCREMENT]: (state, action) =&gt; ({ amount: state.amount + action.amount }),
      [DECREMENT]: (state, action) =&gt; ({ amount: state.amount - action.amount }),
    }
    
    const initialState: StoreState = { amount: 0 }
    
    export default (state: StoreState = initialState, action: StoreActions) =&gt; {
      const reducer = reducers[action.type]
      if (reducer) return reducer(state, action as never) // sad panda
      return state
    }

So this will ""work"" - within each reducer function, \`(state, action)\` both parameters get inferred properly based on the key - which is really cool!  

My problems with it are 

* The StoreReducer type makes my brain bleed.  This seems overly complicated and I swear I'm going to look at that later and think ""wtf is this thing?""
* in the actual reducer function, typescript seems to get ""confused"" and the type of the action parameter from the returned function always comes back as \`never\`, so I need to cast the action to never, which.... seems a bit wrong, and is making me a sad panda.

 I'm wondering if anyone else has done this in the past and what your approach was.",Help: Redux reducer object pattern / better options?
1108,2020-08-09 16:26:15,25,1,"I want to use typescript in the front end without the use of a framework. Basically, just compiling it down to es3 javascript. In the tsconfig.json file, I've sent module to none but that's not exactly what I want. 

I do not want the import and export statements to appear in the javascript files after compiling and module none does that; however, in development, I want to be able to use import and export for better IntelliSense, using types, interfaces, and etc. 

How do you accomplish this?",Typescript without a framework for frontend development
1109,2020-08-09 17:53:11,6,1,"Basically, the title. I've recently switched to using `@babel/preset-typescript` instead of `ts-loader` for easier integration with other tools (like React hot reloading). I know that Babel just strips the types and does not do any type cehcking by itself.

However, I do not want it to compile anything until my types are correct, the main reasons being:

- Saving a file with wrong types often indicates actual erors in the logic of the app, and hot-loading such a broken can break my components, so I need to manually refresh the page.
- Sometimes IDEs just bug out and stop showing errors where they should be. I want to at least see them in the terminal, preferably the same one that runs my dev server.
- Production build should only be successful if all types are correct.

`ts-loader` had the correct behavior out of the box. How do I set up a project with `@babel/preset-typescript` to behave in the same way?

Thanks!","When using @babel/preset-typescript, how do I prevent compilation unless type checks pass?"
1110,2020-08-10 09:01:53,2,1,"**Monday, August 03 - Sunday, August 09**

###Top Posts

| score | comments | title &amp; link |
|--|--|--|
| 692  | [246 comments](https://www.reddit.com/r/javascript/comments/i456d7/all_front_end_interview_questions_asked_during_my/) | [All front end Interview questions asked during my recent job hunt.](https://dev.to/devabhijeet/all-front-end-interview-questions-asked-during-my-recent-job-hunt-1kge)|
| 377  | [50 comments](https://www.reddit.com/r/javascript/comments/i3ojry/announcing_the_new_typescript_website/) | [Announcing the new TypeScript Website](https://devblogs.microsoft.com/typescript/announcing-the-new-typescript-website/)|
| 341  | [59 comments](/r/javascript/comments/i6508v/introducing_rome_a_linter_for_javascript_and/) | [Introducing Rome: A linter for JavaScript and TypeScript.](https://romefrontend.dev/blog/2020/08/08/introducing-rome.html)|
| 279  | [117 comments](https://www.reddit.com/r/javascript/comments/i5e35x/sortnode_deno/) | [sort&amp;#40;""NODE""&amp;#41; --&amp;gt; DENO](https://dev.to/nitdgplug/sort-node-deno-4nck)|
| 222  | [76 comments](https://www.reddit.com/r/javascript/comments/i5yayq/microsoftfast_the_adaptive_interface_system_for/) | [microsoft/fast : The adaptive interface system for modern web experiences.](https://github.com/microsoft/fast)|
| 216  | [33 comments](https://www.reddit.com/r/javascript/comments/i6jnbc/demo_bot_hiding_from_player_in_3d_space/) | [Demo: Bot hiding from player in 3D space](https://oguzeroglu.github.io/kompute-demos-with-roygbiv/hideBehavior/application.html)|
| 193  | [41 comments](https://www.reddit.com/r/javascript/comments/i31dnl/you_may_finally_use_jshint_for_evil/) | [You May Finally Use JSHint for Evil](http://mikepennisi.com/blog/2020/you-may-finally-use-jshint-for-evil/)|
| 177  | [58 comments](https://www.reddit.com/r/javascript/comments/i51dz8/announcing_typescript_40_rc/) | [Announcing TypeScript 4.0 RC](https://devblogs.microsoft.com/typescript/announcing-typescript-4-0-rc/)|
| 150  | [62 comments](https://www.reddit.com/r/javascript/comments/i4pb4a/shared_state_with_react_hooks_and_context_api/) | [Shared State with React Hooks and Context API](https://blog.sabinthedev.com/shared-state-with-react-hooks-and-context-api-ckdhvq3eq002rlts1b9m90twt)|
| 107  | [8 comments](https://www.reddit.com/r/javascript/comments/i2v09t/a_better_javascript_symbol_search_and_bookmarking/) | [A Better JavaScript symbol search and bookmarking extension for VSCode](https://github.com/Raathigesh/waypoint)|




&amp;nbsp;

###Most Commented Posts

| score | comments | title &amp; link |
|--|--|--|
| 36  | [34 comments](https://www.reddit.com/r/javascript/comments/i4n4t4/node_modules_at_war_why_commonjs_and_es_modules/) | [Node Modules at War: Why CommonJS and ES Modules Can’t Get Along](https://redfin.engineering/node-modules-at-war-why-commonjs-and-es-modules-cant-get-along-9617135eeca1)|
| 0  | [32 comments](https://www.reddit.com/r/javascript/comments/i4ffir/askjs_am_i_alone_in_preferring_functionprototype/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Am I alone in preferring function/prototype to the ES6 classes because of needless indentation?|
| 4  | [27 comments](https://www.reddit.com/r/javascript/comments/i3guet/askjs_code_review_disagreement/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Code Review Disagreement|
| 0  | [23 comments](https://www.reddit.com/r/javascript/comments/i43qxm/why_we_moved_from_react_to_svelte/) | [Why We Moved From React to Svelte](https://medium.com/better-programming/why-we-moved-from-react-to-svelte-f20afb1dc5d5)|
| 80  | [15 comments](https://www.reddit.com/r/javascript/comments/i3arrh/askjs_good_javascript_se_interview_resourcestips/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Good Javascript SE interview resources/tips?|




&amp;nbsp;

###Top Ask JS

| score | comments | title &amp; link |
|--|--|--|
| 0  | [2 comments](https://www.reddit.com/r/javascript/comments/i2rrfc/askjs_what_kind_of_issue_that_you_want_to_learn/) | `[AskJS]` &amp;#91;AskJS&amp;#93; What kind of issue that you want to learn or solve with online sources?|




&amp;nbsp;

###Top Showoffs

| score  |  comment  |
|--|--|
| 8  |  /u/TechSquidTV said [Update to my last post here. Still making progress in my TypeScript aquarium simulator. Still working out some bugs but we have automatic game saving now and the fish poop coins!  https://kyletryon.gi...](/r/javascript/comments/i5xtd7/showoff_saturday_august_08_2020/g0sbubx/?context=5) |
| 4  |  /u/saricden said [Posting on Sunday but stuff was made on Saturday.  &amp;#x200B;  I made a blog! Teaching web development and stuff.  &amp;#x200B;  &amp;#91;First Post - How to make a Spotlight Search w/ JavaScript and JekyllRB&amp;#...](/r/javascript/comments/i1qxzq/showoff_saturday_august_01_2020/g06krx7/?context=5) |
| 3  |  /u/thapr said [Hi all,  I built a chrome extension that transcribes your Google Meet session into Google Doc.  https://thanesh.dev/meet-transcript  Feedback is appreciated!](/r/javascript/comments/i5xtd7/showoff_saturday_august_08_2020/g0t0f7p/?context=5) |




&amp;nbsp;

###Top Comments

| score  |  comment  |
|--|--|
| 217  |  /u/NotMyRealNameAgain said [I would laugh at an interviewer who asked for many of these things. Asking someone to reverse engineer things that are already implemented and well supported in JS is not a good gauge of a person's ca...](/r/javascript/comments/i456d7/all_front_end_interview_questions_asked_during_my/g0g3eot/?context=5) |
| 114  |  /u/frontendben said [Front end questions and not a single question and HTML or CSS. No wonder front end is a shit show these days.  Most of these are data manipulation and fall under the 'back end programming done on the ...](/r/javascript/comments/i456d7/all_front_end_interview_questions_asked_during_my/g0g098j/?context=5) |
| 94  |  /u/sproingie said [Yunno, it never even occurred to me until I read this title that Deno was an anagram of Node.  Yeah, I'm that dense sometimes.](/r/javascript/comments/i5e35x/sortnode_deno/g0orky3/?context=5) |
| 88  |  /u/beeskneecaps said [Learn about our design system with no visual examples of our design system.](/r/javascript/comments/i5yayq/microsoftfast_the_adaptive_interface_system_for/g0snvl1/?context=5) |
| 76  |  /u/Veranova said [I’m extremely excited for the whole toolchain to be finished one day! Having spent a crazy amount of time configuring all the disparate tools with the same configuration &amp;#40;like supporting absolute ...](/r/javascript/comments/i6508v/introducing_rome_a_linter_for_javascript_and/g0tfmh5/?context=5) |




&amp;nbsp;",Your /r/javascript recap for the week of August 03 - August 09
1111,2020-08-13 09:17:31,6,1,"Hi there! Just starting with typescript and I was guessing if this is possible to achieve. Any help or alternative solutions will be appreciated, thanks in advance!

So I have this method:

`triggerInteraction({`  
 `parent,`  
 `action,`  
 `custom = false,`  
  `}: {`  
 `parent: HTMLElement;`  
 `action: string;`  
 `custom?: boolean;`  
  `}) {`  
 `// Search for trigger and click it if found`  
 `const trigger = custom`  
      `? (document.querySelector(\`[data-logic=""${action}""]\`) as HTMLElement)`  
      `: (parent.querySelector(\`[data-logic=""${action}""]\`) as HTMLElement);`  
 `if (trigger) {`  
 `trigger.click();`  
 `return true;`  
    `} else return false;`  
  `}`

Where the ***parent*** argument is only needed if the ***custom*** argument is true. Otherwise, it won't be used by the method.

So my goal is to be able to make this a valid call:

`triggerInteraction({ action, custom: true });`

But not this (***parent*** should be required here, because ***custom*** is false and therefore will be needed in the method):

`triggerInteraction({ action, custom: false});`

Is there any way to set this conditionally optional parameter? Or is there a better approach for this kind of solution?

&amp;#x200B;

Thanks!",Is it possible to make one function argument optional depending on another argument's value?
1112,2020-08-13 13:25:06,7,1,"I'm currently trying to refactor a function's signature to remove the need for loads of overloads. I've done this by creating a conditional generic type to handle the same cases that the overloads did.

The function works fine but for some reason adding annotations to constrain the return type from `unknown` to something else is giving me errors that didn't exist, as if the function is incorrectly inferring `T` from the annotation and I just can't figure out why. There are some times in my project where I need to declare a variable before assigning it and it just breaks.

This is the function's signature:

    const createMatrix = &lt;D extends number, T&gt;(
    dimensions: D,
    initialValues: T = null
): Matrix&lt;D, T&gt;
    
    type Matrix&lt;D extends number, T&gt; = D extends 1
        ? T[]
        : D extends 2
        ? T[][]
        // ...

And a TS playground link with the full code and old version [is here](https://www.staging-typescript.org/play?#code/PTAEBUE8AcFNQIYDskHsAuD0EtVNAO4BOeA5gDaSioBusRR2AJrAM6imxL3YDGh2dAAtQ9EkVYAoSSFABRAB5xe6WE1AAjWEIQ1cRAFwywAQSZNsSUqHQx4yNJhx526VKBoJGCDeTahWIVQAV3J1LVBeVABbaCxsX3gCQRFheAAzYKQVXCR2Ilh0YKIkYwDsUiQsYtgAGkiEYNZLazQbO1EGVAlpWRMVYIRyTW1dfSM+1mbKlsR8BwwsNQ8vbB8-G3c00AKikpXyYPhUdJshDKycvAam-2RO8QA6MvBzji4efnBQbHZiMkoPyQ6TEyzcIzmVBOoAA5F4iAgqARzgVQCxoMJQAAeUAAERhhBR8EEASCoSYZQilhBDDB7jwgO2GgQrHgtjg1FO224rFU6nhiMeoAASrBorRZtsFk5cgFUOQ6FJZNtoCREtFNMF0DsxbR-Oz4KwECDbISuCtvIlEFMKkholxtTpoHA8oh0qoiJECvE8M8ZAAqf2SUD+kWFYquhCgaJYRgKUAACmioRwAFoLPa8rkhogGIiAJQCTGQEKeljNArqDNcZouObqTyHNjPEPB0MAATiCI11azddToAABrjBwYIG9y9hK2jsJna67odsY+g423QJ2vAgNZZBGtyAA1IZHdgD17wRtHM5YUQIXgiaCoSzayxneDLuNA3dDX761BC3GwOkjTkOgrjuIOSChOQg4th2uwRuwJjRrG2DxtCw6DjOc65Kw9TJJisC3vej5IM+SBfuQP7qOC2yDjuOBDIeTasJhXZboU9CwcAkhRHk2q8N6qgALIofGAC82K4qICiqEgTDsJB0RaEQ9TgAAfAmwagNpvbzqwY64rUWnafRe5MceY7fAAPqAkHkMMEl2eQkj5mOIkrqhWKGRAamgGJvkAN7GZELj8cUBSkbis41rkAAyXCkJiEm6ThADcwW8byOoxjuVhRdhdbJdFfaugOACM6XadpmXatwaisKKvDFPOfnZQguWkPlMV1r5AAM6UZaFkThQ67kfhJJh5pACZNbSkXFfO8VWMI+aPOk2D2QmpmMUebD5gNVUhXxoDrVU5BjahrV1fJjXNbkwWHQA-MNc3oBdCiPDG0AJgmhb+Q9h2AwJhHCaJCYFDl5F5QtOH1NtB67aw+YA4dyOA1VY6zRFb2iQdVXwfsp1DO91qgO9XmqWp6UAL4DQaZOiV50myfJtnBEp9CU61UmwDJXCs2VwXPeAADaAC6wUGcz-PsAATELEDi+Lkt4tLcnsAAzAroti0rEuHVLvMs+wAAs2t63rKvIJAFu63bA01TYbDoGVY6Kcp4utcDSzvQmZX7aAshYgOBDdAA1ie7zcIwXw-OwrLauCEHs8pg48UNqi8rLbsp-Qete4JsC+7LAdBwOTCoGwSAwtqodEGHoADpw0d8BAccBIUmxDu79CgDZPdEOLmEDoEIRhBCg5ZGHaAEEgg71Gk+A1Qilh0mzHNEOnx2Z+gGs5xvtsFyDRdgxrpdgMHaKV6w1e1+HjdR58be-B3ifgQPffrx7YufwPevD6SMe4R4CTyQNPVAs956viXqFFe3BqLuAHtIR2O8TZHx9mDEuqVA4XwHAUUgoQvBAhpFwXgSRw6R2bk-b4L9QHgMgfUAm+B6YvynjPJAlsUHOwAKz72-p7CS3tQYeQUAmWW9Rern2xCHChZp8B0XIgxBGzFMIvwTg-KhMdn7sGThvKBTD2gchfn-O2W8so7wAGxjjYRAjhdt0HCLjGIqRl864RxOqveoLJDHwBoewGxs8-S9DAAAIVgOQCB7dtjyiYHhcOLR6iZGyM4JAQoACSMINQrkgJKdwEM9TUDoEQCJCBWbpG6IgEY6APR4gABr1HONkNkbxuAEBOpcFJiYfB6mRpIJJVwl6F3egAeTCFidSCYUouDHGVOGiizKI0epZVyisxYDX6Z0oRJ8RGjKYOMjSwUpl5DHOI4K8NzJsCWRAFylk9brI6bKLZIyxkTMOTDaZoANZGUOucxZlkbmrLudIDZjyhmiV2fszSh0jn6VACbb5VVfnMSueAAFOtbb3OSaC4+zy9mvOhe845X9OZnPmTtZF-yVm4v2ZigZXocXgpeQcglBUiUDwRSZMlyiLJt37lBK6UEAXUvUqAIKh1HZYwdF1EqS1EoiCKqy1glUqqOwhu1KGnVCXsAVd1UqoAKqDWOtdBqsBZotQkmqjq0q9KgD6njaqQ1JWkRJhNKaM0RrzVZbKlaa0NrkC2lyi5SN7VHSykTc6okrqwHqrdCQ910baWek6nGIjPoIG+r9PyakUYJqeYypg4MxTqpaNa2Gn4lFBrRgm7SVb0aYw9SmuMIaDHhvejTaQ9NhW+Qkuiu2+cbJdvFgNMxidna7NdsSweP9BFgp2WEP2Ui3HsFOrAEdTteS7OzpO-OM6GVzoLVgnBhBZErrXTvXZe9t19unfSjB+6Exn2wbIJdHjuDIIzmOsIaDd13rjLs5xT6wAvtPVwjdYReFXoEbexxqF-3iNAJIwDx767LtXmez9TArGgACXYqDeb72HufSe1eQA).

Does anyone have any ideas for what the problem might be?",Type annotation erroneously overrides generic
1113,2020-08-13 14:27:37,0,1,"I'm very new to typescript, so far I really like it though.  I've scoured the web and had over 30 tabs open reading stack overflow and blog posts such as this: https://www.detroitlabs.com/blog/2018/02/28/adding-custom-type-definitions-to-a-third-party-library/

I've tried many things but there is something I'm fundamentally missing about what I'm trying to accomplish.  I'm not going to claim I've tried every permutation possible, otherwise it'd be working but I've tried many things unsuccessfully. I'm using @jscad/web which does not have typings for it, and I want to create typings for it.  I tried to simplify the problem tremendously by just adding typings for one single function called Processor.  


I'm trying to create typings for the Processor function in processor.js which is in (root)\node_modules\@jscad\web\src\jscad

I created a folder called types, which is in (root)\src\types and in there I've got jscad.d.ts with the following contents:

    declare module '@jscad/web/src/jscad/processor';
    
    export function Processor(containerdiv: HTMLDivElement, options?: ProcessorOptions);


Then in my tsx file I'm trying to import and use it:

    import {Processor} from '@jscad/web/src/jscad/processor';

However my IDE gives me this error:

TS7016: Could not find a declaration file for module '@jscad/web/src/jscad/processor'. '(root)/node_modules/@jscad/web/src/jscad/processor.js' implicitly has an 'any' type.  Try `npm install @types/jscad__web` if it exists or add a new declaration (.d.ts) file containing `declare module '@jscad/web/src/jscad/processor';`


So the suggestion to declare it isn't helpful since I'm already doing that. 

Lastly in my compilerOptions of tsconfig.json I have this:

    ""typeRoots"": [""./src/types/"", ""./node_modules/@types""],

This is the actual type script error:

TypeScript error in (root)/src/components/OpenJSCADViewer.tsx(6,25):
Could not find a declaration file for module '@jscad/web/src/jscad/processor'. '(root)/node_modules/@jscad/web/src/jscad/processor.js' implicitly has an 'any' type.
  Try `npm install @types/jscad__web` if it exists or add a new declaration (.d.ts) file containing `declare module '@jscad/web/src/jscad/processor';`  TS7016",need help on trying to create typescript typings for a 3rd party package
1114,2020-08-13 16:39:10,16,1,"I am trying to define types for my little pub/sub service. The service has a  `subscribe` function that is giving me troubles.

The subscription function subscribes callbacks to messages. Each message has the following shape:

```
{
  action: string;
  payload: one_of_the_predefined_payloads
}
```

So what the subscription function does is it takes two arguments — action and callback — and puts the callback in the set of callbacks that respond to this action. When it the pub/sub service receives a message with a given `action`, it will call the callbacks interested in this action passing to them the payload from the message.

The type of the callback function is currently defined as `type Callback =  (...args: any[]) =&gt; void`; but I am trying to find a way to properly define it through, because, goddamit, I know the actions and I know which payloads are expected for those actions:

```
type FooPayload = {
    foo: number;
}

type BarPayload = {
    bar: string;
}

interface ActionToPayloadMap {
    foo: FooPayload;
    bar: BarPayload
}

type Callback = &lt;A extends Action&gt;(payload: ActionToPayloadMap[A]) =&gt; void;
```

But somewhere along the way my reasoning falls apart as can be seen in [this typescript playground](https://www.typescriptlang.org/play?#code/C4TwDgpgBAYg9nACgQxAGzsgJlAvFAbwCgpSoAzBALigDsBXAWwCMIAnAbiIF8ijRIUAELI2KdJhz5iZKM1E0AzsDYBLWgHMuvfuGjw4AWQiLFyDdGkkyyAMbBVcWjQDklOC66ywqDNhoG4n5YPFy6giJsxqbmloTWpHYOTq7ybJ4JUD4S-sKiQZKhfOrA7OR20ACC9o60ACpIvpKGyGDxsu4BCAXYXmRpNJE9IToCVTVOeFAA1hAgcORQ1cn1jTlYLWBhY1DDU4FN2FAAPnlih1jbelAAyvTMirZqrGyKUwBKELZwbFgAPMtagAaW4QYB-ADCyDQaHktmmAD4EXwdlCYXDplMAVAIAAPUq0LBvQFOBEACmywRoJNWw02AG1KgBdACUeARUAAbnBVJcUdc7g8nqpWFjKjj8RBCcSJrRyUlatSQbZobC7NMaGi1fCAQi2bgOdzeVdBIh7mhVIoABZiiUEolLWXy2VKrIXamyhp01qM1nsrk8vlEb60ZRQRT3R7PdhvaTcKDIN6CqMimNhENhiNC6M0ZPC0X4MkKpzK1UY-UcmRkDPAcNgqZZlMvRT04u0JknU60CAAd1B4K1GPJLL6pEUYIAdNgsGSVej1SPMo38zHW7KO-hx8BtHwa1lzZarTQzcwLdapkXZSDKZIK+1q04w3PtdNY+HIyvXmuVkzR1BnxiigTpQbAAKJ2Fas7MP6tjMBSFwsiyRTBo+tbuHUJi1oWN65Ac6x3hmcBoBAE4YBo8HrMBCCLkQy7Rn8bgIC45KMR4ILoZhI5AA), where I've captured my attempt at defining these relationships. Could anyone help me out?


**P.S.:** Also, I really don't like the `ActionToPayloadMap` interface from the snippet above. What I would much prefer would be to define the actual message types:

```
type FooMessage = {
    action: 'foo';
    payload: FooPayload
};

type BarMessage = {
    action: 'bar';
    payload: BarPayload
};

type Message = FooMessage | BarMessage
```
and then to somehow tell typescript to lookup the payload type based on the received action. Is typescript capable of something like this?",Trying to get rid of the any; need help
1115,2020-08-14 00:13:04,5,1,"Hey guys, i'm working on a project that will be a monorepo using yarn workspace, with micro-front-end using react-typescript.  To create the frontend structure i used  Create-React-App and everything was working fine.  Then i decided to create a priveta-route module using just  a basic index.tsx and package.json when i use this module i get this error:

    C:/Users/johnvidal/Documents/quero-docura/quero-docuras/packages/web-private-route/src/index.tsx 10:0
    Module parse failed: The keyword 'interface' is reserved (10:0)
    You may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders
    | 
    | //@ts-ignore
    &gt; interface PrivateRouteProps extends RouteProps {
    |   component: React.ComponentType&lt;RouteComponentProps&lt;any&gt;&gt;
    | } 

How do i fix this?",Error on creating module using monorepo react structure
1116,2020-08-14 10:30:27,38,1,,A full PERN stack + typescript boilerplate v1.0
1117,2020-08-15 13:04:35,1,1,"This is branching of another post, but it seemed a lot of people thought a change to the types that may cause typings to fail consortia a breaking change. To follow up, I'm curious to know what people's thoughts is on the actually Typescript library.

I can see an argument being made that if I upgrade Typescript library then the way my types are generated can include types that only exist in a later version of typescript. Therefore, a consumer of the library who is on an older version of typescript would have an error and would need to upgrade Typescript.

On the other hand, it's usually not the case as per how npm works that you release a breaking change if an internal dev dependency library upgrades.

I personally don't think it should be considered a breaking change, but I would still love to hear more sides to this.","For people who think changing types constitutes a breaking change, do you consider upgrading the Typescript version you compile your library with a breaking change?"
1118,2020-08-15 19:47:49,26,1,"I like typescript a lot, but only when I know I'm not going to need many libraries. Anything on the back end I handle with typescript. 

But typescript seems like a hassle for things like react. What happens when you want a package that has no types?",Typescript sometimes seems like more of a hassle than it's worth
1119,2020-08-16 01:02:34,0,1,"Long story short, I want to use TS on client and server for everything when it comes to personal work. I don't want to context switch, even though some node command APIs are finicky. I'm writing wrappers around strange node apis to simplify it, such as a promise spawner for processes, and i'm keeping this in git. I made a template TS project that gets generated from a bash script so I don't have to worry about configuration anymore either (and it includes my util node helpers by default)..

Specifically, I have a dist/ and src/ folder where dist has my js generated code. I have another helper to symlink a generated run script that points to the dist/index.js to my \~/bin folder! The thing is, how do I keep all this organized and syncornized with my droplet server? I generally have a git \`bin\` folder for zsh scripts that I backup with git and sync to my local \~/bin/ folder and remote \~/bin folder (I'll just run a [sync.sh](https://sync.sh) script each time I pull on either server). But because typescript has file dependencies, it's a multi-file process. I was thinking I could rsync each ts-helper-script-folder to the remote server, and run the same helper mentioned earlier to link the run script (pointing to dist/index.js) to the remote servers \~/bin folder, but then if I make changes remotely, I don't see how I'd synchronize it back to my local machine.

😅thanks for hearing out all my thoughts on this :). Basically I have .sh scripts already ""easily"" synced  in \~/bin on both servers because I also keep the scripts together in the same git repo, but TS is a bit tricker because of the file dependencies and I'm not sure about also keeping them in my .hidden git repo given size.

What do you think?",How do you sync one of ts node scripts between your server and remote?
1120,2020-08-16 23:01:03,6,1,I've re-created the TypeScript exercises and now they are interactive and fully accessible through a web-browser. Check out and have fun: [https://typescript-exercises.github.io/](https://typescript-exercises.github.io/),TypeScript Exercises: Now interactive and solutions are included!
1121,2020-08-17 08:48:29,5,1,"Hi is it possible to create Progressive web app (react - typescript) that you could block on computer, I just want it to work on mobile devices.",Pwa
1122,2020-08-17 10:25:20,33,1,[Playground link](https://www.typescriptlang.org/play?#code/MYewdgzgLgBAJgS2FB4CGAnAnjAXDAbwG0APXaDBMAcwF08YwBXAWwCMBTDAXxgF5C3ANwAoEaEiwS-eEhTpsAOhJCA9KoAWIAG5cYOvdIA0MBFAgwIWgO4WoWAA4cGzdnrRg4jELFecMMAA+MEyeHABmVBxwQA) . Is this the expected behavior ?,Dictionary object does not give undefined as possible type (even with strict null checks).
1123,2020-08-18 17:19:30,0,1,"I've recently attached NYC to my Typescript project but am confused about how it determines when code is covered. Below is an example of NYC claiming that lines 5-6 are not covered in my `src/Indexer/InvalidIndexError.ts`.

I have the following setup:

`.nycrc`

    {
      ""extends"": ""@istanbuljs/nyc-config-typescript"",
      ""include"": [
        ""src/**/*.js"",
        ""src/**/*.ts"",
        ""src/**/*.tsx""
      ],
      ""require"": [
        ""ts-node/register""
      ],
      ""reporter"": [
        ""text"",
        ""html""
      ],
      ""all"": true,
      ""check-coverage"": true,
      ""sourceMap"": true,
      ""instrument"": true
    }

`src/Indexer/InvalidIndexError.ts`

    export default class InvalidIndexError extends Error {
        public static ErrorName = 'InvalidIndexError'
        constructor(message) {
            super(message);
            this.name = InvalidIndexError.ErrorName;
        }
    }

`test/InvalidIndexError.ts`

    import InvalidIndexError from ""../src/Indexer/InvalidIndexError"";
    
    const chai = require('chai');
    const chaiAsPromised = require(""chai-as-promised"");
    const {expect} = chai;
    
    chai.use(chaiAsPromised)
    
    describe('InvalidIndexError', () =&gt; {
        it('should have static error name',  () =&gt; {
            return expect(InvalidIndexError).to.have.property('ErrorName')
        })
    
        it('should have a name matching static name',  () =&gt; {
            const error = new InvalidIndexError('');
    
            return expect(error.name).to.equal(InvalidIndexError.name)
        })
    
        it('should be instance of Error', () =&gt; {
            return expect((new InvalidIndexError('')) instanceof Error).to.be.true
        })
    });

After executing  `nyc mocha -r ts-node/register/transpile-only -r source-map-support/register --full-trace --ui bdd tests/**/*.ts` I end up with:

    -----------------------|---------|----------|---------|---------|-------------------
    File                   | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
    -----------------------|---------|----------|---------|---------|-------------------
    All files              |   38.02 |    39.29 |      35 |   40.27 |                   
     src                   |   30.95 |       40 |   36.36 |   33.33 |  
     ...                   | Excluding other files for Reddit brevity                            
     src/Indexer           |   92.86 |    52.94 |    87.5 |   95.52 |                  
      InvalidIndexError.ts |   80.95 |    46.15 |      75 |   89.47 | 5-6",Trying to use Typescript/Mocha/NYC together but am confused about how coverage is detected
1124,2020-08-20 11:30:07,11,1,"Hi,

I want to learn typescript, not for a server-side or a client-side application but for writing standalone applications. I am not very familiar with javascript, I mainly write in Python. What topics should I learn before typescript? From my understanding, I need at least to learn the basics of node.js and javascript. Is there a good tutorial or course that covers all these topics? 

Thanks!",Learning typescript
1125,2020-08-20 13:32:09,3,1,"For example :

    function foo({a = 1 , b} = {}) {
        console.log(a,b);
    }
    foo({});//1 undefined
    foo();//1 undefined
    foo({a : 2});//2 undefined
    foo({b : 2});//1 2
    foo({a : 3 ,b : 2});//3 2

How do I type the argument of that function in typescript ?","For a function that gets as an argument a single object with optional properties that have initial values , how to type the argument ?"
1126,2020-08-20 17:12:56,4,1,"The question in the title .

Sometimes I find my self having to create bigger interfaces by composing the smaller ones . The issue here is that the smaller ones get edited once in a while and nothing guarantees that they do not collide when they are merged .

As far as I understand ISP has nothing to do with preventing collisions .

Then how does someone prevents the collisions ? Unit testing ? 

I did [a post](https://www.reddit.com/r/typescript/comments/hjif2w/checking_for_interface_collisions/) some time ago , similar to this one and got no real help .",Does interface segregation principle has anything to do with preventing collisions of interfaces that are merged?
1127,2020-08-21 04:31:30,0,1,[removed],macro-ts: an ergonomic typescript compiler that enables typesafe syntactic macros
1128,2020-08-21 17:31:20,6,1,"I’ve been running typescript for a while now and I like the experience about 99% of the time. The last thing is handling complex input arguments in tests. Mocking classes are easy (with ts-mockito), but types are a different story.

Say that I have a helper function that gets called from a dependency, in my case Apollo server. This receives an argument of type A. A includes a lot of mandatory fields, some of which are other complex types. Since A isn’t a class I can’t just instantiate a new one, which (as I understand it) forces me to type it out as an object of type A.

Is there a better way or some shortcut?",How do you guys handle complex input arguments in tests?
1129,2020-08-22 05:33:53,19,1,"Hi  
   How to create a project with express+react+typescript? Any official way?  
thanks  
Peter",How to create a project with express+react+typescript?
1130,2020-08-23 13:15:09,39,1,"I've spent the last 20+ minutes playing around with this and I'm lost. Is TypeScript's type inference not able to figure this out, or am I missing something obvious? 

(I'm running pretty low on sleep so I'm leaning towards the latter)

```typescript
function myFunc(a?: number, b?: number): number {
  if (!a &amp;&amp; !b) throw new Error('No value provided');

  const num = a ?? b;

  return num; // Type 'number | undefined' is not assignable to type 'number'
}
```",Why does TypeScript still think this number could be undefined?
1131,2020-08-24 15:31:45,2,1,"**Monday, August 17 - Sunday, August 23**

###Top Posts

| score | comments | title &amp; link |
|--|--|--|
| 376  | [76 comments](https://www.reddit.com/r/javascript/comments/idd0tn/announcing_typescript_40/) | [Announcing TypeScript 4.0](https://devblogs.microsoft.com/typescript/announcing-typescript-4-0/)|
| 316  | [46 comments](https://www.reddit.com/r/javascript/comments/idxw4f/15_docker_best_practices_for_nodejs/) | [15+ Docker best practices for Node.js](https://dev.to/nodepractices/docker-best-practices-with-node-js-4ln4)|
| 279  | [39 comments](https://www.reddit.com/r/javascript/comments/ibpfhf/i_got_frustrated_with_recipe_websites_so_i_made/) | [I got frustrated with recipe websites, so I made one to practice React and extract recipes / ingredients.](https://github.com/cbrintnall/shorter.recipes)|
| 274  | [81 comments](https://www.reddit.com/r/javascript/comments/ib9pw3/embla_carousel_the_most_fluid_carousel_library/) | [Embla Carousel – The most fluid carousel library with unmatched swipe precision](https://davidcetinkaya.github.io/embla-carousel)|
| 246  | [57 comments](https://www.reddit.com/r/javascript/comments/ic1g9w/doppiojvm_a_java_virtual_machine_written_in_100/) | [DoppioJVM - a Java Virtual Machine written in 100% JavaScript](https://plasma-umass.org/doppio-demo/)|
| 239  | [92 comments](https://www.reddit.com/r/javascript/comments/icul6f/askjs_what_coding_nightmares_have_woken_you_up_at/) | `[AskJS]` &amp;#91;AskJS&amp;#93; What coding nightmares have woken you up at night?|
| 219  | [8 comments](https://www.reddit.com/r/javascript/comments/ich4c1/js13k_competition_create_a_game_in_30_days_with/) | [JS13K competition - create a game in 30 days with less than 13kB of JS, CSS, HTML, ETC](https://js13kgames.com/)|
| 203  | [12 comments](/r/javascript/comments/ien5a7/a_website_that_lets_users_upload_and_draw_their/) | [A website that lets users upload and draw their own fourier epicycles. A type of drawing which is created by taking the fourier transform of an image. It also gives a brief explanation of the mathematics connecting fourier series and revolving epicycles.](https://www.myfourierepicycles.com/)|
| 180  | [16 comments](/r/javascript/comments/if353p/to_understand_it_better_ive_simulated_javascript/) | [To understand it better, I've simulated JavaScript ""for await"" loop with ""while"" loop](https://gist.github.com/noseratio/721fea7443b74a929ea93c8f6a18cec4#file-async-generator-js-L30)|
| 159  | [34 comments](https://www.reddit.com/r/javascript/comments/ie1x9x/an_update_on_mdn_web_docs/) | [An Update on MDN Web Docs](https://hacks.mozilla.org/2020/08/an-update-on-mdn-web-docs/)|




&amp;nbsp;

###Most Commented Posts

| score | comments | title &amp; link |
|--|--|--|
| 87  | [124 comments](https://www.reddit.com/r/javascript/comments/id8oq9/askjs_we_moved_from_react_to_svelte_opinion/) | [&amp;#91;AskJS&amp;#93; We moved from react to svelte &amp;#40;opinion&amp;#41;.](https://medium.com/better-programming/why-we-moved-from-react-to-svelte-f20afb1dc5d5)|
| 135  | [117 comments](https://www.reddit.com/r/javascript/comments/idc09e/the_jetbrains_webstorm_team_is_here_to_answer/) | The JetBrains WebStorm team is here to answer your questions|
| 47  | [67 comments](/r/javascript/comments/if0qqk/transduction_in_javascript/) | [Transduction in JavaScript](https://medium.com/weekly-webtips/transduction-in-javascript-fbe482cdac4d)|
| 36  | [44 comments](https://www.reddit.com/r/javascript/comments/ieh0bf/a_web_framework_that_uses_react_hooks_for/) | [A web framework that uses React Hooks for declarative data persistence and reactivity](https://github.com/redia-server/redia)|
| 154  | [30 comments](https://www.reddit.com/r/javascript/comments/iecc7k/i_made_a_small_2d_raycasting_simulation_any/) | [I made a small 2d raycasting simulation. Any feedback would be great.](https://aydencook03.github.io/simulations/raycasting.html)|




&amp;nbsp;

###Top Ask JS

| score | comments | title &amp; link |
|--|--|--|
| 49  | [29 comments](https://www.reddit.com/r/javascript/comments/ic20rv/askjs_why_do_news_sites_have_javascriptbased/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Why do news sites have Javascript-based, client-end paywalls?|
| 4  | [4 comments](https://www.reddit.com/r/javascript/comments/ieehua/askjs_bookcourse_recommendations_for_java/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Book/Course recommendations for Java programmers looking to strengthen their JavaScript|
| 2  | [5 comments](https://www.reddit.com/r/javascript/comments/ic693w/askjs_would_you_be_willing_to_take_on_a_mentee/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Would you be willing to take on a mentee for javascript? Someone to commit to helping advance towards a bright career?|




&amp;nbsp;

###Top Showoffs

| score  |  comment  |
|--|--|
| 14  |  /u/DavidCetinkaya said [👉🏻 &amp;#91;Go to examples directly here&amp;#93;&amp;#40;https://davidcetinkaya.github.io/embla-carousel/examples&amp;#41;  Hello all,  I've been working really hard on &amp;#91;Embla Carousel v.3&amp;#93;&amp;#40;https://david...](/r/javascript/comments/ieh338/showoff_saturday_august_22_2020/g2gpz9h/?context=5) |
| 6  |  /u/aydencook03 said [&amp;#91;A small 2d raycasting simulation.&amp;#93;&amp;#40;https://aydencook03.github.io/simulations/raycasting.html&amp;#41;](/r/javascript/comments/ieh338/showoff_saturday_august_22_2020/g2h387p/?context=5) |
| 2  |  /u/tylerr514 said [I'm working on my Discord Bot, I.R.I.S. Utilities, a music / utility bot.  I recently made I.R.I.S. open-source.  You can check it out here: https://iris-utilities.com/   &amp;#40;The GitHub is at the top...](/r/javascript/comments/ieh338/showoff_saturday_august_22_2020/g2hcm6t/?context=5) |




&amp;nbsp;

###Top Comments

| score  |  comment  |
|--|--|
| 166  |  /u/thisisafullsentence said [Friendly reminder: TypeScript does not follow semver, i.e. 4.0 is not a major version release, it's just the 40th release. With the exception of maybe a few small stricter type checks, I don't expect ...](/r/javascript/comments/idd0tn/announcing_typescript_40/g28m6se/?context=5) |
| 158  |  /u/stormfield said [But how will I know how long to roast a potato without a 3,000 word story about how someone’s nephew found four pebbles in a stream behind the  old family farmhouse?  Also “howlongdoifuckingcookit.com...](/r/javascript/comments/ibpfhf/i_got_frustrated_with_recipe_websites_so_i_made/g1xpm68/?context=5) |
| 155  |  /u/VividTomorrow7 said [It's 2005 and I'm writing JavaScript that works on all browsers. I reach into the nightstand and I get the gun...](/r/javascript/comments/icul6f/askjs_what_coding_nightmares_have_woken_you_up_at/g24zet2/?context=5) |
| 141  |  /u/596F75206E65726421 said [I think this is a mistake. MDN is one of Mozilla's greatest products.  Experiment with ways to fund it. Start something similar to a Patreon or do what Wikipedia does and request funding from users.](/r/javascript/comments/ie1x9x/an_update_on_mdn_web_docs/g2d21wv/?context=5) |
| 126  |  /u/nickthesick0111 said [That is really cool. But I got to ask why](/r/javascript/comments/ic1g9w/doppiojvm_a_java_virtual_machine_written_in_100/g1zmq4z/?context=5) |




&amp;nbsp;",Your /r/javascript recap for the week of August 17 - August 23
1132,2020-08-26 17:26:21,1,1,"Hola! ts users finally starting to learn typescript to use in my nextjs and React Native application, I'm a big of typescript but I don't get any situation to use typescript in my projects but finally, I got the project where I can use typescript, Really excited to dive deep into typescript.

How I planned to learn
1. Start with a youtube video
2. Go through doc
3. Build my application 🔨  while learning 

Thank you!
Anything else I'm missing?",Let me in!
1133,2020-08-26 22:50:47,1,1,,Functional typescript and open close principles.
1134,2020-08-27 22:04:35,5,1,"I have an object which contains a list of objects. Each object is a game with parameters like game name and the game options. 

    
    interface LobbyItem {
        name: string
        boardSize: number;
        host: Player;
        hostReady: boolean;
        hostTurn: null | boolean;
        opponent: null | Player;
        opponentReady: boolean;
    }

where player is another Object with more parameters. In order to display these games in my React component, i am creating an array with the objects keys and tying to map through like so:

    const gameList = Object.keys(lobbyState.gameList).map((game, index) =&gt; {
        return (
        &lt;span className=""info-banner info-box settings-button"" onClick={joinGame}&gt;
           lobbyState.gameList[game].name
        &lt;/span&gt;
        )
      }) 

&amp;#x200B;

But i'm getting a TypeScript error when I try to index lobbyState.gameList\[game\]:

    Element implicitly has an 'any' type because expression of type 'string' can't be used to index type 'LobbyItem'.
      No index signature with a parameter of type 'string' was found on type 'LobbyItem'.  TS7053

New to typescript, would someone be able to help me out? I should mention that I'm using nested objects instead of an array so that I can delete the games when they are done. 

Thanks in advance!",Need help mapping through an array that corresponds to an objects keys
1135,2020-08-28 10:49:11,11,1,"Is there a way to get TypeScript to warn me about the following code?

```typescript
type Name = string
function f (_: Name): void {}

const s: string = 'test'
// This should ideally give me an error:
// Argument of type 'string' is not assignable to parameter of type 'Name'
f(s)
```

I know that in most cases you would not want to get an error, but in this case it would allow me to combine it with a type guard like:

```typescript
function isName (name: string): name is Name {
  return name.length &lt; 30
}
```

I think there was a discussion on this topic in the TypeScript repo, but I cannot find it anymore.",Disable duck typing for literal types
1136,2020-08-30 12:38:03,6,1,"Other than `sourceMap: true`, do any other settings need to be configured to get stack traces to point to typescript files? My stack traces are hard to follow because they point to the compiled js files.

current settings in tsconfig.json:

    {
      ""compilerOptions"": {
        ""target"": ""es5"",
        ""lib"": [
          ""dom"",
          ""dom.iterable"",
          ""esnext""
        ],
        ""allowJs"": true,
        ""skipLibCheck"": true,
        ""esModuleInterop"": true,
        ""allowSyntheticDefaultImports"": true,
        ""strict"": true,
        ""forceConsistentCasingInFileNames"": true,
        ""module"": ""CommonJS"",
        ""moduleResolution"": ""node"",
        ""resolveJsonModule"": true,
        ""isolatedModules"": true,
        ""sourceMap"": true,
        ""rootDir"": ""src"",
        ""outDir"": ""compiled""
      },
      ""include"": [
        ""src"", ""src/__mocks__""
      ],
      ""exclude"": [""node_modules"", ""**/*.test.ts"", ""compiled""]
    }",stack traces not pointing back to source (ts) files
1137,2020-08-31 18:53:15,8,1,"Hello guys,  
I signed up for a typescript beginners course before lockdown, unfortunately it hasn't happened yet and will be moved to late October. I'd like to get a little knowledge out front. Any books and/or youtubers you can recommend, learing typescript from scratch?

THANKS! :)",Literature
1138,2020-08-31 21:02:04,6,1,"I have a data structure that looks like this:

    [
        [""value1"", [""value1""]],
        [""value2"", [""value1"", ""value2"", ""value3""]],
        [""value3"", [""value1"", ""value2"", ""value3""]],
        [""value4"", [""value1"", ""value2"", ""value3"", ""value4""]],
    ]

On the surface it could be described as [string, string[]][], but there is a relationship between those values, the array in the second element of the tuple ([string, string[]]) must only include string values that match the first element of the tuple within the whole structure. 

For example,

This would be valid because ""value1"" and ""value2"" are defined as the first elements and the second element only references strings in the first element.

    [
        [""value1"", [""value1""]],
        [""value2"", [""value1"", ""value2""]]
    ]

However this would *not* be valid, because of the reference to ""value3"" which does not occur in any of the first elements:

    [
        [""value1"", [""value1""]],
        [""value2"", [""value1"", ""value2"", ""value3""]]
    ]

Thought I'd see if any of you gurus had an idea on how you'd model that in typescript or if the application will just need to enforce it at runtime. 

P.S. I know there are different ways to go about structuring this data, though in this case the assumption has to be that we cannot change from that structure.",How to model a self referencing tuple array
1139,2020-09-01 00:05:33,3,1,"The monthly thread for people to post openings at their companies.

* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.

* Please only post if you personally are part of the hiring company—no recruiting firms or job boards **Please report recruiters or job boards**. 

* Only one post per company. 

* If it isn't a household name, explain what your company does. Sell it.

* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).


Commenters: please don't reply to job posts to complain about something. It's off topic here.

Readers: please only email if you are personally interested in the job. 

Posting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)

[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)",Who's hiring Typescript developers - September
1140,2020-09-02 05:30:29,17,1,"so, i really wanna learn typescript, for discord.js and maybe a little bit of game dev and website dev, but i honestly have zero clue on how to get started, i learn by doing, and not just watching videos because then i can't remember things, any tips? i would really appreciate the help",learning typescript
1141,2020-09-03 07:24:03,4,1,"Hello,

I installed momentjs and want to the project automatically access to the function everywhere without explicitly importing. Is this possible in typescript?

Thanks",Make third party package as global visible to all other files
1142,2020-09-04 22:38:15,8,1,"I am a computer science senior, working on an independent study project with a professor at my university. This professor is currently working on a paper on database querying which allows specifying the shape of the returned data. Since I had an interest in programming language theory, we decided to try and integrate this with the TypeScript language.  

The idea is for a type to represent the result of a database query, and then usage of a variable with that type can be tracked by TypeScript's type checker to determine what shape the user expects the data to be in at runtime. The compilation process would then output this type (probably as a TypeScript interface or JSON schema), and send it along with the query to the database, which would then transform data to the correct shape, or send an error if transformation isn't possible. Of course, the type system should ensure usage of a variable is consistent, i.e. the user shouldn't treat the variable as a string at one point and then later in the program use it as a number. The type system should also ensure that all usage of the type is compatible with deserialized JSON, as that is all that can be provided by the query function.

I have already started work on a [fork of TypeScript](https://github.com/WhiteAbeLincoln/TypeScript), but I have recently gotten stalled since the language is so large and there doesn't seem to be any publicly available documentation on the internal workings of the checker.ts file. My professor is unable to help since he doesn't have much experience with typescript or PLT.

Rather than struggling on by myself, I figured I could reach out and ask for help. I've already tried emailing members of the TS team, but failed to get any response. 

Does this community have any experience with the typescript compiler, or advice on implementing this, or know who I can contact who could guide me in the right direction? Anything would help, but some documentation on the checker.ts file would be especially useful, or some kind of guide on adding new types to the checker, as was done previously with the unknown type.",Help with Typescript Compiler internals
1143,2020-09-05 01:53:21,10,1,I'm looking for advice and resources to start learning typescript. Also any suggestion would be more than welcome,How do I get started?
1144,2020-09-05 11:01:41,12,1,"I want to find a nice library that supports runtime validation and typescript types as well. I would love for it to be serializable so we can consume it from a client and have the same types and validations there.

I know that graphql has some libs that generates types and allows the client to generate types from a gql schema, but I want this to work with vanilla typescript without graphql. Any advices on where to start?",Fullstack types + runtime validation?
1145,2020-09-05 15:30:17,11,1,"[Here](https://www.typescriptlang.org/play?#code/GYVwdgxgLglg9mABMOcAUEAWBDATgfgC5EBvRAEwFMAHKTIxMEAWwCNLdEB6AKmblyVEcWvDDYANomp5szKBwDOiHlwC+ASlIAoAJAxgiDDk4Bec4nBVgMMJXJaseRKdJqA3HomUopCjTpENRdEJ1xPfUM0KlpMFwsrShs7B39YkIAGT0Qc7i5+QWFRBElpWWYfJURbGFhJGAAve2rDOkoAT0Q8IUTk+z0DIyh26ko4QxjAgEILACImNg5ZrTpcOAB3RABRXDXcNFnl7NyufIEhEVgSqRlcOUrcZW7QzEoIAGtmlE42mB+R5qDNqdZ7UNYANxgVHIiFYnTalkUHD0EAQil8wCQrjQWlMAD4dLpdJM4gBqRAARiyp3WmE6tWqynRMAkNzgikUMFY3k47EsYGstma+G0uTFeQKF2K4ikzxASPIeg82jUQA) is the playground link .

Why `depth` is still possibly undefined inside `fn` ? and how do I make it not be without adding an unnecessary `if` clause ?",Strict null checks (and function hoisting?) causing issues .
1146,2020-09-06 07:26:49,6,1,"Sorry if this is a really basic question. I am relatively new to javascript (and after this typescript). 

I am making an angular app, which has 2 arrays of objects. The first is fetched from a REST service, and the second is a locally stored  JSON. 

I made a model as follows

     
    export interface MenuAction {
 menuId: string;
 actionId: string;
 actionType: string;
 updIndic: string; 
 description: string; 
 longDesc?:string;
 image?: string;
}

My local Json looks like this. 

&amp;#x200B;

    [{
 ""actionId"" : ""0010"",
 ""image"" : ""policy.jpg"",
 ""text"" : ""Actions related to policy system configuration. For example, configuration of affinity agreements""

},
{
 ""actionId"" : ""0020"",
 ""image"" : ""account.jpg"",
 ""text"" : ""Account system configuration""
}]

&amp;#x200B;

Then in my component.ts, I have done the following. 

    ------------
    import menuDetails from '../../../data/menu_details.json'; 
     ------
    menuActions : MenuAction[]; 

&amp;#x200B;

I tried this in ngInit, but I am missing something. 

&amp;#x200B;

     
    ngOnInit(): void {
 this._menuaction.getMenuActions('0002').subscribe (data =&gt; {
 this.data = data; 
 this.menuActions = this.data.content.userMenu.nbaUserMenuViewArray; 
 
 console.log (menuDetails); 
 // Loop all of the menuactions

 let index;
 for (let action of this.menuActions) {
 
 // Find the right details object 
 index = menuDetails.findIndex(x =&gt; x.actionId === action.actionId);
 console.log ('Found at '+ index);
 this.menuActions[action].longDesc = menuDetails[index].text;   // This line fails, as ""action"" is not the index. 
    }     
        });

Can anyone point me in the right direction?",How do I assign a value to an object in a for loop?
1147,2020-09-08 19:38:14,1,1,Looking for someone to typescript a few jsx files for me because I am lazy. Will pay,$ for converting jsx to tsx
1148,2020-09-08 20:51:01,14,1,Let me know! :),What is the best course to start learning typescript?
1149,2020-09-08 20:51:44,2,1,[removed],What is the best course to start learning typescript?
1150,2020-09-09 13:23:01,1,1,"I have a function `foo` of the following type:

```typescript
foo = (x: SomeType): object | null =&gt; {...}
```

Now somewhere else, I use this function and typecast the returned type like so

```typescript
const ret = foo(x) as OtherType[];
```

When I do this there is no error thrown (which according to me it should since I shouldn't be able to typecast `null` to `Array&lt;OtherType&gt;`)",`null` typecast to `Array&lt;&gt;`
1151,2020-09-09 13:24:54,0,1,"I have a function `foo` of the following type:

```typescript
foo = (x: SomeType): object | null =&gt; {...}
```

Now somewhere else, I use this function and typecast the returned type like so

```typescript
const ret = foo(x) as OtherType[];
```

When I do this there is no error thrown (which according to me it should since I shouldn't be able to typecast `null` to `Array&lt;OtherType&gt;`)",null type-cast to Array&lt;&gt;
1152,2020-09-10 09:24:24,1,1,"Hi,

In python I can write the following code:

	class Schema(dict):
		table = 
		schema = {}

		def __init__(self, **kwargs):
			super().__init__()

			if not isinstance(self.table, str):
				raise TypeError('Table should be a string name')

			if not isinstance(self.schema, dict):
				raise TypeError('Malformed schema.')
			// Write schema validation here

			for key, keyProps in self.schema.items():

				if key in kwargs:
					if isinstance(kwargs[key], keyProps['type']):
						self[key] = kwargs[key]
					else:
						raise TypeError(f""Mismatched type for key '{key}': Expected '{keyProps['type']}' Got '{type(kwargs[key])}'"")
				else:
					if keyProps['required'] or keyProps['default']:
						self[key] = keyProps.get('default') or keyProps['type']()

	class Entity(dict):
		schema = {
			'name': {
				'type': str,
				'required': True,
			},
			'count': {
				'type': int,
				'required': True,
				'default': 10
			},
		}

This allows me to model various entities as per some well defined schema, as well as ensure that the schema is followed by all instances of entities. Additionally, I can add helper functions to reuse functionality for reading/writing to databases/streams/event queues etc

How do I achieve something similar in typescript while leveraging type checking at compile time?

	interface GlobalSchema {
		name: string, 
		table: string, 
		attributes: {[key: string]: {
			type: string | number | boolean,
			required?: boolean,
			default?: string | number | boolean,
		}
	}; 

	const SampleSchema: GlobalSchema = {
		name: ""Sample"",
		table: ""commonTable"",
		attributes: {
			id: {
				type: string,
			},
			fname: {
				type: string,
				required: false,
			}, 
			lname: {
				type: string,
				default: ""someName"",
			}, 
			active: {
				type: boolean,
				default: true
			}
		}
	}

	const sampleEntity: SampleSchema.attributes = {
		id: ""10"", 
		fname: ""amit"", 
		lname: ""prakash"", 
		active: true
	}",Writing a schema parser in typescript
1153,2020-09-12 04:38:33,1,1,,"I created a typescript template repo for people to use during Hacktoberfest. GitHub Actions, ESLint, Husky, Prettier, Nodemon, and Mocha+Chai are ready to roll. Please enjoy!"
1154,2020-09-12 09:29:58,0,1,"I know that the title sounds confusing. I don't know how to explain my problem in one sentence. But this code explains what I mean:

```typescript
// This is the class that I want to extend further on.
class User {
    public name: string

    constructor(name: string) {
        this.name = name
    }
}

type Constructable&lt;T&gt; = {
    new (...args: any[]): T
}

// This is the function that I use to extend the class.
function extendClass&lt;T&gt;(classType: Constructable&lt;T&gt;): Constructable&lt;T&gt; {
    // Normally I would do stuff here to extend the class, but that's irrelevant now.
    return classType
}

// My intention is to let TS know that ExtendedUser
// has the same constructor signature that User has.
const ExtendedUser = extendClass(User)

// This correctly says:
// Argument of type 'number' is not assignable to parameter of type 'string'.
let user1 = new User(123)

// This does not give the proper error, because TS doesn't know that it's using the same constructor.
// How do I make TS understand that it's the same constructor?
let user2 = new ExtendedUser(123)
```

[Playground](https://www.typescriptlang.org/play?#code/PTAEBUAsEsGdTqALpApqAxgGwIa3ijkqAJKgDuOAdsUgPaioAeSqVAJqAGYCuATilR9QdKgDoAUNjzwAqrCGgA3hNBrQABx4AjLNAygqOALaoAXKFhI+0KgHMJq9RlFW+PDPT4AKI6YtutnYAlMpO6uoocGJ+6AC8hiao4aAAvhLpEkgAnhroAMKu1h5IOLqoADzgAHygCSoRVKjkoN5i7Th8drAW1NkA2gC6wRbgGY4gEDDwiILcPFSe0KLIkESkoDwKyAzMrByr6NL4kryLSMtUjCxs7Pm4+FXV3sew4LnmoIVUbiVlWJUaiMvkV3J5-oDag11JMAHJ0PjGHBYLDZDbkOg8LCcdgMKw8LhcUBoPjoejXfacOavAA0oG0PFoayQAHIZnxSQCAG7UYhUOjkSQRUlIfhXV7vPLjCSTACyaNs+wuK1mDABxHAAGVQABrfktQjEACiNw4qHY8iEMrAawIaEsSUwoJKCMs0DsRlFpNW60twltkhcP2NpvY5r9dQpt3uMm8fuCEzAUEQLg5qE8qId2R61tAAEEujxTDQREScnlQCyqEXtEIWQh4PziDJ3UZyjtNJ0kqxhHQyx9K4F7CzJOrNgo+ABGSNNFp+7yTgBMAGYE7nk-BcahG3RiHZoFyyfaNHw6HlhEJT3w6bWMDgtugtaAt7AqCziHqBT7iNBWfAtkEhwOqYTrBmCXiSJMAASX64hsSI6o+2oLGGfBWNQVLMggf5AbAjpBr8ngIgA-BIY4Pnwi4zs0oAmpS4YTguK7BEAA)","How can I express to TS that I'm extending a class, but keeping the same constructor, using generics?"
1155,2020-09-12 10:50:49,5,1,"I'm writing a small number sequences game for my son to play - I've written a library in typescript with a buddy of mine - all it does is generate number sequences;

[https://github.com/mikeyhogarth/number-sequences/tree/v1.2.1](https://github.com/mikeyhogarth/number-sequences/tree/v1.2.1)

I then started creating a UI to use that library;

[https://github.com/mikeyhogarth/number-sequences-game](https://github.com/mikeyhogarth/number-sequences-game) (it's deployed if anyone wants to take a look, but don't expect much at the moment!).

When I first imported the \`number-sequences\` library, the compiler was throwing an error;

    Could not find a declaration file for module 'number-sequences'. '/Users/mikey/Development/number-sequences-game/node_modules/number-sequences/dist/index.js' implicitly has an 'any' type.
      Try `npm install @types/number-sequences` if it exists or add a new declaration (.d.ts) file containing `declare module 'number-sequences';`ts(7016)",Could I get some advice about an error I'm getting?
1156,2020-09-12 20:47:04,15,5,"Hello guys, I am pretty new to this ecosystem and I am getting really overwhelmed with all the informations.I am setting up environment for my little project and I was wondering if I even need babel when I am using typescript? If I understand correctly typescript transpiles my modern code into es3 if I set ""target"" to ES3 in tsconfig, so why would I use babel? Am I missing something?

Edit: my project is using react if that changes anything",Do I need babel when using typescript?
1157,2020-09-13 18:44:52,18,13,"I  created a package for generating typescript classes from annotated php classes.

When I am working on an Angular based frontend with a php backend, I find it time consuming and error prone to manually write typescript classes based on my Doctrine entities, so I decided to automate the process.

I published the package, because I think that someone else may find it useful as well. I would appreciate, if you could give me some feedback!

[https://github.com/K-Adam/php-entity-transpiler](https://github.com/K-Adam/php-entity-transpiler)",EntityTranspiler ( Typescript class generator )
1158,2020-09-13 20:51:50,6,2,"I’ve used typescript for about two years every day at work. I am very comfortable with 99% of typescript, but sometimes I look at package typing (e.g. vue 3) and it is clear that some people are at a completely different level. 

When it comes to generics I feel I can get by, but not write anything too complicates. Is there a good resource (book, course, video, site) to help with this? Any good sites to practice it on?",How did you get really good at typescript?
1159,2020-09-14 00:20:03,0,0,,Simple Template for typescript in Node
1160,2020-09-14 09:03:13,4,1,"**Monday, September 07 - Sunday, September 13**

###Top Posts

| score | comments | title &amp; link |
|--|--|--|
| 304  | [13 comments](https://www.reddit.com/r/javascript/comments/ipcxea/learn_about_common_performance_issues_with/) | [Learn about common performance issues with front-end JavaScript, and how to detect and fix them.](https://www.debugbear.com/blog/front-end-javascript-performance)|
| 288  | [29 comments](https://www.reddit.com/r/javascript/comments/iqwcbj/i_made_a_farming_simulator_with_vanilla/) | [I made a farming simulator with Vanilla JavaScript for a hackathon](https://farming-sim.uzairashraf.dev/)|
| 257  | [104 comments](https://www.reddit.com/r/javascript/comments/iow8w4/theres_a_new_decorator_proposal_and_it_seems_like/) | [There's a new decorator proposal and it seems like it's scheduled to be discussed by TC39 in the September 2020 meeting.](https://github.com/tc39/proposal-decorators/blob/simplified/README.md)|
| 240  | [66 comments](https://www.reddit.com/r/javascript/comments/iq5p06/i_created_a_0_runtime_css_in_js_library_that/) | [I created a 0 runtime CSS in JS library that compiles away. Inspired by facebook's unreleased library](https://github.com/hydrophobefireman/catom)|
| 203  | [24 comments](https://www.reddit.com/r/javascript/comments/irzj9w/most_common_security_vulnerabilities_using/) | [Most Common Security Vulnerabilities Using JavaScript](https://www.securecoding.com/most-common-security-vulnerabilities-using-javascript/)|
| 187  | [14 comments](https://www.reddit.com/r/javascript/comments/iqjwzw/an_article_i_wrote_on_asynchronous_javascript_the/) | [An article I wrote on asynchronous JavaScript: the event loop, callbacks, promises, and async/await](https://www.taniarascia.com/asynchronous-javascript-event-loop-callbacks-promises-async-await/)|
| 176  | [8 comments](https://www.reddit.com/r/javascript/comments/ioax2m/flexbox_spec_for_threejs_and_react_for_aligned/) | [Flexbox spec for Three.js and React, for aligned, responsive WebGL content](https://github.com/react-spring/react-three-flex)|
| 148  | [29 comments](https://www.reddit.com/r/javascript/comments/ipg1cp/rewriting_facebooks_recoil_react_library_from/) | [Rewriting Facebook's ""Recoil"" React library from scratch in 100 lines](https://bennetthardwick.com/blog/recoil-js-clone-from-scratch-in-100-lines/)|
| 122  | [33 comments](https://www.reddit.com/r/javascript/comments/iqa30z/visual_studio_code_august_2020/) | [Visual Studio Code August 2020](https://code.visualstudio.com/updates/v1_49)|
| 122  | [16 comments](https://www.reddit.com/r/javascript/comments/iqpbjx/natively_format_javascript_numbers/) | [Natively Format JavaScript Numbers](https://elijahmanor.com/blog/format-js-numbers)|




&amp;nbsp;

###Most Commented Posts

| score | comments | title &amp; link |
|--|--|--|
| 108  | [60 comments](https://www.reddit.com/r/javascript/comments/ira5gz/askjs_do_you_use_exact_or_range_versions_for_your/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Do you use exact or range versions for your dependencies?|
| 84  | [34 comments](/r/javascript/comments/irly2m/askjs_what_classless_libraryrepos_code_you_like/) | `[AskJS]` &amp;#91;AskJS&amp;#93; What classless library/repo's code you like because of its clean and readable code?|
| 0  | [28 comments](https://www.reddit.com/r/javascript/comments/ior3ca/askjs_to_those_who_swear_against_oo_programming/) | [&amp;#91;AskJS&amp;#93; To those who swear against OO programming, give me an example of dependency injection or a pattern that achieves the same goals](/r/learnjavascript/comments/inah6q/to_those_who_swear_against_oo_programming_give_me/)|
| 45  | [25 comments](https://www.reddit.com/r/javascript/comments/ipwtxr/monadic_error_handling_for_typescript/) | [Monadic error handling for TypeScript](https://www.npmjs.com/package/amonad)|
| 79  | [22 comments](https://www.reddit.com/r/javascript/comments/io52nj/typing_react_context_to_avoid_an_undefined/) | [Typing React Context to avoid an undefined default value](https://medium.com/@rivoltafilippo/typing-react-context-to-avoid-an-undefined-default-value-2c7c5a7d5947)|




&amp;nbsp;

###Top Ask JS

| score | comments | title &amp; link |
|--|--|--|
| 15  | [4 comments](https://www.reddit.com/r/javascript/comments/io4re3/askjs_what_are_good_ways_to_get_commercial/) | `[AskJS]` &amp;#91;AskJS&amp;#93; what are good ways to get commercial experience?|
| 6  | [2 comments](https://www.reddit.com/r/javascript/comments/irv263/askjs_how_would_you_go_about_creating_javascript/) | `[AskJS]` &amp;#91;AskJS&amp;#93; How would you go about creating javascript code into ASCII art?|
| 3  | [8 comments](https://www.reddit.com/r/javascript/comments/iqgz0z/askjs_why_you_prefer_to_program_in_javascript/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Why you prefer to program in Javascript over another programming languge C#, JAVA, C++, PYTHON etc and do you believe the language has evolved on the right path compared the good old days 1995-2010 ?|




&amp;nbsp;

###Top Showoffs

| score  |  comment  |
|--|--|
| 8  |  /u/mburakerman said [🎮 📓 I made a game controller using tensorflow.js webcam transfer learning.  📹 &amp;#91;https://github.com/mburakerman/tensorflowjs-webcam-transfer-learning#--preview&amp;#93;&amp;#40;https://github.com/mburakerma...](/r/javascript/comments/irb676/showoff_saturday_september_12_2020/g4xe7pg/?context=5) |
| 5  |  /u/zaygo said [Zelta : A secure and feature rich messaging service for the terminal  &amp;#91;https://www.zelta.gq&amp;#93;&amp;#40;https://www.zelta.gq&amp;#41;](/r/javascript/comments/irb676/showoff_saturday_september_12_2020/g4xxv26/?context=5) |
| 3  |  /u/thisisreallyjofrank said [ I made a fun game to share with your team/friends - Depict-It! &amp;#91;https://depictit.ably.dev/&amp;#93;&amp;#40;https://depictit.ably.dev/&amp;#41;   It is an online multiplayer game where you draw from a prompt...](/r/javascript/comments/imzsna/showoff_saturday_september_05_2020/g4t92nv/?context=5) |




&amp;nbsp;

###Top Comments

| score  |  comment  |
|--|--|
| 138  |  /u/elgordio said [Given the negativity of other commenters in  this thread I’ll just say I enjoy using VS Code every day and very much appreciate the effort all the contributors make.](/r/javascript/comments/iqa30z/visual_studio_code_august_2020/g4rev55/?context=5) |
| 96  |  /u/license-bot said [Thanks for sharing your open source project, but it looks like you haven't specified a license.  &gt; When you make a creative work &amp;#40;which includes code&amp;#41;, the work is under exclusive copyright by...](/r/javascript/comments/iq5p06/i_created_a_0_runtime_css_in_js_library_that/g4p4ahs/?context=5) |
| 84  |  /u/ILikeChangingMyMind said [Great news ... for the five people who still think complex class stuff is the best way to write good JS code ;-&amp;#41;  Yes, *of course* I'm being hyperbolic: *of course* it's a heck of a lot more than ...](/r/javascript/comments/iow8w4/theres_a_new_decorator_proposal_and_it_seems_like/g4gb8kr/?context=5) |
| 84  |  /u/Spongeroberto said [Exact.   I am sick and tired of packages having a new minor release that breaks something - usually the build still works and you only notice it after deploy, and the devs never notice it because loca...](/r/javascript/comments/ira5gz/askjs_do_you_use_exact_or_range_versions_for_your/g4x3fzu/?context=5) |
| 53  |  /u/MrStLouis said [Everyone in the comments has never used nestjs or angular](/r/javascript/comments/iow8w4/theres_a_new_decorator_proposal_and_it_seems_like/g4ggurz/?context=5) |




&amp;nbsp;",Your /r/javascript recap for the week of September 07 - September 13
1161,2020-09-14 09:48:13,7,1,,Dyne - A small node express framework writtern in typescript
1162,2020-09-17 13:44:05,2,1,"Hey, I've been using Kotlin in the JVM for a few years and I decided to try it on nodejs (I'm also working with node for a few years, so I'm not newbie in the platform).

&amp;#x200B;

I went to IDEA &gt; New Project &gt; Gradle &gt; Kotlin (NodeJS). Added a few dependencies and enable the experimental Dukat:  


build.gradle.kts  
`dependencies {`  
 `implementation(kotlin(""stdlib-js""))`  
 `implementation(npm(""firebase"", ""7.20.0""))`  
 `implementation(npm(""left-pad"", ""1.3.0""))`  
`}`

&amp;#x200B;

gradle.properties

`kotlin.code.style=official`  
`kotlin.js.experimental.generateKotlinExternals=true`  


Both firebase and left-pad (obviously I'm using this for test) does have typescript mappings, so the kotlin mappings should be generated, right?

I refreshed Gradle and went to the src/main trying to import the dependencies, but nothing happened and I don't know why. Looking at build/js/node\_modules the dependencies are there.

&amp;#x200B;

I tried to run the Dukat gradle tasks and nothing happened too.

&amp;#x200B;

This section about external dependencies is very bad documented, I need some help to set it up.

btw I'm on Kotlin 1.4, my full build.gradle looks like this:  
`plugins {`  
 `id(""org.jetbrains.kotlin.js"") version ""1.4.10""`  
`}`  
`group = ""dev.nathanpb""`  
`version = ""1.0.0""`  
`repositories {`  
 `mavenCentral()`  
`}`  
`dependencies {`  
 `implementation(kotlin(""stdlib-js""))`  
 `implementation(npm(""firebase"", ""7.20.0""))`  
 `implementation(npm(""left-pad"", ""1.3.0""))`  
`}`  
`kotlin {`  
 `js {`  
 `nodejs {`  
`}`  
 `binaries.executable()`  
 `}`  
`}`  
Thank you all, hope I will be using this in production soon",How to set up Kotlin for NodeJS with TS dependencies?
1163,2020-09-17 19:18:52,13,1,"I'm a long time Java developer. I've done a fair amount of front-end work as well, mostly copy-past-modify from other existing pages/components, just enough to get stuff working without fully understanding all the crazy js, frameworks, etc.   

But now I'm trying to dive in and understand it all better. Maybe even for a job switch to a primary nodeJS position. I've been following various tutorials and courses like Pluralsight and newline. I'm trying to develop a project that processes tweets, parses them, writes them to a db like Mongo, and then has a GraphQL API to query the db. This is just for learning, I learn best by developing. The newline course looks really good so far, but they introduce TypeScript. I thought Typescript sounded good, coming from my strongly-typed background, but it seems to introduce more problems than it solves, so I'm wondering if I should just remove it and go back to plain js. I would still like to use some kind of objects or classes though. I've seen courses on js classes and modules, so maybe i need to go through more of them.  

[Here's an example, my current blocker, on a StackOverflow post](https://stackoverflow.com/questions/63929850/how-to-use-twits-typescript-definitions-callback-function-not-assignable). I had a basic twitter user timeline request working fine in plain js. But then I tried converting it to Typescript and got stumped.","is it worth adding TypeScript for a small, solo project?"
1164,2020-09-18 16:45:19,21,1,"Is it possible to use functional programming concepts with typescript? Such as object composition and function composition? What I mean is to not use classes. I am trying to convince my team (React.js) to use typescript but they're reluctant because they believe it is not possible to use functional programming with TS.
Help me change their minds, or change mine haha",TS and Functional Programming?
1165,2020-09-18 22:28:07,20,1,"Hi all! I'm currently working on a typescript project and I'm fairly new to the framework. I've been looking around for DI frameworks (inversify, tsyringe etc) but I don't know which one I should chose. I know inversify is by far the most popular but I find tsyringe more elegant. Coming from Java, I'd love to find a typescript framework similar to Spring. Any suggestions? Thank you!",Dependency injection frameworks
1166,2020-09-19 21:12:41,1,1,[playground link of what I have done so far.](https://www.typescriptlang.org/play?#code/GYVwdgxgLglg9mABAQ2vMAeAKogpgDylzABMBnRAMXDQQD4AKYMALkSwEoWcBvAKACQAJ1xQQQpAwB0M5EIDmZDogC8dRPwECA9NrJwAtrkRkxwYIIC+Abj42gA),How can I type a decorator .
1167,2020-09-20 10:11:30,12,1,[playground link of what I have done so far.](https://www.typescriptlang.org/play?#code/GYVwdgxgLglg9mABAQ2vMAeAKogpgDylzABMBnRAMXDQQD4AKYMALkSwEoWcBvAKACQAJ1xQQQpAwB0M5EIDmZDogC8dRPwECA9NrJwAtrkRkxwYIIC+Abj42gA),How can I type a decorator ?
1168,2020-09-20 17:26:31,1,1,,"Game dev Hacakthon fast paced online multiplayer, WebRTC and typescript"
1169,2020-09-21 03:12:55,10,1,"Is it possible to create a lookup table in typescript with functions that accept different type arguments?
I'm have a function that returns  a discriminated union with a type property that determines the type of data it holds, I would like to then use the type property as a key to an object with functions that accept types that the discriminated union was formed from
For example

    type a = {
        type:""obj1"";
        foo:string;
    }
    type b={
        type:""obj2"";
        bar:number;
    }
    type union= a or b;
    const lookupTable={
        obj1:({foo}:a)=&gt;foo.toLowerCase();
        obj2:({bar}:b)=&gt;(bar**2).toString(); // all the functions return the same type
    }
    //That all works, my issue comes when attempting to do something like
    const unionObj:union = {type:""obj1"", foo:""str""}; // my code returns this from a function
    const result = lookupTable[unionObj](unionObj);
    // complicated type errors cause it can't tell that unionObj has been narrowed down to the right type

Can anyone please help with this",Safe Lookup Table in typescript
1170,2020-09-21 15:37:24,0,1," I'm having my whole ts react project in a namespace and now I want to cover this project with tests but I can't figure out how to import props so, I can access desired components that I want to test or import 'render from testing-library/react' in my test. For Example, my component looks like this:  
**MyComponent.tsx**

    module MainModule {
    
        interface Props extends ReactTabComponentProps {
        }
    
        interface State extends ReactComponentState {
        }
    
        export class MyComponent extends ReactTabComponent&lt;Props, State&gt; {
            constructor(props: Props) {
                super(props);
    
                this.state = {
                };
            }
    
            setTitle = () =&gt; {
                this.props.tab.setTitle(
                    &lt;span&gt;
                        &lt;Icon name=""calculator"" fixedWidth /&gt;
                        MainComponent
                    &lt;/span&gt;
                );
            }
    
            render() {
                return (
                    
                );
            }
        }
    }


My test file looks like this:  
**MyComponent.test.tsx**

    module MainModule {
    
     import { MainComponent } from '../Main/components/MainComponent';
     import { render } from '@testing-library/react';
     
        describe(""mainComponentTest"", () =&gt; {
            it(""should renders correctly"", async () =&gt; { 
               
            });
    
    
        });
    }

 With this, I get TS errors, Error: `(TS)Import declarations in a namespace cannot reference a module.`   
 And if I remove module from my test or write imports outside of module then I get the error:   
 

`(TS)Cannot compile modules using option 'outFile' unless the '--module'flag is 'amd' or 'system'.`  
Any help would be highly appreciated!",Jest Testing: How to import react components when the whole react app is in a typescript namespace and using C# ScriptBundle
1171,2020-09-21 20:06:17,1,1,"Currently the Clipboard interface in lib.d.ts only has readText and writeText.  When are we likely to see read and write, given they are pretty widely supported now?

Trying to decide if I should try to hack around this or wait.

Thanks",When are we likely to see updated Clipboard access from typescript?
1172,2020-09-22 06:35:41,0,1,"What do you guys think? Do we need data models that adds getters and setters for data in UI? 

If there are shared pieces of data we can always type it with typescript, other than that do we need entities for every piece of data that is already structured from packed and maybe gtaphql middleware? Won't that just increase the size of code and parse,execution time?",[AskJS] Do we need data models in UI?
1173,2020-09-22 06:40:31,0,1,"What do you guys think? Do we need data models that adds getters and setters for data in UI? 

If there are shared pieces of data we can always type it with typescript, other than that do we need entities for every piece of data that is already structured from packed and maybe gtaphql middleware? Won't that just increase the size of code and parse,execution time?",[AskJS] Do we need data models in UI?
1174,2020-09-24 12:35:31,3,1,"Experimenting with the upcoming TypeScript 4.1's template literal types, I tried to define a generic type that can check property paths.

Until TS 4.1, there was no possible way to type an expression such as 'foo.bar.baz', and you would have to settle for string. Now, with template literal types, I want to be able to type these property paths, and use them for things such as MongoDB queries and projection objects. For example:

`db.someCollection.find({ 'foo.bar.baz': { $exists: true } });`

This is the type that I came up with:

```ts
type PropsPath&lt;T&gt; =
    T extends object
        ? T extends any[]
            ? number
            : {
                [P in keyof T]: P | `${P}.${PropsPath&lt;T[P]&gt;}`
            }[keyof T]
        : '';
```

[Full example in TS Playground] (https://www.typescriptlang.org/play?ts=4.1.0-dev.20200921#code/C4TwDgpgBACgTgezAZxgQ2ACwDwBUB8UAvAFBTlS5QQAewEAdgCbJQIBGAVhAMbBkVBAfkrU6jFlDQMQAbQC6AwcqgiGAVwC27CHCUqKALigBvfQeWyYUAJYMoAawggEAM0rzj1gD5QABgAkJjAAvgB0QfBIqBg4uFby+CF+5gYhsk4u7riKFsYA5PkA3CQkdvRwrmg80ADKCJoQuODQZoKuCAjGbQbsaHDGGtq6JYIh+n0AXsbsnQA2ENIl4yQ8CAzIwFBgXogo6FjY9Y3NkIREUPkdCMWlaxtbYIjcfDbrXv3ANmhz2ABKvAQcCY2Ci+1iRwaTRa+AANFAhjo4PhzqZ9FdOmE+nB8sYAIwkEJFIA)

Sadly, this type is considered ""excessively deep or possibly infinite"" by TS compiler. Is there any way to redefine it in a way that doesn't throw an error?",TS4.1: Is there a way to define this property path type that isn't excessively deep?
1175,2020-09-25 09:58:38,3,1,"The following code doesn't type-check unless the third function declaration is uncommented. I feel like I'm missing something here; shouldn't it be rather simple for the compiler to figure out the return type when the union is provided without me having to explicitly define it?

    type Foo = {type: ""foo""};
    type Bar = {type: ""bar""};

    declare function f(x: Foo): 1;
    declare function f(x: Bar): 2;
    // declare function f(x: Foo | Bar): 1 | 2;

    declare const input: Foo | Bar;
    f(input);

[Relevant TypeScript Playground](https://www.typescriptlang.org/play?#code/C4TwDgpgBAYg9nKBeKBvUkBcUBEAzBHAXwG4AoDaAIQEMAnZNS7HAI3uPLIBMIBjADb1oeAK4A7PsACWccVDwAKAB7Z4cAJTYAjOV6DhCiVNnylqqLTpaoAJnIB6B1H1C6I4zLkKVahFAAfS3obbUC7LldDPjkAZ2AoaXEwUWA-RCCrciUklOANEiA)",Passing a union to an overloaded function
1176,2020-09-25 12:56:37,16,1,"There is this company I am interested in working for. But they insist on using react in combination with typescript. 

I followed some tutorials about the combination of the two but I honestly feel like typescript is bloating the syntaxes more than it should. Some comments could also do the trick in my opinion. That is because react already offers 'a form' of structure to its code. 

This said, I am stil pretty inexperienced when it comes to developing bigger projects. That is why I would like to ask some people woth experience to show me some code examples where typoscript obviously make react code better. And/Or draw me a situation where it would obviously help. 

Thanks in advance!",Can anyone show me why react-typescript is good?
1177,2020-09-25 21:38:53,3,1,"I have some js source which is tool-generated and some accompanying d.ts files that are also tool-generated. I want to publish these in a node module that will be consumed by other typescript packages in my monorepo, and so far I've been unsuccessful in configuring this project correctly. Can someone point me to an example of a project configured in this way?

I don't think I want to run tsc on this project because it tries to generate typings files from the js and those are missing a bunch of stuff the custom generator creates correctly. I'm fine with checking in the output of the generator but don't want to hand-edit the generated files if it can be avoided.",Example of a Javascript library that includes its own custom typing?
1178,2020-09-26 03:24:51,4,1,"Hey everyone! I've been missing this feature for a long time and there was no solution, so yesterday I made an extension for VS Code that generates explicit types. Give it a go if you want :)  
[https://marketplace.visualstudio.com/items?itemName=nick-lvov-dev.typescript-explicit-types](https://marketplace.visualstudio.com/items?itemName=nick-lvov-dev.typescript-explicit-types)",VS Code generate explicit type annotation from inferred type
1179,2020-09-28 09:00:47,2,1,"**Monday, September 21 - Sunday, September 27**

###Top Posts

| score | comments | title &amp; link |
|--|--|--|
| 454  | [62 comments](https://www.reddit.com/r/javascript/comments/iy8ku7/job_interviews_in_2020/) | [Job Interviews in 2020](/r/webdev/comments/ixoac8/job_interviews_in_2020/)|
| 340  | [34 comments](https://www.reddit.com/r/javascript/comments/ixt6wx/introducing_the_new_jsx_transform/) | [Introducing the New JSX Transform](https://reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html)|
| 191  | [13 comments](https://www.reddit.com/r/javascript/comments/j02xf3/elderjs_a_svelte_framework_and_static_site/) | [Elder.js: A Svelte Framework and Static Site Generator - V1 released! 18000 pages in under 8 minutes](https://elderguide.com/tech/elderjs/)|
| 188  | [17 comments](https://www.reddit.com/r/javascript/comments/iznl3e/smolpxl_a_javascript_library_for_writing_little/) | [Smolpxl - a JavaScript library for writing little retro pixelated games](https://gitlab.com/andybalaam/smolpxl)|
| 178  | [4 comments](https://www.reddit.com/r/javascript/comments/j0rps1/5_tils_about_nodejs_fundamentals_from_the_nodejs/) | [5 TILs about Node.js Fundamentals from the Node.js Design Patterns Book](https://dev.to/swyx/5-tils-about-node-js-fundamentals-from-the-node-js-design-patterns-book-4dh2)|
| 175  | [42 comments](/r/javascript/comments/izb5p9/fflate_the_fastest_javascript/) | [fflate - the fastest JavaScript compression/decompression library, 8kB](https://github.com/101arrowz/fflate)|
| 141  | [50 comments](https://www.reddit.com/r/javascript/comments/j0h568/chord_solver_my_first_website_solves_for_music/) | [Chord Solver - My first website, solves for music chords if you give it notes. If you all have tips for making it more mobile friendly, I’d love to hear it! Thank you!](https://chordsolver.com)|
| 139  | [7 comments](https://www.reddit.com/r/javascript/comments/iyymar/material_ui_dashboard_with_react/) | [Material UI Dashboard with React](https://material-ui-dashboard.cube.dev/)|
| 128  | [18 comments](https://www.reddit.com/r/javascript/comments/ixdg7k/a_react_offload_ui_thread_research_to_find_a/) | [A React offload UI thread research to find a pragmatic way to code and utilize Web Worker in different mode&amp;#40;singleton, dedicated, worker pool&amp;#41;](https://github.com/gaplo917/react-offload-ui-thread-research)|
| 112  | [9 comments](https://www.reddit.com/r/javascript/comments/j02j10/scopes_in_any_jetbrains_ide/) | [Scopes in any JetBrains IDE](https://stitcher.io/blog/phpstorm-scopes)|




&amp;nbsp;

###Most Commented Posts

| score | comments | title &amp; link |
|--|--|--|
| 111  | [70 comments](https://www.reddit.com/r/javascript/comments/ix5mz4/v8_release_v86/) | [V8 release v8.6](https://v8.dev/blog/v8-release-86)|
| 85  | [20 comments](https://www.reddit.com/r/javascript/comments/iywtou/whats_structural_typing_and_how_typescript_uses/) | [What’s Structural Typing And How Typescript Uses It To Its Benefit?](https://medium.com/@mahdighajary/whats-structural-typing-and-how-typescript-use-it-to-its-benefit-6cf491f1564?source=friends_link&amp;amp;sk=e0265b7bf135cc7e5d912d9e74d57afb)|
| 2  | [18 comments](https://www.reddit.com/r/javascript/comments/iy2soj/askjs_javascript_or_server_side_language/) | `[AskJS]` &amp;#91;AskJS&amp;#93; JavaScript? Or Server Side Language|
| 92  | [16 comments](/r/javascript/comments/ixmfiw/list_your_dependencies_open_issues_from_the/) | [List your dependencies' open issues from the terminal: `npx shoulders`](https://github.com/mjswensen/shoulders)|
| 0  | [15 comments](https://www.reddit.com/r/javascript/comments/izjowr/how_i_build_basic_web_apps_in_just_a_few_hours_in/) | [How I Build Basic Web Apps in Just a Few Hours in 2020](https://medium.com/@jamesrabels/how-i-build-mvps-in-just-a-few-hours-in-2020-2c3ef17de8b4)|




&amp;nbsp;

###Top Ask JS

| score | comments | title &amp; link |
|--|--|--|
| 1  | [5 comments](https://www.reddit.com/r/javascript/comments/ixib0e/askjs_do_we_need_data_models_in_ui/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Do we need data models in UI?|
| 0  | [11 comments](https://www.reddit.com/r/javascript/comments/iye6ty/askjs_is_this_bad_practice/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Is this bad practice?|
| 0  | [2 comments](https://www.reddit.com/r/javascript/comments/izyw51/askjs_userscripts_for_safari_on_ios/) | `[AskJS]` &amp;#91;AskJS&amp;#93; userscripts for safari on ios|




&amp;nbsp;

###Top Showoffs

| score  |  comment  |
|--|--|
| 2  |  /u/kaliedarik said [I've been developing some lessons on how to use my Javascript library to build scenes and animations with the &lt;canvas&gt; element. &amp;#91;https://scrawl-v8.rikweb.org.uk/learn&amp;#93;&amp;#40;https://scrawl-v8.ri...](/r/javascript/comments/j04nwe/showoff_saturday_september_26_2020/g6ojhj2/?context=5) |
| 1  |  /u/tacobellscannon said [I created a &amp;#91;Turmite Explorer&amp;#93;&amp;#40;https://observablehq.com/@mattdiamond/turmite-explorer&amp;#41; on Observable. I think ""Zippy"" is probably my favorite rule, but they're all pretty fun to watch.](/r/javascript/comments/ivr3xo/showoff_saturday_september_19_2020/g69h6cf/?context=5) |
| 1  |  /u/taskontable said [I've created **declarative style JavaScript PDF generator library**. Works on Node and the browser!!  &amp;#91;https://labelmake.jp/javascript-pdf-generator-library/&amp;#93;&amp;#40;https://labelmake.jp/javascri...](/r/javascript/comments/ivr3xo/showoff_saturday_september_19_2020/g6ao0el/?context=5) |




&amp;nbsp;

###Top Comments

| score  |  comment  |
|--|--|
| 70  |  /u/ILikeChangingMyMind said [&gt;With the new transform, you can use JSX without importing React.  Dan Abramov promised this a few months ago in a GitHub issue thread, but I wasn't sure I could really believe him until I saw this.  ...](/r/javascript/comments/ixt6wx/introducing_the_new_jsx_transform/g68u6zv/?context=5) |
| 60  |  /u/almostFunctionalLead said [I read it as small pox first](/r/javascript/comments/iznl3e/smolpxl_a_javascript_library_for_writing_little/g6kdyl0/?context=5) |
| 59  |  /u/JimmytheNice said [&gt;	use Svelte and Firebase  unfortunately nothing concrete, just a lot of story and no examples](/r/javascript/comments/izjowr/how_i_build_basic_web_apps_in_just_a_few_hours_in/g6jpj7f/?context=5) |
| 55  |  /u/vincentdnl said [Happy to see my drawing posted here!  I've got more on my Twitter if anyone is interrested: &amp;#91;https://twitter.com/vincentdnl&amp;#93;&amp;#40;https://twitter.com/vincentdnl&amp;#41;](/r/javascript/comments/iy8ku7/job_interviews_in_2020/g6biy95/?context=5) |
| 51  |  /u/attic_sardines said [&gt; I have been a fulltime web developer for the last five years, and have survived every era of the web.  Stopped reading after the first line.](/r/javascript/comments/izjowr/how_i_build_basic_web_apps_in_just_a_few_hours_in/g6k290l/?context=5) |




&amp;nbsp;",Your /r/javascript recap for the week of September 21 - September 27
1180,2020-09-29 16:55:59,0,1,[removed],Today i created awesome react/next.js-typescript-postgresSql boilerplate
1181,2020-09-29 20:31:48,2,1,"[Playground](https://www.typescriptlang.org/play?#code/C4TwDgpgBAKgjFAvFA2gcgM7AE4EsB2A5mgDRQDeAtgQPwBcU+ArpQEYTZmUCGAHvYxbtsAXwC6AbgBQoSLABMSVGm7Zs3EKVgxJUmeGgwYSKVDNQAPrDinzVmPKnSpEXmAD22YFABmTfADGwLju+FAAFtwYUAA8MAB8UAAU3Azc+CBkANYMWRAg7j6wAJRpULjR5CgA+lnlYXkFRToMMDVZYiJS5LZm2BDATNgN9VDcUABkE2MoHVAAhIjI-gAmED4EECvSXVIEwBw+3AHQAFLuBDEAysDcwQEwZABK-sGUEAkUvWMBJ2DASWADBe+DeHzIADcGDc7rgHqUoKx3O4ADYQdI7PQBUJYKBPeAMc6XLB4IhkeCJZA9cw-P4A4CQ4pfGk0-qDYbJWQQQpQCFIJZQTA4AjEJlTb4s8xJeaRDCAlBwMRkNDUfBoJkWKzABViAB0qtiyAhurRRGA4TFEwlkuSMqi8sVyp4vHVli1Ov1fCg8SNJogZot0hpXV22PwuPx8kJF3wMX8WXw7gA7vgUEqFJTmeZjnTASQIUzqTaw7iMExWFylNrFUGbWyhmEkgBBNQaXUVFvqEBJAuW62S40QCEcbtMJCJfFtbUABjEepzEH+STLFYMZCYxWKtbMIaxOO8k6URbMQtJxGB8BI3xUrc0F-kV5EQA)

I want to create a simple type validator for some data I get coming in.

This is a sub-example but it already doesn't work. What am I doing wrong?",What am I missing here?
1182,2020-10-01 00:05:24,5,1,"The monthly thread for people to post openings at their companies.

* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.

* Please only post if you personally are part of the hiring company—no recruiting firms or job boards **Please report recruiters or job boards**. 

* Only one post per company. 

* If it isn't a household name, explain what your company does. Sell it.

* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).


Commenters: please don't reply to job posts to complain about something. It's off topic here.

Readers: please only email if you are personally interested in the job. 

Posting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)

[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)",Who's hiring Typescript developers - October
1183,2020-10-01 07:49:14,29,1,"So, I started convincing my team (all JS devs) to make the switch to Typescript, and the CTO of my company told me to make a 30 minutes workshop to teach them about typescript and SHOW how it could benefit our company. 

We have a front end in React and React-Native and a back-end in Node, so to me the advantage is obvious, but I feel that some people still needs a bit of convincing.

So this workshop needs both to be an introduction to TS as well as a showcase of how powerful it can be, any ideas of how I could/should do it? 

P.S.: I don't have any experience making workshops either, so any tips could help, really.",Need ideas for a 30 minutes workshop on Typescript
1184,2020-10-01 10:30:02,0,1,"Holy Smokes!

This took me days to work out, and it needed the nominal types hack to work, but [boy does it work](https://www.typescriptlang.org/play?#code/C4TwDgpgBAKgcgHgMpQgD2BAdgEwM5R7ABOAllgOYB8UAvFCgGRQDeA+gFxQCuuEAZuQg4AvgG4AUBNCQoAJRgB5AEYArCAGNgdVsC4ByAPZrNwfQBooxLgpjgIAWQCGYS4Zsw7kZ2HHT78jBIJOQUOix6UPpEZJT6fjLQCnDcALbKEMThkfpYaRnE8ZKJgQBChoYANhBOWNkGyhXVtUVSJbYBtBJQPVAAPoEq6lrdvQMKwbEUoz3j8PmZM-1lTTVYEpL+sh3eLuEA2gDWHDGhALoeXhB+W9AAklj8mQgwNF29sKgY2PiBk6FQAD8hBClCgHCWMC+mFwBGSCyywLy6Uy4Mh0J+cJg5SqayBUEauNqaI+UPQMN+CiGpnxLCWH32xAAjlByFBDhAQIZ+LB9vpCmcLvSPr0Hk9iC8+QLGUyzlQliIoMw6SLevtDGBWXUOVyeTA+YZ9ILARDVaqxc99UYjeqwHKFSTelgIAA3Rabfi8LSkQx1PCkVJgapXF4Y2EgqZUAAUkRgAEouBEuPAXlRFSxiBBgNxiHUk1BtE4CCnXiIbp6sN7fRGowndMnENFQRR9GnWJns7nCAGgxArlGm1N9HGxCIJBWq3VkbXE7HG8iCq30x2c36e8H7AOF5lh6OpBPgD6-SEtAg5GHKZ57D5o5mmdxSJmcDYE0t8ymjCYtK3LNZ5G5EzLCQVV6FcuxA1UcmMYYzCgItYEbaDTB-YUej-O8HyfcxUKgdxWDHD4-DHccvUPatM0qJw0GEBBFAvLErhvKMNTIrAnEqLhFFfD530Qr8zCoX9AIAqBFDHCCrCzVdWBwqD+P0ODiz4mCULNKxhJwvCWKPdjsMIiRiIPI8oFSUhqJwM96MCRiXEsOjyUxazrxcW8IHvR9hBsNwwFY9jOO43peIQT8VME9T-1wzjxKWMC81kgwkO-RSEOCxKBL0s10LczDhAy1UtJ8nTKjyqAx2IjRfSICMAXoGJa0kCqsCq7csnoacRwkRqqsJZo6lq9c+03fQerWXcpC67QkEMDRSHY0hMB0U4tCjCS2NSCAuFOSgSqcCgNqgFqSv4WoNBALgRtqbCRDjW4GGm2bKnm6B6AtCVEm5O6ZrmzAqE2CbYGIJwcAgPBUmJehTPMlaljW-atooHa9q4Q6DPMCTlAfSpgb-C6sBKgB3CAscyc7VkupYidMMgvqwUmiTxgybpKGBAeB0HwagV6EHevVWZBsGsF+qQAHphagF05pwXD+LwTrKu0PAAEYuCmr7HoW+gWFhgwAAtuAKMxLF2-aABYAAZLGOyszoLYhuGuBr5YLZWAaB-mOa1px1oMSpuA5Cw4KRqAAGYACZLEprRqdm2nbftvx-uAUPkz59m+tYbWomIEAWiNoPQ4ATksDHSGJv8SHtyxCbLrhjsqPAHZFsXyAlx6pbS2X-rwZPPoep7wkzk3w8D-b9BwXgsENS2TptvJKkqBOneAYOU7dtOB690fVCcDRDgD42uFDgBWYvMexgwQBB+IJCAA)!

I've been looking at the [various runtime type &amp; validation libs](https://github.com/moltar/typescript-runtime-type-benchmarks) and I'm generally impressed by what they do, but the dependence on function objects to represent types was driving me crazy, so I set out to create the same effect without them.

It was surprisingly challenging to coax the type inference engine to do what I wanted, and IMHO the results are amazing and I'm super stoked about it.

Unfortunately I simply could not avoid using functions to build structures, but for singular types the proxies are just the name of the type!

If there's any interest I will try to roll it into a library.",Working Static Type Inference Without Functions as Type Proxies
1185,2020-10-05 23:48:56,12,1,"Hi everyone,

I am using the TS Compiler in a project and I need to modify the inference of TS a bit. For example, if I have:

    let a = 2
    a = 'name'

the compiler says that both **a** identifiers are **numbers**. Of course this is expected in TS.

However, is there any way for the compiler to actually say that **a** is **number | string** ? I saw *typescript.d.ts* and it is possible to do some hacks (or maybe do my own separate code analysis), but if there is any TS library or codefix that does that (and other types of inference on top of the inference done by TS) I think it would be better.",Change types using TS Compiler API
1186,2020-10-06 07:41:55,12,1," 

Choosing a stack. One of the most difficult task. I work as a .net c# full stack developer for some months, earlier I worked on react redux. I want to build an app in my free time. Web platform with separated back and front end plus mobile edition. Maybe microservices based or servereless. I think I'll put most of the logic in front end which for a public facing app is also so important and I want front end to have great UX. I was mostly back end.

Why 1st stack: JavaScript for all. React is way more popular than blazor so many libraries documentation etc. Nodejs simplicity with great support on AWS servereless and react native to get mobile app done.

Why 2nd stack. C# is great. I'm gaining experience in .net from my day job. Blazor looks easy for a c# developer. Xamarin looks more popular than react native. Great ecosystem and tools.

Why not 1st stack. JavaScript becomes ugly as the project expands and difficult. I'm better on c# . Dynamic language can become messy.

Why not 2nd stack: Windows sucks. (I prefer macos but if I go c# way I want visual studio no rider etc.) C# half of code is models hell. Blazor is new so no support and community yet. Not so popular for serverless. So weak US for front end.

I have credits on AWS so no azure. No typescript.",[AskJS] Node react vs .net blazor
1187,2020-10-06 13:01:57,7,1,"`heroFactory([10, 10])` works, but I would also like to return many heroes into an array.

`const heros = createMultipleInstantiatedClasses(3, heroFactory);` should not typecheck as it should accept only a function with an argument `factory: (position: Vector2) =&gt; T` but it does, and I get a load of `undefined` positions as a result. What is wrong with my type signature?

If I change to `const heros = createMultipleInstantiatedClasses(3, heroFactory([10, 10]));` then I get `&lt;Hero&gt;` is not a function` error.

Can anyone help? Thanks.

https://www.typescriptlang.org/play?#code/KYDwDg9gTgLgBDAnmYcBqwDGNoCY4C8cA2gHYCuAtgEbBQA0cFNdAugNwBQnmANgIYBnQXAASdCHADenOHEiCAljEURSXOZjWCYUctmgAKBctWkAXOiw4ouAJTTZchAAtFggHQmVawvIhKPupOAL6cYZygkLBwAGbkpNhmcJhQwPwwwACy5LwqYLzAAJKkOvykKhnAACYAwgLCwIIAPAAqAHyGTsy0UADysfVCgk2WPXT0TrH8BlCIlsYBpmqWGLP2hO1wrZx2lq3ErI5yaTDkUKRwAIJQUPyIHrFQEJSGUnCFpADmMC5jVL0BkNGiIQoxprNEHYuBEotB4PFEkE4C4JAAxGY2RCLQJmVbWPB7MQSY5wU7nS6kYAAd2Jzxxy1I0PC3C0pXgqOefk5EAxkMMxAAjAAGRgi1jQuAAeilcD6AGkeNoORIRERUulMjk8ooCsV2eVKpk6g0RoJDABmRg8vlY5lK0oQQoeXgQL6GHmSmV0yTvbx4khwEVi4VwI4hQAQBA7BE7gC63R7VV7ZcQfdJ-LiVnAEtVgLFFFTqnAwRHxFy-UsgpYc3mCzVi-RSySK5mLNnSLn84Xi2Go0A

```typescript
export type Vector2 = [number, number];

class Hero {
  position;
  constructor(position: Vector2) {
    this.position = position;
  }
}

export function createMultipleInstantiatedClasses&lt;T&gt;(
  numberOfClasses: number,
  factory: (position: Vector2) =&gt; T
): T[] {
  return Array.from({ length: numberOfClasses }, factory);
}

export function heroFactory(position: Vector2): Hero {
  return new Hero(position);
}

const hero = heroFactory([10, 10]); // OK
const heros = createMultipleInstantiatedClasses(3, heroFactory);

console.log(hero); // Hero { position: [ 10, 10 ] } 
console.log(heros); // [ Hero { position: undefined }, Hero { position: undefined }, Hero { position: undefined } ] 
```","Why is my higher-order factory function not throwing a type error, and how can I make it work?"
1188,2020-10-08 12:24:25,7,1,"I've never used typescript before but recently a lot of people said me to do it and that is better for grand scale projects but they didnt really told me why. So I'm asking you now, how does typescript help you?",How does typescript help?
1189,2020-10-08 13:19:45,6,1,"I'm looking for any kind of resources that advocate typescript. Could be an interview with some CTO talking about all the benefits they had when switching form JS to TS. Could be a tech talk (""Airbnb could have prevented 38% of bugs""). Could be a blog article.

Thanks!","Convincing typescript resources - talks, blog articles, studies, ..."
1190,2020-10-08 17:10:30,4,1,"I have the following but don't want to type `checkEntity(entity: string)`s parameter with a string. I want it to only accept strings that are keys in `this.entities`.

I don't want to resort to hard coding `type entityKeys = ""hero"" | ""zombie""`, there are a lot of keys in the actual program. I am missing the syntax to get what I need... `keyof typeof this.entities` is not a thing.

```typescript
export class World {
  entities;

  constructor() {
    this.entities = new Map&lt;string, [][]&gt;([
      [""hero"", []],
      [""zombies"", [[], [], []]],
    ]);
  }

  checkEntity(entity: string): void {
    if (this.entities.has(entity)) {
      console.log(this.entities.get(entity));
    }
  }
}
const world = new World();
world.checkEntity(""doesnotexist""); // type error wanted
```",How do I use `keyof typeof` on a Map in a class?
1191,2020-10-09 05:51:39,18,1,"I know how to fix the code but I don't understand the logic behind the new behaviour, I think this is a bug.

I really don't understand why the following code compiles under TS 3.7.5 but under TS 3.9.7 is an error

&amp;#x200B;

    interface Data {
      nullableArray?: number[]
      notNullable: number[];
    }
    
    function dummyFunction(data: Data) {
      data.nullableArray?.flat().map(x =&gt; x * 10); // &lt;-- no longer compile ""object is possibly undefined
      data.notNullable.flat().map(x =&gt; x * 10);
    }
    

The error occurs on `x =&gt; x * 10` but the [Optional Chaining](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html) ensures `flat()` is not called if `nullableArray` is `null` or `undefined`, so why now this code is incorrect?",They changed the compiler and now the code no longer compiles
1192,2020-10-11 00:23:35,1,1,"I have a function that accepts a class object. If I pass a json inside, typescript seems to automatically cast the json object into the object declared in the parameter. Is this reliable? Or should I map it and pass it in?",Self casting from json?
1193,2020-10-11 08:15:44,8,1,"I am totally new to typescript i just wanted to do some side project to learn a bit more of it with vue. But i cant even configure my first app i am having problems with vue imports. I have made shim.d.ts but nothing is fixing the import error on ""import App from './App.vue'"" ....

Is there any straightforward tutorial how to set up my vue app with typescript , or if anyone could give me suggestion how to fix this and avoid these kind of errors in future id be really thankful.",Vue and TypeScript
1194,2020-10-12 04:58:19,0,1,,"express-generator-typescript version 1.7.0 released! Switched from tslint to eslint, uses a new logging tool, and creates .gitignore file."
1195,2020-10-12 15:09:04,4,1,"Time and time again I encounter this problem:
Say I have a generic object T.
In typescript I can easily describe a string key of T:
key: keyof T &amp; string.

What I dont understand how to do is type the value of that lookup using key. For example, how do I express that a key leads to a Date value? As far as I can understand, indexers dont solve this problem as they index the whole object, not a specific key.

I keep trying to create functions that recieve an object and a key of said object, and return the value from that lookup - again while asserting a specific return type, without a general indexer.",Asserting type of value of keyof some object
1196,2020-10-12 15:30:27,0,1," 0

I am trying to implement firebase authentication in react typescript app. I'm also using the method fetchSignInMethodsForEmail but I can't resolve the error.

The code is:

    if(error.code === 'auth/account-exists-with-different-credential') {     
        var existingEmail = error.email;     
        var pendingCred = error.credential;     
        return fire.auth.fetchSignInMethodsForEmail(error.email).then(function(providers) {
            if (providers.indexOf(firebase.auth.EmailAuthProvider.PROVIDER_ID) !== -1) { 
                var password: any = window.prompt('Please provide the password' +     
                                    existingEmail);             
                return fire.auth.signInWithEmailAndPassword(existingEmail, password);                     
        }})         
        .then(function(result) {             
            return result.user.linkWithCredential(pendingCred);     
        })
    } 

The error is:

&gt;Argument of type '(providers: string\[\]) =&gt; Promise | undefined' is not assignable to parameter of type '(value: string\[\]) =&gt; UserCredential | PromiseLike'. Type 'Promise | undefined' is not assignable to type 'UserCredential | PromiseLike'. Type 'undefined' is not assignable to type 'UserCredential | PromiseLike'",Getting typescript error when using fetchSignInMethodsForEmail method from firebase
1197,2020-10-12 16:33:14,1,1,So I have a ts file from which I export a class and an object . The class has JSDoc comments on its methods. There are no JSDoc comments somewhere else in the file . Is there any way to convert the JSDoc comments for the exported class to single markdown file?,JSDoc comments from typescript file to markdown .
1198,2020-10-13 02:55:26,3,1,"how do I fix this error. 

&amp;#x200B;

&amp;#x200B;

https://preview.redd.it/05ewqbf61ss51.png?width=1124&amp;format=png&amp;auto=webp&amp;s=3466972798cc50991e18ca86003bc9f04f4d02f9

[View Poll](https://www.reddit.com/poll/ja57qk)",typescript
1199,2020-10-13 15:05:07,4,1,"Hey there! I am quite new to typescript, but have been programming for some years now. I want to create some simple graphics using the webgl api and I would like to use the gl-matrix library. But I cannot figure out how to use this dependency in typescript. I tried everything I found online, nothing works. Or the compiler complains that it does not understand the functions that come from the library, or the browser complains that it doesn't know about require and exports. I have tried something similar before with other js files (with typings available) and just gave up, as I couldn't get my head wrapped around TS + npm + some dependency builder like webpack.

Is there a way to just use a library like gl-matrix in typescript in a simple way without using anything like webpack or similar tools?",How to import external js files to run in a browser
1200,2020-10-14 07:58:40,3,1,"Hello!

```
const countChildren = &lt;T extends HTMLElement&gt;(el: T) =&gt; {
  return [...el.children].length;
};
```

The idea being, to turn an HTMLCollection to an array. Of course to do this, you need to have these in `tsconfig.json`, `lib: [""dom.iterable"", /*w.e. else*/]` and `downlevelIteration:true`.

When I do this just now in the [typescript playground](https://www.typescriptlang.org/play?#code/MYewdgzgLgBApgGxgXhgExMArgWzmKAOmACc4BDKOAUQTjwIAoByLBZgSgG4AoH0SLABmASxLQU6TLnxFSFKrXqyWCEZ37gJEOALSSM2BnLKUadY6vUceiQuQAOD-GgDCACxEI0jUeKg2do7OYG6e3ow6ejaagjAiVCSSANqEaXbA4WhkYAC6vLEQIHSECCAA5owJcCQcQA) it works, though the transpiled code persist with `[...arr]`.

However, and this is perhaps oddly specific, running `tsdx create some-project` and then enabling `dom.iterable` and `downlevelIteration`, compiles `countChildren` to:

```
var countChildren = function countChildren(el) {
  return [].concat(el.children).length;
};
```

Which is wrong. 

&gt; This yields `[HTMLCollection(2)]` instead of  yields `[child0, child1]`.

It should be something akin to `[].slice.call(el.children)`

Am I missing something here? Some option in `tsconfig` is perhaps playing me foul?",Strange compilation on down level iteration
1201,2020-10-14 22:00:08,4,1,"I need push communication from the server.

I was trying [socket.io](https://socket.io) but couldn't figure out how to turn of cross-site-scripting protection that was triggering for localhost (also [socket.io](https://socket.io) doesn't seem to be great with typescript).",Looking for typescript websocket library to communicate between node.js and vue.js
1202,2020-10-15 17:05:14,4,1,"I want to configure a CRA project to use Airbnb linting rules with prettier. Has anyone used `eslint-config-airbnb-typescript-prettier` plugin? Can it lint JavaScript files as well?  


I would also like to know if this is the best options to go with or  `eslint-config-airbnb-typescript` with prettier would be a better choice?",CRA linting with Airbnb config and Prettier
1203,2020-10-15 20:23:10,0,1,"I'm trying to write a function that's generic over collections that have an _id property, but can't get the mongoDB's FilterQuery to be happy with what I throw at it, and feel pretty lost. Minimal reproduction here

https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAbwMIQDaoKYGMbAgOwF84AzKCEOAchAIHMIATAIyoG4AoD4fGDKEgEMsGOAHdgMABYBJRog5wlcAPrBGALjgBnGFB51Ohbr35CRcLFAyC+jAILwEi5VZt3HWgCK2MAGhclN19GACEATy1dfXw6DmMTPgFhURkAGUFmDFQ4DAAPPnxGbXFJWUY-S2sQxwVlOHxBEAwovQNOeqw0aFaYw3iuLkFtcPwsUgBXMdwCSwmobWg00EkARQn+cIAeABUAPgAKLvRsGfwtFBOcPHxduAAyUuk5PYBKOuVrGHn8SzRMa4EAB0JB4jAA8vgMAcEGpNHAAETDRgkBGEV4DIA",[HELP: mongodb driver types] Writing function generic over a collection
1204,2020-10-15 23:22:33,8,1,"I'm using angular v9 w/ typescript v 3.5.3

I feel like I run into this issue often and I never really understand the typescript rule for these cases. The typescript error I'm getting:

&gt;error TS2345: Argument of type '"""" | ""Learn More"" | ""Be Healthy"" | ""Be Fit""' is not assignable to parameter of type 'Goal'.

&amp;#x200B;

Some example code:

    // this type is used else where throughtout the code
    export type Goal = 'Learn More' | 'Be Healthy' | 'Be Fit';
    
    // some of the component code
    ...
    class SomeComponent {
      goalList: Goal[] = ['Learn More', 'Be Healthy', 'Be Fit'];
      // 
      goalSelection$ = new BehaviorSubject&lt;Goal|''&gt;('');
    
      ...
    
      // error occurs in this method
      goalSelectIsValid() {
        const goal = this.goalSelection$.getValue();
        return this.goalList.includes(goal);
      }
    }
    
    ...
    // template example
    &lt;app-dropdown #goalDropdown&gt;
      &lt;div currentlySelected&gt;
        {{ (goalSelection$ | async) }}
      &lt;/div&gt;
      &lt;div dropdown&gt;
        &lt;div class=""layout vertical options""&gt;
          &lt;button mat-button *ngFor=""let item of goalList"" (click)=""updateGoalSelection(item); goalDropdown.open = false""&gt;
            {{ item }}
          &lt;/button&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/app-dropdown&gt;
    &lt;button type=""submit"" [disabled]=""!goalSelectIsValid()""&gt;",How to use an existing type or empty string?
1205,2020-10-16 04:28:12,2,1,[removed],How to type in typescript - cheat sheet with samples
1206,2020-10-16 04:34:02,4,1,,How to type in typescript - cheat sheet with samples
1207,2020-10-16 05:41:25,2,1,[removed],How to type in typescript - cheat sheet with samples
1208,2020-10-16 05:45:38,2,1,,Type with typescript - cheat sheet with samples
1209,2020-10-16 16:53:25,6,1,"So I've recently been seeing some impressive claims about various pieces of JS tooling written in languages other than JavaScript, so I was keen to give some of them a try.

Today I spent some of my work 10% time experimenting with swapping babel out of the toolchain of a current work project (a small typescript react application that was originally bootstrapped with Create React App) and replacing it with SWC. 

Although test times are at present not that bad, anticipating the project getting bigger, I was particularly interested in seeing whether I could improve the test times (also jest runs are easy to benchmark). 

The result was a little bit disappointing. Using `yarn add jest-benchmark` I found that our tests ran at an average of about 6.75 seconds per run using `babel` (average over 10 runs), compared to 6.5 using `swc`. Now I appreciate that transpilation isn't the only bottleneck in a test run, but given the wild claims I've seen everywhere about these tools (and all the blog posts which talk about it significantly speeding up your test runs), is this really what I'd expect to see or have I misconfigured things somehow? I've already raised an issue on the `swc` Github repository already only to have my issue immediately closed with a spectacularly unhelpful reply ([https://github.com/swc-project/swc/issues/1172](https://github.com/swc-project/swc/issues/1172)).

To configure `swc` with `jest`, I installed `jest-swc` and changed the `jestConfig` transform block to the following:

    ""transform"": {
      ""^.+\\.(js|jsx|ts|tsx)$"": ""&lt;rootDir&gt;/node_modules/babel-jest"",
      ""^.+\\.css$"": ""&lt;rootDir&gt;/config/jest/cssTransform.js"",
      ""^(?!.*\\.(js|jsx|ts|tsx|css|json)$)"": ""&lt;rootDir&gt;/config/jest/fileTransform.js""
    },

I then added the following `.swcrc` to the root of the repository:

    {
      ""jsc"": {
        ""target"": ""es2017"",
        ""parser"": {
          ""syntax"": ""typescript"",
          ""tsx"": true,
          ""decorators"": false,
          ""dynamicImport"": false
        },
        ""transform"": {
          ""react"": {
            ""pragma"": ""React.createElement"",
            ""pragmaFrag"": ""React.Fragment"",
            ""throwIfNamespace"": true,
            ""development"": false,
            ""useBuiltins"": false
          },
          ""hidden"": {
            ""jest"": true
          }
        }
      },
      ""module"": {
        ""type"": ""commonjs"",
        ""strict"": false,
        ""strictMode"": true,
        ""lazy"": false,
        ""noInterop"": false
      }
    }",swc with Jest vs swc with Babel
1210,2020-10-17 14:28:15,111,1,"Let's address it, TypeORM sucks but the community doesn't seem to do anything about it!! So I would like to take the step forward:

1. Querybuilder is very bad, chaotic

2. Relational query is not supported - subquery on relation etc

3. Eager loading is not supported

4. Cannot extend query builder

5. Repository is just sugar coating over bad querybuilder

6. Migration is super ugly and bad, have to write raw alter table queries 50% of the times, don't run migrations in batch

7. Seeders are not supported

8. Documentation asks to enable the db-model syncronization in development, but says to create migrations for production - What the hell?

9. Entity Manager is of no use

10. Polymorphic relations not supported

11. ORM cannot spot basic difference between where() and andWhere()

&amp;#x200B;

Thesre are my two cents! Your feedbacks are most welcome! 

We need better alternative ORM in typescript!",TypeORM Sucks!! Something I wanted to talk about since long!
1211,2020-10-18 02:59:48,8,1,,Type with typescript - cheat sheet with samples
1212,2020-10-18 13:03:52,0,1,[removed],setstate typescript
1213,2020-10-18 15:02:04,16,1,"So I have an API service that returns either data object in case of success, or an object containing error object.

Which means returned object can have two different types, depending on success. Is there a way to make typescript recognise which one it is with an if statement?

    const getStuff = async () =&gt; {
      try {
        return (await axios.get('url')).data as { title: 'title' }
      } catch (e) {
        return { error: e, status: 400 }
      }
    }
    
    const returnedObject = await getStuff()
    
    if (returnedObject.error){
      returnedObject.status // 400
    } else {
      returnedObject.title // 'whatever'
      returnedObject.status // error, status doesn't exists on returnedObject
    }",Type check if return object is response object or error object
1214,2020-10-19 09:02:09,2,1,"**Monday, October 12 - Sunday, October 18**

###Top Posts

| score | comments | title &amp; link |
|--|--|--|
| 423  | [64 comments](https://www.reddit.com/r/javascript/comments/jbkeab/dont_copy_paste_into_a_shell/) | [Don't Copy Paste Into a Shell](https://briantracy.xyz/writing/copy-paste-shell.html)|
| 403  | [46 comments](https://www.reddit.com/r/javascript/comments/j9zyih/a_website_that_helps_you_practice_javascript/) | [A website that helps you practice JavaScript skills through projects.](http://www.codeaway.io)|
| 245  | [43 comments](https://www.reddit.com/r/javascript/comments/jcrqoz/introducing_talker_a_super_small_i18n_provider/) | [Introducing Talker: a super small i18n provider for React that supports Typescript, has 0 dependencies, and is very easy to use](https://www.npmjs.com/package/talkr)|
| 243  | [23 comments](https://www.reddit.com/r/javascript/comments/jc4p5t/detect_how_powerful_the_gpu_of_users_device_is/) | [Detect how powerful the GPU of user’s device is. Especially useful for setting defaults in graphically intensive applications.](https://github.com/TimvanScherpenzeel/detect-gpu)|
| 241  | [62 comments](https://www.reddit.com/r/javascript/comments/jayauf/i_made_a_cli_tool_that_can_convert_typed_text_to/) | [I made a CLI tool that can convert typed text to realistic handwriting!](https://github.com/alias-rahil/handwritten.js.git)|
| 216  | [36 comments](https://www.reddit.com/r/javascript/comments/jdefzv/cookie_store_api_lands_chrome_87/) | [Cookie Store API Lands Chrome 87](https://medium.com/nmc-techblog/introducing-the-async-cookie-store-api-89cbecf401f)|
| 164  | [52 comments](https://www.reddit.com/r/javascript/comments/jan9a0/presenting_v700_of_the_npm_cli_the_github_blog/) | [Presenting v7.0.0 of the npm CLI - The GitHub Blog](https://github.blog/2020-10-13-presenting-v7-0-0-of-the-npm-cli/)|
| 158  | [3 comments](https://www.reddit.com/r/javascript/comments/jcc2rm/react_data_table_with_material_ui/) | [React Data Table with Material UI](https://dev.to/cubejs/react-data-table-with-material-ui-and-a-spark-of-joy-50o1)|
| 89  | [16 comments](https://www.reddit.com/r/javascript/comments/j9qvx0/creating_waveforms_out_of_spotify_tracks/) | [Creating Waveforms Out of Spotify Tracks](https://medium.com/@leemartin/creating-waveforms-out-of-spotify-tracks-b22030dd442b?source=friends_link&amp;amp;sk=1e74a4f9ab25519a40e5d7185f33f139)|
| 88  | [31 comments](https://www.reddit.com/r/javascript/comments/j9oawr/published_my_first_package_to_npm_this_weekend/) | [Published my first package to NPM this weekend. Can anyone offer any feedback?](https://github.com/marknorrapscm/number-rollup)|




&amp;nbsp;

###Most Commented Posts

| score | comments | title &amp; link |
|--|--|--|
| 6  | [40 comments](https://www.reddit.com/r/javascript/comments/jazc3c/askjs_javascript_what_are_nowadays_bad_parts/) | `[AskJS]` &amp;#91;AskJS&amp;#93; JavaScript - what are nowadays bad parts?|
| 1  | [25 comments](https://www.reddit.com/r/javascript/comments/jbd8t7/askjs_any_thoughts_on_this_style_of_coding/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Any thoughts on this style of coding?|
| 27  | [23 comments](https://www.reddit.com/r/javascript/comments/jd3lg2/askjs_can_anyone_recommend_an_async_iteration/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Can Anyone Recommend an Async Iteration Library That Mirrors Javascript?|
| 30  | [19 comments](https://www.reddit.com/r/javascript/comments/jafcx7/react_component_patterns_in_emberjs/) | [React Component Patterns in Ember.js](https://www.effective-ember.com/blog/react-component-patterns/)|
| 5  | [19 comments](https://www.reddit.com/r/javascript/comments/jbd0wu/advantages_of_functional_programming_in/) | [Advantages of functional programming in JavaScript. Do you agree with the article?](https://www.7urtle.com/javascript-functional-programming-advantages)|




&amp;nbsp;

###Top Ask JS

| score | comments | title &amp; link |
|--|--|--|
| 6  | [12 comments](https://www.reddit.com/r/javascript/comments/jbs0jo/askjs_why_arent_goroutines_channels_aka/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Why aren't Goroutines &amp;amp; Channels &amp;#40;aka Communicating-Sequential-Processes&amp;#41; a popular approach to concurrency in JS?|
| 6  | [4 comments](https://www.reddit.com/r/javascript/comments/jdkbfj/askjs_performance_difference_between_using_for/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Performance difference between using for loops and manual indexing for matrix multiplication|
| 2  | [4 comments](https://www.reddit.com/r/javascript/comments/jdmldu/askjs_what_javascript_network_visualisation/) | `[AskJS]` &amp;#91;AskJS&amp;#93; What JavaScript network visualisation library is recommended for PROV graphs?|




&amp;nbsp;

###Top Showoffs

| score  |  comment  |
|--|--|
| 3  |  /u/jvck10 said [Node-ebook-converter is a minimal and yet powerful E-Book conversion library. It features queue-based conversion, thread pool management,  TypeScript, and Promises. No more headaches while converting ...](/r/javascript/comments/jctr6g/showoff_saturday_october_17_2020/g950aqm/?context=5) |
| 1  |  /u/Lamasusb000 said [https://github.com/Lamasusb000/PublicCode  I created a simple public use code repository that work in modules and so people can easily import them!](/r/javascript/comments/j8j4f7/showoff_saturday_october_10_2020/g8kceda/?context=5) |
| 1  |  /u/thisisreallyjofrank said [I made an online Ouija board! - &amp;#91;https://spiritboard.ably.dev/&amp;#93;&amp;#40;https://spiritboard.ably.dev/&amp;#41;  It is built with JS and typescript and uses pub/sub messaging to make it multiplayer. Th...](/r/javascript/comments/jctr6g/showoff_saturday_october_17_2020/g93jhe8/?context=5) |




&amp;nbsp;

###Top Comments

| score  |  comment  |
|--|--|
| 144  |  /u/nufuk said [Well there goes my Senior level experience](/r/javascript/comments/jbkeab/dont_copy_paste_into_a_shell/g8w9xvo/?context=5) |
| 118  |  /u/596F75206E65726421 said [For those who only read the comments:      document.getElementById&amp;#40;'copyme'&amp;#41;.addEventListener&amp;#40;'copy', function&amp;#40;e&amp;#41; {         e.clipboardData.setData&amp;#40;'text/plain',              '...](/r/javascript/comments/jbkeab/dont_copy_paste_into_a_shell/g8w6gnv/?context=5) |
| 78  |  /u/BackgroundChar said [Or for fingerprinting visitors :&amp;#40;](/r/javascript/comments/jc4p5t/detect_how_powerful_the_gpu_of_users_device_is/g8zeilv/?context=5) |
| 52  |  /u/brandon_lanket said [I have seen rampant abuse of the clipboard api. What does everyone think about its default permissions / lack of notification when used?](/r/javascript/comments/jbkeab/dont_copy_paste_into_a_shell/g8vtznr/?context=5) |
| 51  |  /u/AlexAegis said [Windows Terminal conviniently pops up a warning that the thing I want to paste contains a new line](/r/javascript/comments/jbkeab/dont_copy_paste_into_a_shell/g8w4e3l/?context=5) |




&amp;nbsp;",Your /r/javascript recap for the week of October 12 - October 18
1215,2020-10-20 18:08:34,2,1,,"what are types? like the ""type"" part of ""typescript"" (im a python programmer and have been for about a year now and have never heard of them (the image is just to catch peoples attention, sorry!)"
1216,2020-10-20 18:56:31,2,1,,"what are types? like the ""type"" part of ""typescript"" (im a python programmer and have been for about a year now and have never heard of them (the image is just to catch peoples attention, sorry!)"
1217,2020-10-21 02:25:38,3,1,"Is there a tool or convention to view/document the API exposed by a given module?

---

```typescript
/// example/index.ts

export * from ""./core"";
export * from ""./util"";

/// example/core/index.ts

export class Application {
  
  private constructor (...args: unknown[]) { … }
  
  public get id(): string { … }
  
  public async start(): Promise&lt;void&gt; { … }
  
  public static create(process: NodeJS.Process): Application {
    // …
    
    return new Application(…);
  }
  
}

/// example/util/index.ts

export const VERSION = ""0.0.0"" as const;
```

For example, the above would expose a very small public API, consisting of:
- `Application`
- `Application#id`
- `Application#start()`
- `Application.create()`
- `VERSION`

Are TypeScript definition files what I'm looking for?",View the API exposed by a given module
1218,2020-10-22 15:34:10,10,1,"Hi, just getting started with typescript. Should I be using a jsconfig or tsconfig, or does it even matter? I took a look at https://github.com/facebook/react and https://github.com/handlebars-lang/handlebars.js and they don't seem to be using either, despite using typescript. How does that work?",Noob Question: jsconfig or tsconfig?
1219,2020-10-22 16:02:22,2,1,"**Motivation**

To put it bluntly, the official way to check your ballot(s) status in the state of Georgia is not great. It struggles to deal with situations where you have multiple ballots because one has been rejected for whatever reason. A friend was having issues trying to see if his most recent ballot had been accepted, [so I decided to take matters into my own hands](https://georgia-voter-frontend.herokuapp.com/).

All Georgia absentee and early voter information is publicly available (glad to share the URL or you can check within the data_import.py function in the fastapi_voter_project), so I decided to make a simple little API to allow for more easy viewing of your voter information.

**Note:** I am a cheap human being unwilling to pay for the service to keep the container API running all the time on Heroku, so if the results take longer than expected to return it's because that container is resuming from a stopped state.

**Backend**

[Project Link](https://github.com/theBusBoy/fastapi_voter_project) 

Initially, I built out the API capabilities in flask (as it's what I'm most familiar with), but when I began containerizing it I became aware of [FastAPI](https://fastapi.tiangolo.com/) for the first time. Since this was just a casual hobbyist project, I decided that now was a better time than ever to try out a new api framework.

FastAPI will likely become my new standard for API building as I thoroughly enjoy many of the conventions/framework paradigms it follows. For anyone wanting to learn more, the tutorial on the site is phenomenal.

While I usually do all database work in Postgres, I initially just planned for this to be a nice little tool for myself and figured that sqlite would be fine for my use case as I'm really just querying a denormalized output csv from the state. I will say that I don't have much experience with sqlite, and if this weren't just a ""5 day build it and leave it"" project I absolutely would migrate this to Postgres or MariaDB.

**Frontend**
[Project Link](https://github.com/theBusBoy/voter_project_frontend)

I loathe frontend work mostly because I hate javascript and (stubbornly) refuse to learn typescript (and I'm also trash). Maybe one day I'll stop this behavior but for now you get to see another react-bootstrap baby's first react app implementation. 

If someone who enjoys javascript and react wants to refactor HomePage.js and VoterCard.js to not be a blight on society I'm all for it.

**Deployment**
I normally do all of my personal project work in AWS (because it's what I have to do all my professional work in), so I decided to change it up this time and do a fully dockerized deployment on Heroku. I like Heroku as a platform, and I understand their constraint where ports for apps are assigned at runtime, but it was an absolute pain in the ass for someone who isn't as familiar with docker (and especially dockerizing react apps) to inject the environment variable port at runtime. This whole post gets made yesterday instead of today if I was able to find better resources about this, and eventually I just struck gold and adapted OKTA's [article](https://developer.okta.com/blog/2020/06/24/heroku-docker-react) to make it work. I'm a data engineer by trade who usually gets to sit within my comfy databricks or other SaaS DE tools, so I'm pretty proud of myself for navigating the docker world to make this thing happen.",Check My Status (GA currently) Backend FastAPI and Frontend React (both dockerized) project
1220,2020-10-22 19:04:18,8,1,"Hello typescript developers! I am looking for developers new and experienced to aid in a large project. I am unable to give too many details about the project until private conversation is possible. If you are interested please message me on Reddit or contact me through twitter @VancerBTW. I am looking for developers who know TypeScript and have a minimum of some React Native or ExpressJS experience. I am also looking for backend developers, so any backend web developers would be amazing to have on the team! We have a large portion of the Minimal Viable Product done. We also have 3 Designers. Thank you for your time and consideration!",Large scale project
1221,2020-10-23 12:58:53,5,1,"&gt; I know this is a biased source. But it's better than not asking...

&gt; [This question was originally posted][original] on r/dartlang.

[My blog][fanaro.com.br] is currently made with WordPress. But I've been wanting to revamp it with a more minimal design and pure code in the backend for quite a while now. The 2 reasons I've been avoiding this were: (1) my own experience as a developer and (2) the technologies I would use. My level of experience with HTML &amp; CSS is ok, but I have only minimal experience with JS and TS. While, with Dart, I think I'm already pretty advanced &amp;mdash; see [this browser extension][youtube_kbd_nav] I've created in the past month.

So I come here to ask if anyone would help me deciding if I could/should go with Dart for revamping my blog website. Is it on par with TS for this purpose? Or should I still go for TS?

From my perspective, most of the website's work will be either content (HTML and text) or the OO design, so, in the end, it wouldn't be too hard to simply rewrite it into another language anyway, though that would be super annoying &amp;mdash; and who knows if I'm gonna accidentally design something that uses a language-specific feature.

There is also Flutter to take into consideration. Even though I think HTML &amp; CSS are more appropriate for this type of static content, maybe Flutter could be the tipping point of the argument for Dart.

Since a blog website is usually very minimal anyway I could use it as an exercise for evaluating the basic differences between Dart and TS. But I don't know if I have the time or energy for that right now.


[fanaro.com.br]: https://fanaro.com.br
[original]: https://www.reddit.com/r/dartlang/comments/jfckso/blog_website_dart_or_typescript/
[youtube_kbd_nav]: https://github.com/FanaroEngineering/youtube_kbd_nav",Which language for a blog website: Dart or TypeScript?
1222,2020-10-25 18:34:23,9,1,"I have a reducer in react. The action can be one of 8 types, but for simplicity, let's imagine that there's only 2 types

```typescript
type Add = {
  type: 'add';
  id: string;
  value: string;
}

type Remove = {
  type: 'remove';
  id: string;
}

type Action = Add | Remove;
```
Instead of using a switch case, I'm using an object of handlers, where each handler is a function that handles a specific action
```typescript
const handlers = {
  add: (state, action) =&gt; state,
  remove: (state, action) =&gt; state,
  default: (state, action) =&gt; state,
}

const reducer = (state, action) =&gt; {
  const handler = handlers[action.type] || handlers.default;
  return handler(state, action);
}
```
Now I want to type the `handlers` object appropriately. So the handler function should accept an action of type corresponding to its key in the `handlers` object.
```typescript
type Handlers = {
  [key in Action[""type""]]: (state: State, action: Action) =&gt; State
//                                                ↑this here should be the action
//                                                which has type matching to it's key.
//                                                So when the key is 'add', it should
//                                                be of type Add, and so on.
}
```
All I could think of is to explicitly state the key and the matching action type. Is There a way to 'pick' the type from the union, according to the value of the key?

[link to stackoverflow question](https://stackoverflow.com/questions/64527150/in-typescript-how-to-select-a-type-from-a-union-using-a-literal-type-property)","How to select a type from a union, using a literal type property of said type?"
1223,2020-10-26 22:15:42,1,1,,"Webpack 5 react boilerplate with typescript support, hmr, css-modules"
1224,2020-10-29 10:04:36,11,1,"I've got a TypeScript/Node project where I'm getting very high CPU usage while the project is open in vscode or phpstorm... quite often even when I'm not editing any files and the project is just open in a window in the background.  

My fans have been whirring up and down heaps over the last couple of months.  They're cranking right now while I've been typing this up, as they are most of the time lately.

It's just the one project with the problem, my other typescript project don't seem to have it - so it's not due to low end hardware (I've got a i7 7700 CPU, 32GB RAM and all files are on SSDs).

I have a few clues on which files it might be, but there's at least 10 of them, and they all contain a lot of code.  Some of it is big code-generated discriminated unions, which I think is a likely cause... but not sure which one(s).  I'm been programming in this style for longer than the CPU issue has been happening, but maybe I'm going too far with it lately given that typescript uses duck typing.

Are there any methods of finding out which source code files / functions might be causing the high CPU usage to the typescript service running in either vscode/phpstorm?  Or just by running `tsc` or some other tool outside of any editor?

I'm not sure exactly what it might involve... I'm hoping for maybe some kind of benchmarking/reporting thing that could point to specific `.ts` files, and ideally lines of code or type/function names that might be hogging the typescript service.

Last resort is to just start removing code by trial and error, but I have a feeling that approach might take me weeks, so I'm hopeful that maybe there's some better way.",Tracking down specific TypeScript source code files/function that is causing high CPU usage for TypeScript IDE/editor language services
1225,2020-10-31 13:02:15,7,1,"Hello,

in Typescript, some function calls like

    const user = JSON.parse(something}
    
    console.log(user.metadata.name)

Or 

    fetch('/')
      .then(res =&gt; res.json())
      .then(user =&gt; { console.log(user.metadata.name) })

might result in runtime TypeError as they use \`any\` type for native JS and DOM APIs (instead of \`unknown\` as it didn't exist back then I suppose) .

  
(Links to definitions for the examples above: [https://github.com/microsoft/TypeScript/blob/71a2c59c557d871a1d38d10df83cfc36dc10d887/lib/lib.es5.d.ts#L1059](https://github.com/microsoft/TypeScript/blob/71a2c59c557d871a1d38d10df83cfc36dc10d887/lib/lib.es5.d.ts#L1059) and [https://github.com/microsoft/TypeScript/blob/71a2c59c557d871a1d38d10df83cfc36dc10d887/lib/lib.dom.d.ts#L2557](https://github.com/microsoft/TypeScript/blob/71a2c59c557d871a1d38d10df83cfc36dc10d887/lib/lib.dom.d.ts#L2557))

&amp;#x200B;

Is there a community version of these native types which would use \`unknown\` instead of  \`any\` for these kinds of functions?  


Or is there any other way to tackle this problem without requiring me to remember all the cases where typescript has got \`any\` as the built-in type?",Strict version of built-in types (which use `any`)
1226,2020-10-31 23:51:57,41,1,"What is your preference for typescript?

[View Poll](https://www.reddit.com/poll/jlsqxj)","Semicolons, yay or nay?"
1227,2020-11-01 00:06:15,18,1,"The monthly thread for people to post openings at their companies.

* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.

* Please only post if you personally are part of the hiring company—no recruiting firms or job boards **Please report recruiters or job boards**. 

* Only one post per company. 

* If it isn't a household name, explain what your company does. Sell it.

* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).


Commenters: please don't reply to job posts to complain about something. It's off topic here.

Readers: please only email if you are personally interested in the job. 

Posting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)

[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)",Who's hiring Typescript developers - November
1228,2020-11-03 16:33:05,29,1,"I thought adding unnamed call signatures to interfaces was not possible, but it is. For an embarrassingly long time, I believed that writing this would result in errors:

    interface FooInterface {
      (): string;
       ...
     }

Because the parentheses have no name attached. For hours today I've been agonising over how to write a types declaration file for a library, where there is an interface of methods that each return said interface (i.e. for chaining), but at the end of the chain an entirely different object is returned and it is called with new parentheses, like so:

    const foo = a() // return type: FooInterface
      .b() // return type: FooInterface
      .c() // return type: FooInterface
      (); // return type: { ... }

I've been rewriting the types file over and over again, trying to navigate this problem, brushing off the error about `FooInterface` lacking a call signature since I believed that you can't just add an unlabelled call signature to an interface like that. But then along the way I found [this answer on SO](https://stackoverflow.com/a/57426632), where the author writes this:

    interface MyFunc {
      (arg: string): string //a call signature
      funcName: (arg: string) =&gt; string //express of function in object literal
    }

And in seeing the first example of a call signature, the bare-bones unlabelled one, I realised that there was a way to solve that problem, where there is the final set of parentheses which work as the interface's *own* call signature. So I put it into my file and it works, 100%. A nice trick that I don't think many people even consider since it feels like it should be illegal to have an unnamed method like that.

What cool tricks have you found lately, /r/typescript?",What cool tricks / unexpected good outcomes have you found with TypeScript recently?
1229,2020-11-04 14:01:47,0,1,,"i built a library for nodejs called node-xfconf-query so you can edit your XFCE xfconf properties from javascript / typescript, enjoy!"
1230,2020-11-04 18:00:33,0,1,[ts playground example.](https://www.typescriptlang.org/play?noUnusedLocals=true&amp;noUnusedParameters=true#code/GYVwdgxgLglg9mABAJwKYHMYGcquQHgAVFUAPXMAEy0QG9ExUB3ACgDoOBDZdLALkTgA1mDhMwAbQC6ASgHDR4gNyIAvgD4WAfUQDaAKERHEAYQA2nLDQGEANIeMwwuZBFQAHKLsQt33gJJgOJyQqAAqAJ7uqETqMogAvOqIgcGhkdGx+qrxBsaIAPQFWHAAtqiIOCDAwNn6+miYOHgsecZF-ohMIV5hAMqIUHCInBBuniNgEYgQFlYORuaW1jNzNABicMNt+Uac3jjITugLuxAIhyDQcMgs+wKHx7mnu8ZQABbYbPsJI0ovxlUp1U9nyHS6PUG7wq7m4nHKLkGwwARhU4MBBlEKk40m5EOioRVZstTk4XOMvAJfPEknQAUY0FAQMgkO5gdkZEA),"Need help. Using generic, derive the instance type of a provided class."
1231,2020-11-07 19:27:41,3,2,[Here](https://www.typescriptlang.org/play?#code/MYewdgzgLgBAJgS2LAXDASgU1AJzgHggE8BbAIxABsAaaHBMAcwD4YBeGAbwF8BuAKH6JkAbQDKpCpQAUASgC6A-qEiwQUABaYcAESSouIgB4pi5KvJho6DRt3Zc+QA) is what I have tried so far. Why is it wrong?,How to define a dictionary that is indexed with symbols in typescript ?
1232,2020-11-08 22:10:10,9,1,"I'm writing a firefox extension using TypeScript. So far, the only tool in my build chain is `tsc` and ideally I would like it to stay that way.

I basically have three source files:

    src/background.ts
    src/context.ts
    src/shared.ts

`background` and `context` both use a few small methods from `shared`. However, the resulting JS code uses `import` statements (which do not really work in an extension environent). Ideally, I would like the import statement to be replaced by expanding the original code from `shared`, such that the output consists of only `background.js` and `context.js` (each with duplicated copies of the shared code).

I'm pretty new to typescript and have found the documentation unhelpful","Is there any way to make `tsc` ""inline"" imported modules?"
1233,2020-11-09 08:49:26,6,1,"Hi.  
I need to use Contact Picker API in my angular project. but it doesn't work because contacts and ContactsManager is not declared in Navigator in typescript dom library. and the error say ""property contatcs does not exist on Navigator""

here's some working examples in js:  
 [https://whatwebcando.today/contacts.html](https://whatwebcando.today/contacts.html)  
[https://contact-picker.glitch.me](https://contact-picker.glitch.me/) 

here's my test angular app:  [https://codesandbox.io/s/angular-contacts-85x29-85x29](https://codesandbox.io/s/angular-contacts-85x29-85x29)

 I copied one of the examples and it doesn't work. I tried to add interface for contactManager and contact and merge it with Navigator in contacts.d.ts and added it in types in tsconfig, but I think it's not correct. I appreciate if you check my code or give me some hint on what to do to make it work. 

thanks in advance.",How to use Contact Picker API in typescript?
1234,2020-11-09 10:00:45,2,1,"**Monday, November 02 - Sunday, November 08**

###Top Posts

| score | comments | title &amp; link |
|--|--|--|
| 445  | [75 comments](/r/javascript/comments/jou01q/i_built_a_site_to_instantsearch_32_million_songs/) | [I built a site to instant-search 32 Million Songs in milliseconds &amp;#40;using InstantSearch.js, ParcelJS and Typesense&amp;#41;](https://songs-search.typesense.org/)|
| 381  | [48 comments](https://www.reddit.com/r/javascript/comments/jmpmlm/supabasejs_10_the_open_source_firebase/) | [Supabase.js 1.0 - The open source Firebase alternative. Supabase adds realtime and restful APIs to Postgres without a single line of code](https://supabase.io/)|
| 321  | [36 comments](https://www.reddit.com/r/javascript/comments/jne7av/malicious_npm_package_opens_backdoors_on/) | [Malicious npm package opens backdoors on programmers' computers](https://www.zdnet.com/article/malicious-npm-package-opens-backdoors-on-programmers-computers/)|
| 288  | [97 comments](/r/javascript/comments/joeyp0/javascript_new_features_es2021/) | [JavaScript new features &amp;#40;ES2021&amp;#41;.](https://sambat-tech.netlify.app/what-new-in-es12/)|
| 280  | [47 comments](/r/javascript/comments/jpp6d5/a_reminder_that_we_can_make_any_javascript_object/) | [A reminder that we can make any JavaScript object await-able with "".then&amp;#40;&amp;#41;"" method &amp;#40;and why that might be useful&amp;#41;](https://dev.to/noseratio/we-can-make-any-javascript-object-await-able-with-then-method-1apl)|
| 217  | [42 comments](https://www.reddit.com/r/javascript/comments/jnuu4w/i_built_this_app_to_practice_my_react_node/) | [I built this app to practice my React, Node, MongoDB and Redis skills](https://probe.sh/)|
| 206  | [8 comments](https://www.reddit.com/r/javascript/comments/jmi8jk/node_15_released_unhandled_rejections_are_now/) | [Node 15 released: Unhandled rejections are now raised as exceptions by default](https://nodejs.medium.com/node-js-v15-0-0-is-here-deb00750f278)|
| 170  | [28 comments](https://www.reddit.com/r/javascript/comments/jqbbcz/spacetime_a_lightweight_javascript_timezone/) | [Spacetime: a lightweight javascript timezone library](http://spacetime.how/)|
| 138  | [30 comments](https://www.reddit.com/r/javascript/comments/jpdc1z/alephjs_nextjs_for_deno_i_guess/) | [Aleph.js - Next.js for Deno &amp;#40;I guess&amp;#41;?](https://alephjs.org/)|
| 132  | [23 comments](https://www.reddit.com/r/javascript/comments/jnc5qg/ffmpegwasm_a_pure_webassembly_javascript_port_of/) | [ffmpeg.wasm - a pure WebAssembly / Javascript port of FFmpeg](https://ffmpegwasm.github.io/)|




&amp;nbsp;

###Most Commented Posts

| score | comments | title &amp; link |
|--|--|--|
| 95  | [64 comments](/r/javascript/comments/jp9ay7/askjs_why_isnt_there_an_es_proposal_for_negative/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Why Isn't There an ES Proposal For Negative Array Indices &amp;#40;Like Python&amp;#41;?|
| 92  | [29 comments](/r/javascript/comments/jodnkv/i_built_a_modern_web_app_with_react_typescript/) | [I built a modern web app with React, TypeScript &amp; Redux best practices.](https://github.com/itailv/awesome-todo-app)|
| 19  | [28 comments](https://www.reddit.com/r/javascript/comments/jn7e5g/askjs_why_is_nativescript_so_dead/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Why is NativeScript so dead?|
| 5  | [22 comments](/r/javascript/comments/joqw5b/askjs_standard_is_a_bad_idea/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Standard is a bad idea|
| 8  | [17 comments](https://www.reddit.com/r/javascript/comments/jo4di8/askjs_should_i_keep_using_cordova_angular_or/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Should I keep using Cordova &amp;#40;Angular&amp;#41; or switch to Cross Platform Native like React Native?|




&amp;nbsp;

###Top Ask JS

| score | comments | title &amp; link |
|--|--|--|
| 9  | [2 comments](https://www.reddit.com/r/javascript/comments/jq9eat/askjs_what_projectswebsites_that_use_web_worker/) | `[AskJS]` &amp;#91;AskJS&amp;#93; What projects/websites that use Web Worker + SharedArrayBuffer + WASM|
| 2  | [3 comments](https://www.reddit.com/r/javascript/comments/jprpqr/askjs_referencing_the_same_property_name_twice_in/) | `[AskJS]` &amp;#91;AskJS&amp;#93; referencing the same property name twice in destructuring is possible but still is bad|
| 1  | [10 comments](https://www.reddit.com/r/javascript/comments/jnvsz2/askjs_i_want_to_build_typechecked_classbased/) | `[AskJS]` &amp;#91;AskJS&amp;#93; I want to build type-checked class-based components without a build system. Possibly?|




&amp;nbsp;

###Top Showoffs

| score  |  comment  |
|--|--|
| 3  |  /u/tomdohnal said [I created a &amp;#40;React.js&amp;#41; app which shows you the most liked tweets in webdev.   &amp;#91;https://twitterfomo.dev&amp;#93;&amp;#40;https://twitterfomo.dev&amp;#41;](/r/javascript/comments/jppk0c/showoff_saturday_november_07_2020/gbhk6qx/?context=5) |
| 2  |  /u/CaelanIt said [An updated tutorial for tsParticles  &amp;#91;tsParticles - Easily add highly customizable particles animations to your website&amp;#93;&amp;#40;https://dev.to/matteobruni/tsparticles-easily-add-highly-customizab...](/r/javascript/comments/jppk0c/showoff_saturday_november_07_2020/gbg2m1o/?context=5) |
| 1  |  /u/WampM said [There is a known limitation in jQuery: Using the .clone&amp;#40;&amp;#41; method on certain form elements clones the element **without** retaining the dynamic state of their inputs.  &gt;&amp;#40;&amp;#91;.clone&amp;#40;&amp;#4...](/r/javascript/comments/jlh1ld/showoff_saturday_october_31_2020/gayf1rr/?context=5) |




&amp;nbsp;

###Top Comments

| score  |  comment  |
|--|--|
| 183  |  /u/DemeGeek said [TL;DR package using the Twilio name &amp;#40;twilio-npm&amp;#41; gave remote access on Unix systems to the creator. Less than 500 downloads and was caught the same day it was published. If you were one of the...](/r/javascript/comments/jne7av/malicious_npm_package_opens_backdoors_on/gb0wu8w/?context=5) |
| 106  |  /u/verticalellipsis said [Because ""array&amp;#91;-1&amp;#93;"" is already valid syntax in js, it gets the value of the property ""-1"". E.g. ""const a=&amp;#91;&amp;#93;; a&amp;#91;-1&amp;#93;='hi'; console.log&amp;#40;a&amp;#91;-1&amp;#93;&amp;#41;"".](/r/javascript/comments/jp9ay7/askjs_why_isnt_there_an_es_proposal_for_negative/gbd7tht/?context=5) |
| 65  |  /u/nmaxcom said [For some reason, for each country I click the website responds more slowly. At around 15-20 clicks it becomes very sluggish. It feels like a memory leak, and I guess &amp;#91;this screenshot&amp;#93;&amp;#40;http...](/r/javascript/comments/jqbbcz/spacetime_a_lightweight_javascript_timezone/gbmg3g0/?context=5) |
| 59  |  /u/SLonoed said [We will see a huge rise of SO question about it.  Then adding handler with console log will be a standard thing everyone do without even knowing why.](/r/javascript/comments/jmi8jk/node_15_released_unhandled_rejections_are_now/gavnbzs/?context=5) |
| 58  |  /u/jonnySwift_ said [“Hears the word firebase alternative”  Me: Sign me up!!!!](/r/javascript/comments/jmpmlm/supabasejs_10_the_open_source_firebase/gawsvci/?context=5) |




&amp;nbsp;",Your /r/javascript recap for the week of November 02 - November 08
1235,2020-11-09 18:32:25,5,1,"Let's say I have something like this:

```typescript
type BookColor = {
  red: string;
  orange: string;
  blue: string;
  green: string;
}

function newBook(color: BookColor[keyof BookColor]) {

}

newBook('pink'); // Should throw error

newBook('orange'); // SHOULD BE GOOD
```

I am trying to make it so the parameter in `newBook()` can only be the type of `BookColor` (as a `string`) but I don't think what i have is working.

How can I fix this?",[Help] Parameter in function must be a key of a type
1236,2020-11-11 02:07:28,1,1,"I've done async script load calls from typescript files. Some were formerly embedded inline on the script tag on index.html.

And then I came across this script tag which I believe initializes the fetched *some.resource.js.* Below is a simplified format:  


    &lt;script src=""some.resource.js""&gt;&lt;/script&gt;
    &lt;script type='text/javascript'&gt;
        (function() {
            var voIP = VOIP({
                id: '189sfegz4',
                onSubmit: ({ step, attempt, result }) =&gt; { 
                    console.log('submit', { step, attempt, result });
                },
                init: {
                    title: 'hello world',
                    instruction: 'say hello'
                }
            });
         
           voIP.put(""#voip-element"");
         })();
    &lt;/script&gt;

This loads as intended, and accessed as a global window variable. Using a single-page application however,

  
how can the encapsulated function object be converted and initialized from a specific component (if that's possible)?

&amp;#x200B;

using Angular btw.",Convert to Typescript Syntax
1237,2020-11-11 10:32:19,9,1,"Hey all,

Was looking at using io-ts ([https://blog.jiayihu.net/how-to-validate-express-requests-using-io-ts/](https://blog.jiayihu.net/how-to-validate-express-requests-using-io-ts/)) as middleware validation for my expressjs app (using typeORM). I'm new to typescript and was wondering if someone could give me a hand dissecting below. 

What I understand so far:

\- We are exporting a constant variable called `validator` which is called with with type &lt;T&gt; which takes a `Decoder` as a variable. From this point on I am not sure, there a so many `=&gt;` operators that is looses me?

    import { RequestHandler } from 'express';
    import { Decoder } from 'io-ts/lib/Decoder';
    import { pipe } from 'fp-ts/lib/pipeable';
    import { fold } from 'fp-ts/lib/Either';
    
    export const validator: &lt;T&gt;(decoder: Decoder&lt;T&gt;) =&gt; RequestHandler&lt;ParamsDictionary, any, T&gt; = decoder =&gt; (req, res, next) =&gt; {
        return pipe(
            decoder.decode(req.body),
            fold(
                errors =&gt; res.status(400).send({ status: 'error', error: errors }),
                () =&gt; next(),
            ),
        );
    };
    

Much appreciated !",Help breaking down typescript code
1238,2020-11-11 19:45:08,6,1,"Everything works in Javascript, I just converted all the files from .js to .ts.  What are the most basic improvements I can make to the code to already get alot of benefits from Typescript? I have started with adding a type to all my function arguments like `req: Request, res: Response`

I was wondering if there were any other basic tips you could give me! I'm also reading online about it but reddit is always a great spot to learn some stuff aswell :) 

Cheers, thanks!!","I have converted all my js cloud functions to typescript, what are the most basic improvements I can make to my code?"
1239,2020-11-13 03:23:29,11,1,"I have an object called `myCached` and its type is known as 
```ts
interface MyCache {
  a: {
    b: {
      c: Target,
      d: string,
    }
  }
}
```
Where `Target` is just another type for one of its property on a specific level, it is given too. Assume `Target` is like this
```ts
type Target = ('toRemove1' | 'toRemove2' | 'toPreserve1' | 'toPreserve2')[]
```
In the example here, `myCache` is 
```ts
const cache: MyCache = {
  a: {
    b: { 
      c: ['toRemove1', 'toPreserve1', 'toRemove2', 'toPreserve2'], 
      d: ""irrelevant"" 
    },
  }
}
``` 
And I am trying to come up with a function that can traverse this object and filter out items on a specific level. The way I designed this function is that it takes a transformer object and it travers the object and it provides the function for filtering. I want to type it properly so the users of this function can reply on the auto complete provided by the TS compiler and type checking to make sure that this function lands correctly on the correct level, in this case it is the `Target` level.

This is my code

```ts

type MappedTransform&lt;T, R extends { [K in keyof T]: any }&gt; = {
  [K in keyof T]?: MappedTransform&lt;T[K], R[K]&gt; | ((params: T[K]) =&gt; R[K]);
};

function traverse&lt;T, R extends { [K in keyof T]: any } = T&gt;(
  cache: T,
  transformObject: MappedTransform&lt;T, R&gt;
): R {
  const keys = Object.keys(transformObject) as (keyof T)[];
  return keys.reduce((result, key) =&gt; {
    const node = cache[key];
    const transformValue = transformObject[key]
    return {
      ...result,
      [key]: typeof transformValue === ""function""
        ? transformValue(node)
        : traverse(transformValue, node)
    }
  }, {} as R)
}

const result = traverse&lt;MyCache&gt;(cache, {
  a: {
    b: {
      // Need to use Type Target to make sure that the transformer function lands on the type of `Target` exactly
      c: (node) =&gt; node.filter((string) =&gt; !thingsToRemove.includes(string))
    }
  }
});
```

This works fine and I have been really close to what I wanted to achieve except that **I cannot seem to find a way to add the type of `Target` to make sure that the function the user provides to do the filtering actually is on the right level i.e. `node` is of the right type `Target`**

Here is the [live demo][1]. Can someone tell me how to achieve that last bit of type safety I am seeking for here?


  [1]: https://www.typescriptlang.org/play?#code/PTAEBcAsFMGdogdwPYQJ4Ac6gIYCcEBzASwDdoA7QXg3BxHYChxMEAVfQ6cUAXlAAoBycMgBK0ALbJyARn6gAPqEEjxk6ACZZCpQAUC8PNM2KhuuNAPr+ASgDaAXTp1iFcOYBmOAMYIAsmgDCXjCgAN50oLgAXKHhEaAARtFhcXGe0ax47OAANLEpACbRsOB4zoS5KQC+sdXVdCB0nsgUxRCQZbDMyhLk3KA2SqI90DLZxt2qGnYA3I3NrZ5B0NF+gZ7BPMlRMSmJoaB5qdEDQkOqo+Om+oZjgyrkGrcmeuYP-HZjhxGFoABExHgCAAbaCkHAuX4HKoVUC1RwMJigHw4DBYfLMPDg2BuZB4MQAHmYY2EoGgAA9XBR8rB9jYANKgZygADW0DQyDcoGYdmi4LQsIAfH0tvTGRQWWyOVy7AB+FYotEYrE4vGE+kfUDCdVChS8XgYfA4MSwdLqqzcIVaul2KyzSqzOhuACuFE84GIzQgmPIeHghOJpIplGptIZTNZ7M53N5FH5lT6zAFvFii3Wyy5MJKytxYgA8vEAFbQN3y1HQdGYloqglEzUCuhWaIkrZNFqcCM0nj5otugB0Hd4WarOe7xfA5pwNN4EalzFsM1iBHATrw4o7vYI+Sd3j1eidQJyErQ5q4Qq2EVbrQoyHyCB4qZgNgjC5Sl84Q+xOYAajggU67162Z4qObpPmyDgpEuK7iuecS9vBe4HjCKRgWgPLoFgUoftWP5-neXA8L8zquu6zS-F8cQyoBw54rh-68Net5WBRETRFmPrwIOlafrRv7-mMjHQMxVQ1GMITxpOmrMXUb6gIhnA8Ox5h+qsSxJg+0BibEOBJIceywREICgAActA5YQKgTrwFyiIZFkFmgGIOCsqAsArggUA4O+wTYTm5igMRboeuKQLgiGnpQB5iJSgABnZHAxYGXjgECaAUWkfCCSeQqCb2bjEAe5h6sUpQUIQ2WgAAhFAHRdGc5C9s4nh-resC8CVZRWMJcTVBEtS2o4l7ICCvZAsghC8PJtpAA",Having difficulty typing a function that can filter on a specific level inside of an object while preserving its original structure
1240,2020-11-13 05:46:39,0,1,"I’d like to add some sort of discussion / social feature to my application. I’m curious what libraries might exist to aid in this. I’ll leave it somewhat vague... in that I would be happy with a message forum backend, a chat server over HTTP2, or potentially other things. I’m mostly curious what exists. 

I’m running GraphQL via hot chocolate, with a standard Identity Server login on efcore5.

My front end is React (typescript) with material UI and Apollo client.

My ultimate goal is to give my users a place within the app to talk to each other. Currently they congregate on Facebook to help each other, discuss how they use the app, etc. This is great... but many don’t like Facebook (including me), and bringing the discussion in-app would help strengthen this community further.",Searching for: some kind of social / discussion feature package for a dotnet5/efcore / identity server backend
1241,2020-11-13 21:22:26,7,1,"`function AFunction&lt;T, L&gt;(`  
 `arg: L,`  
 `callback: (x: T) =&gt; void,`  
  `{`  
 `mapArg = () =&gt; {`  
 `return {} as T;`  
`}`  
  `}: { mapArg: (x: L) =&gt; T }`  
`) {`  
 `callback(mapArg(arg));`  
`}`  
`AFunction(`  
 `45,`  
 `incorrectlyTypedArg =&gt; {`  
 `type Incorrect = typeof incorrectlyTypedArg;`  
  `},`  
  `{`  
 `mapArg(y) {`  
 `return \`${y}\`;`  
`}`  
  `}`  
`);`  


[Typescript Playground Link](https://www.typescriptlang.org/play?#code/GYVwdgxgLglg9mABAQQGLmvMAeAKgGkQBkA+ACgChFEBDAJwHMAuY-KxCGgGy4CMaIAaxZkAHi1wBKRAF4SiAG5wYAEzbUA3u2oBbGgAdkjWYjLS5iLdWuI6AUygg6SDQF9aAZ0S4A3NsSu7K4sGoh6howi4sTm8rgBFNJWHNx8AoJk4UYMZPQMkpJ+gRRoGLAIlNQALACs6ogwkHB09tBcAJ647fp2Ktmy8snUUN12iACSTS120F09JiM9cMANU61QHXO92X42APR7E2szUFsNXsuI4IJgcADuSIt2QfVDYQbZZO1J-tT2js5EAADAAkGnariBu2sgWogUKFCAA) I'm pretty new to typescript and I can't figure out how to type this function. The first parameter is some argument that can optionally be transformed by the third parameter \`mapArg\` otherwise it just is an empty object. This intermediate value is then passed into callback as it's only parameter.",How to type function arguments when return type is not known ahead of time
1242,2020-11-14 14:55:56,8,1,"&amp;#x200B;

https://preview.redd.it/qkatakpqy7z51.png?width=832&amp;format=png&amp;auto=webp&amp;s=ae59555d1985b09c3405790e4bfd4c0891db1772

the object data only have two fields but typescript report this error is ""data\[k\]"" never?","Why do I got ""Type 'string | number' is not assignable to type 'never'. Type 'string' is not assignable to type 'never'. "" it's make me misleading"
1243,2020-11-14 17:51:39,14,1,"Which one is better? Mapping each individually, checking for undefined on optional properties and parsing it, or just do this:


Const user = JSON.parse(req.body.user) as User


0r am I doing this entirely wrong lol",Parsing JSON to typescript interface?
1244,2020-11-15 09:44:41,64,1,"I'm trying to improve my coding skills. Messiness is one of my main problems (in real life and while coding). These are some articles that helped me shift to writing clean code. I'm looking for more great resources, tips, articles, or books that would help even more. Does anyone know more resources I could add to my list? If so, please mention it in the comments, and I will add it to to the list.


- [Clean code practice (javascript)](https://www.atyantik.com/clean-code-practices-javascript/)
- [Clean code: takeaways from a love story](https://medium.com/@albigiu/clean-code-a-love-storys-takeaways-33f3e00c875e)
- [A Definitive Guide to Understandability](https://www.rookout.com/blog/understandability)
- [Clean Code concepts adapted for TypeScript](https://github.com/labs42io/clean-code-typescript)
- [23 guidelines for writing readable code](https://alemil.com/guidelines-for-writing-readable-code)
- [Goodbye, Clean Code ](https://overreacted.io/goodbye-clean-code/)(opinion article that made me feel alright with my messy code problem",[AskJS] How to write a clean code
1245,2020-11-15 13:35:04,40,0,"I started when dev in 2015. Back then JQuery was popular and I learned it along with PHP and nodeJS ( I was in uni back then and I graduated in 2018)
From 2018 to 2020 I worked with nodejs React MySQL, ... (kinda full-stack)
In terms of React skills, I know the essentials to make a modern React app but as you can imagine there are a lot of details and I think it will take another 6-10 months to master those skills.
Current understanding: React-Router, Redux, basics of typescript, unit testing and basics of integration testing with Jest, React hooks, Context, basics of styled component
Now I have seen React developer roadmap: https://roadmap.sh/react and other resources online and I can see a lot 

new things to learn:

Saga, Redux details like Thunk, ... portals, Deeper understanding of Flux architecture, SSR, Refs, Api calls etc

I think FE development is getting more detailed and I think this can change massively in next 5 years. I am coming from CS background and I have experience of working with C++ and Java. Do you think focusing on learning advance concepts of Java and tools and libraries in there will result in more stable technical knowledge in the long run?

I am 26 at the moment and I find it hard to manage different aspect of life by constantly learning all these new tools every year so I am want to make the learning process on the control.",What do you predict about the future of React in 5 years compared to Java?
1246,2020-11-16 09:52:45,351,31,"I was curious if anyone actually liked Javascript over Typescript, but the threads I found tended to be from 2 years ago and codebases change very quickly, so I'm asking this again to see if there's an update.

I can't imagine writing anything remotely complex without types. Even small, independent projects feel like a hassle (the only place where pure js seems to shine for me), since writing code on my own feels like writing with a team of past and future versions of myself, all of whom still suck.

Anyway, is there still anyone who likes Javascript over Typescript in 2020, if so, why, and otherwise, why hasn't typescript become the norm already?",[AskJS] 2020: Is there still anyone who likes Javascript over Typescript?
1247,2020-11-16 18:06:29,6,15,"This seems possible from the [handbook](https://www.typescriptlang.org/docs/handbook/symbols.html) but I always the following error : 

```ts
error: TS7053 [ERROR]: Element implicitly has an 'any' type because expression of type 'symbol' can't be used to index type 'default'.
```

Basically I'm trying to achieve the following : 

```ts
class Test {
  get [Symbol.for(""test"")]() { return ""test"" }
}
const inst = new Test()
console.log(inst[Symbol.for(""test"")])
```

Thanks for your help !",How do you make getters accessors with symbols in TypeScript ?
1248,2020-11-17 06:08:48,16,8,"In Haskell, there is a function called \`sequence\` which takes something like an array of something of T and returns a something of array of T. I would like to do a similar thing, but I am not sure how to express the types. 

In my case, I have a container called DataState that has states like initial, error, loading, and data. 

I have a case where I have an object: { field1: DataState&lt;X&gt;, field2: DataState&lt;Y&gt;, ... } and what I want is to have is DataState&lt;{ field1: X, field2: Y, ... }&gt; but I am unsure how to specify it.

The key being that I need to be able to remove the DataState from each field while maintaining their key and type and finally adding DataState to the outer object. I already have the logic for how to resolve the issue of how to convert it but how to do the types...

Any help would be appreciated.",Implementation of a 'sequence' like function in typescript?
1249,2020-11-18 01:03:49,17,1,"Compared to developing a frontend application on Vue/React/Angular, Blazor feels slow and buggy. Of course it's a bit difficult to compare as C# is a compiled language, but it's not just that...

A few notes from the last few days messing with it:


1. 
The new CSS isolation is a great first step, but then I realized there's no easy way to use pre-processors (I ended up using a sass watcher on each of the razor files to generate the accompanying css, but then you have to put up with this pollution:  https://i.imgur.com/z12tLG2.png). In the end I think it would still be easier just using a component-level id and plonking it all in standalone files.    
  
2. The improved 'dotnet watch run' still only seems to work some of the time and when it does it takes 2-3 seconds on fresh projects. 'LiveSharp' seems to refresh html/css changes instantly to give a marginally better experience, but even that seems to bug out and not take effect sometimes. 

3. The lack of an elegant state-management system is painful.


The idea of Blazor is so attractive. I desperately want to share models between front and back without using typewriter to convert my C# to typescript (can't stand node backend). If anybody has an effective way to tackle some of the above issues I'd love to hear them!","Blazor has improved, but still has a ways to go to before being an elegant substitute."
1250,2020-11-18 06:40:46,0,1,[removed],I created a Chatbot Builder Framework using typescript
1251,2020-11-19 10:37:15,12,2,"Hello everyone !

I am working on microservices with typescript. I am now doing the pipeline on goCD and I have an error when running my unit test.

I have a class named ""GlobalVars"" that I export like that :

    export class GlobalVars {
        // there is other static property and not only this one
        public static CLIENT : null;
    }

and in another file :

    import { GlobalVars } from '@config'
    
    // i call the GlobalVars to set the value of CLIENT value
    GlobalVars.CLIENT

And I got an error that says that the property CLIENT can't be read of undefined but the GlobalVars class is supposed to be defined. I only got this error on my goCD pipeline, VSC on my computer doesn't have any issues to get the property

am I doing something wrong ?",export class with static is undefinied when imported
1252,2020-11-19 21:07:23,8,1,"The file with the exported objects is many lines of exports along the lines of

    export const foo1 = { prop1: 'val1', prop2: 'val1' }
    export const foo2 = { prop1: 'val2', prop2: 'val2' }
    export const foo3 = { prop1: 'val3', prop2: 'val3' }

So how do I type this? I'd like to write something like `export * as &lt;type&gt;` but that isn't valid unfortunately. I'd rather not go through every single one and label them individually with the same type. I'd like for TypeScript to know that *every* import from this particular module is of a specific type. Any tips, /r/typescript?","Write type declaration file for library with hundreds of exported objects, thankfully all with same structure. How do I label all exported objects as same type in the declaration file?"
1253,2020-11-20 17:06:41,39,1,"I have checked out new release notes and there is a snippet:  
 

    type Getters&lt;T&gt; = {
        [K in keyof T as `get${Capitalize&lt;string &amp; K&gt;}`]: () =&gt; T[K]
    };

The first thought, seeing this, like: ""OMG, what the heck is that?"". And only after that, I try to get into it and to compile it in my mind. 

Features like this look reasonable while reading release notes. It looks cool to be able to define such types. But when I encounter code like this in codebase it is always a challenge to understand it. I think that typescript getting too complex with structures like this.

I understand that this is everything that javascript allows to happen and typescript just tries to decorate all of it with some type definition but it is really gonna be too complex in the future.

Do you like those features?",Does typescript blow your mind sometimes?
1254,2020-11-23 10:00:48,2,1,"**Monday, November 16 - Sunday, November 22**

###Top Posts

| score | comments | title &amp; link |
|--|--|--|
| 518  | [32 comments](https://www.reddit.com/r/javascript/comments/jw0bph/why_spend_10_minutes_on_the_problem_when_you_can/) | [""Why spend 10 minutes on the problem when you can automate it in 10 hours?"" Well, because now everyone can use it to debug their complex RxJS pipes effortlessly. It took more than 10 hours but it's worth it. Hope that it helps someone.](https://dev.to/dabalyan/effortless-rxjs-debugging-5epf)|
| 267  | [48 comments](https://www.reddit.com/r/javascript/comments/jxccv3/announcing_typescript_41/) | [Announcing TypeScript 4.1](https://devblogs.microsoft.com/typescript/announcing-typescript-4-1/)|
| 261  | [40 comments](https://www.reddit.com/r/javascript/comments/jvv1yg/together_with_my_brother_ive_been_working_on_wasp/) | [Together with my brother I've been working on Wasp - a declarative language for building full-stack Javascript web apps with as little boilerplate as possible. It is open-source and integrates with React/Node.js/Prisma. We just released Alpha and are looking for testers and contributors!](https://wasp-lang.dev/)|
| 202  | [6 comments](https://www.reddit.com/r/javascript/comments/jx35aq/from_javascript_to_webassembly_in_three_steps/) | [From JavaScript to WebAssembly in three steps](https://engineering.q42.nl/webassembly/)|
| 184  | [112 comments](https://www.reddit.com/r/javascript/comments/jwphd6/how_i_created_my_own_programming_language_based/) | [How I created my own programming language based on JavaScript](https://dev.to/sergeyshpadyrev/why-i-wrote-my-own-programming-language-based-on-javascript-435g)|
| 156  | [20 comments](https://www.reddit.com/r/javascript/comments/jy9mqk/txtai_aipowered_search_engine_in_javascript/) | [txtai: AI-powered search engine in JavaScript](https://github.com/neuml/txtai.js)|
| 143  | [1 comments](https://www.reddit.com/r/javascript/comments/jyxi8i/console_28_includes_a_project_that_allows_you_to/) | [Console #28 includes a project that allows you to automatically build a self-hosted offline Internet archive from your browsing history that I thought /r/javascript might be interested in](https://console.substack.com/p/console-28?r=3cbez&amp;amp;utm_campaign=post&amp;amp;utm_medium=web&amp;amp;utm_source=copy&amp;amp;javascript_subreddit)|
| 126  | [10 comments](https://www.reddit.com/r/javascript/comments/jy3pxx/super_simple_start_to_firebase_functions/) | [Super simple start to Firebase functions](https://kentcdodds.com/blog/super-simple-start-to-firebase-functions)|
| 125  | [22 comments](https://www.reddit.com/r/javascript/comments/jvsedb/the_most_accurate_way_to_schedule_a_function_in_a/) | [The most accurate way to schedule a function in a web browser](https://medium.com/teads-engineering/the-most-accurate-way-to-schedule-a-function-in-a-web-browser-eadcd164da12)|
| 124  | [12 comments](https://www.reddit.com/r/javascript/comments/jva799/the_bluesman_play_the_blues_with_your_mouse_web/) | [The Bluesman - play the blues with your mouse &amp;#40;Web Audio API&amp;#41;](https://codepen.io/gregh/pen/zNzvOm)|




&amp;nbsp;

###Most Commented Posts

| score | comments | title &amp; link |
|--|--|--|
| 31  | [173 comments](https://www.reddit.com/r/javascript/comments/jv487x/askjs_2020_is_there_still_anyone_who_likes/) | `[AskJS]` &amp;#91;AskJS&amp;#93; 2020: Is there still anyone who likes Javascript over Typescript?|
| 31  | [91 comments](https://www.reddit.com/r/javascript/comments/jx2ggn/askjs_do_you_use_or/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Do you use "" or ‘ ?|
| 17  | [46 comments](https://www.reddit.com/r/javascript/comments/jyjpxi/askjs_whats_the_immediate_and_obvious_benefit_of/) | `[AskJS]` &amp;#91;AskJS&amp;#93; What's the immediate and obvious benefit of using a js framework in a legacy app?|
| 109  | [27 comments](https://www.reddit.com/r/javascript/comments/jv2w3d/unpack_create_web_apps_without_a_bundler/) | [unpack: Create web apps without a bundler](https://github.com/rajasegar/unpack)|
| 17  | [25 comments](https://www.reddit.com/r/javascript/comments/jxl8t9/askjs_object_as_switch_bad_practice/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Object as switch - Bad practice?|




&amp;nbsp;

###Top Ask JS

| score | comments | title &amp; link |
|--|--|--|
| 8  | [21 comments](https://www.reddit.com/r/javascript/comments/jycntp/askjs_ecommerce_with_javascript/) | `[AskJS]` &amp;#91;AskJS&amp;#93; E-Commerce with Javascript|
| 4  | [2 comments](https://www.reddit.com/r/javascript/comments/jxlh9k/askjs_3d_viewer_of_depth_maps/) | `[AskJS]` &amp;#91;AskJS&amp;#93; 3D Viewer of Depth Maps|
| 2  | [8 comments](https://www.reddit.com/r/javascript/comments/jwzg3o/askjs_funny_browser_console_hacks_for_a_10_year/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Funny browser console hacks for a 10 year old?|




&amp;nbsp;

###Top Showoffs

| score  |  comment  |
|--|--|
| 2  |  /u/DavidCetinkaya said [I released RTL support for Embla Carousel, a big milestone for the library. And also managed to slightly reduce the bundle size doing so.  https://davidcetinkaya.github.io/embla-carousel/examples](/r/javascript/comments/jy9hcv/showoff_saturday_november_21_2020/gd75t0e/?context=5) |
| 1  |  /u/call_innn said [ I created EZMM,  an easy ES Module Manager to use modern javascript.   Links:  * &amp;#91;Sources &amp;#40;Github&amp;#41;&amp;#93;&amp;#40;https://github.com/ColinEspinas/ezmm&amp;#41; * &amp;#91;NPM&amp;#93;&amp;#40;https://www.npmjs...](/r/javascript/comments/jy9hcv/showoff_saturday_november_21_2020/gd2kfk2/?context=5) |
| 1  |  /u/Adamkdev said [&amp;#91;https://github.com/AdamKniec/country-select-react&amp;#93;&amp;#40;https://github.com/AdamKniec/country-select-react&amp;#41;  Small app inspired by the Front-End Mentor challange :&amp;#41; Take a look :&amp;#41;](/r/javascript/comments/jy9hcv/showoff_saturday_november_21_2020/gd47g8f/?context=5) |




&amp;nbsp;

###Top Comments

| score  |  comment  |
|--|--|
| 100  |  /u/johnthesecure said [I love having no build step.](/r/javascript/comments/jv487x/askjs_2020_is_there_still_anyone_who_likes/gchefdd/?context=5) |
| 80  |  /u/alexkiro said [From my experience the gains of using a typed languages are nowhere near close to what people make them out to be.  I've doing Python + JS for years now, both almost exclusively without types. And hav...](/r/javascript/comments/jv487x/askjs_2020_is_there_still_anyone_who_likes/gchev2v/?context=5) |
| 65  |  /u/b-mish said [`](/r/javascript/comments/jx2ggn/askjs_do_you_use_or/gctso13/?context=5) |
| 47  |  /u/r0x0r said [ I have worked with Typescript in a couple of large scale projects and I cannot say that I like it. Additional complexity for a limited benefit.  Among other things my gripes with TS are additional bu...](/r/javascript/comments/jv487x/askjs_2020_is_there_still_anyone_who_likes/gchss02/?context=5) |
| 36  |  /u/moh_kohn said [Single quotes were traditional in web dev because double quotes would be used for HTML attributes, so you could avoid escaping the quotes by using singles.  `&lt;button onClick=""alert&amp;#40;'hello'&amp;#41;""&gt;P...](/r/javascript/comments/jx2ggn/askjs_do_you_use_or/gctsw3g/?context=5) |




&amp;nbsp;",Your /r/javascript recap for the week of November 16 - November 22
1255,2020-11-24 11:22:29,5,1,"I started studying coding for 2 months, so sorry if I still don't understand a lot of things.

I created a wen-app in **React.js** and **Node.js**. Unfortunately I discovered that some APIs and SDKs that I will have to use only work with typescripts. 

How can I convert all files to Tsx?

I installed everything  I need via `npm`, renamed the files to `ts`. yet visualcode detects errors everywhere, Also I had read that files could coexist in `js.` and `ts.` for a slower migration and instead i get:  ""*You have both a tsconfig.json and a jsconfig.json. If you are using TypeScript please remove your jsconfig.json file""* but if i remove jsconfing.json how can `js.` files properly work?",How to migrate whole React.js web-app to Typescript
1256,2020-11-24 16:04:46,0,1,[removed],"ESLINT-TYPESCRIPT - ""@typescript-eslint/typedef/variableDeclaration and inferable types clash"
1257,2020-11-24 22:51:15,7,1," Hi All,  

&amp;#x200B;

I am struggling with a problem on my online coding program (executeprogram) to learn typescript.  Any assistance would be awesome.  Thanks in advance :)

&amp;#x200B;

Here are the instructions:

Write a safe function elemAt&lt;T&gt; that acts like a simple arr\[i\], but returns a union type to indicate errors. It should be generic, working with any element type. Some criteria (all of which are also written as tests below):

* If the array is empty, return {kind: 'failure', reason: 'array is empty'}  
.
* If the index is outside of the array's bounds, return {kind: 'failure', reason: 'no element at that index'}  
.
* Otherwise, return {kind: 'success', value: /\* element at index i \*/}  
.

Here are the tests to make it pass.  

\&gt;elemAt(\[0, 0, 0\], 0); Expected: 

    {kind: 'success', value: 0}

but got: 

    type error: type error: Expected 0 arguments, but got 2.

\&gt;elemAt(\[1, 2, 3\], 1); Expected: 

    {kind: 'success', value: 2}

but got: 

    type error: type error: Expected 0 arguments, but got 2.

\&gt;elemAt(\['a', 'b', 'c'\], 2); Expected: 

    {kind: 'success', value: 'c'}

but got: 

    type error: type error: Expected 0 arguments, but got 2.

\&gt;elemAt(\[\], 0); Expected: 

    {kind: 'failure', reason: 'array is empty'}

but got: 

    type error: type error: Expected 0 arguments, but got 2.

\&gt;/\* Arrays that contain \`undefined\`s are perfectly valid arrays, so we  \* need to handle them too! \*/ elemAt(\[undefined\], 0); Expected: 

    {kind: 'success', value: undefined}

but got: 

    type error: type error: Expected 0 arguments, but got 2.

\&gt;elemAt(\[1,2\], 2); Expected: 

    {kind: 'failure', reason: 'no element at that index'}

but got: 

    type error: type error: Expected 0 arguments, but got 2.

\&gt;elemAt(\[1,2,3\], -1); Expected: 

    {kind: 'failure', reason: 'no element at that index'}

but got: 

    type error: type error: Expected 0 arguments, but got 2.

7 tests, 7 failures 

&amp;#x200B;

\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_

I think this is the basic structure for the union type but not sure what to put for the value.

&amp;#x200B;

type ConversionSucceeded = {

 kind: 'success',

 value: ?

}

type ConversionFailed = {

 kind: 'failure',

 reason: string,

}

type ConversionResult = ConversionSucceeded | ConversionFailed",Safe Array Access
1258,2020-11-25 13:07:43,3,1,"Hi all,  


This is an other ""Why is this code not working ?"" post.. . with a kinda generic title, sorry for that ...(I'm not really sure what is my problem here..)  


 I'm having an issue with typescript and I don't know if I'm doing something wrong or if it's a Typescript limitation.  
I would like to create a function that have type information at runtime and compile time. This function is named \`notWorking\`. To do that I pass a \`strType\` as first argument that is gonna represent the type as a string. Then, using a Helper Type \`StringToType\` I try to get the real TS type.  
(""string"" =&gt; string, ""number""=&gt; number)  


We can see that it's working fine when using it in the \`working\` function. ( \`StringToType&lt;'string'&gt;\` gives us \`string\`).

But it's not working when using it with another generic type. In the \`notWorking\` function I whould expect the \`StringToType&lt;U&gt;\` inside the \`if(strType === 'string')\` to be \`string\`. ( since we know that strType === 'string', and strType is of type \`U\`, so \`U\` is \`'string'\`, so \`StringToType&lt;U&gt;\` should be \`string\` ...)   


Also: 

 \- I'm using string and number to simplify the example, but it could be more complex custom type ( so typeof isn't an option)

\- I want to avoid any cast or typeguard if possible ...

Any idea ?

[\( I post the code as an image cause I think it's easier to read and understand the problem \)](https://preview.redd.it/w1ezsgfjud161.png?width=1256&amp;format=png&amp;auto=webp&amp;s=7f8637924be3562da7823e85e40f8f34112c7664)

  
Here is the \*SAME\* code if you want to copy paste and try it:   


    type StringToType&lt;StrType extends 'string'|'number'&gt; =
      StrType extends 'string'
        ? string
        : number;
    
    function working(obj: StringToType&lt;'string'&gt;) {
      console.log(obj.toUpperCase());
    }
    
    function notWorking&lt;U extends 'string'|'number'&gt;(strType: U, obj: StringToType&lt;U&gt;) {
      if (strType === 'string') {
        let u: U; // (type hint debugging purpose) I would expect U to be string
        obj.toUpperCase();
      }
    }

Thank you for your help !",Generic and type inference issue
1259,2020-11-25 22:41:50,4,1,"I'm trying to create a function that decorates another using optional parameters and implicit returns. I've gone through a number of iterations with this particular concept and none work as expected and always result in a union of possible results even after supplied arguments. Additionally, in some cases, noted in the code by missing TS errors, lack of a callback seems to confused TS at times.

[TS Playground of issue](https://www.typescriptlang.org/play?#code/GYVwdgxgLglg9mABAZxgWwA4BsCmAeAKEUQEEAnAc2URwA8ocwATagbQF1EAfRcAazBwA7mA4AaIogBKOKCDJI6DZtX6CRBAHwAKSWACGaHAC4UUMjDAUJxCPqxYARvoh9T2gHRf9lZKfJUAJSIALya0rLySDwAbnAwTKGI2sFhiADeAL4EwemSZJEKyV4ePlSmAAo+hrI4ZMh4UACeGDhwwIh2Ds6umqnhecS2CMhQiBj6TVhw+okhnfZOLnye3r6BANySxAD0O4gIWE2IcQncvMw4wJY4iQXIGCM41MBkcGgL3csoABZwIFhEnQIFgQEwcONJtNZttEDAOtoJlMZnMQvNwODrmBbrlYcQCnIioMhiSDEYbCTEJktiTsiSCVEMnjEGScBSSUjoUxYdTJLzsgQ9jRaK1oO5+sl0iyaqZRhYrFTAgQICMxgxRklUJhcNoAOTqqC6pUGvVGxBCupvMjC0UMbmC-Z0W3i0LhbRS1my8yWCiK5WqxAGgBMmvQ2BweoNurEyQlWWNzygQdNwQtZCtNpw0FuBAdmbFsddkulRi98uskORszLPr9KrAGoNAGZQ9qI-rE9HC2ldT8YEaCM2U+bHem4NanVm7bmLSKpy60u6SyYzOWY5yUaZe-26wGDQAWVvhyOdmMpIvb3WIfTUeujBOjffDtMZyfZ+2z53dt0emWrn3rlCm6IJeu4NmqiYAKxHjqHajF22iWBgIBQDWVgSkhKEPlAkGmjGupmi+475tOQA)

Any help (or kicks in the butt) appreciated. I've gone through a number of other iterations on this and no matter what I either end up losing all context at the calling location (payload is always unknown even if excluded correctly), end up with payload never included, or end up with the above issues.

*^(As an FYI, I'm purposefully avoiding function overload interface definitions for a number of reasons (namely like JSDocs they can become disconnected from implementation in some circumstances and personal challenge)**)*",Help with inference of function interface
1260,2020-11-26 00:06:03,9,1,"I containerized a CRA typescript app for development and everything was going silky smooth until i decided to give reduxtoolkit a try, now the app won’t compile because it can’t find the ‘@reduxjs/toolkit’ module. 

I’ve already installed all the available types, I’ve removed the node_modules folder and it just won’t budge. It’s odd because it’s only happening while the app is running in the container, it works just fine in the host OS (windows).

Hopefully someone has some insights on this matter, i would really appreciate it.",Weird error while running on Docker container
1261,2020-11-26 00:38:36,2,1,"Not sure if this is allowed, but I have a typescript image extraction program that the original developer hasn't touched in about 2 years that now is running into a couple issues.  Would someone here be interested in a paying side gig to fix the issue for me?   


 I did open an issue on the github, but then after that i saw that there was a different issue opened over a year ago with no response, so i don't think i'm going to have any luck either  


Here is the github repo: [https://github.com/kiootic/pad-resources](https://github.com/kiootic/pad-resources)  
Here is the issue: [https://github.com/kiootic/pad-resources/issues/2](https://github.com/kiootic/pad-resources/issues/2)  


If anyone is able to help me and game community would be very grateful!",looking for developer assistance
1262,2020-11-26 07:08:24,0,1,"I just started learning Typescript for my next job and wrote a this brief post about how to set it up on Neovim.

Any feedback is welcome

[https://www.theminimalistdeveloper.com/setting-up-neovim-for-typescript-development/](https://www.theminimalistdeveloper.com/setting-up-neovim-for-typescript-development/)",Setting up Neovim dev env
1263,2020-11-26 11:18:37,13,1,"package.json missing ""type"":""module"":  


    {
      ""name"": ""Mr.Taskman"",
      ""version"": ""1.0.0"",
      ""description"": """",
      ""main"": ""index.js"",
      ""scripts"": {
        ""start:dev"": ""nodemon"",
        ""start"": ""npm run build &amp;&amp; node ./build/index.js"",
        ""build"": ""rimraf ./build &amp;&amp; npx tsc"",
        ""lint"": ""eslint . --ext .ts"",
        ""lint:fix"": ""eslint . --ext .ts --fix""
      },
      ""keywords"": [],
      ""author"": """",
      ""license"": ""ISC"",
      ""dependencies"": {
        ""chalk"": ""^4.1.0"",
        ""discord.js"": ""^12.5.0"",
        ""dotenv"": ""^8.2.0""
      },
      ""devDependencies"": {
        ""@types/node"": ""^14.14.9"",
        ""@typescript-eslint/eslint-plugin"": ""^4.8.2"",
        ""@typescript-eslint/parser"": ""^4.8.2"",
        ""eslint"": ""^7.14.0"",
        ""eslint-plugin-no-loops"": ""^0.3.0"",
        ""nodemon"": ""^2.0.6"",
        ""rimraf"": ""^3.0.2"",
        ""ts-node"": ""^9.0.0"",
        ""typescript"": ""^4.1.2""
      }
    }

.tsconfig using commonjs

    {
      ""compilerOptions"": {
        ""target"": ""es6"",                          
        ""module"": ""commonjs"",                     
        ""lib"": [""es6""],
        ""strictNullChecks"": false,
        ""allowJs"": true,                       
        ""checkJs"": true,                       
        ""outDir"": ""build"",                        
        ""rootDir"": ""src"",                         
        ""removeComments"": true, 
        ""strict"": true,                           
        ""esModuleInterop"": true,                  
        ""resolveJsonModule"": true,                
        ""skipLibCheck"": true,                     
        ""forceConsistentCasingInFileNames"": true  
      }
    }","Error ""Cannot use import statement outside a module"" on transpile."
1264,2020-11-26 16:06:35,2,1,"hi! we recently released a very cool function to help improve global coordination regarding the time zones.

We converted it to typescript but there is one open issue https://github.com/dmtsys/weblocaltime/issues/1 here and since I'm a TS beginner myself, it would be great to hear thoughts from more experienced developers. Please comment on the issue if you have constructive feedback for this, Thank you! 🙌",conversion of weblocaltime (new JS lib) into TypeScript
1265,2020-11-27 09:33:29,4,1,"    function test({ param1 = true, param2 = true } = {}) {
      // ...
    }

Now how do you do that in typescript :D  
I currently have something to the degree of  


    function test(param: Record&lt;string, unknown&gt; = { param1: true, param2: true }): any {
        // ...
    }

I know it's not quite the way to go but I cant figure it out.",Object Destructuring within a function declaration
1266,2020-11-27 10:12:30,3,1,"**FAQ:**

`Is this for you?` Most likely not.  
`Are you capable of working on this?` Most likely. If I can pull this off, you can most definitely.  
`Is it hard?` Ehh, not necessarily.  
`Do I need to work on this much?` No.  
`Do I get payed?` No.  
`Why do this then?` You're asking the wrong person.  
`What do I need to know?` Nothing.  
`What knowledge would be good to have?` A little typescript experience. Some js experience. A functioning brain. Curiousity. A discord account would be good too.  


**Disclaimer:** 

Hope I have filterout out the folks, that say they want to do something but don't do it. Nothing wrong with that, I once was that kind of guy too. No worries. 

&amp;#x200B;

**Idea:**

Currently working on a discord bot. The goal is to create a bot, that will replace the need for a project manager like trello or the like. *If Possible.*

With that comes it's own discord server, that will yield documentation and the like. Not a priority for now.

What is the bot supposed to do:

Task wise:

\- create tasks  
\- complete tasks  
\- change tasks  
\- archive tasks  
\- edit description / title of tasks  
\- add / remove participants of a given task  
\- select task  
\- validate ownership permissions of a task

discord server wise:

\- select channel in which tasks are to be posted (like a board in trello)  
\- set bot specific roles to serverwide roles (not to worry)  


If you would like to work on this:  
Come on over in this discord: [https://discord.gg/qhHjuqgJ6Y](https://discord.gg/qhHjuqgJ6Y)  
Github repo is over at: [https://github.com/rbrtbrnschn/mr-taskman/](https://github.com/rbrtbrnschn/mr-taskman/)",Anyone interested on typescript project?
1267,2020-11-28 16:10:45,9,1,"&lt;rant&gt;

I am so sick of file path issues when building typescript. When I try to build the same exact files with tsc, webpack, jest, or yarn, I get 4 different results.  
Why do we recognize that globals are bad and functional is good in our languages, but completely forget about that when it comes to building?

&lt;/rant&gt;",Can we just make files functions and imports parameters?
1268,2020-11-29 11:00:45,8,1,"I'm developing a RestAPI using **ExpressJS**, **`express-async-handler`** and **TypeScirpt**. 

```typescript
// types.d.ts
import { NextFunction, Request, Response } from 'express';

export type handlerArgs = {
  err?: Error;
  req?: Request;
  res?: Response;
  next?: NextFunction;
};

// toDoControllers.ts
// Here req is identified as undefined and hence can't identity property body
export const createToDo = asyncHandler(async ({ req, res }: handlerArgs) =&gt; {
  const { text } = req.body;
  const createdToDo = await ToDo.create({ text }).save();
  return res.status(201).json({ createdToDo });
});

```
Similarly, for any requests having **params** or **body** property usage in the controllers are raising that error. I checked Express Router too, but I attached the correct controllers to all routes. Where am I going wrong.

**P.S**: If I use the `Request`, `Response` types in the controllers itself instead of a seperate **types.d.ts** file, I'm not getting an error",TypeError: Cannot read property 'body'/'params' of undefined in ExpressJS TypeScript
1269,2020-11-29 16:18:07,15,1,"I am building a React app, in typescript, which makes calls to a graphql api. I find myself torn between a wish to type the graphql response thoroughly and correctly (in which case every field of the response is optional, because, of course, the client may or may not request this field), and a wish to have types that are convenient to work with (i.e. types for which I can be certain about the presence of particular fields and won't need to check this constantly).

The only strategy I could think of so far is to define the types twice: one for the graphql response, with all fields listed as optional, and the other at the point of where a component sends a query to the api, and it becomes clear which fields are actually going to be present. It looks like I will need something like this:

```
type SomeGraphqlType = {
  foo?: string,
  bar?: {
    baz?: string,
    quoxx?: number
  }
};

type EntityInResponse = Required&lt;Pick&lt;SomeGraphqlType, 'foo'&gt;&gt;
```

or even monstrosities like this:

```
type BarWithOnlyBaz = Required&lt;Pick&lt;SomeGraphqlType['bar'], 'baz'&gt;&gt;
type AnotherEntityInResponse = Required&lt;Pick&lt;SomeGraphqlType, 'foo'&gt;&gt; &amp; { bar: BarWithOnlyBaz };
```

If you have ever worked with frontends talking to graphql backends, how did you bridge this gap between the optionality of fields in a graphql response and the practicalities of using this response type downstream?","To those who use typescript on the frontend with graphql on the backend, how do you declare your types?"
1270,2020-11-30 07:52:28,16,1,"... so, i was trying to build everything on the absolute cutting edge.  I don't think the cutting edge is entirely workable, though:

Using target esnext, module esnext, attempting to import another file from within my index.ts such as

    import Something from './something';

generates code that has exactly that as it's import statement.  This does not work, because Javascript requires the file extension to be included in the import file.

Anyone know if there's some switch or other way to deal with this, or do i have to turn down my target level or module setting?","can't import other files in library when using node 15, typescript 4, target esnext?"
1271,2020-11-30 15:31:47,0,1,"Hey everyone. I’m doing Advent of Code in TS this year and I spent a little bit of time setting up a project in which to do the problems. It has Jest in watch mode so you can code against unit tests for super fast feedback, there are some helper functions and scripts to generate project files for you.

It can't get your project input or submit solutions for you (yet!) but it might save some of you setting up your own environments.

Hope it helps! [https://github.com/bpiggin/advent-of-code-typescript-starter](https://github.com/bpiggin/advent-of-code-typescript-starter)",Advent of Code Typescript Starter
1272,2020-11-30 15:48:29,8,1,"Hey guys,

So I have an interface, which is generic on T, and holds a key and value pair of T. I have a method which takes a T and returns an array of these interfaces. However, Typescript is complaining that the type of key isn't correct, although in this contrived example it should be exactly what it expects.

Would appreciate any help.

[Demo here.](https://www.typescriptlang.org/play?#code/JYOwLgpgTgZghgYwgAgCIQM5igVwWHKCAHgBUA+ZAbwFgAoZR5AawgE8AuF9gexmVIBuek2QA3OABscELqQDarNnwEBdYXQC+9ejBwh8wHiGQAhSXAAWZcgAoMPALYQwl0AHM5ASi7osufEISCnlVahEmBGMsZAATTGw8AiJYgGUnFzcQTzQEgOTg8lDkAF5kUI0IxhgeKGRbKJAYxXYAGnEpGTCVAHkAIwArCHwAOghwKGBMewzXDy8vcIZRJnj-JKC02az3EYAHHAxLW1pllZWlVqrzpglpCGvRTS8NJ50z5CJkkzXEwJT0s45tkNJogA)",Totally lost as to why this doesn't work
1273,2020-12-01 00:05:26,7,1,"The monthly thread for people to post openings at their companies.

* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.

* Please only post if you personally are part of the hiring company—no recruiting firms or job boards **Please report recruiters or job boards**. 

* Only one post per company. 

* If it isn't a household name, explain what your company does. Sell it.

* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).


Commenters: please don't reply to job posts to complain about something. It's off topic here.

Readers: please only email if you are personally interested in the job. 

Posting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)

[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)",Who's hiring Typescript developers - December
1274,2020-12-01 00:33:31,9,1,"Is it possible to make a variable only accept numbers in the range of 1 to 100?

This exact question has been [asked here before](https://www.reddit.com/r/typescript/comments/5c4vdm/declaring_number_only_within_certain_range/?utm_source=share&amp;utm_medium=web2x&amp;context=3), but it was 4 years ago and I was wondering if it's possible now.",Number type with a specific range ([1..100] for example)
1275,2020-12-01 03:36:01,20,1,"I asked this question 12 hours back: [https://www.reddit.com/r/typescript/comments/k3rrec/how\_do\_i\_stop\_duplication\_of\_interface\_code/](https://www.reddit.com/r/typescript/comments/k3rrec/how_do_i_stop_duplication_of_interface_code/)

    interface Form {
      name: string;      // repeated
      lastname: string;  // repeated
    }
    
    class UserForm {
      name: string;      // repeated
      lastname: string;  // repeated
    
      constructor(object) {
        this.name = object.name;
        this.lastname = object.lastname;
      }
    }

There were many helpful answers, the top being to use `class UserForm implements Form` from u/FormerGameDev. I thought that this still repeated the same code. As it turns out, [it isn't really duplicated code](https://www.reddit.com/r/typescript/comments/k3rrec/how_do_i_stop_duplication_of_interface_code/ge5xtrf?utm_source=share&amp;utm_medium=web2x&amp;context=3) as pointed out by u/KalebRasgoul.

I read through all the other answers, and there was quite a bit of discussion. I am sorry for not being clear with why I want the code this way. **Let me explain**:

The interface is to provide type checking and autocompletion. The forms can have around 10-25+ and it's useful if I can get static types and autocomplection.

I may have to ""mutate"" the data of the object. In that case, you may ask why I can't do this:

    interface Form {
      name: string;      // repeated
      lastname: string;  // repeated
    }
    
    const form: Form = {
      name: ""Bob"",
      lastname: ""Job""
    }
    
    form.name = ""Bobby""

I surely can, but I would like to have all these functions ""connected"" to the object. Sometimes I have to change one property, but that requires 2 other properties to be changed. What if I forget to update those? It is easier for me. Not sure if it's worth looking into checking if there are extension methods for interfaces

Here's probably a better example. In my user interface, I have two fields, `birthdate` and `age`. These two values have to kept in sync. In my frontend, there's a textfield and button to change your birthdate. What if I end up directly changing the `birthdate`, but I do not change the `age`? I would rather keep this responsibility inside the class than in the frontend component.

Here is a (very simple) example:

    class UserForm {
        ...
    
        constructor(..) { ... }
    
        changeLastName(lastname) {
            this.lastname = lastname
        }
    }

Now to the solution which makes sense to me.

u/TouchyInBeddedEngr provided a [solution](https://www.reddit.com/r/typescript/comments/k3rrec/how_do_i_stop_duplication_of_interface_code/ge4srf3?utm_source=share&amp;utm_medium=web2x&amp;context=3) which got downvoted, but it seems to make the most sense to me:

    interface Form {
        name: string;
        lastname: string;
    }
    
    class AltForm {
        form: Form;
    
        constructor(form: Form) {
            this.form = form;
        }
    }
    

I'd like to share a more [full example here](https://www.typescriptlang.org/play?#code/JYOwLgpgTgZghgYwgAgGIHsoFtkG8BQyRyIcWEAXMgM5hSgDmA3IcQDZy2nlW30jN8AX3yiEHatWQBBNmAzY8rIjExYqCrC2XIE6EHwCuCMJgAUq7BrUBKJcQfIwAC2DUAdJZwBeZF5YOIjoIznACEAByZBBmIBAA7lE8NHSMdgSOxC5unmru3Ci+cYnRAcRBDqYAUgDKAPIRZjbWihmZyFAQYIZQIE6uHv46IkF6BmDIWACemshFCTJymmZtRAD0a8gAkrphyIbUKABEBQAmR8gADnBQ0ZBQ1DobyGGn-SjUl51wb+iX0HBTFAdAUqEcAELoABGRwANDoJGBQcgjlVoXDhDZtNNNO4QmEGJFomYIdCoVMjlj8GNqOg2BB3Gx0AwzDi8tV6o0bFSgA).

This solution has a few benefits: using an object as the param is like named params, and I can use the spread syntax:

    const myForm = new AltForm({
        // I can use ""named"" parameters
        // and the spread operator
        name: ""Bob"",
        lastname: ""Job"",
    });
    
    const another = new AltForm(...someObjectFromServer)

I guess this starts a whole other discussion of composition over inheritance? Is it just a personal preference?",Update: How do I stop duplication of interface code?
1276,2020-12-01 15:41:52,53,1,"I only know typescript. I feel like injecting a factory is always better than injecting a constructor, since the constructor is always returning an object literal while the factory can return whatever value type.

Am I missing something here? Are there some extra functionalities that are missing in typescript but exist in other languages that make constructor injection more useful than injecting a factory?",Injecting a constructor vs injecting a factory.
1277,2020-12-02 11:57:38,8,1,"I have a JSON file with the following schema:
```
[
  {
    name: 'A',
    type: 'aa'
  },
  {
    name: 'B',
    type: 'bb'
  }
]
```

In my typescript file, I import the JSON. What I want is a type created from the names of each element of the array, i.e., `'A' | 'B'`. 

I tried:
```
const names = elements.map(el =&gt; el.name);

type Name = typeof names[number];
```

But this results in the `string` type.

I then tried:
```
const names = [
  ...elements.icons.map((icon) =&gt; icon.name),
] as const;

type Name = typeof names[number];
```
But this resulted in the same thing as above.

Is there any way to produce the type without manually listing out all the names from the JSON?",How to infer types from JSON file
1278,2020-12-03 14:07:42,16,1,"I'm new to react and typescript and am fighting the ""Object is possibly null"" error in my useEffect function.

Essentially, what I want to do is expand the bounds of a map when my state variable 'stores' changes. If I don't make the map.fitBounds function and just log something, I see that useEffect is called correctly. Once I try to call that function (even after a null check) I see the typescript error:  


`function App() {`  
 `const [map, setMap] = React.useState(null)`  
 `const [loc, setLoc] = React.useState({lat: 0, lng: 0})`  
 `const [stores, setStores] = React.useState([])`  
 

`...`  
 `const onLoad = React.useCallback(function callback(map) {`  
 `navigator.geolocation.getCurrentPosition((position) =&gt; {`   
 `console.log(""Got position"", position.coords);`  
 `setLoc({`  
 `lat: position.coords.latitude,`  
 `lng: position.coords.longitude`  
`});`  
`});`  
 `setMap(map)`  
  `}, [map])`  
 `useEffect(() =&gt; {`  
 `if (stores &amp;&amp; map !== null) {`  
 `const bounds = new window.google.maps.LatLngBounds();`  
 `stores.forEach(store =&gt; {`  
 `const latlng = new google.maps.LatLng(`  
`//set lat`

`//set lng`  
`);`  
 `bounds.extend(latlng)`  
`});`  
 `if (map) {`  
 `map.fitBounds(bounds) // THIS IS THE LINE WITH THE ERROR`  
`}`  
`}`  
  `}, [stores]);`

`...`

 

`return (`  
`...`  
 `&lt;GoogleMap`  
 `mapContainerStyle={containerStyle}`  
 `center={loc}`  
 `zoom={10}`  
 `onLoad={onLoad}`  
 `onUnmount={onUnmount}`  
 `&gt;`

`...`

&amp;#x200B;

Like I mentioned, I'm new to typescript and react, but I feel that null check should cover this exception. I verified that bounds is not null.",Object is possibly 'null' after null check.
1279,2020-12-04 14:10:06,0,1,,Recently i built my first project in typescript. It's a NES Road Fighter Clone. Used HTML5 canvas for animation. Would appreciate any constructive criticism.
1280,2020-12-04 16:00:02,34,1,"I'm still relatively new with TypeScript, and one frustrating part is just setting up. In react I always just used npx create-react-app and was ready to code.

This site: https://create-react-app.dev/docs/adding-typescript/ claims you can just use ""--template typescript"" to start a new project, but I almost always have problems with it.

Hot reloading is... garbage. New files cause import errors. Doesn't detect random gibberish that should cause errors, but still detects other changes so I never know if/when a problem was introduced unless I manually restart on every save. It's missing a package @types/react, which I don't discover until a package is installed (any package i use npm) Many of these issues require me to manually restart the server even though it does *inconsistently* detect changes on save.

It just seems like there's a lot of problems. Am I just doing things horribly wrong or is ""npx create-react-app my-app --template typescript"" not the ideal way to set things up?

I've always been under the impression that ""not using npx create-react-app"" is ""very bad"", but I'm finding a few tutorials that claim they prefer to setup their webpack and all of that stuff manually.

So is there a most-common way to setup React+Typescript?","anyone else have problems with React's --template typescript? Hot-reloading broken, missing @types/react. Should I stop using create-react-app for TS??"
1281,2020-12-05 20:42:49,0,1,[playground link](https://www.typescriptlang.org/play?#code/LAKA9GDuAWCeAEAXaBLAzvAZgQxQGzVFEVgAcBTJAJ3PIDkB7AE0oF54BvUeeFAOxYAPAFzw+AVwC2AI3JUANN3gA3bHnHlR4vgGs+DSH0UgAvvABk8POUyIASigDm0RAB5ENes3IA+ANxEICQUVjb2Ti6uAII+8OxcIDzWtqJRxjxUEYipxiaBEDD4lMjo8Ax8lEwM5Bj6iIHBlAD6HrSMLHGcSvxCohIycukqahpauvqGQ8nZ1G3eQ5nOM61eLLn5YNgC8NAGSAxYKIJI0JSYDFSScvCF1vBoiPh48OJo-I5IZGfaAMaP5RgAPxAA),Recursive types help .
1282,2020-12-06 03:12:53,19,1,"Hello all, so I am a bit confused as to what .d.ts files do in general cases, and as well as, specifically [this one](https://github.com/Gaweph/p5-typescript-starter/blob/master/global.d.ts). 

From my understanding, using ""declare global"" adds things to the global scope, but what is the interface Window for? If I move the ""p5: typeof module"" out of Window and add const, I get an error saying ""p5 refers to a value but is being used as a type"".

BUT If I '""import QS from ""quicksettings""' and put ""const qs: typeof QS"" in the global, but not Window it works fine. Why?

And if I understand the syntax ""export ="" and ""export as namespace"", this allows you to import ""global.d.ts"" as a module and use p5 as a global as well? 

Is this why you can't have an ""index.d.ts"" and ""index.ts"" files together?",Question on .d.ts
1283,2020-12-06 21:06:18,16,1,"So I'm working on creating a react library (for personal use) and decided that this would be a good place to finally wrap my head around typescript.  I have a background in c++, C#, and Java as well as extensive experience with React and javascript.  


The challenge I'm running into I know I could solve in an instant with a class, but I'm trying to be good about sticking to functional components as much as possible.  


I've created a distilled (if not 100% accurate) recreation of my problem here.  First, the proptypes:

    interface InputProps&lt;T&gt; {
        onChange: (update: T) =&gt; void,
        value: T
    };

So the problem I'm running into is I can figure out how to do:  


    function Form&lt;T&gt; (props: PropseWithChildren&lt;InputProps&lt;T&gt;&gt;): ReactElement&lt;any, any&gt; | null {
        return &lt;div&gt;&lt;/div&gt;; // placeholder return
    }

Great, it's functional, it's clean, and perfect.  However it feels wrong since it doesn't implement FunctionComponent.  


I'm trying to figure out the right syntax (and maybe there isn't one) to do:  


    export const Form: React.FunctionComponent&lt;&lt;InputProps&lt;T&gt;&gt; = &lt;T&gt;(props: PropsWithChildren&lt;InputProps&lt;T&gt;&gt;) =&gt; {
        return &lt;div&gt;&lt;/div&gt;; //placeholder return
    }

That always errors and I'm struggling to come up with the correct syntax (or if there even is one) for this.  I tried adding a type parameter to Form (not allowed) and I tried making a type with a default type for T but that just complained because T is still required.  


Is there any way to do what I'm trying to do?  Part of the reason I want the type there is because that type has on it a couple of additional fields which are typed which I want to set (specifically displayName) and I'd like those to stay typed.",I'm stumped and probably trying to do something overly complicated
1284,2020-12-07 19:42:17,0,1,,Migrate to typescript - the advance guide
1285,2020-12-07 19:43:07,0,1,,Migrate to typescript - the advance guide
1286,2020-12-08 12:20:19,0,1,[removed],Choose multiple files with a delete button nearby typescript
1287,2020-12-09 12:29:11,12,1,"Hi   
I'm using Gatsby typescript starter. When I use useState gives me this error  
 TypeError: react\_1.useState is not a function or its return value is not iterable   
React and ReactDOM are  
 ""@types/react"": ""\^17.0.0"",  
 ""@types/react-dom"": ""\^17.0.0"",","Gatsby, TS, useState problem"
1288,2020-12-09 13:06:06,2,1,"I bought a typescript course, but its version is typescript 3.4... Will everything in that I learn in version 3.4 applicable on 4.1.2?

I'm also wondering if typescript is backwards compatible.",Question
1289,2020-12-09 13:12:45,11,1,"I have already taken a look at TypeDoc. Correct if I am wrong but it does not provide any functionality to define an entry point ts file from which all the exported values will be documented and nothing more (I have tried all three modes). To overcome that I have to add a JSDoc comment with a special tag to every value I do not want to get documented, which I honestly find a bad solution which sometimes even bug.

Is there any documentation generation tool for typescipt that does not have this issue?

The result I want to get from that tool is not a file but an array with all the documentation data (type signature , JSDoc comment for each tag), so that I can manipulate them as I see fit and create my documentation in whatever format I want .

TypeDoc provide that data in a json file, but they are really not user friendly. I still have no clue how to get a function type from that json file.",Low level documentation generation for typescript project.
1290,2020-12-12 19:39:21,17,1,"Hey Guys, I have a question. Pretty new to Typescript, but I was wondering about something. Classes seems to work better with typescript, but with react which is preferred? Functional or classes? Any tips?",Learning Typescript
1291,2020-12-14 03:03:12,4,1,"I just got exposed to typescript and I wanted to a code beautifier. So I made an extension for VSCode. OCDetailer take a code block and aligns it based on a delimiter you specify.   I need some feedback since I'm just getting started.  Here's the extension link:

https://marketplace.visualstudio.com/items?itemName=Saaasaab.ocdetailer


Happy coding!",Extension for making very perdy (sic) code
1292,2020-12-14 03:38:47,31,1,"I am still relatively new to TypeScript, but I know how useful it is, and now all my frontend applications (Vue, React) are in typescript.

We are working on a fullstack project. I recommended using typescript, but my teammate doesn't want to because he's never used it before. I tried to convince him, but he didn't want to.

How do you think I can ""secretly"" add typescript in the backend project? The reason I want to do this for him is so we can easily share code (mostly interfaces and validation schemas). I thought that I could just use plain JS for the shared code, but then we lose out on TS interfaces. It'll be nice if we can keep the frontend and backend interfaces and validation in sync.

I've already set up Babel on the backend to allow him to use modern JS features (like import) in his express app. I also dev added typescript and the typescript babel module:

    // .babelrc
    {
      ""presets"": [""@babel/preset-env"", ""@babel/preset-typescript""]
    }

I'm a little confused as to what to do here and had some questions.

1. Can I do much if he's not willing to change the extension from JS to TS?
2. Is it possible to incrementally adopt TS this way? I thought of starting the project now, and convincing him to use my interfaces on the way. It'll be great if he decides Yes, I want to use TS, and is able to change the extension of single JS file to TS while leaving everything else untouched
3. How can I not overwhelm him with type errors when he changes to TS? For this I think the only think I have to do is turn off `noImplicitAny`",How do I help someone incrementally adopt TypeScript?
1293,2020-12-14 08:59:10,0,1,,How do I 'build an object' in typescript without ignoring types?
1294,2020-12-14 10:00:48,3,1,"**Monday, December 07 - Sunday, December 13**

###Top Posts

| score | comments | title &amp; link |
|--|--|--|
| 482  | [39 comments](https://www.reddit.com/r/javascript/comments/kajtoh/i_built_an_opensource_browser_extension_that/) | [I built an open-source browser extension that warns you when Javascript alters your clipboard data after copying text.](https://github.com/roedesh/copyguard)|
| 237  | [37 comments](https://www.reddit.com/r/javascript/comments/k8oasq/the_road_to_rome_fundraising_and_project_goals/) | [The Road to Rome: Fundraising and Project Goals](https://rome.tools/funding/)|
| 233  | [58 comments](https://www.reddit.com/r/javascript/comments/kbnavu/an_alternative_of_jsfiddle_codepen_and_jsbin/) | [An alternative of JSFiddle, Codepen and JSbin](https://jsitor.com)|
| 193  | [25 comments](https://www.reddit.com/r/javascript/comments/k9oul8/vscode_extension_for_name_your_functions/) | [VSCode extension for name your functions consistently.](https://github.com/oli799/name-my-function)|
| 193  | [21 comments](https://www.reddit.com/r/javascript/comments/kb119s/visual_studio_code_november_2020/) | [Visual Studio Code November 2020](https://code.visualstudio.com/updates/v1_52)|
| 147  | [20 comments](https://www.reddit.com/r/javascript/comments/k8g37w/lslint_just_reached_the_100_000_npm_downloads/) | [ls-lint just reached the 100 000 npm downloads](https://github.com/loeffel-io/ls-lint)|
| 106  | [102 comments](https://www.reddit.com/r/javascript/comments/k95ysy/a_new_approach_for_writing_serverclient_code/) | [A New Approach for Writing Server/Client Code](https://dev.to/loreanvictor/type-definitions-as-api-specification-36i)|
| 106  | [50 comments](https://www.reddit.com/r/javascript/comments/k989wy/how_did_javascripts_consolelog_get_its_name/) | [How did JavaScript’s console.log get its name?](https://jshakespeare.com/javascript-console-log-etymology/)|
| 90  | [16 comments](https://www.reddit.com/r/javascript/comments/k9pn54/an_in_memory_documents_oriented_reactive_nosql/) | [An in memory documents oriented reactive NoSQL database with MongoDB syntax](https://www.npmjs.com/package/reactive-db-js)|
| 89  | [21 comments](/r/javascript/comments/kc9xaq/build_your_own_css_percentage_circles_easily/) | [Build your own CSS percentage circles easily!](https://thodorisbais.github.io/percircle/)|


&amp;nbsp;

###Most Commented Posts

| score | comments | title &amp; link |
|--|--|--|
| 1  | [21 comments](https://www.reddit.com/r/javascript/comments/k9ud4v/askjs_how_do_you_feel_about_noawaitinloop_eslint/) | `[AskJS]` &amp;#91;AskJS&amp;#93; how do you feel about no-await-in-loop eslint rule?|
| 7  | [19 comments](https://www.reddit.com/r/javascript/comments/k8gmdo/askjs_how_do_you_decide_when_to_use_an_npm/) | `[AskJS]` &amp;#91;AskJS&amp;#93; How do you decide when to use an NPM package for frontend apps?|
| 3  | [16 comments](https://www.reddit.com/r/javascript/comments/kamofr/askjs_extra_security_on_web_pages_with_javascript/) | `[AskJS]` &amp;#91;AskJS&amp;#93; extra security on web pages with JavaScript?|
| 37  | [15 comments](https://www.reddit.com/r/javascript/comments/k9wqdg/askjs_how_do_i_get_a_jobimprove_my_skills_in/) | `[AskJS]` &amp;#91;AskJS&amp;#93; How do I get a job/improve my skills in backend development|
| 1  | [15 comments](https://www.reddit.com/r/javascript/comments/kbyd2h/askjs_yarn_workspaces_in_monorepo_what_the_point/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Yarn workspaces in monorepo: what the point of referencing local code instead of published version?|


&amp;nbsp;

###Top Ask JS

| score | comments | title &amp; link |
|--|--|--|
| 2  | [1 comments](https://www.reddit.com/r/javascript/comments/kbzxkz/askjs_interesting_idea_npm_packages_containing_an/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Interesting idea? NPM packages containing an 'infrastructure.json' file defining the infra and APIs they need. A tool then builds these automatically for a project|
| 1  | [5 comments](https://www.reddit.com/r/javascript/comments/kav1em/askjs_javascript_or_typescript/) | `[AskJS]` &amp;#91;AskJS&amp;#93; JavaScript or TypeScript?|
| 1  | [3 comments](https://www.reddit.com/r/javascript/comments/kawo5i/askjs_best_practices_on_securing_3rd_party_client/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Best practices on securing 3rd party client side api requests?|


&amp;nbsp;

###Top Showoffs

| score  |  comment  |
|--|--|
| 3  |  /u/Mackseraner said [I'm launching the site for Airnode today: &amp;#91;https://airnode.co&amp;#93;&amp;#40;https://airnode.co/&amp;#41;  Airnode allows you to provision production-ready Node.js servers to Digital Ocean and deploy Node.j...](/r/javascript/comments/kbnvmc/showoff_saturday_december_12_2020/gfj4q70/?context=5) |
| 1  |  /u/nullvoxpopuli said [I'm playing with animations for making a game for my family over the holidays:     gif: &amp;#91;https://twitter.com/nullvoxpopuli/status/1338310897618591744&amp;#93;&amp;#40;https://twitter.com/nullvoxpopuli/sta...](/r/javascript/comments/kbnvmc/showoff_saturday_december_12_2020/gfrsj7t/?context=5) |
| 1  |  /u/yboris said [I am mid-way through finishing a new feature for **Video Hub App** &amp;#40;&amp;#91;https://videohubapp.com/&amp;#93;&amp;#40;https://videohubapp.com/&amp;#41;&amp;#41;  It will let you make the app &amp;#40;running on Windows,...](/r/javascript/comments/kbnvmc/showoff_saturday_december_12_2020/gfiyort/?context=5) |


&amp;nbsp;

###Top Comments

| score  |  comment  |
|--|--|
| 274  |  /u/BenZed said [It sends a log to the console](/r/javascript/comments/k989wy/how_did_javascripts_consolelog_get_its_name/gf3npnt/?context=5) |
| 94  |  /u/thejameskyle said [I think it's really important that the community fund efforts like this. I don't know a JavaScript developer that hasn't complained about the mess of tools we have today, and based on how much time we...](/r/javascript/comments/k8oasq/the_road_to_rome_fundraising_and_project_goals/gezees5/?context=5) |
| 85  |  /u/license-bot said [Thanks for sharing your open source project, but it looks like you haven't specified a license.  &gt; When you make a creative work &amp;#40;which includes code&amp;#41;, the work is under exclusive copyright by...](/r/javascript/comments/k9oul8/vscode_extension_for_name_your_functions/gf5iq7e/?context=5) |
| 83  |  /u/Roedesh said [A while ago someone over at &amp;#91;r/webdev&amp;#93;&amp;#40;https://www.reddit.com/r/webdev&amp;#41; posted a link to &amp;#91;webpage&amp;#93;&amp;#40;https://codingcheats.io/copy&amp;#41; that mentions whenever you copy text of...](/r/javascript/comments/kajtoh/i_built_an_opensource_browser_extension_that/gfawvdd/?context=5) |
| 64  |  /u/buttlickk said [The fact that browsers even allow something like this is fucking ridiculous](/r/javascript/comments/kajtoh/i_built_an_opensource_browser_extension_that/gfbfnab/?context=5) |


&amp;nbsp;",Your /r/javascript recap for the week of December 07 - December 13
1295,2020-12-14 19:46:23,9,1,"    interface Messages {
      [channel: string]: unknown[] | undefined;
    }
    
    let newMessages: Messages = {};
    
    const send = (channel: string, newMessage: unknown) =&gt; {
        if (newMessages[channel] === undefined) {
          newMessages[channel] = [];
        }
    
        //At this point newMessages[channel], according to typescript, can still be undefined.  I believe that its impossible for it to still be undefined though.
        newMessages[channel].push(newMessage);
      };

What is the most elegant way to narrow the type of newMessages\[channel\] so that I can push a new item onto the array.  Shouldn't it be impossible at that point for it to still be undefined?",Narrowing the type of an array item
1296,2020-12-15 04:40:35,8,1,"I'm trying to run test on single typescript file using jest. These are the dependencies that I have installed but when I run npm test, I get bunch of babel parser errors. It's as babel is not recognizing typescript syntax. For instance. the moment it gets to function ""const getTwoSum = (file: string\[\]): number "", babel points to semicolon that comes after the file and loads babel parser errors. What am I missing? 

    ""dependencies"": {     ""@types/node"": ""^14.14.13""   },   
    ""devDependencies"": {     
    ""@babel/preset-typescript"": ""^7.12.7"",     
    ""@types/jest"": ""^26.0.19"",     
    ""jest"": ""^26.6.3"",     
    ""ts-jest"": ""^26.4.4"",     
    ""typescript"": ""^4.1.3""   },   
    ""scripts"": {     ""test"": ""jest""   }",Babel not recognizing TypeScript syntax when running test using jest on TypeScript file
1297,2020-12-15 15:24:23,0,1,"Hey people, I'm trying to write out some small assertion function, I got it done, but with a good ol' `@ts-ignore`.

From where I am standing, I'd have to put in another type declaration (well, one for each combo of parameters + return type) in order to remove such ignore, I'd like to avoid that if possible, but what do you guys think?

```
declare const component: HTMLElement;

const assertElementOnQuery = &lt;P extends boolean = boolean&gt;(
    selector: string,
    shouldBeNull?: P,
): P extends true ? (P extends undefined ? HTMLElement : null) : HTMLElement =&gt; {
    const element = component.querySelector(selector);

    try {
        if (shouldBeNull) {
            expect(element).toBeNull();
        } else {
            expect(element).not.toBeNull();
        }
    } catch (e) {
        /**
         * To make the trace go up before this function
         */
        Error.captureStackTrace(e, assertElementOnQuery);
        throw e;
    }

    // eslint-disable-next-line @typescript-eslint/ban-ts-comment
    // @ts-ignore
    return element;
};

const kenobi = assertElementOnQuery('hello there');
const yoda = assertElementOnQuery('ketamine sink', false);
const vader = assertElementOnQuery('reckd younglings', true);

// Both kenobi and yoda are typed to HTMLElement
```",Help with a small generic assertion snippet
1298,2020-12-15 17:25:25,13,1,"I've been wracking my head over this problem all afternoon and would like to know if it is at all possible. I have a class which has a setting method to overwrite one of its properties. The property is typed as a generic and is set in the class' constructor. Is there any way to 'update' the generic type so any new data that comes in and overwrites the class' property has the appropriate type hinting?

I have a snippet here which should help explain the issue I'm having:

https://jsitor.com/KD3wQepnq

I don't care about other data types besides object literals for now, I just want them to be 'extensible'. Any help would be much appreciated. Thanks in advance /r/typescript.",Is there any way to extend an object literal used as a type variable?
1299,2020-12-16 12:30:04,3,1,"Hi everyone !

I'm trying to find a way to bundle my TS project into a single obfuscated JS file which, alongside node_module folder that could be executed with ""node final-file.js""  

I've been trying to use gulp with gult-typescript and gulp-javascript-obfuscator like so but seems like the obfuscated code can never be ran

```js
const gulp = require( 'gulp' )
const ts = require( 'gulp-typescript' )
const obfuscator = require( 'gulp-javascript-obfuscator' )

let application = ts.createProject( 'tsconfig.json' )

gulp.task( 'build', () =&gt;
{
    let tsResult = application.src()
        .pipe( ts({ outFile : 'final-file.js', module: 'amd' }) )

    return tsResult.js
            .pipe( obfuscator() )
            .pipe( gulp.dest( 'release' ) )
})
```

I really don't care about gulp, if you have a working solution, I'm glad to here it

Thanks for your time !",Compile TS project to single obfuscated JS file for production ?
1300,2020-12-17 20:32:05,2,1,"Hey typescript community, do you have any courses to recommend on typescript? I’ve recently taken Stephen grider course, but he focuses a lot on classes. So i was wondering if there’s something more up to date using functional programming?",Typescript learning
1301,2020-12-18 07:37:47,7,1,"I have a Directions Enum which will have four values: North, East, South, and West.

I want to have two ""data"" stored in them:

* The human-readable string representation; example, `""East""`
* A code to store in the database; example, `2` for East

I also want them to be loopable (always providing the same order) so I can display them in the UI easily (in a dropdown, for example)

This is what I started off with:

    enum Direction {
        NORTH = 1,
        EAST = 2,
        SOUTH = 3,
        WEST = 4
    }
    
    Direction.EAST =&gt; 2

But I don't have the human readable string. I know I can just use the values (NORTH) and alter the case (North), but I would rather type out the string exactly as I want it.

So I thought of this this way:

    interface direction {
      value: number;
      string: string;
    }
    
    const Direction = {
      NORTH: {
        value: 1,
        string: ""North"",
      } as direction,
      EAST: {
        value: 2,
        string: ""East"",
      } as direction,
      SOUTH: {
        value: 3,
        string: ""South"",
      } as direction,
      WEST: {
        value: 4,
        string: ""West"",
      } as direction,
    };
    
    // Direction.EAST.value =&gt; 2
    // Direction.EAST.string =&gt; ""East""
    
    function _getAllDirections() {
      const list: direction[] = [];
    
      Object.keys(Direction).forEach((key) =&gt; {
        // To ensure correct order of list
        const direction: direction = (Direction as any)[key];
        list[direction.value] = direction;
      });
    
      return list;
    }
    
    const allDirections: direction[] = _getAllDirections();
    
    console.log(allDirections);

([Or view here](https://www.typescriptlang.org/play?#code/JYOwLgpgTgZghgYwgAgCbChBZgHsTIDeAUMsgG5wA2ArhAFzIg0C2ARtANynIDOYUUAHNG-QSCHcAvsWIJ8-ZABEMWHPmQBeIjwByAeQBKAFQASjEmTKVaDZAEYANDzJjhjAES7cUMAAsPZzIpZDheNFVsPBAg5ABRAEEAZWMLFwpqOkYAJljXAXdkDziwsECeELCIzCj8WKT9AFUzNKsM20YAZjy+AolPJNwaf3Lg0PD0GvUYngB1OJTWqxss5AAWHrd+otmIflHkSonI6ecpbmIAekvlE+iAOkSU+5WUTQA+ZGyrm5Uph6exnuWyEWk+xVKHlkMBoIFqBAA+kIIGAElQqH81NFeAAKACUOjI8hAiiowH4jEmWPwAG0ALpaZD0i5kfRsABWanuAGsIABPXGY+F4+4wHwlBB+HE43l8gkfQlWa7IYy4ZAQEk0TDIeRQKbIHyoaAGmDIMn8dLExRU+GUu4abQ4oXTcahEBymmyuncNrmsA0m3TF6ZCAM7SB6I+w54lnITBgLUEP3SWRWsChdHO7F2-60sPIJEotEY+0k-EXK24KgQe5UXBCHHUEu5kkx4hAA))

This has everything: the string representation, the ID (1, 2, ...) to store in the database, and the loop.

What method would you use? Do you think I am fine in using what I have?",Help in creating enums
1302,2020-12-18 16:32:08,8,4,"I'm new to typescript, so this is likely user error. I've confirmed this works when using it from javascript by running the index.js directly. [here's the full code](https://github.com/skewballfox/sniper-node), but I'll paste the relevant sections in the post.

essentially, I have a javascript class that I can't edit directly, because it's a wrapper generated by rust via [neon](https://github.com/neon-bindings/neon) ( [relevant example of a class in the documentation](https://neon-bindings.com/docs/classes/) ).
here's the content of my index.js
```
const addon = require('../native/index.node');

const { Sniper } = addon;
let x = new Sniper(""../../sniper-core/snippets"");
console.log(x);

module.exports = a
```
and index.d.ts, where I tried to add the types for the constructor
```
/**
* @param {string} config
* @returns {Sniper | undefined}
*/
export declare class Sniper {
    constructor(config?: string | undefined);
}
//declare namespace Sniper { }

export default Sniper;
```
which imported via 
```
import * as Sniper from '../../sniper-node';
let snipe = new Sniper('../../sniper-core/snippets/');
```
generates the error message
```
2:17 - This expression is not constructable.
2:17 - Type 'typeof import(""/Path/To/sniper/sniper-node/lib/index"")' has no construct signatures.
```

I have no idea what the issue is, and google has been less than helpful for my particular case. I'm really new to both typescript and javascript. If you need me to post any further information, let me know and I'll edit the post.",issue creating construct signatures for generated js class
1303,2020-12-21 07:47:00,19,1,"I want an enum for directions. Each member of the enum will store three values:

* Its ID, for example `1`,
* Its string representation, for example `""East""`,
* A way to reference it in the code, for example, `Direction.EAST`.

The string representation (`""East""`) needs to be explicitly stored. Some strings have special characters such as ""à"" in them.

I want to know what is the best way to do this. Just for some more context, I need the ID to store in the database. The string representation is what is displayed to users in the UI. I also want a way to reference in code.

I [a](https://www.reddit.com/r/typescript/comments/kfgppw/help_in_creating_enums/)sked [a question](https://www.reddit.com/r/typescript/comments/kfgppw/help_in_creating_enums/) a few days back where I provided this code example:

    interface direction {
      value: number;
      string: string;
    }
    
    const Direction = {
      NORTH: {
        value: 1,
        string: ""North"",
      } as direction,
      EAST: {
        value: 2,
        string: ""East"",
      } as direction,
      SOUTH: {
        value: 3,
        string: ""South"",
      } as direction,
      WEST: {
        value: 4,
        string: ""West"",
      } as direction,
    };
    
    // Direction.EAST.value =&gt; 2
    // Direction.EAST.string =&gt; ""East""
    
    function _getAllDirections() {
      const list: direction[] = [];
    
      Object.keys(Direction).forEach((key) =&gt; {
        // To ensure correct order of list
        const direction: direction = (Direction as any)[key];
        list[direction.value] = direction;
      });
    
      return list;
    }
    
    const allDirections: direction[] = _getAllDirections();
    
    console.log(allDirections);

u/SlayMaster3000's [answer](https://www.typescriptlang.org/play?#code/KYOwrgtgBAIglgJ2AYwC5wPYigbwFBSFQByA8gEoAqAElALxQCMANAUQKICCAypfVACZWRKN1IBVGvwDMwogHV2vfgBY8AXzx4AZmBBpM2AObBU8JAazEAhhGAAKACYAuWIhTosASlxtCAZwB3OFRkAAsoJx98ERFka39gNwtPEAA6MipqZz9YkSRUMARsACJiDARUMJKAbly4hKTzD0M0rl4cvLyCotL2BNRa+qJ4xOSWrDSxSWzh7tNeqBLuDDAqoa6oUab3S3TFDrnYnuKl+WB-QbqRTU08ZCx-DAAbYDTnjCN7Zr22nkovDVNsCiAB6UGCe6PF5vD5fExmXapGx2b5I1rtAGAwjgpb9S4lLQPECXKDWZ7PH6pfz8UgAIwAVh40gA3clgC5olKGLxpbRwZ6oYAIez2ADWXlcYqgcBpVMM9AAfFBUABPAAOwAw2ig0ro+qW4AgdOFJUBUJJqDJFPljxRF345Mp6MeaQg1nV9gRtpA9vNFqer3en3sTp9-mxm1xAG0WIJmFBZFAVABdAMw4NfMMukn2iNAsEQ6PlSphBP41AJlZrMtQc6XFNAA) made sense, but I'm not so sure about the function for `getDirectionName`, although it is better than my solution.

I wanted to ask if there's any standard for this, everyone seems to have a different idea",How should I structure this enum?
1304,2020-12-21 10:01:56,2,1,"**Monday, December 14 - Sunday, December 20**

###Top Posts

| score | comments | title &amp; link |
|--|--|--|
| 430  | [22 comments](https://www.reddit.com/r/javascript/comments/kewbt9/npm_now_shows_which_packages_include_bundled/) | [Npm now shows which packages include bundled TypeScript declarations](https://github.blog/changelog/2020-12-16-npm-displays-packages-with-bundled-typescript-declarations/)|
| 259  | [7 comments](https://www.reddit.com/r/javascript/comments/kdmb55/building_a_fantasy_game_console_emulator_in_js/) | [Building A Fantasy Game Console Emulator In JS: System Overview and Graphics Pipeline](https://www.youtube.com/watch?v=g29vCtzZPuk)|
| 257  | [68 comments](https://www.reddit.com/r/javascript/comments/kczq5a/why_im_building_jsdiffdev/) | [Why I'm building JsDiff.dev](https://dev.to/aantipov/why-i-m-building-jsdiff-dev-18kp)|
| 250  | [17 comments](/r/javascript/comments/kgugvk/owncast_the_open_source_selfhosted_live_streaming/) | [Owncast – The open source, self-hosted live streaming server](https://github.com/owncast/owncast)|
| 180  | [28 comments](https://www.reddit.com/r/javascript/comments/keiaie/visly_build_react_components_visually/) | [Visly - Build React components visually](https://visly.app/blogposts/visly--build-react-components-visually)|
| 173  | [29 comments](https://www.reddit.com/r/javascript/comments/kgecos/gist_unfollow_everyone_on_twittercom/) | [Gist: Unfollow everyone on twitter.com](https://gist.github.com/JamieMason/7580315)|
| 135  | [33 comments](https://www.reddit.com/r/javascript/comments/kfubep/i_made_a_minimal_monorepo_starter_for_publishing/) | [I made a minimal monorepo starter for publishing multiple individual packages from a single repo, with Lerna, TypeScript, Rollup, Jest, ESLint, and Prettier.](https://github.com/andyjessop/lerna-rollup-typescript)|
| 115  | [5 comments](https://www.reddit.com/r/javascript/comments/kg4q52/interview_js_part_3_message_queue_and_event_loop/) | [Interview JS Part 3 - Message Queue and Event Loop &amp;#40;Inspired by Philip Roberts&amp;#41;](https://dubesar.hashnode.dev/interview-js-part-3-message-queue-and-event-loop-inspired-by-philip-roberts)|
| 109  | [64 comments](https://www.reddit.com/r/javascript/comments/kfmi7o/migrating_from_eslint_and_prettier_to_rome/) | [Migrating from ESLint and Prettier to Rome toolchain: a painful experience](https://blog.theodo.com/2020/12/rome-tools-not-ready-to-replace-eslint-yet/)|
| 96  | [8 comments](https://www.reddit.com/r/javascript/comments/kd4d8m/welcome_yari_mdn_web_docs_has_a_new_platform/) | [Welcome Yari: MDN Web Docs has a new platform](https://hacks.mozilla.org/2020/12/welcome-yari-mdn-web-docs-has-a-new-platform/)|


&amp;nbsp;

###Most Commented Posts

| score | comments | title &amp; link |
|--|--|--|
| 20  | [32 comments](https://www.reddit.com/r/javascript/comments/kg34lf/askjs_interview_question_promisifaction/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Interview Question - Promisifaction|
| 73  | [23 comments](https://www.reddit.com/r/javascript/comments/ke8g59/a_deep_email_validator_library/) | [A Deep Email Validator Library](https://github.com/mfbx9da4/deep-email-validator)|
| 13  | [15 comments](https://www.reddit.com/r/javascript/comments/kg6f8n/showoff_saturday_december_19_2020/) | `[Showoff Saturday]` Showoff Saturday &amp;#40;December 19, 2020&amp;#41;|
| 5  | [14 comments](https://www.reddit.com/r/javascript/comments/kec85o/askjs_interview_help/) | &amp;#91;AskJS&amp;#93; interview help|
| 0  | [12 comments](https://www.reddit.com/r/javascript/comments/kdtw3f/jsdoc_typings_all_the_benefits_of_typescript_with/) | [JSDoc typings: all the benefits of TypeScript, with none of the drawbacks](https://gils-blog.tayar.org/posts/jsdoc-typings-all-the-benefits-none-of-the-drawbacks/)|


&amp;nbsp;

###Top Ask JS

| score | comments | title &amp; link |
|--|--|--|
| 4  | [3 comments](/r/javascript/comments/kgu8wg/askjs_memory_reallocation_for_object_arrays/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Memory Reallocation for Object Arrays|
| 1  | [2 comments](/r/javascript/comments/kgl1vs/askjs_questions_about_two_different_approaches_to/) | `[AskJS]` &amp;#91;AskJS&amp;#93; questions about two different approaches to implementing paginated APIs|
| 0  | [5 comments](/r/javascript/comments/kgs72r/askjs_best_local_database_for_express/) | `[AskJS]` &amp;#91;AskJS&amp;#93; Best Local Database for Express|


&amp;nbsp;

###Top Showoffs

| score  |  comment  |
|--|--|
| 7  |  /u/the-ace said [Hey everyone!  I haven't found or created it this week, but I have reached a milestone and only now feel proud to begin sharing it with the rest of the world, and I'm looking for some feedback!  I've ...](/r/javascript/comments/kg6f8n/showoff_saturday_december_19_2020/ggcy9z2/?context=5) |
| 6  |  /u/yboris said [I got a **PWA** to work along with my **Electron** project &amp;#40;that now also acts as a server&amp;#41;.  **Video Hub App** lets you browse videos on your computer:  &amp;#91;h&amp;#93;&amp;#40;https://github.com/why...](/r/javascript/comments/kg6f8n/showoff_saturday_december_19_2020/ggd6t1w/?context=5) |
| 4  |  /u/xplozive said [I often argue with colleagues about what code is faster. But in JS it is not exactly easy to benchmark your code in a correct way. So I have created a simple browser-based tool for speedy and correct ...](/r/javascript/comments/kg6f8n/showoff_saturday_december_19_2020/ggd0gdp/?context=5) |


&amp;nbsp;

###Top Comments

| score  |  comment  |
|--|--|
| 60  |  /u/straponmyjobhat said [I tried comparing jquery to react as a random test of your tool expecting not to get much useful info.  I was surprised to see it actually was very informative!   https://jsdiff.dev/?compare=jquery+re...](/r/javascript/comments/kczq5a/why_im_building_jsdiffdev/gftlnil/?context=5) |
| 55  |  /u/real_kerim said [&amp;#91;So you think you can validate email addresses?&amp;#93;&amp;#40;https://www.youtube.com/watch?v=xxX81WmXjPg&amp;#41;  The best validation is to just send an email.](/r/javascript/comments/ke8g59/a_deep_email_validator_library/gg12ts7/?context=5) |
| 44  |  /u/ILikeChangingMyMind said [Really cool project ... but I hate the name!  Ok maybe ""hate"" is too strong: it's just very confusing.  A ""diff"" to a programmer means a code comparison, so a ""JS diff"" means a comparison of Javascrip...](/r/javascript/comments/kczq5a/why_im_building_jsdiffdev/gfuaxa1/?context=5) |
| 44  |  /u/hallettj said [Nice, this will save me some time. I'm making a mental note to put a `types` property in `package.json` in any packages I publish. TypeScript will pick up type definitions without that property, but i...](/r/javascript/comments/kewbt9/npm_now_shows_which_packages_include_bundled/gg52oms/?context=5) |
| 35  |  /u/harrymurkin said [This would be great for schools - decentralising memberships to protect kids' privacy. Especially if it could be channel-based like Slack.](/r/javascript/comments/kgugvk/owncast_the_open_source_selfhosted_live_streaming/gghvv16/?context=5) |


&amp;nbsp;",Your /r/javascript recap for the week of December 14 - December 20
1305,2020-12-22 19:41:57,5,1,"I am exploring implementing some worker\_threads for some CPU heavy tasks in a node.js application, however many that I come across adhere more to traditional JS workflows and lack good type hinting/intellisense/code docs.

Are there any threading/worker\_thread libraries that you would recommend that effectively leverage typescript in development?",Favorite threading/worker libraries?
1306,2020-12-22 21:35:32,0,1,"I'm new to TypeScript and trying to dial in my linting setup in VSCode. I have TypeScript and ESLint installed globally, locally in my a Create React App (TypeScript template) and I'm also using the dbaeumer ESLint extension in VSCode, with corresponding settings in my VSCode settings.json. 

I get rich, informative console errors when I run the app but only 'FooBar is defined by never used.' warnings in VSCode. i.e. no helpful red squiggly underlines with hover hints on problem variables and components. How do I get these. 

I feel like linting configuration is more daunting than TypeScript itself. Am I missing something?

 `""[typescript]"": {`  
 `""editor.defaultFormatter"": ""esbenp.prettier-vscode"",`  
 `""editor.formatOnSave"": true`  
  `},`",VSCode red squiggly underline hints?
1307,2020-12-23 03:16:32,1,1,,TDD with jest and typescript | ashmortar.io
1308,2020-12-24 00:04:11,23,1,"I've been a huge fan of vscode for years now. Passed it along too many people I know. This year has really taken a turn for the lazy, and uneducated. I'm getting notices for learn how to refactor JS/TS .. like seriously? 20years of javascript experience, why the hell am I even having to deal with this link over top of the code i'm trying to actually refactor. I turn off all extensions and then loose even the basic typing for the file i'm in.  


Anyways, i just want to know if anyone has found a new good editor. I enjoy colors, and even lots of options and utilities that I initiate. Progressive typing would be nice. I can't seem to even paste code in vscode without it wanting to change the formatting, had to spend time to turn that ""feature"" off. it tries to pre-determine everything you're going to do and then help you like you're a cripple. I know what i'm doing and would like an editor that can respect that.","typescript text editor recommendations, not vscode"
1309,2020-12-25 09:04:10,12,1,"I am learning about union types by reading [this section](https://www.typescriptlang.org/docs/handbook/unions-and-intersections.html) of the documentation.

The code used to demonstrate union types is this:

```
interface Bird {
  fly(): void;
  layEggs(): void;
}

interface Fish {
  swim(): void;
  layEggs(): void;
}

declare function getSmallPet(): Fish | Bird;

let pet = getSmallPet();
pet.layEggs();
```

And the following comment was made about using union types:

&gt; In traditional object-oriented code, we might abstract over the two
&gt; types by creating a hierarchy of types. While this is much more
&gt; explicit, it’s also a little bit overkill.

The traditional object-oriented code being alluded to might look like this:

```
class Animal {
  layEggs(): void {console.log(""laying eggs"")};
}

class Bird extends Animal {
  fly(): void {console.log(""flying"")};
}

class Fish extends Animal {
  swim(): void {console.log(""swimming"")};
}

declare function getSmallPet(): Animal;


let pet = getSmallPet();
pet.layEggs();
```

One benefit I see in the traditional object-oriented code, is the ability to have code reuse. For example the similar `layEggs` implementation can be moved to the super class, instead of being repeated in both the sub class.

I have not been able to find a way to achieve similar code reuse when using union types in typescript. Are there ways to achieve this?",How to have code reuse when using union types in Typescript
1310,2020-12-25 12:50:03,11,1,"Hello.

Here's a unusual usecase that i had a few weeks ago when developing a chatbot application..

Let's say i'm building a message feed where all the messaging exchange process will reside, let's call it *feed*. *feed* is an array of tuples of type [agent, message]
`const feed = Array&lt;['bot' | 'user', string | unknown]&gt;`

Now i'm going to build a message worker, which will be the only responsible for adding messages to the feed. It also takes the agent as a parameters, the agent is who is sending the message

```typescript
const worker = (msg: string | unknown, agent: 'user' | 'bot') =&gt; {

  switch(agent) {
    case 'user':
       // do stuff
       return ['user', msg]

    case 'bot':
       // do stuff
       return ['bot', msg]

    default:
     break
  }
}
```

The issue is, the bot response is not always a simple string. It can be a complex object with techincal info and img urls and etc...

How would a type the parameter `msg` of the worker function to accept a complex object IF agent = 'bot' and to accept a string IF agent = 'user'. Also how would that return type be?",Function with conditional return type
1311,2020-12-27 12:36:48,3,1,"when I use `npm run tsc` , get this

```
miniprogram/pages/index/index.ts:16:7 - error TS2322: Type 'number' is not assignable to type 'string'.

16       url: 123,
         ~~~

  typings/types/wx/lib.wx.api.d.ts:2685:9
    2685         url: string
                 ~~~
    The expected type comes from property 'url' which is declared here on type 'NavigateToOption'


Found 1 error.

npm ERR! code ELIFECYCLE
npm ERR! errno 2
npm ERR! miniprogram-ts-quickstart@1.0.0 tsc: `node ./node_modules/typescript/lib/tsc.js`
npm ERR! Exit status 2
npm ERR!
npm ERR! Failed at the miniprogram-ts-quickstart@1.0.0 tsc script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
```

but if I write this to a file: `npm run tsc &amp;&gt; a.txt`

a.txt get this: 

```
[96mminiprogram/pages/index/index.ts[0m:[93m16[0m:[93m7[0m - [91merror[0m[90m TS2322: [0mType 'number' is not assignable to type 'string'.

[7m16[0m       url: 123,
[7m  [0m [91m      ~~~[0m

  [96mtypings/types/wx/lib.wx.api.d.ts[0m:[93m2685[0m:[93m9[0m
    [7m2685[0m         url: string
    [7m    [0m [96m        ~~~[0m
    The expected type comes from property 'url' which is declared here on type 'NavigateToOption'


Found 1 error.

npm ERR! code ELIFECYCLE
npm ERR! errno 2
npm ERR! miniprogram-ts-quickstart@1.0.0 tsc: `node ./node_modules/typescript/lib/tsc.js`
npm ERR! Exit status 2
npm ERR!
npm ERR! Failed at the miniprogram-ts-quickstart@1.0.0 tsc script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
```

why output to a file get this ...",npm run tsc to a file then get garbled?
1312,2020-12-27 16:33:10,0,1,,"Console 33 includes a new Javascript framework open-sourced by Basecamp this week, that I thought /r/typescript might be interested in :)"
1313,2020-12-27 19:30:31,12,1,"How do I go about allowing a generic type to have a default value?

```typescript
function f&lt;T = undefined&gt;(value: T = void 0) {
    return value;
}
```",Type 'undefined' is not assignable to type 'T'
1314,2020-12-27 23:10:11,9,1,"Hello! I created a typescript package called Hextech and the main file exports default a class, called HextechSetup.
After compiling, I installed the package in another folder, but when I try to import it, I need to
import default as HextechSetup from ""hextech""
or,
const {default: HextechSetup} = require(""hextech""

Why other packages let me import directly with
import HextechSetup from ""hextech"" 
and I can't do the same? Am I forgetting some configuration?
Searched everywhere but I didn't find an answer

Thanks in advance :)",Why do I need to 'import default as module' in my package?
1315,2020-12-28 00:27:41,2,1,"So the typescript module can be used to create an abstract syntax tree from source code. Is there any official documentation for that?

You can play with the produced ast [here](https://astexplorer.net/).",documentation for the typescript ast generator
1316,2020-12-28 01:10:48,23,1,"I have a line of code here:

`d3.json('stations.json').then(stations =&gt; {`

I'm trying to figure out how to tell typescript what the type of 'stations' is?

I've tried something like:

`d3.json&lt;[Station]&gt;` \-- Typescript hates this, unexpected identifier &lt;  


I tried something like:  


`d3.json('stations.json').then((stations: [Station])) =&gt; {`

And typescript gives me back a nasty error:

`Argument of type '(stations: [Station]) =&gt; any' is not assignable to parameter of type '(value: unknown) =&gt; any'.`  
  `Types of parameters 'stations' and 'value' are incompatible.`  
`Type 'unknown' is not assignable to type '[Station]'.ts(2345)`

`Parsing error: Unexpected token :`

What am I doing wrong here? Googling for 'typescript then set type' is a nightmare.",How to set type on promise then
1317,2020-12-28 07:34:37,0,1,[removed],Pipeable Pattern Matching in typescript
1318,2020-12-28 20:02:33,8,1,"Originally posted in [r/typescript](https://www.reddit.com/r/typescript/) but I think most of the discussion will be better to have here. Anyhow, I've been tasked of overhauling a fairly new API project to use Typescript and document/validate everything in the proper way.

One of the goals is to avoid having to update documentation, typings, validations all the time. I know types !== input validation, and that inline documentation can never replace a thorough feature documentation. But how do you all guys handle this? Manually doing input validations on all endpoints, creating separate documentation online \_and\_ commenting everything inline in code?

**Thought** is to  
– Start using [Joi](https://joi.dev/) for validations  
– Use [joi-extract-type](https://www.npmjs.com/package/joi-extract-type) to get types of request params ([req.body.foo](https://req.body.foo/) etc.)  
– Use [swagger-inline](https://www.npmjs.com/package/swagger-inline) to write Swagger documentation inline in each API endpoint  
– Use ReDoc or similar to host a nice UI on the web of the documentation

Second of all, I want to gather all kinds of types somewhere central. In our case, a concept of a ""Person"" is the same across 3 different platforms (React Web, React Native and an upcoming NodeJS CLI) so I'm proposing having the types in a separate private NPM package that all of the projects can include.

I'm basically allowed to do almost anything here in order to improve developer efficiency and life quality. Time is of course always a factor, but I'd be happy to spend a whole working week to get this up and going and set the record straight for how we would continue developing the project further.","[AskJS] Syncing types, docs and API validations"
1319,2020-12-29 06:26:20,2,1,"With the new string literal types has anyone done this yet as I believed that was commonly given as a good use case for template literal types?
I've attempted to however tsc says it can't find the capitalise or lowercase types despite using typescript 4.1.3",Functions to Convert objects with snake_case keys to camelCase ones
1320,2020-12-30 18:58:24,2,1,,How I translate python code into javascript and typescript
1321,2020-12-30 23:19:45,14,1,"```typescript
function collect&lt;T&gt;(thunk: () =&gt; void, collection: Array&lt;T&gt;): void {
  try {
    thunk();
  } catch (err) {
    collection.push(err);
  }
}
```

Is there a name for any functional patterns `collect()` resembles?

```
declare const MIN_VALUE: number;
declare const MAX_VALUE: number;

type Valid&lt;T&gt; = T &amp; { readonly __brand: unique symbol };

function assertIsValid(value: number): asserts value is Valid&lt;number&gt; {
  const aggregate: AssertionError[] = [];
  
  collect(() =&gt; assert(value &gt;= MIN_VALUE), aggregate);
  collect(() =&gt; assert(value &gt;= MIN_VALUE), aggregate);
  
  if (aggregate.length &gt; 0) {
    throw new AggregateError(aggregate);
  }
}
```",Is there a name for this functional pattern?
1322,2020-12-31 02:06:18,52,1,"Sorry for asking a very noob question. did google but didn't find very confident answers.

is there a 1:1 equivalent of pandas and numpy in typescript? 

If not, what is the best advice for someone porting a python app to typescript which uses pandas and numpy very heavily. 

Once again sorry for FAQ type of question.",Numpy and Pandas equivalent for typescript
1323,2021-01-01 00:05:56,8,1,"The monthly thread for people to post openings at their companies.

* Please state the job location and include the keywords REMOTE, INTERNS and/or VISA when the corresponding sort of candidate is welcome. When remote work is not an option, include ONSITE.

* Please only post if you personally are part of the hiring company—no recruiting firms or job boards **Please report recruiters or job boards**. 

* Only one post per company. 

* If it isn't a household name, explain what your company does. Sell it.

* Please add the company email that applications should be sent to, or the companies application web form/job posting (needless to say this should be on the company website, not a third party site).


Commenters: please don't reply to job posts to complain about something. It's off topic here.

Readers: please only email if you are personally interested in the job. 

Posting top level comments that aren't job postings, [that's a paddlin](https://i.imgur.com/FxMKfnY.jpg)

[Previous Hiring Threads](https://www.reddit.com/r/typescript/search?sort=new&amp;restrict_sr=on&amp;q=flair%3AMonthly%2BHiring%2BThread)",Who's hiring Typescript developers - January
1324,2021-01-01 20:03:30,0,1,[removed],What is typescript and why it is inevitable to adapt it in 2021
1325,2021-01-02 07:00:47,0,1,,better-typescript-lib / An alternative TypeScript standard library with better type definitions.
1326,2021-01-02 09:49:18,0,1,[removed],I will start blog posting about typescript what do yall want me to blog about
1327,2021-01-02 09:51:02,5,1,,What is typescript and why it is inevitable to learn and adapt in 2021
1328,2021-01-02 13:28:23,13,1,"Do you happen to know if there is any library that has higher level utility functions for the ast than what is already provided from the typescript module?

Here is some functionality that I am looking for :

Recursively resolve the provided export declaration statement to the statements that are actually exported .

example :

    //./index.ts
    export {A,b as B,default as C,default} from ""./some/where"";
    //./some/where.ts
    export * from ""./some/where/else"";
    //./some/where/else/ts
    export const A = 1 , b = 2, c = 3;
    export default function foo() {
        //
    }
    export function bar() {
        //
    }

I will input the statement that corresponds to :

    export {A,b as B,default as C,default} from ""./some/where"";

and I will get back the statements that correspond to :

    export const A = 1 , b = 2, c = 3; // index 0
    export const A = 1 , b = 2, c = 3; // index 1
    export default function foo() {
        //
    }

Maybe I have not searched enough in the web , but I have not found anything so far.",Typescript ast high level utils
1329,2021-01-02 14:20:24,2,1,,"Open source file server I created - myDrive (similar to Google Drive) (Node.js, react, typescript, mongoDB, amazon S3)"
1330,2021-01-02 14:21:27,2,1,"https://stackoverflow.com/questions/65539798/property-x-is-missing-in-type-y-but-required-in-type-z

I've got an object, which I'm calling a `ConstructorCollection` - it's an object of constructors for services, but could also be a tuple with a `Constructor` and any number of strings that are the keys of other services.

Here's a simple example:


    interface Todos {
      add(text: string): void;
    }

    interface State {
      todos: string[];
    }

    export interface Services {
      state: State;
      todos: Todos;
    }

    const services: ConstructorCollection&lt;Services&gt; = {
      state: createState,
      todos: [createTodos, 'state'],
    };

    function createState(): State {
      return {} as unknown as State;
    }

     function createTodos(state: State): Todos {
      return {} as unknown as Todos;
    }

And `ConstructorCollection` is defined like this:

    export type Constructor&lt;T, U&gt; = (...args: U[]) =&gt; T;

    export type ConstructorTuple&lt;T, U&gt; = [Constructor&lt;T, T&gt;, ...U[]];

    export type ConstructorCollection&lt;T, U extends keyof T = keyof T&gt; = Record&lt;
      U,
      Constructor&lt;T[U], T[keyof T]&gt; | ConstructorTuple&lt;T[U], keyof T&gt;
    &gt;;

With the error:
```
    Type '(state: State) =&gt; Todos' is not assignable to type         'Constructor&lt;Todos | State, Todos | State&gt;'.
      Types of parameters 'state' and 'args' are incompatible.
        Type 'Todos | State' is not assignable to type 'State'.
          Property 'todos' is missing in type 'Todos' but required in type 'State'.(2322)


So, why does TS think that `todos` should be in `Todos`? How can I get it to differentiate?

TS Playground:

https://www.typescriptlang.org/play?#code/KYDwDg9gTgLgBDAnmYcDCEB2BnGUCuAxjNADwAqANHAKoB8cAvHABQB0HAhlAObYBctANoBdAJRMG5ANwAoWaEiwEyVBhx4iJKOXxgANsArV6TOEPW4CxMlTjk61DmxqiRcheGjwkKdFistaAx9Q2IASyxjWjhQGGBMABNsOABrYEQIADN7M3TMnIczACVgQmhE0lk4Wkpq-w1rbQohGhFqciF87PsRBgAfBsCbHT1DFrbqbsK6WToPcMx4qCzOQlRyCESIFIBves5ExJZ4kBhBK0WeMUEANwhwxLkAX3lF5dX1uABlGE54uD7GokbYCOCXTA8UQveSKbxwd7AFZrVDfJG3cLrPb1XD-YCCX54uTArY7QSbUEw2TlDTg9GY4BgyyaEYhMIwSKYUhoqAYrEMZhA8F-eKCQhQYB4wnxOok0GCITiyXxCk7agAclx8XV7Vkzw8WXwmAiWDgSqlIuALBuP0tgPqEpg+CgmEBzzgnBSRtSmAgAHdXZ7bUS9fJDcaOabzSrSdgWFr8cH4jbVdiao7na7du6g97fQGPSlUy8gA",Problem discriminating between union types
1331,2021-01-03 13:46:32,20,1,"This is somewhat connected to Angular perhaps.

&amp;#x200B;

I started a new job in which I'm working in Angular as opposed to React. In previous projects I've touched Typescript here and there, but in this project I've been working on syncing with my team in regards to how Typescript and Angular best practices and how to best type Angular classes. 

One of the main differences I've found is that you regularly use a ""service class"", at least in our project. Trying to take into account best practices from my previous experiences, I've tried to make sure types are used in relation to a single source of truth, and as extensively as possible, to prevent future issues. 

For example, I defined a model for objects I expect to be getting from the back end:

*export* class Unit {  
    name: string;  
    id: string;  
    avatarUrl?: string;  
}

and then in the service, which is in charge of making api requests for my component, I have a method that receives an ID to assign the given unit to some other DB entity. I typed the input of that method as following:

unitId: Unit\[""id""\]

(this is part of the input that method is getting but you get the idea).

This, to my understanding, lets the developer and the typescript compiler know that the ID I'm going to be receiving here needs to be the same type of the [Unit.](https://Unit.ID)id property. However, my team leader is asking me to refactor, and to type it:

unitId: string

&amp;#x200B;

He says my method of typing will create an overhead. I don't have much previous experience in Typescript so I'm wondering what the community here thinks, and in any case, what sources do you recommend to learn best practices in Typescript, especially in the context of Anglar",typescript best practices - redefine type vs use existing types' parameters
1332,2021-01-03 21:24:39,0,1,"[Playground link](https://www.typescriptlang.org/play?#code/MYewdgzgLgBAlgRgBxgLIEMAOMC8MDeAUDDAKZgBcBxJMAFnFQEQAScB+ArhKQE4C+-JgBoaJAEYBPUswDiIEABMppAIQia-USTAAbKkVr1GMJvi48BW4xqMrmAERCk467TC2F+MdBBihIKEJCKElMUhgASWQ0LFwYUPCQADN4GIxMYNIAD0wQXlhEiIAVXnRIXXQoUgAxMHiAHmKybOqwRT9oXjgwAHMAPgAKGkwquipi9wA6GYBtTErgUjoQXUU+CABdKgAFdF4eVG4odGA6UggGsRgAZQW4KAad3hBMYrDSBuiUDNmmciYm2EMGK-WBTFM-Ro-RabQ6MDApAAbnxrgB+GCzTbXKizPYHUhHaCnc6XO66B5PF5vD5fdJYP4AoEgsGmSH9bEASlwMOer3e4TpPwZ-zAgOBoOCRVu90eN2BDlh5HhXR6A3iNyV7U6UG6fRoGNVfS18Ju6JgRt6WJxtxNfiYTHN1qMVE1OThfgABgASfA9ZJ8EH8X0OYN+sAB3gwACq-E9TsmMBmU3JlOjCo5NtmN2xJCoiJRvClHxgfJpgsTeygdDtFt1apheEttardANME4YAA1mAQAB3MA0XZjWtd0iSFIg9vFPFjXMwYfV2s+8ORmAAaX4U19-sDACU4+316Px5PiuaywLPjP18y91CXR3u72B0Onz3+4OQiWAPr4w7HCSFxNLWlqNiCy7mDuEaBgAaoIh4kBie6kKAvCKA0sHAmBb4Fqi37hKW+wAcSZzAc07rKjqepWps4F-sRhKAWRlwzmAnAALbiHwdHBAE0DwGA1S8HklTVPEgzVK0VCWsCPTCaJVRwOAVAoWhGGye+L5gP03I4DChgwLwpBQJwvD1AA8uIABWqFQFM5D1hcgzyXwilQMpYCclMxmKJwSyDIM+RwL0PToLoxTusCsxjpIwJIuFnCkJsekGdc-GwAspzLKs6xRngnpQfgsUIfGRgZTAsWRGApTlBAYmefEwWhWA4WRa0Uw9MAuicOsECDFlSwrGsfCcsERhwKkgxVTVZQVEp4DcoZRjGaZ5kwM1YURe6PmkINpADYsOUjbwwIrglPWkHGY1GPw420KtZn1JtrXba0mjAlJUBjXdhAVcAxlVKQAAy5S9Jw6C9KQADC4BfY0FGtFRlWnqk3yxJgQyVH0ENQxMqXUCQFVQBMc31UDdQSaM1bAsm8xHcNeVbATy3+OAAkvW17rxNTdBTBAsqDEwUxMN5vn+Qd1wkAA9NLZD1fJAC0ihwBA6DiLopCK4irSKxSiIwAAAkUEAA3AmBQIrFz61A0viOUitQBAiugBxHGOVLMCy0bTtW7kdlW7wLxFkYJCDKcwDxeFBOSR8k4R7gOB4EwIA2XZEIYhHswXZsC4+MAwCcu4E30pgszY+DkPJdcY3XJNMCx0kqSc29sCqEnpiWqLhOh9WLx9gipADwAokH+SDJ61UXXAigwLzMC+rz3jJPkMAV7jES+uvVfXdcv3lezhRkw14A8wzuUbJ7GKuSJqxA0F3QtVzrTAvtjMbDdodUC37VBNcj3rV1HVE+g4SD7yMiZJ6BAEgeC8IQIAA), The type error is at the bottom, I have been stuck on this for a while now",How to write a function signature with a string that could be inferred statically?
1333,2021-01-03 21:29:26,5,1,"This is a contrived example, but I want to make a utility function that takes a generic type and a runtime argument to help with refinement, and then it returns the refined variable or it throws.

```typescript
type A = { type: ""A"" };
type B = { type: ""B"" };
type AorB = A | B

export const refineAorB = &lt;T extends AorB&gt;(
  node: AorB,
  nodeType: T[""type""]
): T =&gt; {
  if (node.type === nodeType) {
    return node;
  }
  throw Error(`Node was ${node.type} but should have been ${nodeType}`);
};

// Usage 
const unknownAorB: A = { type: ""A"" } as const;
const a = refineAorB&lt;A&gt;(unknownAorB, ""A"");
```

I'm hoping that the 2nd argument's type `T[""type""]` would refine it, but I get the error,

```
Type 'AorB' is not assignable to type 'T'.
  'AorB' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'AorB'.
    Type 'A' is not assignable to type 'T'.
      'A' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'AorB'.(2322)
```

* [typescript playground link](https://www.typescriptlang.org/play?#code/C4TwDgpgBAglC8UDeVSQFxQEQy1AvgNwBQa0AQgsquBJluXkabbAPYBOlicAPlOWLEIADzCdgUAMZsAdgGdJHCADMAlrIgxO3KAB4AKlFHAIsgCbz2XAHwAKYlCiy25utfIAaR89cQDtJgGANpYZFgAusQAlEEINsg+aipQdi5uAHRkCPCI6f600YlOTsrAAK4csr5uJE74PsAAFhxsAO5QAKIcrRx2AAYAcn5QbQCGVgAkSPlZtPhQAEblkvJNbOUANuZQTWMAbtCLEGZQ0-kBkPj90STMxAD0D1AAqvJjAObQxDIKkuWyADWLjasm0XEwcEQKDI9FwBEIUCeUB+ckUUDGVGU6k04PIehg9gBwPaYJ0nmwuFuxCAA)

When I call `refineAorB` with a generic type of `&lt;A&gt;` the 2nd argument is refined so it must be ""A"" so I was hoping TS could figure this out.

Any ideas?",Type refinement function with generics?
1334,2021-01-04 01:12:19,32,1,"Check out the [playground](https://www.typescriptlang.org/play?#code/FAFwngDgpgBAylKBrAPAFQDQwAoygDxCgDsATAZxnJACcBLYgcwD4YBeYGLmNPQkijACuxJMQD2Ad2IBtALowA-J26rcBImUoADACQBvYkIC2AIyg0AvgDoDDAGYWYAJSjVL2pStU-4iVNgyRmYWcliu1KwAXN4+6vxaMHqGJuZWnsq+vmhBqaEwMVkwAG7idKQFsfGagskOTgDSNnbEjjQubiAeXkUNfDWUSFBg4vY8PUXcCMjoMg1hHZGVk9yl5cvc1QI6LW0wTRmxqn0a2zBDI2O8mSs8cwqFt2sVj77PANzAwPYiAMYgdHExCo-nQWC2iWo9CYzAAFKRxL8TCQQFEeFgIABDEAACzR2AAlGjpqhMNhmMB9LFfkDqDBMVjcewYIycdZyBAADZ0ECwgDk1j5BM+qk5UBAMDx9OIYGZCKRxhRIu49nE7VhNOIdIgMFG9NZBJgVKKdDGsJ1DElBKOWRxzJxMggcmVvignPIUBtvlxNCkMGIUEkMAAojRfTRYdoAJLEYqY7kVVlogysyz0iUpjzC2KWWI0cVCGjAnGfXOgSCwAAyJA9KAhgihDBYzPQcPlyOIqJ4hrYrBJYPJn2+fwBQJgYq1UDr-TOjZh5uxUsJaOrk7rFON3E1dIZi+ZrPZXJ5-MF2dU+ZAheBsKlmJlPdYm98qvV24lOr1u9xhqfk1NMHNGBLRxa1bh8O02ElR1nS9Hw3Q9WCih9P0AyDUNw0jGM4wTFlF2TfRU3TGBM20M8slzIoLyvSUXRgXMyzfKhmV-TE0VoIQoAwWJTDRfQeJgdioEsLjVF+XixKNCTBMsYTYnwXjYNYmAZAARgwAAmDAAGYwlg-iZAAFgwABWDAADZdKKCSZAAdgwAAODAAE5LO4WSGNpcQxWsTlxEYWFyGsUwguzbcvKgHy-IC-wAqwPlgtMIVs2ARjOWZCcPX5fAgusFShU+MLvN8-zOQCglsyAA)

In this sample: The `Seek&lt;T,P&gt;` type is the guts of the mechanism, the T parameter is the type to be explored, and the P parameter is a period-separated path of refs into T.

You can mix strings and numbers into P, allowing dereferencing through both objects and arrays. Seek correctly detects them and delivers the type of the dereferenced value. There is no limit on depth!

Use `seek(object, 'path.to.array.47.path.to.sub.item')` to retrieve the item that is there. If the type is well defined to that depth, the type of the call will match it. If the type is not well defined the type of the call will be `void` disallowing its use! There is also a runtime guard that will throw an error if any part of the path is invalid.

Use `lense('path.to.item')` to create a function with the same properties as above which can be used on any object and the type at the end of the path will be safely inferred.",Thank you TS 4.1.3! Type-safe infinite depth lookups
1335,2021-01-04 10:01:16,2,1,"**Monday, December 28 - Sunday, January 03**

###Top Posts

| score | comments | title &amp; link |
|--|--|--|
| 901  | [80 comments](https://www.reddit.com/r/javascript/comments/kp2c1l/statistics_for_this_post_are_updated_real_time_in/)  | [Statistics for this post are updated real time in the comments.](https://github.com/oli799/reddit-post-updater)|
| 863  | [34 comments](https://www.reddit.com/r/javascript/comments/ko10z4/fellow_humans_it_is_20210101t0000000000/)  | Fellow humans, it is 2021-01-01T00:00:00+00:00.|
| 400  | [181 comments](https://www.reddit.com/r/javascript/comments/kn0304/askjs_people_who_have_been_writing_code/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; People who have been writing code professionally for 10+ years, what practices, knowledge etc do you take for granted that might be useful to newer programmers|
| 265  | [25 comments](https://www.reddit.com/r/javascript/comments/kok4hi/tabfs_mount_your_browser_tabs_as_a_filesystem/)  | [TabFS - Mount your browser tabs as a filesystem](https://omar.website/tabfs/)|
| 153  | [76 comments](https://www.reddit.com/r/javascript/comments/klkj1e/60_useful_eslint_rules/)  | [60+ useful ESLint rules](https://github.com/sindresorhus/eslint-plugin-unicorn)|
| 149  | [12 comments](https://www.reddit.com/r/javascript/comments/koy95w/open_source_file_server_i_created_mydrive_similar/)  | [Open source file server I created - myDrive &amp;#40;similar to Google Drive&amp;#41; &amp;#40;Node.js, React, Typescript, MongoDB, Amazon S3&amp;#41;](https://mydrive-storage.com/)|
| 142  | [51 comments](https://www.reddit.com/r/javascript/comments/knt77m/3_javascript_features_from_2020_that_will_make/)  | [3 JavaScript Features From 2020 That Will Make Your Life Easier](https://dev.to/lgrammel/3-javascript-features-from-2020-that-will-make-your-life-easier-9ha)|
| 128  | [101 comments](https://www.reddit.com/r/javascript/comments/kmhej0/askjs_jest_is_so_slow_why_jest/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Jest is so slow. Why Jest?|
| 120  | [14 comments](https://www.reddit.com/r/javascript/comments/klvxmi/string_manipulation_types_in_typescript_4x/)  | [String manipulation types in TypeScript 4.x](https://dev.to/43081j/string-manipulation-types-in-typescript-4-x-556e)|
| 101  | [2 comments](/r/javascript/comments/kpvp3b/create_a_free_url_shortener_with_cloudflare_in_5/)  | [Create a free URL shortener with Cloudflare in 5 minutes](https://lucjan.medium.com/free-url-shortener-with-cloudflare-workers-125eaf87b1ec)|


&amp;nbsp;

###Most Commented Posts

| score | comments | title &amp; link |
|--|--|--|
| 3  | [25 comments](https://www.reddit.com/r/javascript/comments/komseq/askjs_best_ide_for_newbie/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Best IDE for newbie?|
| 2  | [23 comments](https://www.reddit.com/r/javascript/comments/koey6a/askjs_does_anyone_use_jquerydom_api_for_tiny/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Does anyone use jquery/DOM api for tiny projects or do you always use heavy frameworks like React, Angular, or Vue?|
| 46  | [19 comments](https://www.reddit.com/r/javascript/comments/kooffw/advanced_async_patterns_singleton_promises/)  | [Advanced Async Patterns: Singleton Promises](https://www.jonmellman.com/posts/singleton-promises)|
| 0  | [17 comments](https://www.reddit.com/r/javascript/comments/knoal4/askjs_declaring_a_large_number_of_variables/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Declaring a large number of variables|
| 24  | [16 comments](https://www.reddit.com/r/javascript/comments/kojd1f/you_can_compare_dates_in_javascript/)  | [You Can Compare Dates in JavaScript](https://filipvitas.medium.com/you-can-compare-dates-in-javascript-5437a2e7e98)|


&amp;nbsp;

###Top Ask JS

| score | comments | title &amp; link |
|--|--|--|
| 9  | [12 comments](https://www.reddit.com/r/javascript/comments/kpdtnr/askjs_too_many_unfinished_projects_frustration/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Too many unfinished projects -&amp;gt; Frustration|
| 1  | [5 comments](https://www.reddit.com/r/javascript/comments/kp26sy/askjs_what_headless_cms_do_you_prefer/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; What headless CMS do you prefer?|
| 1  | [7 comments](https://www.reddit.com/r/javascript/comments/kp3xf6/askjs_small_ecommerce_store_does_that_make_sense/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Small e-commerce store. Does that make sense?|


&amp;nbsp;

###Top Showoffs

| score  |  comment  |
|--|--|
| 3  |  /u/MIDIBlocks said [Just officially released &amp;#91;Handsfree.js.org&amp;#93;&amp;#40;https://Handsfree.js.org&amp;#41;, a library to help you add face, hand, and pose gestures to your projects in a snap ✨👌  Here is my introductory po...](/r/javascript/comments/kotndz/showoff_saturday_january_02_2021/ghunxir/?context=5) |
| 2  |  /u/relipse said [I just made this JavaScript web app to check the status of your Bible reading progress! https://cworklog.com/gospel/bible-progress/  What do you all think?](/r/javascript/comments/kotndz/showoff_saturday_january_02_2021/ghtlfjx/?context=5) |
| 1  |  /u/vesamet said [I made a tool to encode **any text** into a **cartridge-like image** using steganography.  You can play with it here: &amp;#91;https://vesamet.github.io/Stega-Carder/&amp;#93;&amp;#40;https://vesamet.github.io/St...](/r/javascript/comments/kotndz/showoff_saturday_january_02_2021/gi0zn4p/?context=5) |


&amp;nbsp;

###Top Comments

| score  |  comment  |
|--|--|
| 288  |  /u/53-44-48 said [Various things come to mind as an accumulation of experience.  Here's a few:  Write your initial code to solve the problem infront of you.  Don't try to build it into a platform for ""easy implementati...](/r/javascript/comments/kn0304/askjs_people_who_have_been_writing_code/ghhog38/?context=5) |
| 144  |  /u/xbenjii said [Close but no cigar &amp;#91;https://i.imgur.com/TtsVb1X.png&amp;#93;&amp;#40;https://i.imgur.com/TtsVb1X.png&amp;#41;](/r/javascript/comments/ko10z4/fellow_humans_it_is_20210101t0000000000/ghnoq36/?context=5) |
| 133  |  /u/wutanggrenade_ said [Having to deal with different crap like karma and Istanbul, Babel against typescript was always painful to me.  Jest was always very quick to get set up.  I want to code, not deal with the pain and su...](/r/javascript/comments/kmhej0/askjs_jest_is_so_slow_why_jest/ghemrqo/?context=5) |
| 86  |  /u/ActuallyAmazing said [I'm not going to say anything new by pointing out that lint rules do get subjective but I also think it might be worth pointing out that some of these rules do seem objectively not worth considering. ...](/r/javascript/comments/klkj1e/60_useful_eslint_rules/gh9vz1z/?context=5) |
| 60  |  /u/anomalyindustries said [Bang out a roughly planned poc as fast as possible then refactor it for things that will require any amount of new knowledge.   Recognize analysis paralysis early, don’t pre optimize.   Master the bal...](/r/javascript/comments/kn0304/askjs_people_who_have_been_writing_code/ghhq260/?context=5) |


&amp;nbsp;",Your /r/javascript recap for the week of December 28 - January 03
1336,2021-01-04 14:15:07,19,1,"I'm trying to use optional generics, but for some reason, it throws an error.

[Playground Example](https://www.typescriptlang.org/play?ts=4.1.3#code/PQKgUGAiCWDODGAbAhtAtgUwE6wFwQBUALOAAmVLWgDt1lFSsN4nkAXaAe2oDowBJUgFdYGUgUjsKNWNAAmYtkTEAeAHykARs2QixNUkrGcs0AOY16peMlGlBe0tDakAZidKcjWUgAdkWMhosHz81KQAagDKAMKcCgA0Ti5KWJwA7rCGROykAAYAjkLYAJ6kcpwYsNQA5C4YAB5wLgYSUqQAPqQAFACUpAC8Gm1syHlJ6STwRE5Z6RjQWHJ8YCDAEK5C1PAc3OLImogYURgB0ypgpOIAYtCIbNhZjQ-UclkASswmciqwbKbUMxJZDUEoaAakADeAF8EpdxJJRoMoaQiqVcKQ-gCzJ1hK8MK4aBg5KRoaQAGQ3O4PHBgNTdSFuamPUkYxmE+6PAD8GIIt05OFJ-Uh8KOLncWDQUVGD15iIoEJFVyuaKwJQxWwUhOoxLhytIPEN3Q5NKyXKZAqybOhvT1pIgVwlUplGB4qrKELqVTYNTA0KAA)",Optional generics: T | () =&gt; T
1337,2021-01-04 16:08:28,3,1,"For example:

```typescript
interface MySettings {
  t: new MyPTT(),    // how to enforce this in types?
  ...  // other props
}


class MyPTT() implements PieTransfer {

// does some stuff
}
```

I want `MySettings.t` to only have class instances which implement `PieTransfer` interface.

Do I need to use generics?",interface prop's value must be a class which implements custom interface?
1338,2021-01-05 01:24:45,2,1,[removed],"Explaining inheritance, access modifiers, and generics in typescript."
1339,2021-01-05 10:42:27,12,1,"I'm bootstrapping a webapp project and I'm evaluating the possibility to use Ktor for the backend, mainly because it's lightweight and very fast compared to Spring Boot and I like the idea of exploiting the multiplatform features in the future.

However I'm finding it extremely hard to find a proper way to use Reactjs with Ktor.

If I go the multiplatform route, I found this project that I believe is the most up to date one to use as a starting point: https://play.kotlinlang.org/hands-on/Full%20Stack%20Web%20App%20with%20Kotlin%20Multiplatform/01_Introduction (there's also this one https://github.com/Kotlin/kotlin-full-stack-application-demo but it seems a bit more outdated). However I see a major problem, namely that I would not be able to use any UI library such as React Material UI or React Bootstrap with it because they have not been adapted to kotlin yet. Which is a major show stopper because:

* at the moment I'm going to work on the project alone and I need ready to use components to speed up the implementation
* I don't want to invest hours in trying to adapt the UI library of choice to kotlin on my own and then waste time running after obscure bugs

Since it seems that the full stack option is still in its infancy I'm also trying to figure out if I could go the Ktor + typescript Reactjs route. But I could not find any information about it or any example on how to bundle everything together using gradle. I believe this is partly due to the fact that JetBrains is pushing the full kotlin route and discouraging mixed solutions so I'm turning to you to get some pointers.

Any suggestions? Or is it better to stick to Spring Boot for now?",How to start with Ktor + React?
1340,2021-01-07 22:03:55,0,0,"I'm pretty new to typescript and i'm building a simple notes app. I've been able to implement a delete button for every note created but I'm kinda confused as to how to make the button work. Can someone please take a look at my code and give some suggestions

    interface NewNote {
        text: string;
        date: Date;
        priority: number;
    }
    
    class MyImage {
    
        constructor(
            public width: number,
            public src: string,
            public alt: string
        ){}
    
        public toImgEle(): HTMLImageElement {
            let imgEle: HTMLImageElement = document.createElement('img');
            imgEle.src = this.src;
            imgEle.alt = this.alt;
            imgEle.width = this.width;
        
            return imgEle;
        }
    }
    
    
    
    function addNote() {
        const unorderedList: HTMLUListElement = &lt;HTMLUListElement&gt;document.getElementById('notes-list');
        const noteEntryFile = &lt;HTMLInputElement&gt;document.getElementById('note');
    
        const note: NewNote = {
            text: noteEntryFile.value,
            date: new Date(),
            priority: 1
        }
    
    
        unorderedList.appendChild&lt;HTMLLIElement&gt;(createNewNoteItem(note));
    }
    
    function createNewNoteItem(note: NewNote): HTMLLIElement {
    
        let newListItem = document.createElement('li');
            
        let trashButton: HTMLLabelElement = createTrashButton();
    
        newListItem.innerHTML = `NOTE: ${note.text} &lt;br&gt; DATE: ${note.date} &lt;br&gt; PRIORITY: ${note.priority}&lt;br&gt;` ;
        newListItem.appendChild&lt;HTMLLabelElement&gt;(trashButton);
    
        return newListItem;
    }
    
    function createTrashButton(): HTMLLabelElement {
        let label = document.createElement('label');
        label.htmlFor = 'trash';
        label.innerHTML = 'Delete  ';
        label.classList.add('delete-btn');
    
        let img: MyImage = new MyImage(20, './assets/images/trash-icon.png', 'Trash');
        label.appendChild&lt;HTMLImageElement&gt;(img.toImgEle());
        return label;
    }",delete implementation
1341,2021-01-07 23:49:33,0,1,[deleted],Automatically importing lodash functions in typescript
1342,2021-01-08 17:56:13,20,0,"I just published ""Testing with JEST in Typescript"". It's a simple setup getting started in writing test-cases.

[https://itnext.io/testing-with-jest-in-typescript-cc1cd0095421](https://itnext.io/testing-with-jest-in-typescript-cc1cd0095421)",ARTICLE: Testing with JEST in TypeScript
1343,2021-01-09 09:21:41,19,1," As the question says, does such a scenario exist? I know that TS code eventually compiles to JS, but is there a scenario where someone who is experienced in both technologies would want to write JS instead of TS?

Excepting for:

\- lack of typescript support for certain libraries;

\- ""vanilla"" client-side webdev;

\- commodity",[AskJS] Is there a scenario where writing JS is preferred to writing TS?
1344,2021-01-10 04:32:00,10,1,"Hello everyone,

I have an issue where I cannot type cast anywhere in my TSX code. 

Environment: create-react-app with default tsconfig, TS version 4.1.3, React version 17.0.1

    Line 86:15:  Parsing error: Unexpected token, expected "",""
    
      84 |             {isError ? (
      85 |                 &lt;p className={classes.inputError}&gt;
    &gt; 86 |                     {(error as AxiosError)?.response?.data.message}
         |                             ^
      87 |                 &lt;/p&gt;
      88 |              ) : (
      89 |                  ''
    

I checked that the parser is set to typescript. Other than that I cannot find any other resource online. Any ideas what im doing wrong? Help is greatly appreciated.",Type casting not working in TSX
1345,2021-01-10 07:33:02,34,1,"My co-worker wants to introduce a pattern where a single context is passed down to every execution pipeline.  The argument is that it would allow you to not worry about parameters increased development efficient. Additionally, this pattern is already used under the hood with classes/prototype and since you can easily change their context, we should explored more into it.  In my opinion, it sounds illogical and I have mentioned that this would be a maintenance nightmare and many other theoretical negatives like it defeats the purpose of having a typescript codebase, but I could not provide and find concrete proof and reference(s) that discuss about this pattern.

Could you guys settle the argument?",Using context instead of parameters
1346,2021-01-10 23:59:08,3,1,"[https://github.com/prednaz/typescript\_tic\_tac\_toe](https://github.com/prednaz/typescript_tic_tac_toe)

I am not an expert on the tooling myself and a bit dissatisfied with the hard-coded path to `lib` in `src/index.hml`.

I chose to create my own 3-tuple type instead of using array-based tuples to avoid confusion with arrays and why array functions like `map` cannot be used. Such functions have to be reimplemented for either tuple representation anyways. So using array-based tuples does not gain much.",I made a minimal GUI Tic Tac Toe project skeleton for a friend that beginners new to the web technologies can extend to get to know TypeScript without worrying about the tooling nor the web technologies.
1347,2021-01-11 16:03:28,0,1,[removed],Setting up redux in react app with typescript
1348,2021-01-12 06:26:43,4,1,"Hello, 
I have a scenario, where the library I use allows me to call methods on one specific object, however the method names are all obfuscated so it looks like this object.func4853_djq() or something along those lines. I was wondering if it possible to configure typescript compiler, such that it allows me to write object.getPosition() and on compilation the method mame will be replaced with corresponding obfuscated method.

Thanks in advance.
Im fairly new to the typescript world however i enjoy it very much.",Typescript compiler and obfuscated code
1349,2021-01-12 09:40:21,10,1,"What's the difference between the two? [The documentation seems to use both terms interchangeably.](https://www.typescriptlang.org/docs/handbook/2/type-declarations.html)

Also, do you have a preference on one over the other, and why?",Type declarations or type definitions?
1350,2021-01-12 10:22:38,9,1,"I guess, basically the title. I have a function where I want to take the string from the parameter and use it to assign object keys, but typescript doesn't allow it as it's assuming its a generic string and not a string literal, and thus not allowing me to infer the return type.


```
const objectFromString = (s: string) =&gt; {
  const items: string[] = [""1"", ""2""];

  // This type.
  const obj: any = {};

  items.map((i) =&gt; (obj[`${s}-${i}`] = `${s}-${i}`));

  return obj;
};

objectFromString(""foo"");
// Expect return type to be {
// 'foo-1': string,
// 'foo-2': string,
// }
```
Any ideas on how to do this would be greatly appreciated, or at least a nudge in the right direction!",Question: Setting string as string literal from function parameter
1351,2021-01-12 17:45:44,0,1,[removed],A simple command-line tool to generate typescript CRUD operations
1352,2021-01-13 16:23:05,4,1,I want to create a diagram for my typing definitions so that it's easier to explain that in a presentation. It would be really handy to have something like a diagram generator and also sounded to me like something that could've been done before. Is anyone here familiar with such a tool?,Is there an app to generate diagrams from typescript types/interfaces?
1353,2021-01-13 18:54:04,0,1,[playground](https://www.typescriptlang.org/play?#code/C4TwDgpgBAygrgWwDwEEoQB7AgOwCYDOUOiARhAE4A0UAQulrocWZQHxQC8UAShAMZwKBAJYA3CPAQAJCABtIFJAG0AujTUb1UFDVpsAUKEi8BQ0RKmyFlVBQoNs+IinsBDEEjg4A1jgD2AO44bDSuFACMjkwu7p7efkEhYfYATNHOOnFevgHBoToZzCQI5NR0RUQlZRycBlANWZHKAORyuADmwAAWLaqVOvWNwwD8Tamt7Thdvf2YTsy0Q8MrUGPhk509fcurjQBcpoLC4pKI1ooqAHQ34TQJeTja4REaN1fhqfe5Sc96hnsoIc+McLGcZPJLsp3ncoA9fm9bvZXnCfsFnmkwv8DEZwNAYN1-HA5HhaBAAOxcWCIJAAZhoABZDMZ8YTiaSIBF0twpEgAKw0XkCqCpNjMvGwNkkskRACcVN5BKJ0opgqlHK5hgMAHptVAALSG-U4llQAAqcDAYHatDgIhJtjNNAAMltugNquwqSDzKcLVabXaHUpNOaXW7xSYfScJP7rRBbfa8LZwgNwh4kGaCk6oK7pj0PawKLUmpt87MBnmZmsmkCjr7Y5b44ngyoczD7Noc1WelrTTBgBQRNMAIp2nDAS3tKlxwNJ2wEQfDjo0Pl9iUAWTcS4wSB4QSI8xiLFKlBoAGF-HJEDhD4xMp7ylmZ02563Zwmg8mlDnL9eELeBT7oEBCRtAAByRZbjue4HoWp7lH+N53gsVRFiW0FDruwEEBeV7ITQj7riYmEiBgfLclAkEIaRu7CqKOIGEAA),Having fun with types ¯\_(ツ)_/¯
1354,2021-01-13 23:43:30,6,2,"Title may seem confusing, so here's what I mean.

I include a json in a variable

```javascript
import things from './things.json';
```

Now If I start to type `things[0].` my IDE recognizes what is the nature of this variable and suggests with the proper properties (I believe this is because TypeScript parsed the json). The `things` json object is just an array of objects, and all the objects possess the same properties.

I would like to store one object in a separate variable

```javascript
class Test {
  static oneThing: (?);
}
```

Can I remplace `(?)` with a TypeScript directive that means ""type of objects in things"" ?",Can I tell typescript to use an object from a vectorial array as a type for another variable ?
1355,2021-01-14 02:42:24,0,1,[removed],Simple node express typescript boilerplate
1356,2021-01-14 05:24:31,3,1,"Hey,

I'm currently finding a way to parse function call from source code(string)

my string variables are like :

&amp;#x200B;

const src = ""

import { targetFunc } from '../../test';

export const varToExp = **targetFunc({**

   **key1 : {**   
**a : 'some text',**  
**b : 'some text2**  
**},**

   **key2 : {**   
**c : 'some text',**  
**d : 'some text2**  
**}**

**})**

&amp;#x200B;

export default function foo {

...

}

&amp;#x200B;

""

and I wanna parse every targetFunc and its parameters.

at first, I used typescript to parse function expression from AST and it worked. but  I had to handle every expression from AST to deal with exceptions.

I'm thinking about using RegExp, but I don't think this gonna be answer either.

&amp;#x200B;

Is there a better way to parse function call ?

Thanks",[AskJS] Parsing function call
1357,2021-01-14 14:11:05,2,1,"I've taken an intro to C++ course in my engineering degree and I remember what some of the variable types are and the purpose of for/while loops etc. But that's about the extent of my programming knowledge. I've never done anything more than print simple math operation to console.

I'm looking for resources that will guide someone new to programming into how programming logic works and teaches the syntax of TS. 

I found this resource while browsing some of the comments/threads in this sub. [https://basarat.gitbook.io/typescript/](https://basarat.gitbook.io/typescript/)

Are there other websites that have super beginner level challenges that would help me learn TS to solve problems?

Or is there a better way for me to learn this language (and programming in general)? I've watched some TS vids on youtube but I don't feel like I retained much. I don't feel like I'm actually learning anything when I just copy the code someone else is writing without understanding things really. As an aside rant for example, every video starts out by installing things like npm &amp; node.js and stuff, but I have no idea what those things ARE! So I feel like I'm starting at a deficit since I'm just using things I don't understand. And maybe I don't need to know what those things are exactly to start learning TS, but that feels like I'm learning to run before I can walk or something.

&amp;#x200B;

Any advice/guidance is greatly appreciated!",Advice for a beginner?
1358,2021-01-14 17:13:55,2,1,[removed],New to esbuild. How can I get similar output as typescript command?
1359,2021-01-14 21:42:04,5,1,"Hi , everyone. 

I am tasked to give a presentation of typescript, and i do not know where to start, or how to approach such presentation. This is due to inexperience of doing such presentation. If you have some idea where to start or what subjects to cover please write it. ",Presentation
1360,2021-01-14 22:18:39,4,1,"I'm trying to create one axios library that can basically make any request based on the request object provided and I have that down, but I don't know how to dynamically add the response object. 

[Here is the code in typescript playground](https://www.typescriptlang.org/play?#code/FAiWDsBcFMCcDMCGBjaACAStAjgV2gM6QDyARgFbTKQCSaA3sGmvLgDZsD6ADopABYAuNEVgQA5gG4maACZ9EAfmEB7ClUjTm-aIllxlaNZWpa0sQtxXgC0TuEQBbaMNETpAXzBQ4SVJhx8IjpGZgs8QkhOYw1hLAiiAFFwWSsIWjN5SCVVdVMZCNgAT0M3cCkZHT0DXJNNGThYFVhOZwICRHFoQxj85gB3UDZZTmREWFkCHrz6r2BoAA8rWEg0dN8UdHigyGTUlXSQmV4BV0gxcrNIIu4XEXP3GQdnM4uKsMtrW2iZ+yc7soVOaLZarZBfVYAQQAqgAVAASnAAMsQAOI0AByaAAvAxjnwhGgAOQAekQuAEJLYKnEECJABoZNdbsIiVYiAynv9WTCEci0ZjOR8CFYbHZelFnncieSBEiaXTgB5pPMls1Vsz0LDEKQ2NAMf9YSpYTdoABZRDcbgSHF45iy-jy2ngYSQimOhXgGieFUg9VrHwITZoN1yz1HZiQFQAa2gLvubzMuFssFqGk8IFVoLQ4Jsq3CO1tiAIRXAyDQAAoC5E4oFIjQAJTCAAKTUcoFsAB4JWgAD5oABuB1kAD4cWPQjmIeZiLbSLghrJtpEyHUq3WiA2zLmiOZPmKi-1EKBVo5ELHl0Qq8R6TOAHQWEVfOxSrdKlU70-n6CX1a44uluWnYANJoIsMApAQaCxkUKjwGg2q6vqhrGqaFpWhII4VjI1ZED8dS1gkJAzDQjLCsIwHAE2aCtio7ZdoheoGs4Romrc6HWuUADawEALpjtiE4yJ+e5Pge-5HieaCIAsoAqAQd7spAnaMchLGoexlqceIPH8dhzAfER+EaHerAcDwBJkQZuFRBKd5ZIgMhvh8kC4LA4CiaKtj2QoPogCJ86Lr+q4aLa65EYROyNpFK4keOdpoCSJJoOIKhoAITS4OI-BgSgOUwQGaA0L+0kpNJsiyGg-T8Hw0ADnAaDgNA0CTOlaWkNAwnTjZIXULak7MGZXAnISRKsGWkByR5UZoIFww2gI6AjUKBkOcINk+dkVnaLo+ipnuRF3lUe3bZ5z5-C8B07A+G62TMN1id8EoXZ1zDKjh0Cue5V2xXUflAA)

As you can see, \`rO.response\_name\` does not work. I need to explicitly call 'authLogin' for it to work, which may just be how TypeScript works, but I'd like to see if I can get this working.

&amp;#x200B;

Any help would be appreciated.",Is there a way to pass a dynamic interface?
1361,2021-01-15 08:44:14,1,1,"### My Setup

I have a mono repo with jest tests in each package.

### My code

Github repo [here](https://github.com/ziggy6792/cdk-monorepo-example-backend/tree/refactor/absolute-imports).

I have distilled my issue in an example package `lambda-a` which has the following `tsconfig.json`

```
{
  ""extends"": ""../../tsconfig.build.json"",
  ""compilerOptions"": {
    ""rootDir"": ""./src"",
    ""outDir"": ""./dist"",
    ""baseUrl"": ""./"",
    ""composite"": true,
    ""paths"": {
      ""@example/*"": [""src/example/*""]
    }
  },
  ""include"": [""src/**/*""]
}
```

and the following `jest.config.js`

```
/* eslint-disable @typescript-eslint/no-var-requires */
const base = require('../../jest.config.base.js');
const package = require('./package.json');

module.exports = {
  ...base,
  name: package.name,
  displayName: package.name,
  roots: ['&lt;rootDir&gt;/src'],
  moduleDirectories: ['node_modules', '&lt;rootDir&gt;'],
  moduleNameMapper: {
    '^@example/(.*)$': '&lt;rootDir&gt;/src/example/$1',
    '^scr/(.*)$': '&lt;rootDir&gt;/src/$1',
  },
};
```

### My Problem

For my src `*.ts` files I can use relative, absolute and alias imports as shown [here](https://drive.google.com/file/d/1oB2TArVb9Os94WQVvu6G6L7Y_OIXh5T1/view?usp=sharing)

For tests I am using `*.test.ts` files. My problem is that in my tests absolute and alias imports do not work as shown [here](https://drive.google.com/file/d/19g0Lh44vUfnFlalp2cjSQMUNTn6Ln9-z/view?usp=sharing)

Actually the tests run fine. My only issue is the linting errors and the fact that vs code doesn't give me any intelisense for the modules imported absolutely. 

How can I get absolute and alias imports to work correctly in my tests?

Thanks :)",Absolute imports not working in jest test (*.test.ts files)
1362,2021-01-15 18:47:58,2,2,"I know typescript now support string literals. Is it possible to do something like:
```js
interface IObject {
data: {
  child: {
    key: string;
  }
  }
}
const key: Bleble&lt;IObject&gt; = ""data.child.key"";
```

key is typesafe, without having to define every const by itself.",key sting
1363,2021-01-15 21:16:41,14,2,"Work wants me to use jsdoc with TS
I'm for the most part the only person using typescript there, can this be done or should I use a ts specific solution such as typedoc or Better docs?",Does jsdoc work with typescript and do I need to make any configuration changes to make it work
1364,2021-01-16 00:09:59,7,3,"Hello there,

So, for anyone that knows pure functional programming and has tried Elm / Purescript on the front end or Elixir / Haskell on the backend, how does refactoring and overall fun with programming compare to Typescript?",How does typescript compare to Elm when refactoring?
1365,2021-01-16 12:25:30,2,1,"have a project with multiple ts files that import and export properties to each other:

something along the lines of:
 
    // config.ts
    let keys = {
        key1: """",
        key2: """"
    };

    export default keys;
    
    // main.ts
    import keys from ""./config"";
    
    console.log(keys);
 

however when i transpile it into js with es2020 and link it in html i get the following error:

 Uncaught SyntaxError: import declarations may only appear at top level of a module 

However when i add  'type=""module""'  to the script tag i get a  'Cross-Origin Request blocked'  error.

Is there anyway to export and import modules in html with typescript?",Cannot import modules with html
1366,2021-01-16 16:41:06,2,1,[removed],Some questions on using styled-components with typescript
1367,2021-01-17 13:03:32,1,1,"Hello, I have recently moved my multiple repositories javascript packages to a single monorepo in typescript. It's my first-time complete Typescript project and would love it if you had some time to give me some feedback. 
I had a lot of trouble finding some types of external libraries. Does anyone have experience with typing webpack and gulp plugin?

[Repository](https://github.com/FullHuman/purgecss)",From flow to monorepo in Typescript
1368,2021-01-17 20:13:29,2,1,"I'm working on a very small application that originally was  Nuxt and JS as the language. Now I want to recreate the same application but this time I want to use Typescript as the language since I'm learning it. I'm having a hard time understanding how to make an API call with typescript

Has anyone here used nuxt and typescript before that could guide me or point me in the right direction?",Typescript + Nuxt API call
1369,2021-01-18 13:56:16,8,1,"Hello everyone !

I am working on typescript microservices  and I have integrations test for each one. For my pre-production/production I build my typescript app with tsc as JS files. So I would like to know if I have the ""build"" the integrations test as JS too and run command on the environnement or do I have to add the folder with my ts files ? or maybe I have to use another way ?

Thanks in advance !

Zeltix

PS : my integrations test aren't in src folder, they have their own ""spec"" folder and in it folder for unit and integrations tests",Best practices for typescript app build integration test for pre-prod/prod environnement
1370,2021-01-18 19:07:28,14,1,"Hi everyone! Just wanted to share with you my first article on medium.

I guess it's far from being good but maybe any of you will see something new in it.

Btw I'm ready to be roasted and open for any suggestions.

[link](https://kacper0witas.medium.com/understand-duck-structural-typing-in-typescript-and-its-downsides-5665e60bf09c)",Understanding duck typing in ts
1371,2021-01-19 09:15:40,0,1,"I know its Rollup related as well but I really didn't know where to ask and I'm going crazy. I you think I should make this question elsewhere point me to that place and I'll delete this post and go there 

I'm trying to switch from Parcel, but I'm having troubles understanding how to make the app work in the first place. 

It's server-side, I use esnext/es2019 features - ex: Array.flat(), dynamic import and whatever, it needs to work on node 15 (latest). 

The problem is, plain tsc works with this configuration 

\`\`\`

""target"": ""ES2019"",  
 ""module"": ""None"",   
 ""moduleResolution"": ""Node""

\`\`\` . 

Whenever I use this tsconfig in rollup an enormous amount of problems

First: \`\`\`@rollup/plugin-typescript: The module kind should be 'ES2015' or 'ESNext, found: 'None'\`\`\`

Second: I change module to esnext -&gt; starts giving some type errors that it didnt find before. 

Third: \`\`\`Error: 'default' is not exported by\`\`\`.  (allowSyntheticDefaultImports is set to true). 

Fourth(after changing all bugged default import to import \* as): it starts giving some lodash cjs module error. 

Fifth: changed from lodash to lodash-es, I manage to make the build to arrive to the end, now it either doesnt find modules or doesnt build secondary file (I've tried all the possible target/module combinations in the tsconfig), I tried placing ""module"": true in the package.json. I tried with the resolve/commonjs rollup plugins, I tried excluding all node\_modules imports to just use the local ones instead including them in the final output, nothing seems to work

&amp;#x200B;

Idk, I feel retarded, it's crazy how freaking hard it is just to compile something with a bundler, I really need

&amp;#x200B;

Is there somewhere I can find a ""just works"" typescript/rollup configuration or something ? With both es/cjs modules imported and esnext/es2019 features. I dont understand what I'm doing wrong",[Help Request] ROLLUP - Unable to make build work
1372,2021-01-19 09:24:03,5,1,"
In a typescript source `src/index.ts`, using `EventEmitter`.
When run typecheck

    yarn workspace my_project typecheck

Got error

    yarn workspace v1.22.10
    yarn run v1.22.10
    $ tsc --noEmit
    src/index.ts:28:4 - error TS2709: Cannot use namespace 'EventEmitter' as a type.

    28 ): EventEmitter {
          ~~~~~~~~~~~~

    src/index.ts:30:24 - error TS2351: This expression is not constructable.
      Type 'typeof EventEmitter' has no construct signatures.

    30   const eventHub = new EventEmitter()
                              ~~~~~~~~~~~~

    src/index.ts:102:13 - error TS2709: Cannot use namespace 'EventEmitter' as a type.

    102   eventHub: EventEmitter
                    ~~~~~~~~~~~~


    Found 3 errors.

    error Command failed with exit code 1.
    info Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.
    error Command failed.
    Exit code: 1
    Command: /Users/user/.nvm/versions/node/v14.15.0/bin/node
    Arguments: /Users/user/.nvm/versions/node/v14.15.0/lib/node_modules/yarn/lib/cli.js typecheck
    Directory: /Users/user/my_project
    Output:

    info Visit https://yarnpkg.com/en/docs/cli/workspace for documentation about this command.

The source near 28, 30 and 102 lines like

    import EventEmitter from ""events""
    
    //...

    function buildEventHub(
      taskId: number,
      jobs: MyJob[],
      pool: Pool
    ): EventEmitter {
      const jobIds = jobs.map(({ id }) =&gt; id)
      const eventHub = new EventEmitter()

    //...

    async function send(
      taskId: number,
      jobs: MyJob[],
      eventHub: EventEmitter
    ): Promise&lt;void&gt; {
      const body: RawRequestParams = {
        taskId,
        urls: jobs.map(({ canonicalUrl }) =&gt; canonicalUrl)
      }

Why the error occurred?",How to avoid EventEmitter error in TypeScript?
1373,2021-01-20 12:03:07,9,1,"Was trying to learn function overloading and type narrowing. Tried to create an `add` function which adds `number with number` or `string with string` and throws error in all other cases. This is what I came up with:

    function add(x:string, y:string):string
    function add(x:number, y:number):number
    function add(x:unknown, y:unknown): string | number {
      if ((typeof x === ""number"" &amp;&amp; typeof y === ""number"") || (typeof x === ""string"" &amp;&amp; typeof y === ""string"")){
        return x+y;
      }
      throw Error(""neither string nor number"");
    };

But it gives me the following error:

    Operator '+' cannot be applied to types 'string | number' and 'string | number'.  TS2365
    
        16 | function funcOverloading(x:unknown, y:unknown): string | number {
        17 |   if ((typeof x === ""number"" &amp;&amp; typeof y === ""number"") || (typeof x === ""string"" &amp;&amp; typeof y === ""string"")){
      &gt; 18 |     return x+y;
           |            ^
        19 |   }
        20 |   throw Error(""neither string nor number"");
        21 | };

Can anyone help me understand why exactly is this error being shown by compiler? Coming from a pure js background the code looks just fine to me. Maybe i'm missing something. Thanks.",[TS Newbie] Why is this type narrowing not working? Is it a problem with typescript or my fault?
1374,2021-01-20 13:18:22,6,1,"Hello there!

As I'm getting more and more familiar with functional programming in general, I'd like to know if this:

```typescript

// like this:
// sayHelloToS :: String -&gt; String

type sayHelloToS = (s: string) =&gt; string
const sayHelloToS: sayHelloToS = (s) =&gt; {
   return `Hello ${s}!`
}

// vs
const sayHelloToS = (s: string): string =&gt; {
   return `Hello ${s}!`
}

```

This is a contrived example, I know, but in my opinion some complex typescript signatures tend to become really large and cubersome. Do some of you guys use this pattern for readability?",Functional style argument type declaration
1375,2021-01-20 15:05:38,2,1,"Hey everyone!

Is there a way to change the expected parameter type of a function depending on the passed parameter in the previous call? Hard to explain what I am going for, but here is a very simple example:

    function fn1(input: string): number {
        return 2;
    }
    
    function fn2(input: number): boolean {
        return input === 2;
    }
    
    function fn(input: boolean): void {
        console.log('hello world', input);
    }
    
    // The order of execution would be: fn1, fn2, fn
    // But I want to adjust the parameter type of using() depending on the
    // return type of the previous passed function
    run(fn)
        .using(fn1) // fn1 returns a number ...
        .using(fn2) // ... so the next added function must have parameter (input: number)

Is that somehow possible with typescript?

Thanks for any help!",change parameter type of function depending on previous call to the same function
1376,2021-01-20 15:06:54,5,1,[playground](https://www.typescriptlang.org/play?#code/JYOwLgpgTgZghgYwgAgGpwDbACZzAeygDEBXEBMYfEAHgBUA+ZAbwChlkAKOKAcwC5kZANYh8AdxABKQT17JgAZ2R0A3KwC+rVmACeABxTosuAlHpMAvC3YdkAbQDSCkMmERd+GCoC6AWgB+QWMcPEJSckpqeicfBk1tUEhYRBQAZQgwShBeZTY7ITFBRTAoUF51Aux8RSDkACN8fAwIOBBKu1KIRUEAQSgoOF0aEBIAW3roBnUtHQN0zOzckNNCZGsVsPMMrPLFae0EahLkRQA3QR2lxU2zdZsCsnxZPnWmPUMvZDl1y2sAchKZRy-wANLYONUet9XpYmD8-tYyNgIDBQBBsMgAD5Y5AfCBfBF-ZD-RrNVogMEQvFQboveRw5D9Qa6AB0SmZQ24fCkyAAZHyYbxWRAztBdJwAB5vPHzL7SxEk0YTaD-KSaVRAA),Any idea why this can't be inferred?
1377,2021-01-20 23:59:42,19,1,"Ok, is this a redundant piece of code

`const foo: string[] | [] = [];`  
can this be written as just this

`const foo: string[] = [];`  


Isn't this second wrong. Shouldn't the compiler complain about foo cause the type is an array WITH strings and not just an empty array?

&amp;#x200B;

Thanks a lot in advance!

cheers!",New to typescript. Can anyone explain??
1378,2021-01-21 17:22:17,24,1,"Is it supposed to do that? And if not, how can I solve that?","node typescript is compiling interfaces, too."
1379,2021-01-21 22:22:16,12,1,"What’s the best typescript tutorial around? If anyone could point me in the right, I’d really appreciate it. Thanks.",Best typescript tutorial
1380,2021-01-22 00:35:03,6,1,"Is it only the reason described [here](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-8.html#top-level-await) (convince ts that the file is a module so that you can use top level `await`) . If yes , then why do I see `export {}` in some of the produced `d.ts` files , without even using `await`?",What is the reason of existence of this : `export {}` .
1381,2021-01-23 01:22:28,1,1,,"Migrating 100,000 lines of typescript - a data backed retrospective"
1382,2021-01-23 15:34:09,4,1,,Volta - The Hassle-Free JavaScript Tool Manager - automatically switches to the correct version of global tools like node/typescript/yarn
1383,2021-01-24 22:47:29,0,1,"I just started using typescript with my nextjs project.

When I do the following, I don't get any underline on `null` to warn me that the type of `test` is number and I cannot assign a `null` , but when I pass a string to `setTest` func. it complains.

&amp;#x200B;

    const Input: React.FC&lt;Props&gt; = (props) =&gt; {
      
      const [test, setTest] = useState(5);
      
      useEffect(() =&gt; {
        setTest(null);
      })
    
    ...
    ...

There is a tutorial I am following and it's shown that the following can tell the typescript that it can be both number and  `null`. Is that something old and no longer required?

    const [test, setTest] = useState&lt;number | null&gt;(5);",Typescript doesn't warn me when I set a number state to null
1384,2021-01-26 01:14:02,0,1,"I have the following state and function in my component.

    const [posting, setPosting] = useState({});
    
    const setKey = (e: React.ChangeEvent&lt;HTMLInputElement&gt; | React.ChangeEvent&lt;HTMLTextAreaElement&gt;) =&gt; {
      const {
        name,
        value,
        type,
        checked,
      } = e.target;
    
      setPosting((prevState) =&gt; ({
        ...prevState,
        [name]: type === 'checkbox' ? checked : value,
      }));
    };

I use this function on `onChange` method of an input, checkbox and textarea. However, since typescript is asking for `event` parameter to be `React.ChangeEvent&lt;HTMLTextAreaElement&gt;` , I am setting the `e` on `setKey` function to `React.ChangeEvent&lt;HTMLInputElement&gt; | React.ChangeEvent&lt;HTMLTextAreaElement&gt;` 

However, since `checked` is not available in `HTMLTextAreaElement` typescript complains with the following error message when I hover over `checked` that I destructure from [`e.target`](https://e.target)

&amp;#x200B;

&gt;Property 'checked' does not exist on type '(EventTarget &amp; HTMLInputElement) | (EventTarget &amp; HTMLTextAreaElement)'.

&amp;#x200B;

I know that I can make another `setKey` function to only use for textarea, but that would be code duplication. So wondering if there is a workaround for that kind of a problem?",Having both HTMLInputElement and HTMLTextAreaElement on the same function
1385,2021-01-26 04:42:12,1,1,"I just stumbled upon a tsconfig reference page on typescriptlang.org under `vo` in the URL:

https://www.typescriptlang.org/vo/tsconfig

Just take a look at the page and you'll see some *stuff.*

I don't know if it's a prank or something. Here's the proper tsconfig reference page:

https://www.typescriptlang.org/tsconfig

I'm just curious what's with those pages under https://www.typescriptlang.org/vo.","What is with ""https://www.typescriptlang.org/vo/""?"
1386,2021-01-26 14:22:14,0,1,"Example object I'm working with:

    {
      ""db"": {
        ""db1"": {
          ""username"": ""db1"",
          ""password"": ""password""
        },
        ""db2"": {
          ""username"": ""db2"",
          ""password"": ""password""
        },
        ""db3"": {
          ""username"": ""db3"",
          ""password"": ""password""
        }
      },
      ""queries"": [
        {
          ""query"": ""TRUNCATE db"",
          ""db"": ""db1""
        }
      ]
    }

I am trying to set up `queries[].db` to be `""db1"" | ""db2"" | ""db3""`, but have typescript figure that out on it's own based on the keys of the db section. Is there a straightforward way of pulling this off?",How can I use object keys to determine valid values for a string?
1387,2021-01-27 15:16:29,4,1,"Hi Guys,

I'm creating typescript - react todo style gym session app. I'd like to display my 'DailyTodos' in a list but I'm getting an error whilst trying to map them:   
\` Property 'map' does not exist on type '{ \[id: number\]: SetsInterface; }'. \`

Would anyone be able to help with what I'm missing here, please? Thanks. 

This is my code: 

    interface SetsInterface {
      weight: number;
      reps: number;
    }
    
    interface DailyInterface {
      exercise: string;
      sets: {
        [id: number]: SetsInterface
      };
    }
    
    const DailyTodos: DailyInterface[] = [
      {
        exercise: ""bench"",
        sets: [
          { weight: 3, reps: 1 },
          { weight: 2, reps: 2 },
        ]
      },
      {
        exercise: ""squat"",
        sets: [
          { weight: 31, reps: 11 },
          { weight: 22, reps: 22 },
        ]
      },
    ]
    
    function Daily() {
      return (
        &lt;div&gt;
          &lt;h1&gt;Your session&lt;/h1&gt;
          &lt;div&gt;
            {DailyTodos.map((todo, index) =&gt; (
              &lt;div key={index}&gt;
                &lt;h3&gt;{todo.exercise}&lt;/h3&gt;
                {
                  todo.sets.map((set, index) =&gt; (
                   // map does not exist on type 
                  ))
                }
              &lt;/div&gt;
            ))}
          &lt;/div&gt;
        &lt;/div&gt;
      )
    }",Mapping nested interface objects
1388,2021-01-27 15:19:50,1,1,"Hello everyone,

My friend and I are working on an open-source tracing/cloud observability solution called [Recap.Dev](https://recap.dev/)

We've been very productive this January and here's a list of meaningful updates we made code-wise:

\- **Deeper NestJS integration**. Which allows tracking timings of methods inside specific modules. Check it out [here](https://recap.dev/docs/tracing/nestjs-application).

\- **Created a TypeScript transformer**. Some of our users expressed concerns that the only way to set up a function-level tracing was to use Babel and that sometimes could be a hassle to add. To avoid that we created a TypeScript transformer which makes function-level tracing possible for projects built with just TypeScript compiler. Learn how to set up the function-level tracing with it [here](https://recap.dev/docs/tracing/function-level-tracing#typescript-transformer).

\- **MongoDB operations tracing**. Kind of obvious an improvement because of the popularity of the ME\*N stacks. [Recap.Dev](https://recap.dev/) will now record all MongoDB operations your handler does and show them on the timeline.

\- **ExpressJS tracing improvements.** Why didn't we even do it in the first version?! ExpressJS now records request and response payloads properly.

\- **Vercel and Netlify serverless functions support.** We now provide wrappers for Vercel and Netlify serverless providers. Very useful for people doing the Jamstack.

\- **Better structured documentation.** Now it's easier to learn how to do stuff with [Recap.Dev](https://recap.dev/)

But most importantly some of you have tried it on your projects and provided immensely valuable feedback. Shout out to you guys, stay awesome!

Thanks for reading!",Open-source Tracing Solution - a Month of Updates of Recap.Dev
1389,2021-01-27 15:20:29,0,1,"Hello everyone,

My friend and I are working on an open-source tracing/cloud observability solution called [Recap.Dev](https://recap.dev/)

We've been very productive this January and here's a list of meaningful updates we made code-wise:

\- **Deeper NestJS integration**. Which allows tracking timings of methods inside specific modules. Check it out [here](https://recap.dev/docs/tracing/nestjs-application).

\- **Created a TypeScript transformer**. Some of our users expressed concerns that the only way to set up a function-level tracing was to use Babel and that sometimes could be a hassle to add. To avoid that we created a TypeScript transformer which makes function-level tracing possible for projects built with just TypeScript compiler. Learn how to set up the function-level tracing with it [here](https://recap.dev/docs/tracing/function-level-tracing#typescript-transformer).

\- **MongoDB operations tracing**. Kind of obvious an improvement because of the popularity of the ME\*N stacks. [Recap.Dev](https://recap.dev/) will now record all MongoDB operations your handler does and show them on the timeline.

\- **ExpressJS tracing improvements.** Why didn't we even do it in the first version?! ExpressJS now records request and response payloads properly.

\- **Vercel and Netlify serverless functions support.** We now provide wrappers for Vercel and Netlify serverless providers. Very useful for people doing the Jamstack.

\- **Better structured documentation.** Now it's easier to learn how to do stuff with [Recap.Dev](https://recap.dev/)

But most importantly some of you have tried it on your projects and provided immensely valuable feedback. Shout out to you guys, stay awesome!

Thanks for reading!",Open-source Tracing Solution - a Month of Updates of Recap.Dev
1390,2021-01-27 15:33:24,1,1,"I have upgraded a React project to Webpack 5. The aliases are resolved by Babel. Everything was working fine with Webpack 4. But when launching webpack dev server, Babel makes the build crash because it can't resolve its own imports (inside its source code). 

I've checked Babel runtime's node modules. Everything looks great:

        // from the file babel/runtime/helpers/esm/toConsumableArray.js
        import arrayWithoutHoles from ""./arrayWithoutHoles"";
        import iterableToArray from ""./iterableToArray"";
        import unsupportedIterableToArray from ""./unsupportedIterableToArray"";
        import nonIterableSpread from ""./nonIterableSpread"";
        export default function _toConsumableArray(arr) {
          return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) 
        || nonIterableSpread();
        }
    

The following error is displayed in my terminal:

&amp;#x200B;

&gt;ERROR in ../../node\_modules/@babel/runtime/helpers/esm/toConsumableArray.js 4:0-52  
&gt;  
&gt;Module not found: Error: Can't resolve './nonIterableSpread' in '/Users/MyNamee/Desktop/MyApp/node\_modules/@babel/runtime/helpers/esm'  
&gt;  
&gt;Did you mean 'nonIterableSpread.js'?  
&gt;  
&gt;BREAKING CHANGE: The request './nonIterableSpread' failed to resolve only because it was resolved as fully specified  
&gt;  
&gt;(probably because the origin is a '\*.mjs' file or a '\*.js' file where the package.json contains '""type"": ""module""').  
&gt;  
&gt;The extension in the request is mandatory for it to be fully specified.  
&gt;  
&gt;Add the extension to the request.  
&gt;  
&gt; @ ../../node\_modules/rc-slider/es/Range.js 2:0-78 77:43-61 193:23-41 337:23-41  
&gt;  
&gt; @ ../../node\_modules/rc-slider/es/index.js 2:0-28 6:23-28 10:0-50  
&gt;  
&gt; @ ../../kit/src/form/slider/index.tsx  
&gt;  
&gt; @ ../../kit/src/form/index.tsx 27:41-71  
&gt;  
&gt; @ ../shared/src/panels/card-library/index.tsx 10:15-38  
&gt;  
&gt; @ ./src/pages/main.tsx 12:47-93  
&gt;  
&gt; @ ./src/app.tsx 11:39-82  
&gt;  
&gt; @ ./src/index.tsx 6:38-54

So it seems the issue is that I need to add .js at the end of every Babel/runtime imports. This is of course unrealistic. What should I do to fix this?

Here is my Babel config: 

        module.exports = {
            ignore: [""node_modules""],
              babelrcRoots: ["".""],
              presets: [
                ""@babel/preset-typescript"",
                [
                  ""@babel/preset-env"",
                  {
                    targets: {
                      browsers: [""defaults""],
                    },
                  },
                ],
                ""@babel/preset-react"",
              ],
              env: {
                test: {
                  plugins: [
                    [
                      ""babel-plugin-react-css-modules"",
                      {
                        generateScopedName: ""[local]"",
                        filetypes: {
                          "".less"": {
                            syntax: ""postcss-less"",
                          },
                        },
                      },
                    ],
                    //
                  ],
                },
                development: {
                  plugins: [
                    [
                      ""babel-plugin-react-css-modules"",
                      {
                        webpackHotModuleReloading: true,
                        generateScopedName: ""[local]___[hash:base64:5]"",
                        handleMissingStyleName: ""warn"",
                        filetypes: {
                          "".less"": {
                            syntax: ""postcss-less"",
                          },
                        },
                      },
                    ],
                    // ""react-hot-loader/babel""
                  ],
                },
                production: {
                  plugins: [
                    [
                      ""babel-plugin-react-css-modules"",
                      {
                        webpackHotModuleReloading: true,
                        generateScopedName: ""[hash:base64]"",
                        filetypes: {
                          "".less"": {
                            syntax: ""postcss-less"",
                          },
                        },
                      },
                    ],
                  ],
                },
              },
              plugins: [
                ""@babel/plugin-transform-object-assign"",
                ""@babel/plugin-transform-regenerator"",
                ""@babel/plugin-transform-runtime"",
                ""@babel/plugin-syntax-dynamic-import"",
                ""@babel/plugin-transform-modules-commonjs"",
                [""@babel/plugin-proposal-class-properties"", { loose: true }],
                [
                  ""module-resolver"",
                  {
                    cwd: ""babelrc"",
                    root: ""./"",
                    alias: {
                      ""@components"": ""./components/src"",
                      ""@pages"": ""./pages/src"",
                      ""@assets"": ""./assets"",
                    },
                  },
                ],
              ],
            };

Any help would be greatly appreciated!",Babel can't resolve imports it its own source code
1391,2021-01-27 15:37:55,2,1,"I have upgraded a React project to Webpack 5. The aliases are resolved by Babel. Everything was working fine with Webpack 4. But when launching webpack dev server, Babel makes the build crash because it can't resolve its own imports (inside its source code).

I've checked Babel runtime's node modules. Everything looks great:

     // from the file babel/runtime/helpers/esm/toConsumableArray.js
        import arrayWithoutHoles from ""./arrayWithoutHoles"";
        import iterableToArray from ""./iterableToArray"";
        import unsupportedIterableToArray from ""./unsupportedIterableToArray"";
        import nonIterableSpread from ""./nonIterableSpread"";
        export default function _toConsumableArray(arr) {
          return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) 
        || nonIterableSpread();
        }
    

The following error is displayed in my terminal:

    ERROR in ../../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js 4:0-52
    
    Module not found: Error: Can't resolve './nonIterableSpread' in '/Users/MyNamee/Desktop/MyApp/node_modules/@babel/runtime/helpers/esm'
    
    Did you mean 'nonIterableSpread.js'?
    
    BREAKING CHANGE: The request './nonIterableSpread' failed to resolve only because it was resolved as fully specified
    
    (probably because the origin is a '*.mjs' file or a '*.js' file where the package.json contains '""type"": ""module""').
    
    The extension in the request is mandatory for it to be fully specified.
    
    Add the extension to the request.
    
    @ ../../node_modules/rc-slider/es/Range.js 2:0-78 77:43-61 193:23-41 337:23-41
    
    @ ../../node_modules/rc-slider/es/index.js 2:0-28 6:23-28 10:0-50
    
    @ ../../kit/src/form/slider/index.tsx
    
    @ ../../kit/src/form/index.tsx 27:41-71
    
    @ ../shared/src/panels/card-library/index.tsx 10:15-38
    
    @ ./src/pages/main.tsx 12:47-93
    
    @ ./src/app.tsx 11:39-82
    
    @ ./src/index.tsx 6:38-54

So it seems the issue is that I need to add .js at the end of every Babel/runtime imports. This is of course unrealistic. What should I do to fix this?

Here is my Babel config:

    module.exports = {
            ignore: [""node_modules""],
              babelrcRoots: ["".""],
              presets: [
                ""@babel/preset-typescript"",
                [
                  ""@babel/preset-env"",
                  {
                    targets: {
                      browsers: [""defaults""],
                    },
                  },
                ],
                ""@babel/preset-react"",
              ],
              env: {
                test: {
                  plugins: [
                    [
                      ""babel-plugin-react-css-modules"",
                      {
                        generateScopedName: ""[local]"",
                        filetypes: {
                          "".less"": {
                            syntax: ""postcss-less"",
                          },
                        },
                      },
                    ],
                    //
                  ],
                },
                development: {
                  plugins: [
                    [
                      ""babel-plugin-react-css-modules"",
                      {
                        webpackHotModuleReloading: true,
                        generateScopedName: ""[local]___[hash:base64:5]"",
                        handleMissingStyleName: ""warn"",
                        filetypes: {
                          "".less"": {
                            syntax: ""postcss-less"",
                          },
                        },
                      },
                    ],
                    // ""react-hot-loader/babel""
                  ],
                },
                production: {
                  plugins: [
                    [
                      ""babel-plugin-react-css-modules"",
                      {
                        webpackHotModuleReloading: true,
                        generateScopedName: ""[hash:base64]"",
                        filetypes: {
                          "".less"": {
                            syntax: ""postcss-less"",
                          },
                        },
                      },
                    ],
                  ],
                },
              },
              plugins: [
                ""@babel/plugin-transform-object-assign"",
                ""@babel/plugin-transform-regenerator"",
                ""@babel/plugin-transform-runtime"",
                ""@babel/plugin-syntax-dynamic-import"",
                ""@babel/plugin-transform-modules-commonjs"",
                [""@babel/plugin-proposal-class-properties"", { loose: true }],
                [
                  ""module-resolver"",
                  {
                    cwd: ""babelrc"",
                    root: ""./"",
                    alias: {
                      ""@components"": ""./components/src"",
                      ""@pages"": ""./pages/src"",
                      ""@assets"": ""./assets"",
                    },
                  },
                ],
              ],
            };

Any help would be greatly appreciated!",[AskJS] Babel can't resolve imports it its own source code
1392,2021-01-28 09:42:52,24,1,"I have a lerna monorepo project with the following structure:
```
├─ packages
│    ├─ backend
│    │   ├─ package.json
│    │   ├─ tsconfig.json
│    │   └─ src
│    │      └─ index.ts
│    └─ shared
│        ├─ package.json
│        ├─ tsconfig.json
│        └─ src
│           └─ index.ts
├─ lerna.json
├─ package.json
├─ tsconfig.base.json
└─ tsconfig.json
```
I want to access interfaces declared in `shared` from the `backend` package.

`packages/shared/src/index.ts:`
```
export interface IPerson {
  name: string;
  doSomething: () =&gt; void;
}
```
But if I try to use the interface from the `backend` package vscode auto import won't show any suggestions.

`packages/backend/src/index.ts:`

[screenshot from VSCode][1]

If I import it manually like : `import { IPerson } from '@example/shared/src/index';` it works like a charm. 

Any ways to make VSCode recognise my shared project and suggest auto imports?
The important files from the project:

`/tsconfig.json:`
```
{
    ""extends"": ""./tsconfig.base.json"",
    ""compilerOptions"": {
      ""baseUrl"": ""./packages"",
      ""paths"": {
        ""@example/backend"": [""backend/src""],
        ""@example/shared"": [""shared/src""],
        ""@example/*"": [""*/src""]
      },
    },
    ""references"": [
      {
        ""path"": ""./packages/backend""
      },
      {
        ""path"": ""./packages/shared""
      }
    ]
  }
```
`/lerna.json:`
```
{
  ""packages"": [
    ""packages/*""
  ],
  ""private"": true,
  ""version"": ""0.1.0"",
  ""npmClient"": ""yarn"",
  ""useWorkspaces"": true
}
```
`/packages/backend/package.json:`
```
{
  ""name"": ""@example/backend"",
  ""version"": ""0.1.0"",
  ""main"": ""index.js"",
  ""license"": ""MIT"",
  ""dependencies"": {
    ""@example/shared"": ""^0.1.0""
  },
  ""devDependencies"": {
    ""tsconfig-paths"": ""^3.9.0"",
    ""typescript"": ""^4.1.3""
  }
}
```
`/packages/backend/tsconfig.json:`
```
{
    ""extends"": ""../../tsconfig.json"",
    ""references"": [
        { ""path"": ""../shared"" }
    ]
}
```
`/packages/shared/tsconfig.json`
```
{
    ""extends"": ""../../tsconfig.json"",
    ""compilerOptions"": {
        ""composite"": true
    }
}
```

Thanks for any help!

  [1]: https://i.stack.imgur.com/kGY54.png",Any idea how to make VSCode auto import work with a lerna-typescript-yarn monorepo?
1393,2021-01-29 21:48:29,0,1,"You can see [here](https://ts-ast-viewer.com/#code/PQKhCgAIUgBATApgZwMYCcCWAHALpgewDsoYALRAG0oMgHcD1L5ThxMjdF0AzAQ1SJIPArQDeUSFOyQAXJACMAbnABfIA) that the interface statement has jsdoc as a property that is red. Red are hidden properties . If you use the typescript node module, to parse a ts file to its ast, and choose the interface declaration, it will not have intellisense for the jsdoc parameter, but the property actually exists. How do I make it give me intellisense for jsdoc property also?",ts ast : why jsdoc is hidden property ?
1394,2021-01-29 23:44:57,3,1,"Just wondering if it's opensource or obvious how the typescript playground ([https://www.typescriptlang.org/play](https://www.typescriptlang.org/play)) saves the text to the URL.

For example: [https://www.typescriptlang.org/play?#code/PQKhCgAIUhhB7AdgNwKYCcAukCG704Cekm8kAlogCaoAeqVAtHgYQFxQwAGPAVgM6dIAYyT9sOSAF5IAbQDe5Km0gBGAL4BdIZRq0AgviIAKHABpIAciWWAlJGDBIAJVSj0VADyIArgFsAIwwLeQplSF9AjEh1SAAfSB9qVAAzSgYAPiEeLk5gcBSk4UxyJApkgyNCTwAVSDpMVGp+Fzd4D09xdEoAcwscREIMjON0VH4fABtMfhUa2U0LJRUAa1RCeBTIGtsVV3cvLt6LGozIeShIMcwfdEQr8amZgDoxqh9hVGNjP1Q-eAstHsUjOF0g4Mgv3+slosiUmk00kgtEu4NRDxud0hf3gl3UIViOBaA0ItnA6iAA](https://www.typescriptlang.org/play?#code/PQKhCgAIUhhB7AdgNwKYCcAukCG704Cekm8kAlogCaoAeqVAtHgYQFxQwAGPAVgM6dIAYyT9sOSAF5IAbQDe5Km0gBGAL4BdIZRq0AgviIAKHABpIAciWWAlJGDBIAJVSj0VADyIArgFsAIwwLeQplSF9AjEh1SAAfSB9qVAAzSgYAPiEeLk5gcBSk4UxyJApkgyNCTwAVSDpMVGp+Fzd4D09xdEoAcwscREIMjON0VH4fABtMfhUa2U0LJRUAa1RCeBTIGtsVV3cvLt6LGozIeShIMcwfdEQr8amZgDoxqh9hVGNjP1Q-eAstHsUjOF0g4Mgv3+slosiUmk00kgtEu4NRDxud0hf3gl3UIViOBaA0ItnA6iAA)

You can see the there's a hash which starts with \`code/\`.  How might I decode the resulting string?",How does typescript playground save to and render from URL?
1395,2021-01-30 10:05:36,5,1,"Hi, I am new to typescript, and the whole type-checking thing specially related to undefined variables/object still confuses me. 
In js while calling apis or doing some other work we just check for undefined, what are the best practices in typescript to handle such stuff, specially if the object or variable can be of type undefined at certain times while have other type like string or array at another point.
TIA",Any resource or tutorial on best practices for handling undefined types in typescript?
1396,2021-01-31 03:26:24,1,1,,GitHub’s Trending Typescript Projects is a great way to learn about new and existing typescript projects.
1397,2021-02-01 07:17:50,24,20,"Hi.

I would like to start by saying that I have had trouble getting on board with typescript.
I wrote vanilla nodejs code, writing backend microservices, for a couple years and it was great. 
However it was also the wild west. It was the highest of highs and the lowest of lows.

Eventually I made the switch over to typescript, but something about it bothered me.
A lot of the people I knew who loved it were using it without setting it to strict. It felt
very easy to not validate input, and believe the type system was going to keep you safe.
I wanted to love it but I couldn't. Having written so much javascript, I felt like my model of the code
was based entirely in the runtime and everywhere I saw an input to the system, a network request, a file read,
standard input, etc, the dreaded ""any"" was there. And validation was there sometimes, when it was convenient,
maybe as part of a spec for an endpoint. But a lot of the time a type was slapped on and people had confidence in 
the correctness of their system. Typescript offers a much better developer experience than javascript.
There's no doubt. The endless blogposts, and convert your react app to use typescript, and your express app to 
nest and so forth leaves little wiggleroom for debate. 

But something left me uneasy.

I remember writing Joi schemas and defining typescript types side by side, and helper functions that would validate
some ""any"" type and return the defined typescript type, and I remember hoping that I kept them in sync, and that 
I hadn't made a mistake.

I longed for something like Go where I could define a type, and json.Unmarshal it and know that at runtime the 
value would have the shape I expected of it. I wanted typescript to feel type-safe to me.

Then I discovered [zod](https://www.npmjs.com/package/zod) in its early stages. It was exactly what I wanted. Something Joi-like, but where I didn't
have to maintain types separately. Where defining the schema also inherently defined the type.
However at the time [zod](https://www.npmjs.com/package/zod) was young. It didn't have the features I wanted, and the test suites weren't there.
It was the vision I had, but something was ever so slightly lacking for me. So I wanted to make my zod. And as a pet
covid project I made [myzod](https://www.npmjs.com/package/myzod). Not very creative I know, and I feel bad for ripping the name so hard.

Last summer I made a couple posts about it, and had a couple gracious users raise some issues and feature requests,
and it's been great learning from that. At this time, I would like to ask anybody who's interested to check it out.

I've recently put some work into making it more client-side friendly. It has better support for user-defined errors,
can collect all errors in an object making it more suitable for tasks such as form-validation, and it's been tweaked
for performance making it one of the faster validation libraries out there 
(at the cost of much code redundancy and complexity as these things sometimes go).

The main advantages over zod as far as I can see it is that the api is simpler, the total size of the dependency is much smaller,
and it is much much more performant. Benchmarking it gives anywhere between 100-150X times faster than zod.

My hopes is that this project can make writing typescript code that is actually type-safe easier.
It's not a perfect project, and there is a lot of room for improvements but I would love feedback.

As a final aside, I don't want anybody to take this post as a slam on zod. It is a great project, has a large community at this point,
and is very deserving.

Thanks for reading.

benchmarks: https://github.com/moltar/typescript-runtime-type-benchmarks

myzod: https://www.npmjs.com/package/myzod",myzod: schema validation and typescript type inference
1398,2021-02-01 07:18:41,2,1,,myzod: schema validation and typescript type inference
1399,2021-02-01 12:12:58,0,8,"Music streaming platforms are interested in creating desktop versions of their platforms to avoid losing an audience who prefers web to mobile. Therefore, we see a growing demand for custom tech solutions in this sphere. We had a client that wanted to develop a web version of their platform. One of the main requests was to integrate an online music player that would provide advanced functionality and responsive design. We started to look for the variants, and most of them were over-complicated, so we decided to do it ourselves. 

In the article, we share our experience in creating a custom music player for a web version of Social Music Platform with TypeScript illustrating each step with a programming code.

Follow the link to find out more [https://upsilonit.com/blog/how-we-developed-an-online-music-player-with-typescript/](https://upsilonit.com/blog/how-we-developed-an-online-music-player-with-typescript/)

Feel free to share your experience in creating a custom music player with TypeScript!",How we developed an online music player with TypeScript
1400,2021-02-01 13:46:25,40,3,I'm building a library in Typescript to consume in other typescript projects. When I try to extend from a class in my library that takes one argument it gives an error saying that it expencts 0 arguments. This is fixed by consuming my typescript library without compiling and compiling the end result in my consumer. What would be the correct pattern here? Should I ship the code uncompiled?,Should I ship my typescript library compiled?
1401,2021-02-01 15:14:39,4,4,"I am using antd\`s select component in a react app, onchange event in select returns an object, can i use option as a type in this case?

    handleChange(key: string, value: option) { } 

something like this?",can you define option as type in typescript?
1402,2021-02-01 17:49:16,85,24,,"I'm getting started with typescript. Is this how the type-checking works, or do I need to change my tsconfig? Shouldn't it be perfectly clear to the type-checking system that e is KeyboardEvent? If this is normal behaviour, how do I avoid double instanceof checking?"
1403,2021-02-02 09:52:59,4,3,"I am trying to find a good react template built with typescript. I don't care about the UI, I just want to check some good quality typescript code and patterns so I can follow. If the project uses redux would be great. Thank you

&amp;#x200B;",Can you suggest to me a high-quality template built with React and Typescript?
1404,2021-02-03 10:31:57,4,0,[deleted],MVC in typescript
1405,2021-02-03 12:49:11,0,5,"https://github.com/geopic/store-buddy

**store-buddy** is a portable, type-safe and well-documented wrapper for [localStorage](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage) and [sessionStorage](https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage). Use *one* reference to a stored item in localStorage or sessionStorage across your entire project, while ensuring that the stored item's type and/or object structure is not changed, to prevent unexpected behaviour and bugs.

# Usage:

    import storeBuddy from 'store-buddy';

    // Initialise an entry in localStorage with the key 'site-data' and save an
    // object to that entry as its value
    const data1 = storeBuddy('site-data').init('hello world');
    data1.load(); // returns the string saved at the 'site-data' key: ""hello world""

    // The same as above, except with the addition of type safety
    const data2 = storeBuddy&lt;string&gt;('site-data-2').init('hello world');
    data2.save('hello ye olde worlde'); // overwrite old value with new value of the same type
    data2.save(123); // invalid (type of new value is not string)

    data1.clear(); // clear all data attributed to the key ""site-data""
    data2.clear(); // clear all data attributed to the key ""site-data-2""

    // The option of using sessionStorage instead of localStorage is also available
    // with a second boolean argument in the main function
    const data3 = storeBuddy('site-data', true).init(
      'I only last as long as a single user session!'
    );

Any comments, questions or critiques, I'll be happy to answer. Cheers /r/typescript.",store-buddy: a localStorage and sessionStorage wrapper offering type safety. Try it out and let me know what you think. :)
1406,2021-02-03 14:36:41,4,0,"Henlo so I am planning to study typescript, any advice or key points where should I start??",Enlighten Me ॐ
1407,2021-02-03 18:31:48,5,26,"Hey folks!

https://preview.redd.it/vyy5u2nwyaf61.png?width=1608&amp;format=png&amp;auto=webp&amp;s=8f85082023e5cc90c2b7c16d3e4904962cc27a9e

Last year, I shared with you how I wrote another type-safe dotted path utility [here](https://www.reddit.com/r/typescript/comments/jpf9gr/typesafe_dotted_paths_for_objects_arrays_and/). It turns out that this version had its limitations, especially when working on gigantic types - like the ones we can find in the DOM. This ended up crashing TS for React devs, etc... Here is the new piece of machinery:

https://preview.redd.it/znwnx7t23bf61.png?width=1648&amp;format=png&amp;auto=webp&amp;s=5a55f4d2c18a36326cdf994073c2d57043a74737

This version, instead of computing all possible paths, it only computes the next ones as you type! Yes, when you press that `.` dot on your keyboard, it will mimic what TS does for object accessors:

1. Try to access that path
2. If it's a valid path, it will propose you the next valid paths
3. If the path is invalid, it will show you the previous paths
4. That's where it stops, keeping it very efficient

Thanks to this, `AutoPath` is ready for production. It makes a killing when combined with `Path` \- which is now able to dive deeply within unions, objects, arrays, and handle possibly undefined values. As an ultimate performance test, I tested `AutoPath` with the `window` object - with a maximum of 16 props that can be chained before TS will yell at you.

Come grab it over here at the [ts-toolbelt](https://github.com/millsp/ts-toolbelt). Stars are welcome!

(or you can grab the code directly from [here](https://github.com/millsp/ts-toolbelt/issues/154#issuecomment-772723670))

Cheers!

https://preview.redd.it/8xgcrjsa5bf61.png?width=2550&amp;format=png&amp;auto=webp&amp;s=59b66efd806a203a6db481947516b3c06695d4e3",Production-ready type-safe dotted path notation
1408,2021-02-03 21:00:49,3,2,"Here's a [link](https://www.typescriptlang.org/play?#code/GYVwdgxgLglg9mABMGAbKBTATgIQIZQQAWGAzgBTBYgxQBcipUWMYA5gNoC6ANMmplwBPAPwMmLdgEpxzVpy6IA3gChE6xDGCJyAQhTpsOIVOVqNFrBiggsSKjSgBuc+oC+K1-0PDEAXm9BYwA6KDgAGTgAd2wAYTxSDHIpFy8rGztkalpgg0FyLwtKUz8APmRQiOi4hKSpYNYIVBAAEzJKASMTLxSVNyA) to the playground.

Shouldn't this work (as in \`filterBy\` should be inferred as a string)?",Shouldn't this work or am I doing something stupid?
1409,2021-02-04 13:04:20,5,3,I’m using typescript in asp.net mvc and I’m trying to connect it to my Postgres database but I have no idea how to go about and everything I’m finding is for c# instead. Anyone know how to go about is please?,Typescript asp.net mvc
1410,2021-02-08 22:31:48,2,1,"I am learning typescript and side by side working on a project alongside as well with a peer of mine. Anyhow, my doubt is, how do I write methods using the following ""signatures"".

&amp;#x200B;

His suggestions were to use signatures 

 

* length: () =&gt; TInt
* charAt: (index: TInt) =&gt; TChar  
 (throw index out of bounds error)
* indexOf: (substring: TChar | TString) =&gt; TInt
* substring: (startIndex: TInt, length?: TInt) =&gt; TChar  
 (throw index out of bounds error, invalid length only if &lt; 0)
* equals: (operand: TChar | TString) =&gt; TBoolean
* static equals: (operand\_1: TChar | TString, operand\_2: TChar | TString) =&gt; TBoolean
* compareTo: (operand: TChar | TString) =&gt; TInt
* static compare: (operand\_1: TChar | TString, operand\_2: TChar | TString) =&gt; TInt

&amp;#x200B;

ps:- TInt, TChar, TBoolean.... and so on are just Int, Character, Boolean....... classes respectively.

all of these methods are for strings and I'm kind of stuck getting an understanding of what signatures are and how do I actually write a method using one of these.

Would be really helpful if anyone of you would help me out here.",How to write methods using signatures?
1411,2021-02-08 22:58:06,0,1,,This might be slightly off-topic but I'm not getting any code suggestions for Typescript React props. I defined an interface for the component's props and I assumed that typescript would show me which properties the component can take it but nothings showing up
1412,2021-02-09 16:02:32,14,1,"I was surprised today to find that the following code is valid according to tsc:

    type IServiceInterface = {
        method(): void,
    };
    
    class ServiceImplem implements IServiceInterface { 
        public method(): Error[] { 
            return [];
        }
    }

I was expecting an error like `Error[] is not assignable to void`. Could someone explain why this is valid?

[Playground](https://www.typescriptlang.org/play?#code/C4TwDgpgBAkgyhATgNwJYGMIwHbCQMwENMBBKAXigG8BYAKCkagFsJgALAewBMSBGABQBKAFxRknVNwA09AL4BuevVS4CxaPCRpMOPIiKYAQtXpMWbLtyODR4yTPnK66ADaEAzh6gIUGLMxgrhDMUKiBway43lp+umoGGiTSsL46WAmGECa0DEysHDz8wmIAooiInIgA2gC6pnnmjIhsAK6I2FB1So1Qcs7mBVY2JVDllTX1uU1MLcDtnd1mTP10q0A)",Why is a function returning something considered a valid implementation of an interface method returning void?
1413,2021-02-10 08:37:22,2,1,"What should be the typescript types for these react event handler functions.

https://preview.redd.it/ig0kk7pv3mg61.png?width=1908&amp;format=png&amp;auto=webp&amp;s=2ccaadee661bb561cbecebc8a19b3c30c67cde5d",Typescript types
1414,2021-02-10 11:27:58,7,1,Hello so I am new at using gulp so after I got gulp to compile my typescript files to java script when i open the webpage I keep getting this error exports is not define any solutions?,Compiling typescript with gulp
1415,2021-02-10 18:20:51,1,2,"Hey,

I got strange error today on typescript type checking:

&gt;Property 'inventory' of type 'Inventory | undefined' is not assignable to string index type 'string | number | boolean | Function | Date | null' 

    import { InventoryClass } from ""../entities/inventory.ts"";
    
    export class Character{
        public inventory?: InventoryClass ; //error happend here
    }

And my ""inventory.ts"" file content:

    export class InventoryClass {
        public money: number = 0;
    }

Why I got this ? Because it is ""class"" type ?

But in many other class I can do this without any kind of errors and with class.

For me is not clear, thanks for help.

&amp;#x200B;

I would like to avoid writing ""ts-ignore"".

Happy coding to all",Property 'inventory' of type 'InventoryClass | undefined' is not assignable to string index type 'string | number | boolean | Function | Date | null'
1416,2021-02-10 20:12:10,3,2,"Everything in this demo is well-documented using comments.

This system allows parent constructors to be called by children, child prototypes to inherit methods from parent prototypes etc. Uses clean-code and class-based syntax.

In short, this system allows you to use multi inheritance in typescript in a clean and manageable way.

Here is the link:

[https://www.typescriptlang.org/play?#code/PQKgsAUABDt-D4FoWpVAkgOQCoCUB5AEQFUBhHDArKNNSOHACwEsBnKAEwFMBbAeyhsm-AO4cRoqABdBAVzbcovFgA8WAOw6aZATwAO3NgGMATi33SoO0UwCGVjFABG3ADYtuANyXsGsaSYlATYrYzduOw0oUTtdKH1+NjYWZwiAOigyNztkl1zuTiFdDWk7VWsOBULMgg1jJV1+OShjfn1dfxhApQAzOXrpFn5oto6ABVN27lMhoygmluMo-JTltzd4s0jpJSj4lXUtKCii6q6ZIN4oSQXmmKirFl67lrkhjwAvJUD2ZW5AvxOOlIBcAKI+Uy6X4aADm1mivw4PAElRi7jcSE4-GMcl43FKhRiLECrX4vHxpTYIIgF0Q9IZtDo6GwADECEzmRcAOpBaJOUzcXozGSCABEZFYbk4YoANJh-iseq0cnlAg40ZoguYhnCoL0ptdlYdNNTQdBYBhEaxkXx+PLevxTFBBXZOHZnCwPNJ4vo5KZEoo2PKnPYfAlBb01ETlRo7PiOPwXsa1KaLqISUwTq07PoSXY3FAxQBZMWZABC8Q0gnxUW0HCRUA03AayTsUPlzne1jCzWlN3c+kyobs4YLbH4FzdPCKbQpBOkDcEyvGOV0MwA5Bx8YDOMGoNxVPocppNPDbBq-q4z1w7VppKYHDHtdwaRccPIPixvpc-juRJw8qLE23AxoI07ZqEDgsMYZL3qYcjGFY-5AqKB52MYWYmhosoXKauxulASbZm08GIbIpiZMWdgANZKGw-o-OBbgTicyQsLC0T7BG0yzJ42jWtwFxQUMsGkaECFIf8u6ZLyBIIiSLAFpst7hO2N76FMhh8UY8opLwx7xDwamCpcfCihcrhmXohivA8pRmUaghWV2ViKFYPQsM6XgFnITFNnIGxsScGi6G+tIWjAobTL+EiDhwwEAFwAJSQCAwDmsAwBQMWqZaOaal5MW3IFnRzoAN7pqVADKhiFIlAW8K4zoALwBUFuQhboADcFyBg1ABqLYUVAbUaIFhadfsvURXAWVQMwfx-MqIkwXBEnkdJAGXBqynKHlHDCH2RRhkJkVCGUonrQ+5EABRIg1xWlTMyVQJV51zSAC1BIoJxSZ1PC9HYgVWD5bh+RwjrOiVbhlVuPHaXMwZ0gg1RFM81mYV6RTYkYGgblYmn8F4LA8I5mTpSj3Q2ukgajW9qgNQATAADCzQENQArGzAC+VOxeksSw7VoFFG1nMzXAfOzbA80ABIzI09wQcaAIAQl9yxA5dhQDDZVoadiVVbDAAyQrSPdNoNeV-VQENSFOvKQs0SL9WNc1POve99JIrTSTpBUSBtb7zuu5wkuwNLcBsHEcssLdXv8+J-AZG4-CwrdYrMEozsijHugSCwACEYqpedUewGnsLjEklvsI9esvW9ScjBOqfp3X1KBmXUuQNLkCFRwxaSu2GG7BVFxxviDUSTeY0TcF03mnN2WLfW1mrWJrc3VJKFFOqVh7dhh0iIFJ2jmd0eXWt4k7xbD05SPj5ITM8pT9wM8PmeicfQENPv-Td+EcYD93OvLRWdkVZBC2kCDWLQtaHyyPYZ+48DYXyNudTQD4gSIW4NVdwvQE7N1-jAZO7cM4AANixVnjL4DgAAScqvt348yLhQnukc+6ZWysyXhfD+H0AivNVccQZiQCwTMIGDQoAiPXM6Q8uwNB7hyo3Uw8ph7ILHiKcq0tB4yLXNoi480ABSCgrDGRyKZEkLhuzYnxofdinEezZjBn5BYAJMhrzRK4ZY1QoB9SSINYaToZoXFvpJCit136f3MHCH+9JQDfT6CnNOGY9TSFEIIDwzYODrELMqQUbBDBIRYOGY+G4LrQS3mRXeasgS4RIXAVyUA-GNmPKI50nVlRiiRGKOCuxVDSAphlRpT1YYzHSOE8ikzlKd2SsA+AGjR4v0olMpCMyNidzfrQ+Zy9ECJIwC8YCCDMZSn3oIU6ZkvJEVENEImiN+IIlCJEIoxEFA3mVIDYGbhFw7Q8tA4+QgAQNMZFwQQ1i7C9FQcBPJ1lsLwzWRRak30-y0XmNY1iwFiYzHMGTT5Qpvmg18kYYZ-NfZ0zauVRmUAADM7MFgNQACwsx5gs0BK8oBglUPGY8ShiJY2lIKaI2LTC4pvOUmBe5hKx3jvExAZDXxV0ztnBIBjnT50LiXDhICjHZS5TyiIREXgCs4EKk4nBOA3jENEPebApzSDKMYGiRDvbytbinRVHcs7QPaXIk4DqMJ0U4FqtlXChFfTIO0eIqtdyQ0NHCg6FSiayB9IYASshTnY3hsm-gqbXxdHwQ6j50DfimCKPoUevBUFihFbi7gfSM1AxYsENF2g3LLgBXlSVdrIp2IJkRSEdbM3Snhra0lEAxi6EmLxJGt1ZETJzXm+UABtMZZVaZTBTQYbg6in5aMoou7dsoAC6DpxzcF2RFW+qqOmAO4FIedphM7jAAIylxmr6iZVca5sATt1KA81DzFKsFShqdKOZQGZdLT9lFnZmyhX+yAMH0jftrvMgD2UgPDQZszTmEGoNIbVekfOcc-0YYPEebD3qlAwaEHETVYpCMdPSFgqYnBcH4LcIQ9DgHKNSRLDQ-EaJX2MYgMhhwjrnU8cw3xqw1Gb1+ok4GwoJduH6NvX8XIKROIekNRmtdIpTiP00Ss+UnUMWn37K4IuA9t4PHGaYBuz1WoKZmDNa9mFlnj0enulZ9MYOhIiuaNTCs3DaX1AMEpIw0KToRjMJG+p40rHbI+eIxF+DOAAFbDQ4LdZwbBkryiwYIEYfKsvYdunYMu-RBjDFGFG6dDyjCVYangFsTpOAAB46JNBePsMzoUAB8nY2Ctfa2W7r3BetdQG7oQby7T0DpxaTJQwcEIXuIXAGrUX6sdFZIaaqZ4IgEHK0hFrUA2ttAmz14i-WurDZcGNq7XWbt9dCrNwbcqEAney+s2EAICC3Ma-F3QWBaG-ucMldIUMwQYSYFE2ho1BubdBRjW6Rda0ragAAMmxycdI9g2CA40MD2YugEf4mSq9QU0h-QaAWfSOwy737Hvps4ZntDj0M8jtqqA7LYD5eh06WHmE8tI7JHtg7R3uA-eGpVzsVOw2QHml4v4AwWAGSdGUByGb8UCHEYSUwUilD2xGqB92r8GUW9MDzIAA](https://www.typescriptlang.org/play?#code/PQKgsAUABDt-D4FoWpVAkgOQCoCUB5AEQFUBhHDArKNNSOHACwEsBnKAEwFMBbAeyhsm-AO4cRoqABdBAVzbcovFgA8WAOw6aZATwAO3NgGMATi33SoO0UwCGVjFABG3ADYtuANyXsGsaSYlATYrYzduOw0oUTtdKH1+NjYWZwiAOigyNztkl1zuTiFdDWk7VWsOBULMgg1jJV1+OShjfn1dfxhApQAzOXrpFn5oto6ABVN27lMhoygmluMo-JTltzd4s0jpJSj4lXUtKCii6q6ZIN4oSQXmmKirFl67lrkhjwAvJUD2ZW5AvxOOlIBcAKI+Uy6X4aADm1mivw4PAElRi7jcSE4-GMcl43FKhRiLECrX4vHxpTYIIgF0Q9IZtDo6GwADECEzmRcAOpBaJOUzcXozGSCABEZFYbk4YoANJh-iseq0cnlAg40ZoguYhnCoL0ptdlYdNNTQdBYBhEaxkXx+PLevxTFBBXZOHZnCwPNJ4vo5KZEoo2PKnPYfAlBb01ETlRo7PiOPwXsa1KaLqISUwTq07PoSXY3FAxQBZMWZABC8Q0gnxUW0HCRUA03AayTsUPlzne1jCzWlN3c+kyobs4YLbH4FzdPCKbQpBOkDcEyvGOV0MwA5Bx8YDOMGoNxVPocppNPDbBq-q4z1w7VppKYHDHtdwaRccPIPixvpc-juRJw8qLE23AxoI07ZqEDgsMYZL3qYcjGFY-5AqKB52MYWYmhosoXKauxulASbZm08GIbIpiZMWdgANZKGw-o-OBbgTicyQsLC0T7BG0yzJ42jWtwFxQUMsGkaECFIf8u6ZLyBIIiSLAFpst7hO2N76FMhh8UY8opLwx7xDwamCpcfCihcrhmXohivA8pRmUaghWV2ViKFYPQsM6XgFnITFNnIGxsScGi6G+tIWjAobTL+EiDhwwEAFwAJSQCAwDmsAwBQMWqZaOaal5MW3IFnRzoAN7pqVADKhiFIlAW8K4zoALwBUFuQhboADcFyBg1ABqLYUVAbUaIFhadfsvURXAWVQMwfx-MqIkwXBEnkdJAGXBqynKHlHDCH2RRhkJkVCGUonrQ+5EABRIg1xWlTMyVQJV51zSAC1BIoJxSZ1PC9HYgVWD5bh+RwjrOiVbhlVuPHaXMwZ0gg1RFM81mYV6RTYkYGgblYmn8F4LA8I5mTpSj3Q2ukgajW9qgNQATAADCzQENQArGzAC+VOxeksSw7VoFFG1nMzXAfOzbA80ABIzI09wQcaAIAQl9yxA5dhQDDZVoadiVVbDAAyQrSPdNoNeV-VQENSFOvKQs0SL9WNc1POve99JIrTSTpBUSBtb7zuu5wkuwNLcBsHEcssLdXv8+J-AZG4-CwrdYrMEozsijHugSCwACEYqpedUewGnsLjEklvsI9esvW9ScjBOqfp3X1KBmXUuQNLkCFRwxaSu2GG7BVFxxviDUSTeY0TcF03mnN2WLfW1mrWJrc3VJKFFOqVh7dhh0iIFJ2jmd0eXWt4k7xbD05SPj5ITM8pT9wM8PmeicfQENPv-Td+EcYD93OvLRWdkVZBC2kCDWLQtaHyyPYZ+48DYXyNudTQD4gSIW4NVdwvQE7N1-jAZO7cM4AANixVnjL4DgAAScqvt348yLhQnukc+6ZWysyXhfD+H0AivNVccQZiQCwTMIGDQoAiPXM6Q8uwNB7hyo3Uw8ph7ILHiKcq0tB4yLXNoi480ABSCgrDGRyKZEkLhuzYnxofdinEezZjBn5BYAJMhrzRK4ZY1QoB9SSINYaToZoXFvpJCit136f3MHCH+9JQDfT6CnNOGY9TSFEIIDwzYODrELMqQUbBDBIRYOGY+G4LrQS3mRXeasgS4RIXAVyUA-GNmPKI50nVlRiiRGKOCuxVDSAphlRpT1YYzHSOE8ikzlKd2SsA+AGjR4v0olMpCMyNidzfrQ+Zy9ECJIwC8YCCDMZSn3oIU6ZkvJEVENEImiN+IIlCJEIoxEFA3mVIDYGbhFw7Q8tA4+QgAQNMZFwQQ1i7C9FQcBPJ1lsLwzWRRak30-y0XmNY1iwFiYzHMGTT5Qpvmg18kYYZ-NfZ0zauVRmUAADM7MFgNQACwsx5gs0BK8oBglUPGY8ShiJY2lIKaI2LTC4pvOUmBe5hKx3jvExAZDXxV0ztnBIBjnT50LiXDhICjHZS5TyiIREXgCs4EKk4nBOA3jENEPebApzSDKMYGiRDvbytbinRVHcs7QPaXIk4DqMJ0U4FqtlXChFfTIO0eIqtdyQ0NHCg6FSiayB9IYASshTnY3hsm-gqbXxdHwQ6j50DfimCKPoUevBUFihFbi7gfSM1AxYsENF2g3LLgBXlSVdrIp2IJkRSEdbM3Snhra0lEAxi6EmLxJGt1ZETJzXm+UABtMZZVaZTBTQYbg6in5aMoou7dsoAC6DpxzcF2RFW+qqOmAO4FIedphM7jAAIylxmr6iZVca5sATt1KA81DzFKsFShqdKOZQGZdLT9lFnZmyhX+yAMH0jftrvMgD2UgPDQZszTmEGoNIbVekfOcc-0YYPEebD3qlAwaEHETVYpCMdPSFgqYnBcH4LcIQ9DgHKNSRLDQ-EaJX2MYgMhhwjrnU8cw3xqw1Gb1+ok4GwoJduH6NvX8XIKROIekNRmtdIpTiP00Ss+UnUMWn37K4IuA9t4PHGaYBuz1WoKZmDNa9mFlnj0enulZ9MYOhIiuaNTCs3DaX1AMEpIw0KToRjMJG+p40rHbI+eIxF+DOAAFbDQ4LdZwbBkryiwYIEYfKsvYdunYMu-RBjDFGFG6dDyjCVYangFsTpOAAB46JNBePsMzoUAB8nY2Ctfa2W7r3BetdQG7oQby7T0DpxaTJQwcEIXuIXAGrUX6sdFZIaaqZ4IgEHK0hFrUA2ttAmz14i-WurDZcGNq7XWbt9dCrNwbcqEAney+s2EAICC3Ma-F3QWBaG-ucMldIUMwQYSYFE2ho1BubdBRjW6Rda0ragAAMmxycdI9g2CA40MD2YugEf4mSq9QU0h-QaAWfSOwy737Hvps4ZntDj0M8jtqqA7LYD5eh06WHmE8tI7JHtg7R3uA-eGpVzsVOw2QHml4v4AwWAGSdGUByGb8UCHEYSUwUilD2xGqB92r8GUW9MDzIAA)","Playground tutorial on you to implement mixins in Typescript; easily and readably, using class-syntax and clean code"
1417,2021-02-12 15:31:47,0,1,Ok I am running in a problem wich I can't find a fix after searching the Web when I try to run my Web app after importing gsap in my typescript file I get an error where browserify is looking up for gsap in the wrong directory not the node modules director how can I set the path for such a thing.,Browserify with gsap
1418,2021-02-13 08:35:45,13,1,"So the Enum has passed, but i think that Literal Types fit much better. The ""type"" directive will make it even better.

Typescript for reference [https://www.typescriptlang.org/docs/handbook/literal-types.html](https://www.typescriptlang.org/docs/handbook/literal-types.html)

It will be less verbose and more elegant to use:

    type Model = 'Sedan' | 'Coupe';
    type Color = 'Red' | 'Blue';
    
    class Factory {
      function produceCar(Model $model = 'Sedan', Color | 'Green' $color = 'Red') {}
    }
    
    (new Factory)-&gt;produceCar('Coupe', 'Green');
    
    class Util {
      function sort (array $array, 'ASC' | 'DESC' $direction = 'ASC') {}
    }
    
    (new Util)-&gt;sort($array, 'DESC');

Thanks for your time :)",Literal Types
1419,2021-02-13 16:51:01,5,1,"The base language of the microbit is static typescript. It is described a bit in this paper. Static TypeScript: An Implementation of a Static Compiler for the TypeScript Language [https://www.microsoft.com/en-us/research/publication/static-typescript/](https://www.microsoft.com/en-us/research/publication/static-typescript/)

The bbc:microbit is a fun mini computer for kids [https://microbit.org/](https://microbit.org/)

Do you know of any other descriptions of how to code in this language.   
For example Typescript allows you to look up the type of a variable [https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-1.html](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-1.html)  
And that allows you to do cool things like logic programming (prolog) [https://itnext.io/solving-riddles-with-0-lines-of-program-b23994072dd0](https://itnext.io/solving-riddles-with-0-lines-of-program-b23994072dd0)

Messing around in the makecode editor[https://makecode.microbit.org/#editor](https://makecode.microbit.org/#editor)  I can't find any cool typescript like analysis being shown.   
Do you know of any programs written in microbits static typescript that show this sub languages capabilities?",Static Typescript used in the BBC:Microbit
1420,2021-02-15 01:24:32,7,1,,typetype: generate complex typescript type easily
1421,2021-02-15 08:07:42,5,1,"In most post I see explaining the use of `keyof` operator and `indexed access types` an example is always given of a function that takes an object and property and returns the value of that property.

The idea is that these TypeScript features allows us to statically type such functions.

An example of this can be seen in the documentation [here](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-1.html) where you have:

```
function getProperty&lt;T, K extends keyof T&gt;(obj: T, key: K) {
  return obj[key]; // Inferred type is T[K]
}

let x = { foo: 10, bar: ""hello!"" };

let foo = getProperty(x, ""foo""); // number
let bar = getProperty(x, ""bar""); // string

let oops = getProperty(x, ""wargarbl""); // Error! ""wargarbl"" is not ""foo"" | ""bar""
```

This feels to me like a convoluted  pattern just to show a feature of TypeScript. I mean if you want type safety assurance that you are accessing a property that exist on an object, why not attempt to access that property directly? By that I mean this:

```
x.foo // or x[""foo""]
x.bar // or x[""bar""]
x.wargarbl // Error! ""wargarbl"" is not property of x
```

Why go through a function?

Or am I missing something?

Hence two questions:

1. What benefit does a function like `getProperty` provide over direct access of properties of an object?
2. What other real life usecase exist for keyof operator and lookup types?",Real world use case for keyof operator and lookup types
1422,2021-02-15 10:04:07,2,1,"**Monday, February 08 - Sunday, February 14**

###Top Posts

| score | comments | title &amp; link |
|--|--|--|
| 438  | [116 comments](https://www.reddit.com/r/javascript/comments/lg80p2/nodejs_14_is_over_20x_faster_than_python38_for/)  | [Node.js 14 is over 20x faster than Python3.8 for fib&amp;#40;n&amp;#41;](https://jott.live/markdown/nodejs_vs_python_)|
| 296  | [29 comments](https://www.reddit.com/r/javascript/comments/lgxe5v/one_second_to_read_github_code_with_vs_code/)  | [One second to read GitHub code with VS Code.](https://github.com/conwnet/github1s)|
| 279  | [11 comments](/r/javascript/comments/ljl416/nanoneuron_7_simple_js_functions_that_explain_how/)  | [NanoNeuron - 7 simple JS functions that explain how machines learn](https://trekhleb.dev/blog/2019/nano-neuron/)|
| 267  | [70 comments](https://www.reddit.com/r/javascript/comments/lfk9hc/husky_a_popular_javascript_project_with_4m_weekly/)  | [Husky, a popular JavaScript project with 4M weekly downloads, drops MIT license](https://typicode.github.io/husky/#/?id=license)|
| 195  | [16 comments](/r/javascript/comments/lhoe2a/computer_tea_earl_grey_hot_offline_voice_on_nodejs/)  | [“Computer! Tea, Earl Grey, Hot”: Offline Voice on NodeJS](https://medium.com/picovoice/computer-tea-earl-grey-hot-offline-voice-on-nodejs-cb587fd3f5e8)|
| 146  | [18 comments](/r/javascript/comments/lienp3/imagestore_an_opensource_alternative_to_google/)  | [ImageStore - An open-source alternative to Google photos](https://github.com/gregordr/ImageStore)|
| 126  | [24 comments](/r/javascript/comments/lj5a1j/debug_your_tests_in_typescript_with_visual_studio/)  | [Debug your tests in TypeScript with Visual Studio Code &amp;#124; Blog](https://bromix.medium.com/debug-your-tests-in-typescript-with-visual-studio-code-911a4cada9cd)|
| 89  | [6 comments](/r/javascript/comments/lhgqpw/how_to_build_your_own_tree_shakable_svg_icons/)  | [How to build your own tree shakable SVG icons library in less than 30 minutes!](https://kevinkreuzer.medium.com/how-to-build-your-own-tree-shakable-svg-icons-library-in-less-than-30-minutes-9f7a4a324d29)|
| 83  | [25 comments](/r/javascript/comments/lix0yn/neutralinojs_v180_released/)  | [Neutralinojs v1.8.0 released! · neutralinojs/neutralinojs](https://github.com/neutralinojs/neutralinojs/releases/tag/v1.8.0)|
| 70  | [4 comments](/r/javascript/comments/lic5f8/how_to_implement_google_photos_grid_in_javascript/)  | [How to Implement Google Photos Grid in javascript](https://dev.to/shaileshpandit/how-to-implement-google-photos-grid-in-javascript-575i)|


&amp;nbsp;

###Most Commented Posts

| score | comments | title &amp; link |
|--|--|--|
| 53  | [46 comments](/r/javascript/comments/ljd3hz/askjs_has_anyone_set_up_their_dev_env_on_new_m1/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Has anyone set up their dev env on new M1 MacBook Air?|
| 43  | [34 comments](/r/javascript/comments/lhye9m/simple_caching_in_javascript_using_the_new/)  | [Simple caching in Javascript using the new Logical nullish assignment &amp;#40;??=&amp;#41; operator](https://gist.github.com/northamerican/8e491df8bd5ec9acf091512c4d757eb4)|
| 25  | [23 comments](/r/javascript/comments/lja44d/we_built_a_tool_to_prevent_merge_conflicts_before/)  | [We built a tool to prevent merge conflicts before they even happen, given merge conflicts can be a pain in the neck, hope this is useful to the javascript community &amp;#40;initial focus on VSCode&amp;#41;. Would love some feedback](https://getsturdy.com)|
| 3  | [22 comments](/r/javascript/comments/lhxawv/askjs_do_you_prefer_single_or_double_quotations/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Do you prefer ‘single’ or ""double"" quotations? Why?|
| 40  | [19 comments](/r/javascript/comments/lhqyv2/ebay_launches_marko_5/)  | [eBay Launches Marko 5](https://medium.com/ebaytech/ebay-launches-marko-5-2e0fe06280c)|


&amp;nbsp;

###Top Ask JS

| score | comments | title &amp; link |
|--|--|--|
| 5  | [0 comments](https://www.reddit.com/r/javascript/comments/lgrk36/askjs_has_anyone_made_a_babel_plugin/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Has anyone made a babel plugin?|
| 5  | [11 comments](/r/javascript/comments/lhi0ry/askjs_is_there_a_better_way_to_log_and_debug/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Is there a better way to log and debug objects in Node?|


&amp;nbsp;

###Top Showoffs

| score  |  comment  |
|--|--|
| 5  |  /u/newWavesCS said [I procrastinated all week and created self-doubt](/r/javascript/comments/liwaon/showoff_saturday_february_13_2021/gna0o9u/?context=5) |
| 3  |  /u/RalliPi said [I’m currently creating an interactive tailwind CSS course. It lets you get familiar with the most important tailwind utility classes by dragging them around on the screen.  The first lesson is already...](/r/javascript/comments/liwaon/showoff_saturday_february_13_2021/gn6kdi5/?context=5) |
| 3  |  /u/JealousyKillsMen said [We made a web app to keep track of the most discussed stocks on Reddit. It gathers post/mention data at the end of everyday, along with stock price changes. If interested, you can also take a look at ...](/r/javascript/comments/liwaon/showoff_saturday_february_13_2021/gn9mw0i/?context=5) |


&amp;nbsp;

###Top Comments

| score  |  comment  |
|--|--|
| 227  |  /u/editor_of_the_beast said [Good thing I’m just about to build a startup for calculating immense amounts of Fibonacci numbers.](/r/javascript/comments/lg80p2/nodejs_14_is_over_20x_faster_than_python38_for/gmr5gfh/?context=5) |
| 149  |  /u/joey9801 said [For flavour here is the same benchmark on my machine &amp;#40;3950x, 128GB/3200MHz&amp;#41;, plus Rust and C for comparison:  &amp;#124;Language&amp;#124;Recursive &amp;#96;fib&amp;#40;35&amp;#41;&amp;#96; duration&amp;#124; &amp;#124;:-&amp;#1...](/r/javascript/comments/lg80p2/nodejs_14_is_over_20x_faster_than_python38_for/gmq2s0b/?context=5) |
| 130  |  /u/christoph-fricke said [Just to make sure I am not confusing something: Any project can still use Husky up to the commit with the licence change, right? Only if you would like to use newer versions, you have to make sure tha...](/r/javascript/comments/lfk9hc/husky_a_popular_javascript_project_with_4m_weekly/gmmc8wi/?context=5) |
| 124  |  /u/dr_hewitt said [I don't have a problem with the decision to make early access a different license. I do have a problem with their implementation and use of git tags. It makes it far too easy to accidentally use v5, i...](/r/javascript/comments/lfk9hc/husky_a_popular_javascript_project_with_4m_weekly/gmmqgs7/?context=5) |
| 88  |  /u/The_Startup_CTO said [Based on the announcement, MIT is supposed to come back after an initial period.](/r/javascript/comments/lfk9hc/husky_a_popular_javascript_project_with_4m_weekly/gmm9j1y/?context=5) |


&amp;nbsp;",Your /r/javascript recap for the week of February 08 - February 14
1423,2021-02-16 01:27:38,5,1,"I just began a new kotlin course, as I am interested in developing android apps, and learning Java in some form. I am fairly well versed in python, so kotlin has proved to be a little bit of a learning curve. 

My question is, is the typescript syntax closer to kotlin or python? Will learning typescript be a whole other learning curve? Are the concepts relating to frontend development fundamentals much more different than backend? 

Thanks",Typescript in relation to kotlin
1424,2021-02-18 18:13:23,0,1,I have a few years of experience with angular but I've never dealt with simple typescript with any framework. I wanted to create a typescript library which will render some html. I have googled it and found nothing. Do I need to export all html code as a string? Or is there any alternative?,Is it possible to export html in a mom package?
1425,2021-02-19 06:01:53,1,1,,node-efficientnet - image recognition model written in NodeJs and typescript
1426,2021-02-19 06:17:47,1,1,,I made an image recognition model written in NodeJs and typescript
1427,2021-02-19 11:03:35,0,1,[removed],Viewing a typescript defined state store hierarchy
1428,2021-02-20 11:13:12,14,1,"I want to be able to format things like this :

    export declare type aType = 
    &lt;a href=""#""&gt;myType&lt;/a&gt;;

to this :

    export declare type aType = &lt;a href=""#""&gt;myType&lt;/a&gt;;

Does anyone know how to do that?",Format typescript ignoring markup.
1429,2021-02-22 16:28:36,2,1,"Hello everyone, I'm quite new to plain typescript, I generally use angular but I was tasked with creating a library for plain javascript projects.

My question here is how to do the dependency injection and how to do it in a library. In angular it comes by default, but here I must install one. I checked inversify since it's a popular one but all the tutorials I've seen are directed to node.js. 

In all those tutorials there is a main.ts which is where the injectables are created but in my case since I have a library I think I shouldn't create a main.ts since I don't want to call it from the main project. What am I doing wrong and has anyone ever surpassed this issue?

Thanks!",IoC but in frontend library
1430,2021-02-24 15:15:12,0,4,"As we can see in previous post [typetype](https://www.reddit.com/r/typescript/comments/lk2dqz/typetype_generate_complex_typescript_type_easily/), complex type can be created using AST transformation, such as mapped type:

    /* type mapped2 = { [K in Keys as `get${K}`]: () =&gt; string }*/
    type mapped2 = ^{
        for(K in Keys) {
            return {
                key: `get${K}`,
                value: type () =&gt; string
            }
        }
    }

beyond that, we can use ""placeholder"" type temporarily and polyfill it later:

    export type function parseURL = (text) =&gt; ^{
        if (parseProtocol&lt;text&gt; extends [infer protocol, infer rest]) {
            return {
                protocol,
                ...parseAuthority&lt;rest&gt;
            }
        } else {
            return never
        }
    }

we use object spread for `parseAuthority&lt;rest&gt;`, and it will be translated to(`object$assign`):

    export type parseURL&lt;text&gt; = parseProtocol&lt;text&gt; extends [infer protocol, infer rest] ? object$assign&lt;{}, [{
      protocol: protocol;
    }, parseAuthority&lt;rest&gt;]&gt; : never;

then, polyfill it using type lib such as \`ts-toolbelt\`:

    import { Object, List } from ""ts-toolbelt""
    
    declare global {
        // add type guard
        type object$assign&lt;a, b&gt; = a extends object ?
            b extends List.List&lt;object&gt; ? Object.Assign&lt;a, b&gt;
            : never : never
    }

In this way, we can create even more complex types in intuitive way.

You can find the complete example(url-parser) in:

* typetype: [https://github.com/mistlog/typetype-examples/blob/main/examples/url-parser-2/url-parser-2.type](https://github.com/mistlog/typetype-examples/blob/main/examples/url-parser-2/url-parser-2.type)
* generated ts type: [https://github.com/mistlog/typetype-examples/blob/main/examples/url-parser-2/url-parser-2.ts](https://github.com/mistlog/typetype-examples/blob/main/examples/url-parser-2/url-parser-2.ts)",The idea of type polyfill
1431,2021-02-25 00:03:37,12,14,"I have a bunch of custom interfaces and I'm trying to create automated documentation for them. Is there a way during a build step to import a typescript file that contains some interfaces, and stringify the interfaces along with the JSdoc info?

I'm using Stencil, and it will stringify custom types, but not custom interfaces (as part of its compile step it can read the type of a prop). I'm trying to do this outside of Stencil's compiler since I can't even reach into where that happens anyways. Might just be easier to do it myself?

Source:

    export interface CTableCol {
        /** Set a class for specific use cases */
        _class?: string;
        /** These will place a colored bar on the left of the row.  */
        _status?: string;
        /** If column is hidden or not */
        _hidden?: boolean;
        /** This will set a width on a col. At least one col needs to be left blank to take the extra space. ex: 't30'. */
        colClass?: string;
        /** Name identifier of column. */
        colHeadName: string;
        /** If using a 'Select All' type selector box in the column, this is the default value. */
        colHeadSelectedVal?: boolean;
        /** What will display in the th element */
        colHeadValue?: string;
        /** Fixed width for a column. */
        colWidth?: number;
        /** Make this column sortable */
        sort?: boolean;
        /** Class for the sort direction */
        sortClass?: string;
        /** Makes initial sort order descending for this column */
        reverseSort?: boolean;
        /** Use a custom ValueConverter */
        valueConverter?: string;
        /** Custom ValueConverter format */
        valueConverterFormat?: any;
        /** Custom component for the td */
        view?: string;

        /**
        * If using the `c-td-action` View, this is the function that runs when it's clicked.
        * @param row
        */
        colAction?(row: any): void;

        /**
        * If using the `c-td-check` View, this function will trigger when checkbox is toggled.
        * @param row
        */
        checkChanged?(row: any): void;

        /**
        * If using the `c-td-text-input`, this function will trigger when input is changed.
        * @param row
        */
        rowValChanged?(row: any): void;

        /**
        * When using the 'Select All' selector box, this function will trigger when the checkbox in the th is toggled.
        * @param isChecked
        */
        colHeadSelectedChanged?(isChecked: boolean): void;

        /**
        * If you need to highlight a search string in the table (currently only supported on c-td-truncate)
        */
        getSearchVal?(): string;
    }


After Stencil stringifies it:

    { getBarColor?(row: any, col?: CTableCol): string; getRowClass?(row: any): string; getColClass?(row: any, col: CTableCol): string; getColValue?(row: any, col?: CTableCol): string | number; rowClick?(row: any, col?: CTableCol): void; sortColumn?(col: CTableCol, sortDir?: boolean): void; onScrollBottom?(): void; }",Stringify Interface?
1432,2021-02-26 10:21:08,4,7,"I drew UML diagram for GoF Design Pattern examples written in TypeScript.
[https://github.com/takaakit/uml-diagram-for-typescript-design-pattern-examples](https://github.com/takaakit/uml-diagram-for-typescript-design-pattern-examples)

It may be useful for those who are interested in using UML in TypeScript development.
I hope it helps you.",UML Diagram for GoF Design Pattern Examples written in TypeScript
1433,2021-02-26 17:15:52,22,7,"I have an API endpoint that returns information that I want to transform into typing information and write that to a file. The actual objects returned by the API are pretty complex, and the resulting types will involve a mixture of optional properties, unions, formatted strings (emails, uuids, etc), nested objects, references to other types, and probably a lot of other insanity I haven't accounted for yet.

Been doing a little bit of digging into how to do code generation with typescript, but I'm struggling to find resources on how to actually use the ts factory API without going directly into the source code. So far, this has been the most useful excerpt I've found: https://github.com/microsoft/TypeScript/wiki/Using-the-Compiler-API#creating-and-printing-a-typescript-ast

Found a couple libraries like [MakeTypes](https://github.com/jvilk/MakeTypes), but they are going in the wrong direction for my needs. My object describes how to make the typing information, but is not an implementation of that typing information. 

---
In other words, I have an object conceptually similar this

    {
      ""name"": ""foo"",
      ""properties"":[{
          ""key"": ""email"",
          ""type"": ""string"",
          ""required"": true,
          ""validation"": ""email""
        },
        {
          ""key"": ""month"",
          ""enum"": [""Jan"",""Feb"",""Mar""]
        }
      ]
    }

And I'd like to turn it into this
    
    export type Foo = {
      email: string;
    
      month?: 'Jan' | 'Feb' | 'Mar'
    }

---

Is there more documentation somewhere on how these `ts.factory` functions work? Preferably something like the typescript language documentation itself. Or some blogs or other smaller projects that I can reference to figure this out better?",How can I generate types using AST?
1434,2021-03-03 11:27:23,51,4,"Hey everyone, so as some of you might know, recently [this thread](https://www.reddit.com/r/typescript/comments/lwje83/typeorm_its_not_what_you_think/) laid out some simply unaccptable issues with the defacto ORM for Typescript, TypeORM. A tool I had been using, and while I did come across some issues, have never had anything that broke my application.

Thing is, that that has to do with the fact that I have only been playing around with it so far. Now I'm about to use it in a production application trying to move my company to a more modern NodeJS stack, and having this blow up in our face because the ORM isn't being maintained properly cannot happen.

That thread also had many great users recommending alternatives, some of which I am considering and will be trying out as soon as I get a chance, but I wanted to hear from you guys what you think the best ORM is given the following requirements?

* Full type-safety for querying and storing.
* Proper management of relationships and JOINs.
* Transaction support in SQL-based environments.
* Migration interface and CLI.
* Optional: Official NestJS integration.
* Optional: Polymorphic relationships.

The ones that seem to come up in my research with the best coverage of the features I want are MikroORM (best NestJS integration - almost drop-in for TypeORM), Objection (support for polymorphic relationships) and Sequelize. The issue I mostly have with Sequelize is the syntax, I find it extremely ugly and it doesn't really resonate with the OOP patterns I'm used to, MikroORM doesn't support polymorphic relationships and isn't as battle-tested as Objection, but it has the best Typescript support almost on par or better than TypeORM.

Thanks for the advice!",Best ORM for use with Typescript?
1435,2021-03-07 15:13:17,3,1,[playground](https://www.typescriptlang.org/play?#code/GYVwdgxgLglg9mABAKQMoHkByAFAhgJwGcBTAHgBVFiAPKYsAE0MShAAcAbYgPgAoA3AFyJCUfDDABzADQsAnm2LDyASmFoseIsQBKxVvjDkFZct0QBvAFCJbLfHMs27LiAlEs4eg0gC8KDEwAOjYCEgEVAG5nF1sYYEReKBM4BKgvfRBDRF9cxAAiUXEpfJVEfEzs9O8ssGjYu3jE5MVUzxrs3P98sBAAWwAjYnxS8sqkavH6hsQmpJS0jJ8cvPyBuDguXDBRiuXJn2mGqAALfDgAd0QAUXxz-F4euChENpbiETEJSUReweHEOtNsRtqUjogAL6ICC4KAQE5OGYsM6XG53OAPJ4vEjiXAcGAAL1wAy4YJikKsEKsVneLHYXByBSK33yiAAPgU-kMRuyCkCtjtorSNDgwrpxsZFBQqLR6Ew6ZweDlyZQaHRGMxCl8SogAPyfYo-QQqmXq+U9frc1n6rkA40uVWyjV8jYC62A10gpD2uxgYj8YaRIA),Why am I getting linting errors?
1436,2021-03-08 17:24:43,2,1,"[Playground](https://www.typescriptlang.org/play?#code/C4TwDgpgBAIlC8AoKUA+UDaByAhgGzAAscsAaKAb3yJwC4oBnYAJwEsA7AcwF9yA6AQEECxAMIB7dsAhSMAXTnI0mLACMIwEuQrrN9Jmy68oAvgCENOCVJnB5ilOmyccAW1dbKL93UYsOPPwCAOJuHtbSsgqIiKCQUMI0EbYIUAAU7ACururMyjAAlLHg0BaayVKpaQYB+UVx0KE+FcBVquLieBA47HUxDVAAkuwAZhDMADwAKlAQAB6RACYMsBgADHIAfAhKcPNLKxhTQXwcY3kASnJQAPxQF1D07BAAbuMA3DEAxpJMUGfjRLEejDc4TXAiEjbeCYKiQ+i4LDGAAcck+iB+7D+1GIVVMvlB43BOKhBXo2BJZBMAkJkwhNCwm2u8G2FMhVPxigxv1ai3ocBh2F0nh0lgRqiRpCUbIZ2hJCJIxgAzHIpSgSWk4TQEcxJVAAKwFKVyIA)

I'm pretty sure the problem is on line 11, but even so, I can't figure out why this doesn't work.

Typescript can use type-guards in if statements to discriminate types within blocks... so I'd expect to be able to discriminate types in other types as well, but the compiler seems to just give up.",Types unable to descriminate each other?
1437,2021-03-08 17:49:18,0,1,"So... I've been need to code something along the lines of a callback, that would update the prop of an object. Like so:

`this.on('eventBlahBlah', (prop: P) =&gt; { this.setState({ propName: prop }) })`

The thing is, the prop name \`propName\`, can be a handful of keys, and I did not want to have another list of types, or cast, or implement the same method a handful of times.

Turns out that with [Key Remapping](https://www.typescriptlang.org/docs/handbook/2/mapped-types.html#key-remapping-via-as) you can easily do this:

&gt;`type PickValues&lt;T, Pick extends ValueOf&lt;T&gt;&gt; = { [P in keyof T as T[P] extends Pick ? P: never]: T[P] }`  
&gt;  
&gt;`type P = keyof PickValues&lt;State, P&gt;`  
&gt;  
&gt;`const propName : P = '????'`  
&gt;  
&gt;`this.on('eventBlahBlah', (prop: P) =&gt; { this.setState({ [propName]: prop }) })`

This is going to make my code much shorter in the future, no more Partial/callbacks work around for these cases, just a simple extra type

Btw, did I miss anything? Does anyone know of a simpler way?",Key Remapping is very funky
1438,2021-03-09 00:57:16,4,1,"I have just started out using typescript and I need some help using the props function, especially when working with components that are already made. Im currently trying to implement the ""responsive drawer"" component from material-ui: [https://material-ui.com/components/drawers/](https://material-ui.com/components/drawers/) (just scroll down a bit to ""responsive drawer"" component).  

What im struggling with is as said the props, and more specifically what im supposed to pass in the `interface Props { window?: () =&gt; Window; }` function. I suppose I should use something like `history.push(""/drawer1"")` for when the user clicks on one of the drawers, but im not entirely sure how to implement it.   
If you could just give a simple explanation and maybe a demonstration on how to use props for this component I would be very grateful.:) Have a great day",interface props
1439,2021-03-09 13:53:37,10,1,"Hi. I have noticed that vscode and typescript have started importing stuff as ""node:stream"" or ""node:util"" when importing packages from the standard library. Sometimes this breaks my builds. 

I feel like I must have missed the memo on this, but I am finding it difficult to google search.

Anybody has any info on this behaviour? Thanks.","import from ""node:package""... Did I miss the memo?"
1440,2021-03-10 14:26:29,38,1,,Kysely - A type-safe and autocompletion-friendly typescript SQL query builder for node.js
1441,2021-03-11 02:19:25,7,1,"In most of the TypeScript libraries, even the function doesn't change the input object, the input object has no `readonly` on its field. Typical a function with an input object as configuration has the following signature'

```typescript
function f(config: { a: string, b: string }) { ... }
```

instead of

```typescript
function f(config: { readonly a: string, readonly b: string}) { ... }
```

This makes it hard to pass an object that has its fields readonly to the function.

So do I misunderstand something?",Most of the TypeScript library doesn't use `readonly` properly?
1442,2021-03-11 18:28:55,0,1,,Native apps using typescript powered by rust
1443,2021-03-11 23:35:13,2,1,[removed],Convert typescript functions to cli automatically. I published in npm a package that does that.
1444,2021-03-12 23:43:14,5,1,"Hello,

Like the title says, I'm new to typescript and saw some interesting syntax that's confusing me. I'm trying to integrate typescript into my React project, and while looking through the type definitions in ""@types"", I came across this:

​interface ReactElement&lt;P = any, T extends string | JSXElementConstructor&lt;any&gt; = string | JSXElementConstructor&lt;any&gt;&gt; {  
  type: T;  
  props: P;  
  key: Key | null;  
 }

My question is about ""= string"" in ""JSXElementConstructor&lt;any&gt; = string"". What does this mean? I'm fairly certain that JSXElementConstructor is a generic type alias:

type JSXElementConstructor&lt;P&gt; =
        | ((props: P) =&gt; ReactElement&lt;any, any&gt; | null)
        | (new (props: P) =&gt; Component&lt;P, any&gt;);

If JSXElementConstructor can only be one of those two function types, what does setting equal to string do?

I hope my question was clear, and thanks for any clarification.","New to typescript, need help understanding some syntax"
1445,2021-03-14 02:11:57,4,1,"Hi folks, I'm a newcomer to typescript.

I'm planning to build a fullstack app with it.

What's the most seamless way to connect between frontend and backend? I'm thinking of this kind of ergonomic:

shared code:
```
interface Request {
  name: string,
  msg: string
}

type Response = string;

interface Service {
  async hello(Request): Response
}
```

frontend:
```
import { Service } from 'mySharedCode'
import { makeClient } from 'someLibrary'

const client = makeClient(Service);

client.hello({ name: 'world', msg: 'hello' })
```

backend:
```
import { Service } from 'mySharedCode'
import { makeHandler } from 'someLibrary'

const server = makeHandler(Service, {
  async hello(req: Request): Response {
    return `${req.msg}, ${req.name}`
  }
});

server.listen(HOST, PORT);
```

Do we have something resembling to the above? If not, what's the best practice currently on doing client-server RPC?

Thanks!",Most seamless way to connect TS frontend and backend?
1446,2021-03-14 12:47:10,0,1,[removed],Node typescript error: Parameter 'err' implicitly has an 'any' type
1447,2021-03-14 17:51:07,3,1,"Im am new to typescript and trying to learn how to fetch data. 

I am fetching data which looks like this:

    {
        items: [
            {_id: 1, name: 'item1' },{_id: 2, name: 'item2' }
        ],
        total: 2
    }

I created a type that looks like this:  


    type ItemData: {
        items: Item[],
        total: number
    }
    type Item: {
        id: number,
        name: string
    }

as you can see my problem is that the id is not called ""id"" but ""\_id"" instead. How would I go about to map this so the result is looking like my Item type?

Should I handle the ""response"" and reshape it before I create and return the ItemData type? I am a bit lost on the best practices of this and it's difficult to google the answer.",Help with fetching data
1448,2021-03-15 09:04:44,2,1,"**Monday, March 08 - Sunday, March 14**

###Top Posts

| score | comments | title &amp; link |
|--|--|--|
| 255  | [22 comments](/r/javascript/comments/m098ws/taro_a_lightweight_3d_game_engine_for_the_web/)  | [Taro - a lightweight 3D game engine for the web](https://github.com/Cloud9c/taro)|
| 254  | [43 comments](/r/javascript/comments/m2yg7s/js_proposal_temporal_is_now_stage_3/)  | [JS Proposal Temporal is now stage 3](https://github.com/tc39/proposal-temporal/pull/1440)|
| 225  | [20 comments](/r/javascript/comments/m44yb8/mooviejs_movie_focused_html5_player/)  | [moovie.js Movie focused HTML5 Player](https://github.com/BMSVieira/moovie.js)|
| 151  | [7 comments](/r/javascript/comments/m3muzk/githubs_web_component_collection/)  | [GitHub's Web Component collection.](https://github.com/github/github-elements)|
| 134  | [23 comments](/r/javascript/comments/m2rdx1/askjs_what_are_your_favourite_eastereggs_in/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; What are your favourite EasterEggs in websites?|
| 127  | [41 comments](/r/javascript/comments/m570h8/useencapsulation/)  | [useEncapsulation](https://kyleshevlin.com/use-encapsulation/)|
| 125  | [17 comments](/r/javascript/comments/m1by4b/introducing_relay_hooks_improved_react_apis_for/)  | [Introducing Relay Hooks: Improved React APIs for Relay](https://developers.facebook.com/blog/post/2021/03/09/introducing-relay-hooks-improved-react-apis-relay/)|
| 120  | [28 comments](/r/javascript/comments/m2eiig/updates_from_the_81st_meeting_of_tc39/)  | [Updates from the 81st meeting of TC39](https://dev.to/hemanth/updates-from-the-81st-meeting-of-tc39-2b3p)|
| 117  | [3 comments](/r/javascript/comments/m15de0/stoxy_a_reactive_state_management_api_equipped/)  | [Stoxy, a reactive State Management API equipped with Web Components](https://stoxy.dev/)|
| 113  | [21 comments](/r/javascript/comments/m1whgr/introducing_necktie_a_simple_and_small_3kb_dom/)  | [Introducing Necktie – a simple and small &amp;#40;~ 3kB&amp;#41; DOM binding tool](https://github.com/leshniak/necktie)|


&amp;nbsp;

###Most Commented Posts

| score | comments | title &amp; link |
|--|--|--|
| 88  | [52 comments](/r/javascript/comments/m3jsrg/i_made_simple_js_game/)  | [I made simple JS game.](https://clydethecloud.github.io/bouncy-ball/)|
| 6  | [36 comments](/r/javascript/comments/m47fp9/askjs_why_are_we_so_reliant_on_frameworks/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; why are we so reliant on frameworks?|
| 107  | [28 comments](/r/javascript/comments/m51tu5/using_graphql_code_generator_to_create_a_great/)  | [Using GraphQL Code Generator to create a great developer experience with Typescript and GraphQL](https://djangoshelton.medium.com/using-graphql-code-generator-to-create-a-great-developer-experience-with-typescript-and-graphql-30e30261b75)|
| 82  | [24 comments](/r/javascript/comments/m47jn4/the_only_javascript_loop_benchmark_that_matters/)  | [The only JavaScript loop benchmark that matters for the most of us.](https://javascript.plainenglish.io/the-only-javascript-loop-benchmark-that-matters-for-the-most-of-us-77ec819eb23e?source=friends_link&amp;sk=ca8b956e0faae6852aaec916ab3034dd)|
| 9  | [22 comments](/r/javascript/comments/m0jf0o/askjs_what_do_people_think_of_ramda_or_other/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; What do people think of Ramda or other functional libraries for JS?|


&amp;nbsp;

###Top Ask JS

| score | comments | title &amp; link |
|--|--|--|
| 6  | [0 comments](/r/javascript/comments/m2qp7w/askjs_research_study_opportunity_help_improve_api/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; &amp;#91;Research Study Opportunity&amp;#93; Help improve API Documentation in our User Study|
| 3  | [8 comments](/r/javascript/comments/m32ygd/askjs_postinterview_feedback_on_nodejs_code/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Post-interview feedback on NodeJS code exercise|


&amp;nbsp;

###Top Showoffs

| score  |  comment  |
|--|--|
| 3  |  /u/midgitsuu said [Built a simpler version of Galaga as my first game using Phaser:  https://bc-experiments.herokuapp.com/galaga/](/r/javascript/comments/m41y88/showoff_saturday_march_13_2021/gqszp6n/?context=5) |
| 2  |  /u/nabrocs said [We created myceleum, a desktop app that allows you to set up your dockerized development environments in less than 10 minutes. You can also sync environments on different machines to get rid of the pe...](/r/javascript/comments/m41y88/showoff_saturday_march_13_2021/gqs9k0x/?context=5) |
| 2  |  /u/bobwire said [I created &amp;#91;https://tuti.study&amp;#93;&amp;#40;https://tuti.study&amp;#41; for the past 2 months.  It can create online presentations, and markdown powered flashcards. Made with NodeJs and Vue.  Feel free to ...](/r/javascript/comments/m41y88/showoff_saturday_march_13_2021/gqtbgeg/?context=5) |


&amp;nbsp;

###Top Comments

| score  |  comment  |
|--|--|
| 87  |  /u/beavis07 said [Everyone’s node_modules about go on a crash diet 😂](/r/javascript/comments/m2yg7s/js_proposal_temporal_is_now_stage_3/gqm6vd9/?context=5) |
| 67  |  /u/CherryJimbo said [&amp;#91;&amp;#96;Temporal&amp;#96;&amp;#93;&amp;#40;https://tc39.es/proposal-temporal/docs/&amp;#41; looks awesome. It's about time we got a modern date/time API in JS.](/r/javascript/comments/m2eiig/updates_from_the_81st_meeting_of_tc39/gqiued1/?context=5) |
| 50  |  /u/keb___ said [""uBlock blocked 7 trackers on this site""  Miss me with that Zuck shit.](/r/javascript/comments/m1by4b/introducing_relay_hooks_improved_react_apis_for/gqdk8q2/?context=5) |
| 49  |  /u/AramaicDesigns said [Step 1: Visit &amp;#91;https://www.lingscars.com/&amp;#93;&amp;#40;https://www.lingscars.com/&amp;#41;  Step 2: Don't succumb to a seizure while you realize that virtually every part of this website is terrible from ...](/r/javascript/comments/m2rdx1/askjs_what_are_your_favourite_eastereggs_in/gqkz4uv/?context=5) |
| 46  |  /u/MayorEricBlazecetti said [The &amp;#91;IMDb page for Spinal Tap&amp;#93;&amp;#40;https://www.imdb.com/title/tt0088258/&amp;#41; has ratings that go up to 11.](/r/javascript/comments/m2rdx1/askjs_what_are_your_favourite_eastereggs_in/gqlcy6l/?context=5) |


&amp;nbsp;",Your /r/javascript recap for the week of March 08 - March 14
1449,2021-03-15 13:28:38,3,1,"Take for example a dom element which has style attribute:

    &lt;i style=""display : none"" class=""icon""&gt;&lt;/i&gt;

I write the following typescript:

    const iconDom = document.querySelector("".icon"");
    if (!(iconDom instanceof HTMLElement)) throw Error();//@TODO
    // the following line gives linting error because it should accept only string and not null
    iconDom.style.display = null;

How can I disable a certain part of the style attribute without getting linting errors? `null` does that, but gives linting errors.

I am not looking for solutions like:

    iconDom.style.display = initial;

since these will override css rules with lower specificity.",Getting lint errors for domElement.style.someProperty = null .
1450,2021-03-15 13:45:34,8,1,"I am hoping to write a type like this - 

```ts
type Step&lt;S extends string&gt; = {
  [K in S]: {
    parentId: Exclude&lt;S, K | Step&lt;S&gt;[K]['previousId'] | Step&lt;S&gt;[K]['nextId']&gt;,
    nextId: Exclude&lt;S, K | Step&lt;S&gt;[K]['previousId'] | Step&lt;S&gt;[K]['parentId']&gt;,
    previousId: Exclude&lt;S, K | Step&lt;S&gt;[K]['nextId'] | Step&lt;S&gt;[K]['parentId']&gt;,
  }
}
```

but evidently it is circular and typescript does not like that and shows an error on all three fields. For example - 

```
'parentId' is referenced directly or indirectly in its own type annotation.(2502)
```

do you have any suggestions on a better way to implement this?",Help with circular `Exclude`s
1451,2021-03-15 17:50:52,0,1,,Typescript declaration generator for svelte with typescript
1452,2021-03-16 00:48:46,19,1,"I've got a function that returns an array of intersection type. The problem is it DOESN'T return (A &amp; B)\[\] BUT rather returns  A\[\] &amp; B\[\] \- hence I'm not able to extract proper return type.

Here's the [TS playground](https://www.typescriptlang.org/play?#code/JYOwLgpgTgZghgYwgAgILIN4Chm+QZwHsBbCANTgBsAuAsKUAcwG4sBfLLUSWRFAIUw48RUgHkwAC2gUadBiBbtOlCGGQAPWugBkyQQF5MbVqvUBPbcj2HjptcgBeVm8iMYTnBIRD513ylUEMGAfKwBtAF1rfWQotziNABpkcxTHSNZvX3UYYCg-AFFVYgSAoJCfcIAGTNwAenq0GP4sbL9kKiIAMXyikoTGNV6CsAAKcohg0JAASmYGptasRuQACUIAd2QwQmRiOABrFClgfGQYEGQoNQBXKCuwcwAHFF1Y0D8IOAATZEIYLEAPxYGC3EDTHzIIZgEZ+AA8ABUAHxjOBQKC0RFRWZY7B4a53B6dDE1TLsIA).

Basically let's say I have -

    const collection: A [] &amp; B [] = [x, y, z];
    const firstElem = collection[0]; // A &amp; B
    const alsoFirstElem = getFirst(collection); // B
    
    // How to make this fn return type A &amp; B instead of B ?
    function getFirst&lt;T&gt;(arr: T[]): T {
      return arr[0]; 
    }",How to extract proper intersection type from an array?
1453,2021-03-16 13:05:59,15,1,"I have a strong understanding of the rest of typescript, but I don't really understand decorators. I see them used a lot in angularjs, but they seem kind of magical to me at this point. I've read the documentation on them, and I didn't feel that I learned anything about them. Can anyone explain them to me like I'm a 5 yo?",Can anyone help me understand Decorators?
1454,2021-03-17 15:08:02,0,1,,"[gist] createNamespacedEnum: A small utility function to create namespaced enums in typescript, where the return type is a literal reflection of the returned enum value itself"
1455,2021-03-28 08:00:48,0,1,,image recognition model (EfficientNet) written in typescript
1456,2021-03-28 08:01:05,0,1,,image recognition model (EfficientNet) written in typescript
1457,2021-03-28 08:03:39,0,1,,image recognition model (EfficientNet) written in typescript
1458,2021-03-28 11:23:32,0,1,[removed],I completely rewrote my discord bot from javascript to typescript
1459,2021-03-29 02:24:26,1,1,,"Learn concepts of NodeJS like child process, streams, binary, etc by creating a Nodemon clone with typescript in 100 lines of code. Link: https://youtu.be/5rAtUryNJB4"
1460,2021-03-29 08:11:21,6,1,Are there any good typescript cheat sheets ?,Typescript
1461,2021-03-29 16:14:32,2,1,[removed],"What is the current ""industry standard"" for testing node/react/next/typescript apps? Which library is the most popular, which one should I learn?"
1462,2021-03-29 16:32:07,78,1,,"I'm a JS dev with a few years experience... I got a job offer that requires typescript. Thing is I've never touched TS. How feasible would it be to try learning it in 3 days? Assuming I'm at work during the day, can only learn at night?"
1463,2021-03-30 02:45:29,2,1,,"Learn cool concepts of NodeJS like child process, NodeJS streams, binary, etc by creating a Nodemon clone with typescript in 100 lines of code"
1464,2021-03-31 08:06:18,0,1,,image recognition model (EfficientNet) written in typescript and Nodejs
1465,2021-03-31 08:06:36,0,1,,image recognition model (EfficientNet) written in typescript and Nodejs
1466,2021-03-31 08:06:42,0,1,,image recognition model (EfficientNet) written in typescript and Nodejs
1467,2021-03-31 08:07:23,0,1,,image recognition model (EfficientNet) written in typescript and Nodejs
1468,2021-03-31 08:09:17,0,1,,image recognition model (EfficientNet) written in typescript and Nodejs
1469,2021-03-31 08:26:01,0,1,,image recognition model (EfficientNet) written in typescript and Nodejs
1470,2021-03-31 08:26:47,0,1,,image recognition model (EfficientNet) written in typescript and Nodejs
1471,2021-03-31 08:28:06,0,1,,image recognition model (EfficientNet) written in typescript and Nodejs
1472,2021-03-31 20:43:28,3,1," 

Hello everyone,

I've used typescript in a project without the transpileOnly option enabled (meaning it does type checking everytime it compiles in my dev environment).

The thing is : the more my project grew the more TS took time to compile my project in my dev env

I saw lots of people saying that in their dev env they are using TS with transpileOnly option enabled.

But from my pov if i do that it means that i lose the whole purpose of TS making sure i'm developing using the right type at the right place ...

I saw other people saying they are compiling without transpileOnly option only on their CI test jobs to make sure that their typings are ok before deployment but without waiting too long in their local dev env.

But once again for me it would mean that i lose the whole purpose of TS making sure i'm developing using the right type at the right place ...

Am i wrong about what i think ? or is it a better way to use TS with the right option in the right place at the right moment ?

Please enlighten me guys !",[AskJS] When to use Typescript transpileOnly vs type checking ?
1473,2021-04-01 14:10:48,4,1,"I'm very familiar with node.js, but work is switching to typescript. I'm already familiar with the syntax, but want to learn a bit more about typing best practices.",Please recommend a book on typing best practices
1474,2021-04-01 15:29:37,6,1,"I'm working with an AWS service that provides type defs where every object is followed by `| null` and I want to avoid the constant null checks in my code when accessing deep properties.

In the below example I have used `{}` for brevity, it's actually a properly typed object. The types look something like this:

```typescript
type UserType = {
  user: {
    posts: {
      items: {} | null;
    } | null;
  } | null;
};
```

Which means my code always ends up looking something like this:

```typescript
const request = await getUser();
const { user } = request;

if (user !== null &amp;&amp; user.posts !== null &amp;&amp; user.posts.items !== null) {
  // do something with items
}
```

And the above is a best case scenario, when arrays get introduced it gets more complicated.

I had initially thought simply using the optional chaining operator would work, however this still causes a TS error:

```typescript
if (user?.posts?.items) {
  // do something
}
```

So optional chaining works functionally (the code runs) but I still get type errors as it doesn't seem to recognise it as a legitimate guard against null values.

Short of making a helper function that recurses through objects to pick a value and ensure it isn't nullish, how can I get around this?",How to prevent constant null checks?
1475,2021-04-02 05:45:56,3,1,I played around with different parameters in tsc and package.json but I could never get it to work injust got different either compiler errors or runtime error. I ended up wrapping the top level code in  an anonymous async function. Is there a guide that explains all the different module systems in relation to node and typescript and how to make sense of it all. Im not even sure if I ask the right questions :-),Is there a good tutorial or guide on typescript and the different modules and language levels? I tried to get top-level async await going but failed miserably
1476,2021-04-02 12:59:50,51,1,What are the reasons for/against?,Wouldn't it make sense to build a .NET compiler for typescript?
1477,2021-04-03 14:06:02,4,1,"So, you can have dynamic tag typed:

- https://stackoverflow.com/questions/55969769/typing-a-dynamic-tag-in-react-with-typescript

You can have a forwardRef component typed:

- https://react-typescript-cheatsheet.netlify.app/docs/basic/getting-started/forward_and_create_ref/

But I'm having an incredibly difficult time to type both together. My scenario is rather simple; I have a `&lt;Button /&gt;` component that can be either a `&lt;button&gt;` or an `&lt;a&gt;`;

```typescript
import { forwardRef } from ""react"";

export const Button = forwardRef&lt;any, any&gt;(({ tag: Tag, ...props }, ref) =&gt; {
  return &lt;Tag ref={ref} {...props} /&gt;;
});
```

You can see I threw a pair of `any` there when I gave up trying. It works, but obviously with no type safety at all. I wanted to fix that. I tried so many things I'm going crazy. Has anybody been through this before? Any ideas how to approach this?

Thanks in advance.",[Q] How to type a React forwardRef component with dynamic tag
1478,2021-04-05 09:04:57,2,1,"**Monday, March 29 - Sunday, April 04**

###Top Posts

| score | comments | title &amp; link |
|--|--|--|
| 457  | [106 comments](/r/javascript/comments/miqxh9/rfc_vue_3_wont_support_ie11/)  | [&amp;#91;RFC&amp;#93; Vue 3 won't support IE11](https://github.com/vuejs/rfcs/blob/ie11/active-rfcs/0000-vue3-ie11-support.md)|
| 321  | [77 comments](/r/javascript/comments/mgf27s/goldmine_a_clicker_game_in_200_lines_of_pure_js/)  | [Goldmine - a 'clicker' game in ~200 lines of pure JS. My first attempt at constructors - what do you think?](https://slicker.me/javascript/gold/goldmine.htm)|
| 287  | [50 comments](/r/javascript/comments/mjuzsd/created_a_nodejs_boilerplate_for_quickly_building/)  | [Created a Node.js boilerplate for quickly building production-ready RESTful APIs using Express and Mongoose. Let me know what you think. Contributions are welcomed!](https://github.com/hagopj13/node-express-boilerplate)|
| 282  | [65 comments](/r/javascript/comments/mfnwrj/announcing_the_deno_company/)  | [Announcing the Deno Company](https://deno.com/blog/the-deno-company)|
| 222  | [34 comments](/r/javascript/comments/mi4c85/announcing_typescript_43_beta/)  | [Announcing TypeScript 4.3 Beta](https://devblogs.microsoft.com/typescript/announcing-typescript-4-3-beta/)|
| 201  | [29 comments](/r/javascript/comments/mht574/the_story_of_webgpu_the_successor_to_webgl/)  | [The story of WebGPU — The successor to WebGL](https://eytanmanor.medium.com/the-story-of-webgpu-the-successor-to-webgl-bf5f74bc036a)|
| 134  | [9 comments](/r/javascript/comments/mjdz2h/div_and_backend_again_a_typescript_tale_part_4/)  | [DIV and Backend again. A TypeScript Tale: Part 4 - GraphQL Code Gen](https://thewooleyway.substack.com/p/div-and-backend-again-a-typescript-89d)|
| 125  | [38 comments](/r/javascript/comments/mhhbvv/the_dark_side_of_mongodb_please_read_this_if_you/)  | [The dark side of MongoDB - Please read this if you are gonna have a M**N stack !](https://medium.com/nerd-for-tech/the-dark-side-of-the-mongodb-f66f198a566b)|
| 107  | [8 comments](/r/javascript/comments/mhaaoz/div_and_backend_again_a_typescript_tale_part_1/)  | [DIV and Backend again. A TypeScript Tale: Part 1](https://thewooleyway.substack.com/p/div-and-backend-again-a-typescript)|
| 93  | [16 comments](/r/javascript/comments/mh1p5j/file_storage_methods_added_to_supabasejs/)  | [File storage methods added to supabase-js](https://supabase.io/docs/reference/javascript/storage-createbucket)|


&amp;nbsp;

###Most Commented Posts

| score | comments | title &amp; link |
|--|--|--|
| 63  | [75 comments](/r/javascript/comments/mkbu1e/replacing_let_with_const_even_when_it_feels/)  | [Replacing let with const – Even when it feels impossible](https://charles-stover.medium.com/replacing-let-with-const-86797b790775)|
| 52  | [30 comments](/r/javascript/comments/mjew00/askjs_javascript_backend_applications/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; JavaScript backend applications, single-threaded performance tips &amp; design patterns|
| 52  | [23 comments](/r/javascript/comments/mfkqyy/bitwise_config_flags_get_rid_of_unnecessary_if/)  | [Bitwise Config Flags - Get rid of unnecessary if conditions with esoteric way](https://medium.com/trendyol-tech/bitwise-config-flags-get-rid-of-unnecessary-if-conditions-with-esoteric-way-f650dfd39dc6)|
| 28  | [17 comments](/r/javascript/comments/mh3nhu/fastest_possible_text_updates_with_or_without/)  | [Fastest possible text updates with or without React](https://electricui.com/blog/fast-react-text-updates)|
| 28  | [16 comments](/r/javascript/comments/mj8h9k/functions_without_borders_a_typesafe_rpc_library/)  | [Functions without Borders - A typesafe RPC library thinning the boundaries between client and server](https://github.com/akash-joshi/functions-without-borders)|


&amp;nbsp;

###Top Ask JS

| score | comments | title &amp; link |
|--|--|--|
| 8  | [9 comments](/r/javascript/comments/mgq1r5/askjs_do_you_use_javascript_on_microcontrollers/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Do you use JavaScript on Microcontrollers? Which engine / interpreter?|
| 6  | [9 comments](/r/javascript/comments/mgr3qk/askjs_whats_javascripts_immediate_ancestor/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; What's Javascript's immediate ancestor?|
| 6  | [15 comments](/r/javascript/comments/mjeiys/askjs_best_practices_for_building_a_js_library/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Best practices for building a JS library &amp;#40;tooling and architecture&amp;#41;|


&amp;nbsp;

###Top Showoffs

| score  |  comment  |
|--|--|
| 3  |  /u/lucidprogramming said [I built a League of Legends companion app that works in the browser &amp;#40;with limited features&amp;#41; or as a desktop application. &amp;#91;tempest.lol&amp;#93;&amp;#40;https://tempest.lol/&amp;#41;   It's built with  ...](/r/javascript/comments/mj3e7e/showoff_saturday_april_03_2021/gt98leg/?context=5) |
| 1  |  /u/joshuawootonn said [Created a Cactus animation in Framer Motion: Prickly Boy  Imgur: &amp;#91;https://imgur.com/gallery/z32xtv1&amp;#93;&amp;#40;https://imgur.com/gallery/z32xtv1&amp;#41;   Codepen: &amp;#91;https://codepen.io/joshuawootonn...](/r/javascript/comments/mj3e7e/showoff_saturday_april_03_2021/gtaxx6t/?context=5) |
| 1  |  /u/jcubic said [I've create &amp;#91;ASCII Tetris Game&amp;#93;&amp;#40;https://codepen.io/jcubic/pen/eYgdaaB&amp;#41; I still need to figure out how to protect the game against cheating.](/r/javascript/comments/mj3e7e/showoff_saturday_april_03_2021/gtbualv/?context=5) |


&amp;nbsp;

###Top Comments

| score  |  comment  |
|--|--|
| 175  |  /u/TheEccentricErudite said [Nothing should support IE11](/r/javascript/comments/miqxh9/rfc_vue_3_wont_support_ie11/gt6gocu/?context=5) |
| 174  |  /u/odolha said [Good riddance!](/r/javascript/comments/miqxh9/rfc_vue_3_wont_support_ie11/gt6638e/?context=5) |
| 77  |  /u/robpalme said [What I like about this release is that it really demonstrates TypeScript's empathy for JavaScript and JS patterns used in real life code.  Separate getter/setter types is essential for modelling the D...](/r/javascript/comments/mi4c85/announcing_typescript_43_beta/gt2om45/?context=5) |
| 72  |  /u/Meadowcottage said [Good.  And to anyone saying ""But LTS!"" It's 2021. If not now, when?](/r/javascript/comments/miqxh9/rfc_vue_3_wont_support_ie11/gt6ax32/?context=5) |
| 68  |  /u/WystanH said [\&gt; Rest assured that Deno will remain MIT licensed.   No worries,then. Good luck, guys.](/r/javascript/comments/mfnwrj/announcing_the_deno_company/gsol0un/?context=5) |


&amp;nbsp;",Your /r/javascript recap for the week of March 29 - April 04
1479,2021-04-05 12:06:45,4,1,"Hello,

Is there a simple and reliable cheatsheet on typescript that covers important concepts like type alias, interface. Thanks",Cheatsheet on typescript
1480,2021-04-06 07:02:42,0,1,,How to debug simple typescript files without going on an epic journey through unrelated files?
1481,2021-04-06 15:30:30,23,1,"[Playground link](https://www.typescriptlang.org/play?#code/C4TwDgpgBA6gTgQzJOBJAdmArsAPAFSgF4oF0QA+YqAbygG0BpKAS3SgGsIQB7AMyj4AugC5S5KAF8AsAChQkWImQQ4AeRzY8hEmUrU6TVuy68BwsXqly5fLOgDGwFj3YB3Zfh4YtBCgAoAEwRgBDF8AEoxeCQUHxw-WjkoFKg4CGAsOHZg0LkZWTkAeiLioqg1DjKbWTtHZ1coAFskAGU2AHMAGwg-IJCwpVjVeO0KKKGVdU0E-CoaZNT0zOyoXIR8mpLJuMwcADpDuQdXAGdgKB44Fg62BC7qDyQvUf86Ph4eMQByACMEODfKQRMpQQ77ZrDQJQYA8HaqDTALTHM4XFoqaEkdHtdDdCD+K43O5dEGFWQndCnHg9fYIU6nVTAfzoyCBfYfOFELlQP4A76k6qybYAOR4F0qgts9icLnY6IAslgus4wD0CFAIAAPYAQdCBU5QABKEAQgVcXRAAEE4IgQLg9BQAuD1mJDMw2JxuPxBKJ4Wg9tomEIqJIJm7jJ6zD7osoUIjfPggyGkrJUmkMlkcgN9uiCcQqNjOj0CRFSQVQTEpqNwSjKRcEI9PN4A28oByfv9AcDa+coL9G89m1pW+gsE0xAAGbtC8rgyEYmFwytxmbAHsXegsiCBS0AGnnrIAQkJqAqlSriwh978BeSztSILT6YzmVDLezPsRubzAaSKVSaTpBk4CZLdAkPfZRyaL8SAnUkgA)

So, I have an array of wrapped types, that can be written as `WrapperInput&lt;T&gt;`, where `T` can be any plain object. I want to feed a mapping function an array of those objects (each with a different form of `T`) and retrieve an array of `WrapperOutput&lt;T&gt;`.

The `mapMultiple()` logic is right, its return type is right, but the compiler isn't happy and I don't know how to fix it without casting the result `as any`.","How to map an array of ""wrapped"" types to another array?"
1482,2021-04-08 01:11:14,2,1," It seems that TS doesn't allow me to do exactly what I want to do. Basically, I have an object/class that has a ""call"" method that just returns some kind of configuration object for making api calls.

""Request"" property is a method that returns the promise itself (an api call), while ""payloadHandler"" should receive request's response and do whatever with it. Meaning that yeah, payload could be in whatever shape or form, which typescript doesn't like and I can't find a way to infer response type from typed request.

Also, I should mention just in case: I cannot add type parameters to the Entity interface, it's an external class that I'm just augmenting in my actual case.

    type CallDescriptor&lt;Response&gt; = {
        request: () =&gt; Promise&lt;Response&gt;
        payloadHandler(payload: Response): void
    };
    
    interface Entity {
        call: &lt;Response&gt;() =&gt; CallDescriptor&lt;Response&gt;
    }
    
    const entity: Entity = {
        // 'Response' could be instantiated with an arbitrary type which could be unrelated to 'number'
        call() {
            return {
                request: () =&gt; new Promise&lt;number&gt;((res, rej) =&gt; res(1)),
                payloadHandler(payload) {
                    // payload has to infer type from request's promise's resolve type
                    console.log(payload)
                }
            }
        }
    }",X could be instantiated with an arbitrary type which could be unrelated to Y
1483,2021-04-08 09:08:25,0,1,,EfficientNet - image recognition model written in typescript and Nodejs
1484,2021-04-08 09:08:44,0,1,,EfficientNet - image recognition model written in typescript and Nodejs
1485,2021-04-08 17:29:13,7,1,"So I want to define a type that will accept only serializable values. [Here](https://www.typescriptlang.org/play?#code/PTAEGcFMCcEsEMA2sBe8BGjKgG5IK7YAmkAZrAHawAusA9hQFCPUCeADtlHEqhlgDUC2ALwQYCZGkyQACnAC2NWDmwAfcTyn9IAJTIxIFAMaQA3MzadNkvjPmwltVaDHhqcCgHNQGivgV0GF9QdDo6LHgKEP9ERAsWDi4JXmksfVJDE1FGUDyQgG9c-JK8gG0ADwAuCA9KLwBdGu5bNMghREILUtAAX2K8jRbUnQ7CMoaEkBsRmVxhUFJ4WE7obFI6aFBKahgl02YdvfhTbYpd6H3IAFk6YwBrUCK8+FAa-0CYRn7GYwZ3M4XK63B5vQHHUwgx5iZ6gV41ACM32YfwoAN27gAkucIdhmiltDIxqJwZcTjc7vcpmAaKAAO6be7gUDUAAWdHwXlZi02LKScOQ8HAln5VgpoJhxXhoA+QWgyN+-2ofM4ULBYrVkpeYKRP1R6Mg7gAKvyahrKa4VeKqYwgA) is my attempt. As you can see the problem boils down to the differences of interface and type alias. Does anyone know where I can find a comprehensive explanation about their differences, so that I can make a serializable value type that works with both interfaces and types?",Differences between type alias and interface. Is there anywhere a comprehensive explanation somewhere for me to read?
1486,2021-04-09 01:01:07,7,1,"I've asked on the TS Discord and nobody can figure it out. Basically I think it lies in being able to generically type a function that relies on generic arguments to discern what it returns. 

[Playground link](https://www.typescriptlang.org/play?ssl=1&amp;ssc=1&amp;pln=40&amp;pc=1#code/KYDwDg9gTgLgBMAdgVwLZwHIENXDgbwFgAoOOAKR2AGc4BeOAIgCsrrGAaEsgIWFnpMARvxicSAXxIkAxhETV4AGyyLsuWg0TAA7nACyWMAB5FUAJaIA5hzhnLVgHwAKANrc4rlm07CsSpXYAXS5ST0YRWF9GfkRzYEYQkiCASgBuaWIYAE8wPAAZVRh1YGMAMXMoRUdBCqr4UBgkABNabw1GDwB+PwD2DwAuODrFBBAmxFbhUU6wnpioOITBuxgLazgAHzhkSeAAM0tgZoziElBIAVVsxBk4fd2ZGHN5OCtgGEK1KmMAFTGJlN7NYXId6kNfikCB4oB9kIs4CpvhoAHTvGDOMGKKGqOBfYo-X6OU5SM7EOQKeAgQTo-ElZztGiMdJwAD0rLgAAUoBBUOZqKUIv5AoxHLJ5KNsjSPnSqAzImIWeyuTy+QLjAslqLxZS4AAvaWfIr0xiQCBgZlpNkc7m8-mlYFWLY7PaHbTNMVki7QeA5PJwACC1BuMjKiD+tgDUCstEaLVouwA1ogIDpEK4gjUGM4UbmsNHqEMozGoXQara1aUiacSMrfgALflwbTHWgwCBwERwLBCJR4dtwGBYRN4LCIKXXW73R7PeQkB63WeIQeqRNlVURwMFgHxl3J1PpzOYxBF4O3MOb4vURxQohhWEweHLu9kMigYAyZBNIY5vMFosFqWNT7Igv4ovmJahGQEgkpkFKjEiBK4L8q6CEO1Brqqzi0saVDpJkyoABKpnAzQdgAkm8HxwOY8DUB2MAgKyOTMQa9ZYAAbv29Z4NQVCDrkNDdrQTHZKyBo9OR8BNri5j7DRygQAKbY8VR2gWHcFJNOMdi8roPGwjRy4wKpYA8jINC0AMzg6qMjGCIhJQoRhKLvp+TQMqwHRKjaqr2qYawOM6uzNAcRwerZvpSgwjlUM5iauSAH5fsA8ozD5Kp2uqjrBa64WevBvoGjFuHIauiXJR5poQOalrWpllYBesTrbCFYXup6QA)

Not sure if it is even possible at this point :(",Help how do I make this work and is it even possible?
1487,2021-04-14 04:41:45,1,1,,EfficientNet - image recognition and object detection model written in node and typescript
1488,2021-04-14 04:42:15,1,1,,EfficientNet - image recognition and object detection model written in node and typescript
1489,2021-04-14 04:43:31,0,1,,EfficientNet - image recognition and object detection model written in node and typescript
1490,2021-04-14 16:36:28,8,1,,Entity factories: How I build functions to create new entities using typescript
1491,2021-04-14 20:04:43,0,1,,Observer Pattern in typescript - Give me feedbacks!
1492,2021-04-15 13:05:59,18,1,"Could someone explain to me why this is not working?

[https://www.typescriptlang.org/play/.....](https://www.typescriptlang.org/play?ssl=4&amp;ssc=26&amp;pln=1&amp;pc=1#code/MYewdgzgLgBNBOBLMBzAgveAuOUmoG0BdGAXhgIFgAoGOmAOiYLAFcAbdgGhgCIBDXkS416jZgN5c2nIjSIMAZonZQApvAAUEMgD44MAISlyM9gEogA)

`const stringArr: string[] = [`  
 `...[null, ""a""],`  
 `...[""a"",null]`  
`].filter(s =&gt; s !== null)`",Filtering of (string|null)[] to only have a string[] not working?
1493,2021-04-15 15:54:37,16,1,"I'm using typescript/node and trying to get user input from the console.   When I run my script, I see the output but the process exits and I never get a chance to enter anything.

    me@me:~/src/tdc$ npm run start
    
    &gt; fsp@1.0.0 start /Users/me/src/tdc
    &gt; ts-node -r tsconfig-paths/register -r dotenv/config fsp/main.ts
    
    eventually this will do something
    press enter, it does nothing
    me@me:~/src/tdc$

&amp;#x200B;

    import Readline, { Interface } from 'readline';
    
    export class Main {
        private readonly readline: any;
    
        constructor() {
            this.readline = Readline.createInterface({
                input: process.stdin,
                output: process.stdout,
            });
        }
    
        public async runAsync(): Promise&lt;any&gt; {
            try {
                console.log(`eventually this will do something`);
                // this doesn't work
                this.readline.on('keypress', (str, key) =&gt; {
                    if (key.ctrl &amp;&amp; key.name === 'c') {
                        process.exit();
                    } else {
                        console.log(`You pressed the ""${str}"" key ${key}`);
                    }
                });
    
                // and this doesn't work
                this.readline.question(`press enter, it does nothing`, (input) =&gt; {
                   console.log(`you typed ${input}`)
                });
            } catch (e) {
                console.error(e.stack);
                console.error('-------Fail-------');
            } finally {
                this.readline.close();
                console.log();
            }
        }
    }
    
    async function run() {
        await new Main().runAsync();
    }
    
    run();

&amp;#x200B;

What do I need to do to allow waiting for console input?

Thnx",getting console input doesn't wait
1494,2021-04-15 16:57:28,4,1,"I'm trying to fix defaultProps in React with a higher-order component.  So I thought I could pass both props and defaultProps to the higher-order component to resolve required props:

`interface Props {`  
  `name: string;`  
  `theme: string;`  
`}`  
`type DefaultProps = Pick&lt;Props, 'theme'&gt;`  
`class NameComponent extends React.Component&lt;Props&gt; {`  
 `static defaultProps = {`  
`theme: 'default'`  
 `}`  
`};`  
`function withTheme&lt;`  
 `P extends { theme?: string },`  
 `DefaultProps extends Partial&lt;P&gt;`  
`&gt;(`  
 `ClassComponent: React.ComponentType&lt;P&gt;`  
`) {`  
 `return React.forwardRef&lt;any, P&gt;(`  
 `(props) =&gt; &lt;ClassComponent {...props} /&gt;`  
 `)`  
`};`  
`const ThemedName = withTheme&lt;Props, DefaultProps&gt;(NameComponent);`  
`const test = () =&gt; &lt;ThemedName name=""bozdoz"" /&gt;;`

But  this doesn't recognize the defaultProps!

What am I doing wrong?

Here's a link to a playground for this case: [https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wG4Aoc4AOxiSk3STgAUcwBnOAb3LjmooQSAFxwOMKDQDmFfjAAWSYWIlTqs8gF9yMAJ5hmAESSMArgBsYbCJzgBeVsDQBrADw3OAGgKLlSfAA+cjQLFA4uADkhJABhXEhqJFo4JAAPOmoAEy5kdBgAOnjwCCTaD3YOQJ4+cRgUGGc4LNMUS2tKhxr+eSUVAhbzK3xanS0KckwzagxgUrgAd2BFABU+pDdallSM5JyeOD9hAH5VSRk4LS9akyGO2y50zP2WFFhgFAsPYMCAClrYmEIsVEskYGI8hgiglSmCVgYNixggBKbpwIgwMxQaiIYiFTDQBZvLLITBuFDUPQ+JH-HpwX5gSqo+zVNyA8IcEGwlLcAp8xkPLRwAD0wX4yO0EzQpQkcDW-iy0WEXSWq3WFQePlubSsniqvyVcRhZRgyKlMvgdFljl+zNZ8uEipiAhi9gARAAjCAALyyPrdIsCpCAA](https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wG4Aoc4AOxiSk3STgAUcwBnOAb3LjmooQSAFxwOMKDQDmFfjAAWSYWIlTqs8gF9yMAJ5hmAESSMArgBsYbCJzgBeVsDQBrADw3OAGgKLlSfAA+cjQLFA4uADkhJABhXEhqJFo4JAAPOmoAEy5kdBgAOnjwCCTaD3YOQJ4+cRgUGGc4LNMUS2tKhxr+eSUVAhbzK3xanS0KckwzagxgUrgAd2BFABU+pDdallSM5JyeOD9hAH5VSRk4LS9akyGO2y50zP2WFFhgFAsPYMCAClrYmEIsVEskYGI8hgiglSmCVgYNixggBKbpwIgwMxQaiIYiFTDQBZvLLITBuFDUPQ+JH-HpwX5gSqo+zVNyA8IcEGwlLcAp8xkPLRwAD0wX4yO0EzQpQkcDW-iy0WEXSWq3WFQePlubSsniqvyVcRhZRgyKlMvgdFljl+zNZ8uEipiAhi9gARAAjCAALyyPrdIsCpCAA)","How to get a Subset type of interface, without Partial"
1495,2021-04-16 11:34:41,45,1,"I'm new to typescript. I have a question (it may be a dumb question) 

is there a way to enforce typing everything (such as function parameters, return type, variables)

because I came from  JS, so most of the time I missed put types or avoiding (lazy). I need to give me an error if I did not typed those well.",Enforce for use types everyware
1496,2021-04-16 12:54:22,6,1,"This is my code:

    var chordsTA:HTMLTextAreaElement = document.querySelector(""#chordsTA"");
    chordsTA.scrollWidth = 10; // any number basically
    
    // my tsconfig.json looks like this jfyi:
    
     {
         ""compilerOptions"": {
             ""target"": ""esnext"",
             ""watch"": true,
             ""lib"": [""dom"", ""es2018""]
         }
     }

Why is the TypeScript compiler throwing the ""cannot assign to 'scrollWidth' because it is a read-only property.ts(2540)"" error? Am i using old/wrong version of ecmascript/typescript? My typescript version is 4.2.4 (latest).

`textAreaElem.scrollWidth = 10;` is definitely assignable in Javascript without any issues.","How do i resolve ""cannot assign to 'scrollWidth' because it is a read-only property.ts(2540)""?"
1497,2021-04-17 09:16:05,5,1,,"I created a typescript first state manager ""Exome"""
1498,2021-04-17 13:52:36,17,1,"Hello,

I tried reading multiple posts on the internet and the official documentation. Unfortunately, I do not understand the use case of infer keyword in typescript and what problems do it solve? 

It would be nice to see a trivial example.",Can someone explain the purpose of infer keyword?
1499,2021-04-18 07:30:52,0,1,"&amp;#x200B;

https://preview.redd.it/dqfdgtbywvt61.png?width=1000&amp;format=png&amp;auto=webp&amp;s=26b71a9e6e2250e0468af908dbfdebc8647d3ed4

Hello, I am a software developer and I write my experiences in the form of a blog. This article is about a simplified introduction to Expres(.js) with TypeScript and we are setting up vscode for running and debugging the sever.

[https://itnext.io/setup-express-in-typescript-with-node-js-ffa3da038fc1](https://itnext.io/setup-express-in-typescript-with-node-js-ffa3da038fc1)",BLOG: Setup Express in TypeScript with Node.js
1500,2021-04-18 07:49:30,0,1,"&amp;#x200B;

https://preview.redd.it/dqfdgtbywvt61.png?width=1000&amp;format=png&amp;auto=webp&amp;s=26b71a9e6e2250e0468af908dbfdebc8647d3ed4

Hello, I am a software developer and I write my experiences in the form of a blog. This article is about a simplified introduction to Expres(.js) with TypeScript and we are setting up vscode for running and debugging the sever.

[https://itnext.io/setup-express-in-typescript-with-node-js-ffa3da038fc1](https://itnext.io/setup-express-in-typescript-with-node-js-ffa3da038fc1)",BLOG: Setup Express in TypeScript with Node.js
1501,2021-04-18 12:50:39,20,1,"I have used JS for years now and decided that i want to transition to TS, I wrote a simple function and was wondering if it is the ""right"" way to do that in TS,

`export function removeFromArray&lt;T&gt;(`  
 `arr: Array&lt;T&gt;,`  
 `el: T,`  
 `cmp: (a: T, b: T) =&gt; boolean = (a: T, b: T) =&gt; a === b`  
`): boolean {`  
 `const removeIndex = arr.findIndex((x) =&gt; cmp(x, el));`  
 `if (removeIndex === -1) return false;`  
  `arr.splice(removeIndex, 1);`  
 `return true;`  
`}`  
I have a lot of experience is strong stypes languages, and was just wondering if I'm doing thing right with typescript, or is there a better way of achieving what I'm lokking for.  


Thank you.",Am i following proper TS conventions?
1502,2021-04-19 09:05:09,1,1,"**Monday, April 12 - Sunday, April 18**

###Top Posts

| score | comments | title &amp; link |
|--|--|--|
| 289  | [36 comments](/r/javascript/comments/mpedl1/partyjs_a_javascript_library_to_brighten_up_your/)  | [party.js - a JavaScript library to brighten up your user's site experience with visual effects](https://partyjs.yiliansource.dev/)|
| 282  | [31 comments](/r/javascript/comments/mtmd8t/winbox_is_a_new_professional_window_manager_for/)  | [WinBox is a new professional window manager for the web. Lightweight, outstanding performance, no dependencies, fully customizable, free and open source!](https://github.com/nextapps-de/winbox)|
| 220  | [15 comments](/r/javascript/comments/mq0ch4/building_a_powerful_ascii_game_engine_for_the/)  | [Building A Powerful ASCII Game Engine For The Browser](https://www.youtube.com/watch?v=B3uH517XbPs)|
| 219  | [90 comments](/r/javascript/comments/mrzrty/the_shortest_way_to_conditionally_insert/)  | [The shortest way to conditionally insert properties into an object literal](https://andreasimonecosta.dev/posts/the-shortest-way-to-conditionally-insert-properties-into-an-object-literal/)|
| 205  | [21 comments](/r/javascript/comments/mqmh8s/yareio_a_game_you_control_by_writing_real/)  | [yare.io – a game you control by writing real JavaScript](https://yare.io)|
| 194  | [29 comments](/r/javascript/comments/mr06jp/enso_20_is_out_visual_programming_in_javascript/)  | [Enso 2.0 is out! Visual programming in JavaScript, Python, Java, and R. Written in Rust, running on GraalVM and WebGL.](https://enso.org/)|
| 191  | [11 comments](/r/javascript/comments/msud68/i_made_a_graphical_javascript_coding_platform_for/)  | [I made a graphical JavaScript coding platform for kids and code newbies. The coding playground exposes a code editor and a canvas based area for output. The runtime is based on p5.js and p5.play. Please let me know your feedback if you get the chance to check it.](https://codeguppy.com)|
| 162  | [32 comments](/r/javascript/comments/mrcl2e/some_time_ago_i_wrote_an_article_about/)  | [Some time ago I wrote an article about microfrontends, but put it behind Medium paywall by accident - now it's free to read.](https://medium.com/jit-team/microfrontends-should-i-care-12b871f70fa3)|
| 161  | [25 comments](/r/javascript/comments/mq9igz/slow_and_steady_converting_sentrys_entire/)  | [Slow and Steady: Converting Sentry’s Entire Frontend to TypeScript](https://blog.sentry.io/2021/04/12/slow-and-steady-converting-sentrys-entire-frontend-to-typescript)|
| 141  | [29 comments](/r/javascript/comments/mrvwkz/open_source_p2p_social_network_that_runs_on_your/)  | [Open Source p2p social network that runs on your browser. Builded with WebRTC. Never has scalability issues. It always works cheaply and fast.](https://github.com/foxql/foxql)|


&amp;nbsp;

###Most Commented Posts

| score | comments | title &amp; link |
|--|--|--|
| 33  | [42 comments](/r/javascript/comments/mq9upa/js_classes_are_not_just_syntactic_sugar/)  | [JS classes are not “just syntactic sugar”](https://webreflection.medium.com/js-classes-are-not-just-syntactic-sugar-28690fedf078)|
| 108  | [26 comments](/r/javascript/comments/msbjsz/quic_and_http3_support_now_in_firefox_nightly_and/)  | [QUIC and HTTP/3 Support now in Firefox Nightly and Beta](https://hacks.mozilla.org/2021/04/quic-and-http-3-support-now-in-firefox-nightly-and-beta/)|
| 15  | [25 comments](/r/javascript/comments/mse65b/i_rewrote_my_blog_with_tailwind_css_thoughts/)  | [I rewrote my blog with Tailwind Css, thoughts?](https://nosleepjavascript.com/)|
| 47  | [24 comments](/r/javascript/comments/mq8d9i/why_some_developers_are_avoiding_app_store/)  | [Why some developers are avoiding app store headaches by going web-only](https://www.fastcompany.com/90623905/ios-web-apps)|
| 57  | [20 comments](/r/javascript/comments/mspc84/my_first_attempt_at_microsaas_suggestions_and/)  | [My first attempt at micro-SaaS; suggestions and feedback please.](https://dev.to/daltonfury42/my-first-attempt-at-micro-saas-suggestions-and-feedback-please-4cf6)|


&amp;nbsp;

###Top Ask JS

| score | comments | title &amp; link |
|--|--|--|
| 36  | [4 comments](/r/javascript/comments/mpf6no/askjs_another_subreddit_for_js_with_a_different/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Another subreddit for JS with a different focus?|
| 5  | [11 comments](/r/javascript/comments/mqjwjz/askjs_whats_the_main_differences_in_the_real/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; What's the main differences in the real world between Junior, Intermediate and Senior roles ? Also should I learn vanilla JS &amp;#40;pre ES6&amp;#41; before learning JS like in the book JS the definitive guide by Flanagan ?|
| 4  | [7 comments](/r/javascript/comments/mqt4k8/askjs_whats_the_terminology_for_the_pattern_of/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; What's the terminology for the pattern of purposely not executing anything inside a js file &amp;#40;module&amp;#41;?|


&amp;nbsp;

###Top Showoffs

| score  |  comment  |
|--|--|
| 2  |  /u/hackfall said [Created a small helper for console.log !  &amp;#91;lalalog&amp;#93;&amp;#40;https://github.com/navxio/lalalog&amp;#41;  Any feedback is appreciated :&amp;#41;](/r/javascript/comments/mslzvk/showoff_saturday_april_17_2021/guz2ddu/?context=5) |
| 2  |  /u/Agreeable_Onion_5447 said [iOS voice control “show grid” like voice command for google chrome.  Say “Show grid”  Say “Click #grid_number”  Say “Hide grid”  Link: &amp;#91;Grid service &amp;#93;&amp;#40;https://github.com/fxnoob/speech-reco...](/r/javascript/comments/mnzwpv/showoff_saturday_april_10_2021/gueh4qv/?context=5) |
| 1  |  /u/Hour_Painting_6854 said [I made an chrome extension that deletes any element off of a page, even within iframes.  so my college shows their classes using their trash video player. For some reason the volume bar just kept on s...](/r/javascript/comments/mnzwpv/showoff_saturday_april_10_2021/gu9cf20/?context=5) |


&amp;nbsp;

###Top Comments

| score  |  comment  |
|--|--|
| 87  |  /u/Zofren said [I don't really like using tricks like this in my code unless I'm the only person who will be reading it. Very few people would understand what the code is doing unless they're already familiar with th...](/r/javascript/comments/mrzrty/the_shortest_way_to_conditionally_insert/gupw0ib/?context=5) |
| 84  |  /u/tiger-cannon4000 said [TLDR:      const obj = {       ...condition &amp;&amp; { prop: value },     };  Is equivalent to:      const obj = {}     if &amp;#40;condition&amp;#41; {       obj.prop = value     }](/r/javascript/comments/mrzrty/the_shortest_way_to_conditionally_insert/gupsocg/?context=5) |
| 65  |  /u/ebawho said [uBlock origin kills the effects](/r/javascript/comments/mpedl1/partyjs_a_javascript_library_to_brighten_up_your/gu9bie8/?context=5) |
| 37  |  /u/Morphray said [I feel like if you want a front end split, having them in the same SPA might not be ultra important, so just use two html files. Or just be smart with your &amp;#40;Vue, React&amp;#41; components and sub-comp...](/r/javascript/comments/mrcl2e/some_time_ago_i_wrote_an_article_about/gulli5e/?context=5) |
| 32  |  /u/senocular said [You're right. JavaScript always passes by value.  But when the value being passed is a mutable object reference, changes you make to the properties of that object will also be reflected in the origina...](/r/javascript/comments/mpxox3/askjs_js_foreach_appears_to_be_passing_by/gucrbv1/?context=5) |


&amp;nbsp;",Your /r/javascript recap for the week of April 12 - April 18
1503,2021-04-19 12:56:26,0,1,"I need some help getting my way around typescript since I am new to it. I have looked online for exact solution but cant quite get a good explanation of the problem.  
I am trying to create a interface to load some data and casts it to a type on return  


    function loadSomeObjectFromDB():any {
        //Logic to load objects from a database
    }
    
    
    class FakePersist {
        load&lt;T&gt; (type : T, id : string):T {
            const dbObject = loadSomeObjectFromDB()
    
            const typeObject = dbObject as T
            return typeObject
        }
    }
    
    class Customer {
        //customer stuff
        readCustomer(){
        }
    }
    const persist = new FakePersist();
    const aCustomer = persist.load(Customer, ""87"")


I can't seem to get this to return the right value. ""typeObject"" in the load function is correct, but when it returns the ""aCustomer"" constant is of type ""type of Customer"" instead of Customer so I can't access the fields. I have font somewhat of a workaround that makes it kinda work how I want, but I want to know if this is possible first. The reason I am having Customer as  parameter to load function is because I am creating a library that maps types to paths, so if you try to cast a object path to the wrong type you get an error.",Casting syntax for dynamic casting
1504,2021-04-19 17:49:40,4,1,"Higher-Order Components in React don't seem to be able to infer the defaultProps.  Does anyone know the proper way to type defaultProps for passed components to HOC's?

Example:

// HOC

const withTheme = &lt;P extends {}&gt;(Comp: React.ComponentType&lt;P&gt;) =&gt; {

return Comp as React.ComponentType&lt;P&gt; &amp; {

defaultProps: typeof Comp\['defaultProps'\];

};

}

&amp;#x200B;

class Button extends React.Component&lt;{size: string }&gt; {

static defaultProps = {

size: 'l'

}

}

&amp;#x200B;

const ThemedButton = withTheme(Button)

&amp;#x200B;

// here's the problem:

// left-hand side is Partial or undefined

// right-hand side is defined, but \`withTheme\` can't infer it

ThemedButton.defaultProps = Button.defaultProps;

&amp;#x200B;

// Button works fine

const a = () =&gt; &lt;Button /&gt;

// ThemedButton does not work fine

const b = () =&gt; &lt;ThemedButton /&gt;

&amp;#x200B;

[https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wG4AoctCAOwGd4B3YGACwBVWkQk4BeOAB4ACnCQAPGEhoATOnADeAXwB8ACgDCuMAC5ExGADot4WtJjsAnmCQiVASn4rF5OG7hEYAVyg04JsDgUeWR0IwCzGgtrW2FnADIXd2S4GSRMFC8AGxhhHDA6PRgYiEx-bQBtfDSM7Nz8unwAXQpkpQolSjQs4PkAIS8YGFoxSWk5fTDjbUiYQQU6YAAvJD0GKGAaAHM4VST3BhQYYDRU9MycvIgC-n2UuEWVvXws-Fd3Ts6qWgY4Tm4kDIBkMRgJmGx-jw1MDhjR7ORIYCYbRDDULvVrvIBMiaKjznUrgUKN96PAULc1I4+M5BDi4AB6FQk34AIwpVJpiKBg1hDJUQA](https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wG4AoctCAOwGd4B3YGACwBVWkQk4BeOAB4ACnCQAPGEhoATOnADeAXwB8ACgDCuMAC5ExGADot4WtJjsAnmCQiVASn4rF5OG7hEYAVyg04JsDgUeWR0IwCzGgtrW2FnADIXd2S4GSRMFC8AGxhhHDA6PRgYiEx-bQBtfDSM7Nz8unwAXQpkpQolSjQs4PkAIS8YGFoxSWk5fTDjbUiYQQU6YAAvJD0GKGAaAHM4VST3BhQYYDRU9MycvIgC-n2UuEWVvXws-Fd3Ts6qWgY4Tm4kDIBkMRgJmGx-jw1MDhjR7ORIYCYbRDDULvVrvIBMiaKjznUrgUKN96PAULc1I4+M5BDi4AB6FQk34AIwpVJpiKBg1hDJUQA)",How to type defaultProps in React Higher-Order Component
1505,2021-04-20 10:09:18,2,1,[removed],Is cap with javascript is only knows as typescript ??
1506,2021-04-20 11:24:40,3,1,"Using TypeScript and conditional props, you can build an API for your React components that is clear and explicit about its prop requirements. Doing so will help your team and will set you apart as a rock-star developer. We will start with a simple use case, and we will finish up with a more advanced one that involves generics. This tutorial assumes you have a basic knowledge of TypeScript and types.

Read the entire article [here.](https://iskenxan.medium.com/react-write-awesome-component-api-with-conditional-props-and-typescript-ae9fcdd29cab?source=friends_link&amp;sk=46db215c3b72f82713d84ebb74ab962b)",React: Smart component API with conditional props and TypeScript
1507,2021-04-20 19:42:39,19,1,"I'm working through the Typescript Handbook from front to back. I've understood everything until now, but I'm stuck on this conditional type from (this section)[https://www.typescriptlang.org/docs/handbook/2/conditional-types.html#inferring-within-conditional-types]:

```typescript
type GetReturnType&lt;Type&gt; = Type extends (...args: never[]) =&gt; infer Return
  ? Return
  : never;
```

I understand `GetReturnType` is a generic type that gets the return type from a function type. The part that confuses me is `...args: never[]`. To me, this reads ""a list of arguments that can never exist.""

I'd really appreciate an explanation for this!",Understanding `(...args: never[]) =&gt; ...` in TypeScript Handbook
1508,2021-04-21 16:50:45,0,1,"    declare module ""./function-base"" {
        interface IFunction {
            metric(metricName: string, props?: cloudwatch.MetricOptions): cloudwatch.Metric;
        // continues

I have yet to ingrain declaration syntax. The typescript docs show this:

    // Use declare function to declare functions.
    declare function greet(greeting: string): void

[https://www.typescriptlang.org/docs/handbook/declaration-files/by-example.html](https://www.typescriptlang.org/docs/handbook/declaration-files/by-example.html)

There is no function keyword in my first example though. Yet it has two arguments and a return type. Is it still a function? If so, how/why is the function keyword omitted?

&amp;#x200B;

I found only this as somewhat comparable syntax:

    declare class Greeter {
        constructor(greeting: string);
    
        greeting: string;
        showGreeting(): void;
    }","Help with declaration file syntax (omitting ""function"" from declare statement)"
1509,2021-04-22 21:33:12,5,1,"(im not sure if this is the right place to ask, but since im coding in typescript I thought I'd make a post about it here)

Im currently following this tutorial: [https://docs.microsoft.com/en-us/azure/developer/javascript/tutorial/single-page-application-azure-login-button-sdk-msal](https://docs.microsoft.com/en-us/azure/developer/javascript/tutorial/single-page-application-azure-login-button-sdk-msal) 

As of now I am using a simple cookie that is set whenever the user logs on. And it is deleted when the user logs off. And so if the cookie is not set, the user will not be able to view the page (beyond the login screen). Is this a decent way of doing it? Or should I use something else when it comes to microsoft authentication?   
Because if the user logs on the page with his microsoft account, and the cookie is set, the user will of course get to the page. However, if the user then manually deletes the cookie, he will then no longer be able to view the page even though he is technically logged in with his microsoft account.. so im quite unsure if using cookies is the best way to handle this. 

Thanks for any useful help!",best way of handling authentication
1510,2021-04-25 13:04:00,8,1,"I have a few things I'm not clear on...

If I have a simple class like:

[https://gist.github.com/acomito/af725fc0fd442a7405feb81c07fbca86](https://gist.github.com/acomito/af725fc0fd442a7405feb81c07fbca86)  


how do I tell typescript the class has a method called ""createUser""? On that interface?

What is the difference between a type and an interface?

Should I be defining UsersService and CreateUserArgs in separate files and importing them where ever they're needed?",Basic type definition for a simple class?
1511,2021-04-26 09:04:55,2,1,"**Monday, April 19 - Sunday, April 25**

###Top Posts

| score | comments | title &amp; link |
|--|--|--|
| 423  | [51 comments](/r/javascript/comments/mx94wk/til_you_can_name_regex_capture_groups_eg_john/)  | [TIL you can name regex capture groups, e.g.: 'John Doe'.match&amp;#40;/^&amp;#40;?&lt;first&gt;\w+&amp;#41;\s+&amp;#40;?&lt;last&gt;\w+&amp;#41;/&amp;#41;.groups =&gt; {first: ""John"", last: ""Doe""}](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Groups_and_Ranges#using_named_groups)|
| 251  | [31 comments](/r/javascript/comments/mxk88x/i_made_a_free_drag_and_drop_dashboard_builder/)  | [I made a Free Drag and Drop Dashboard Builder](https://www.loopple.com/)|
| 250  | [37 comments](/r/javascript/comments/mutpaj/nodejs_v16_released/)  | [Node.js v16 released](https://github.com/nodejs/node/releases/tag/v16.0.0)|
| 203  | [31 comments](/r/javascript/comments/mu7vvw/i_wrote_an_open_source_analytics_platform_in_full/)  | [I Wrote an Open Source Analytics Platform in full Javascript in less than 30 Days.](https://github.com/itsrennyman/aurora)|
| 151  | [138 comments](/r/javascript/comments/mvk1m0/lit_new_framework_from_google/)  | [Lit - New framework from Google](https://lit.dev/)|
| 130  | [2 comments](/r/javascript/comments/myav3k/we_got_an_interview_with_the_developer_of_replits/)  | [We got an interview with the developer of Replit’s Kaboom game dev framework this week! We talked about learning to code, how the idea for Kaboom came about, and what he’s has been listening to lately. I thought /r/javascript might be interested in checking it out!](https://console.substack.com/p/console-50?r=3cbez&amp;utm_campaign=post&amp;utm_medium=web&amp;utm_source=javascript_subreddit)|
| 120  | [8 comments](/r/javascript/comments/mu1tdx/how_to_create_a_mock_server_using_fakerjs_and/)  | [How to create a Mock Server using Faker.js and JSON-Server](https://shivaraj-bakale.medium.com/how-to-generate-mock-data-using-faker-js-and-json-server-1d17007a08e4)|
| 97  | [19 comments](/r/javascript/comments/musoid/from_a_design_agencys_perspective_building_a/)  | [From a design agency's perspective: ""Building a Custom, Professionally Designed Website from Scratch with NextJS, TypeScript, and Payload CMS"" - Episode 2](https://payloadcms.com/blog/building-professionally-designed-site-nextjs-typescript-episode-2)|
| 87  | [6 comments](/r/javascript/comments/mwx3x3/react_17_adds_support_for_keyboardeventcode/)  | [React 17 adds support for KeyboardEvent.code property to SyntheticEvent](https://blog.saeloun.com/2021/04/23/react-keyboard-event-code)|
| 79  | [11 comments](/r/javascript/comments/mvdsiw/how_to_write_filebased_tests_with_real_files/)  | [How to Write File-Based Tests With Real Files](https://dev.to/dworddesign/how-to-write-file-based-tests-with-real-files-26ek)|


&amp;nbsp;

###Most Commented Posts

| score | comments | title &amp; link |
|--|--|--|
| 74  | [43 comments](/r/javascript/comments/mtvmdy/javascript_records_and_tuples_proposal_is_in/)  | [JavaScript Records and Tuples Proposal is in ECMAScript stage 2](https://github.com/tc39/proposal-record-tuple)|
| 29  | [33 comments](/r/javascript/comments/mvevj1/i_wrote_a_small_fetch_api_wrapper_comes_with/)  | [I wrote a small Fetch API wrapper, comes with testing utilities](https://github.com/tkrotoff/fetch)|
| 40  | [26 comments](/r/javascript/comments/mual4x/class_fields_and_private_class_members_are_now/)  | [Class fields and private class members are now stage 4, ready for ES2022](https://github.com/tc39/proposal-class-fields)|
| 0  | [20 comments](/r/javascript/comments/mvpl27/stronglytyped_variables_in_js/)  | [StronglyTyped variables in JS](https://replit.com/talk/share/StronglyTyped-variables-in-JS/136474)|
| 7  | [16 comments](/r/javascript/comments/mvmpcx/askjs_is_meteorjs_dead/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Is MeteorJS Dead?|


&amp;nbsp;

###Top Ask JS

| score | comments | title &amp; link |
|--|--|--|
| 4  | [10 comments](/r/javascript/comments/myg6t1/askjs_the_shortcomings_of_legacy_code_deployed_in/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; The shortcomings of legacy code deployed in modern solutions. &amp;#40;submit your own&amp;#41;|
| 3  | [1 comments](/r/javascript/comments/mvt3sf/askjs_totally_stuck_with_listindexes_calls_our/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Totally stuck with listIndexes calls. Our volunteer social project building community migrated from Mlab to Mongo DB's Atlas in Nov and all our sites died. I've tried everything i can think to get the platform back up. Can anyone help or offer advice?|
| 2  | [4 comments](/r/javascript/comments/mymwax/askjs_persistent_darkmode_please_help_me/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Persistent dark-mode, please help me...|


&amp;nbsp;

###Top Showoffs

| score  |  comment  |
|--|--|
| 5  |  /u/NerdBlood said [&amp;#91;HeroFit - A fitness tracking RPG-style game&amp;#93;&amp;#40;https://herofit.io&amp;#41; that uses your Strava data from runs/rides/whatever to level up an in-game Hero. Buy items, earn rewards and battle fo...](/r/javascript/comments/mxem5v/showoff_saturday_april_24_2021/gvpt0al/?context=5) |
| 4  |  /u/very-kind-stranger said [I made my own mobile Reddit viewer using React and Redux and it looks awesome on mobile devices &amp;#40;according to my grandma&amp;#41;  Demo: https://kind-stranger.netlify.app &amp;#40;Mobile only yet&amp;#41;  Gi...](/r/javascript/comments/mxem5v/showoff_saturday_april_24_2021/gvparx0/?context=5) |
| 3  |  /u/GuessrDev said [ &amp;#91;https://guessr.io&amp;#93;&amp;#40;https://guessr.io&amp;#41;  You are presented with the Top of Week posts from a random subreddit, and you have to guess which subreddit they come from!  Inspired by this P...](/r/javascript/comments/mslzvk/showoff_saturday_april_17_2021/gv95o9r/?context=5) |


&amp;nbsp;

###Top Comments

| score  |  comment  |
|--|--|
| 176  |  /u/svachalek said [I’m interested but it appears you dropped your keyboard](/r/javascript/comments/mx94wk/til_you_can_name_regex_capture_groups_eg_john/gvmt5ao/?context=5) |
| 131  |  /u/GrandMasterPuba said [Not new. Just a rebrand.](/r/javascript/comments/mvk1m0/lit_new_framework_from_google/gvcfopm/?context=5) |
| 80  |  /u/arendjr said [I wish they'd clean up the changelog a bit. Having **&amp;#40;SEMVER-MAJOR&amp;#41;** in your face for almost every bullet point makes it hard to focus on the actual content.](/r/javascript/comments/mutpaj/nodejs_v16_released/gv7wlf9/?context=5) |
| 55  |  /u/blarghusmaximus said [I have no idea what this is and your readme doesnt tell me.](/r/javascript/comments/mu7vvw/i_wrote_an_open_source_analytics_platform_in_full/gv51md7/?context=5) |
| 53  |  /u/ijmacd said [Cool. And works on everything except IE](/r/javascript/comments/mx94wk/til_you_can_name_regex_capture_groups_eg_john/gvmsxq3/?context=5) |


&amp;nbsp;",Your /r/javascript recap for the week of April 19 - April 25
1512,2021-04-26 13:52:29,1,1,[removed],Making typescript aware of this methods set in a constructor?
1513,2021-04-26 20:32:08,5,1,"Hello,  


I have been trying to solve a typescript problem of using a nullable value in createSlice of redux-toolkit.  


Problem: [https://stackoverflow.com/questions/67268590/typescript-types-of-payloadaction](https://stackoverflow.com/questions/67268590/typescript-types-of-payloadaction)  


I'll feel very grateful for any help.",Help needed
1514,2021-04-27 00:22:28,15,1,"Hi there!

I wrote [an article](https://www.dolthub.com/blog/2021-04-26-apollo-client-with-graphql-and-typescript/) about how we use [Apollo Client](https://www.apollographql.com/docs/react) to interface with GraphQL within our [Next.js](https://nextjs.org/) application, [DoltHub](https://www.dolthub.com/). 

It covers:
- Why we chose Apollo as our front-end state management solution
- How we set up our Apollo client to work with Next.js and multiple GraphQL endpoints
- Setting up and using [GraphQL Code Generator](https://www.graphql-code-generator.com/) to generate Typescript code based on our GraphQL schema
- And more!

Check it out here: https://www.dolthub.com/blog/2021-04-26-apollo-client-with-graphql-and-typescript/",How we use Apollo to manage GraphQL data in our Next.js Typescript application
1515,2021-04-27 10:41:30,3,1,"I'm writing a custom hook to handle socket connections in a live chat. Typescript claims that:

&gt;Argument of type '() =&gt; () =&gt; SocketIOClient.Socket' is not assignable to parameter of type 'EffectCallback'.

Here is the code:

    import { Message } from ""models/Conversation"";
    import { useEffect, useRef } from ""react"";
    import io from ""socket.io-client"";
    
    export default function useChat(
      conversationName: string,
      userId: string,
      updateChat: (message: Message) =&gt; void
    ) {
      const socketRef = useRef(null);
      useEffect(() =&gt; {
        const socket: SocketIOClient.Socket = io(process.env.SERVER_URL);
        socketRef.current = socket;
        socket.emit(""joinChat"", `chat@${conversationName}`);
        socket.on(""newMessage"", (message: Message) =&gt; {
          if (message.authorId !== userId) {
            return updateChat(message);
          }
        });
        return () =&gt; socket.emit(""leaveChat"", `chat@${conversationName}`);
      }, [conversationName, updateChat, userId]);
    }
    

How to fix this?",Socket IO issue with typescript: Argument of type '() =&gt; () =&gt; SocketIOClient.Socket' is not assignable to parameter of type 'EffectCallback'
1516,2021-04-27 17:56:16,3,1,"Hi!

I'm trying to use TS to write a graphic application for class and importing my libraries is giving me hell. I'm using [three-typescript-starter](https://github.com/pinqy520/three-typescript-starter), which runs fine, but I want to go a bit further and substitute [its `three.js` dependency](https://github.com/pinqy520/three-typescript-starter/blob/master/package.json#L33) with [`@types/three` from DefinitelyTyped](https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/three). I've installed it updating the `dependencies` body on `package.json`:

      ""dependencies"": {
        ""@types/three"": ""latest""
      }

The original repo [imports the library as a js module](https://github.com/pinqy520/three-typescript-starter/blob/master/src/index.ts#L4), which returns the following compilation error:

    ERROR in ./src/index.ts 3:14-30
    Module not found: Error: Can't resolve 'three' in '/home/groctel/Documents/UGR/ugr-informatica/3º 2º cuatrimestre/Sistemas gráficos/Práctica 2 - CGPN/src'
    resolve 'three' in '/home/groctel/Documents/UGR/ugr-informatica/3º 2º cuatrimestre/Sistemas gráficos/Práctica 2 - CGPN/src'
      Parsed request is a module
      using description file: /home/groctel/Documents/UGR/ugr-informatica/3º 2º cuatrimestre/Sistemas gráficos/Práctica 2 - CGPN/package.json (relative path: ./src)
        Field 'browser' doesn't contain a valid alias configuration
        resolve as module
          /home/groctel/Documents/UGR/ugr-informatica/3º 2º cuatrimestre/Sistemas gráficos/Práctica 2 - CGPN/src/node_modules doesn't exist or is not a directory
          looking for modules in /home/groctel/Documents/UGR/ugr-informatica/3º 2º cuatrimestre/Sistemas gráficos/Práctica 2 - CGPN/node_modules
            single file module
              using description file: /home/groctel/Documents/UGR/ugr-informatica/3º 2º cuatrimestre/Sistemas gráficos/Práctica 2 - CGPN/package.json (relative path: ./node_modules/three)
                no extension
                  Field 'browser' doesn't contain a valid alias configuration
                  /home/groctel/Documents/UGR/ugr-informatica/3º 2º cuatrimestre/Sistemas gráficos/Práctica 2 - CGPN/node_modules/three doesn't exist
                .ts
                  Field 'browser' doesn't contain a valid alias configuration
                  /home/groctel/Documents/UGR/ugr-informatica/3º 2º cuatrimestre/Sistemas gráficos/Práctica 2 - CGPN/node_modules/three.ts doesn't exist
                .tsx
                  Field 'browser' doesn't contain a valid alias configuration
                  /home/groctel/Documents/UGR/ugr-informatica/3º 2º cuatrimestre/Sistemas gráficos/Práctica 2 - CGPN/node_modules/three.tsx doesn't exist
                .js
                  Field 'browser' doesn't contain a valid alias configuration
                  /home/groctel/Documents/UGR/ugr-informatica/3º 2º cuatrimestre/Sistemas gráficos/Práctica 2 - CGPN/node_modules/three.js doesn't exist
                .jsx
                  Field 'browser' doesn't contain a valid alias configuration
                  /home/groctel/Documents/UGR/ugr-informatica/3º 2º cuatrimestre/Sistemas gráficos/Práctica 2 - CGPN/node_modules/three.jsx doesn't exist
            /home/groctel/Documents/UGR/ugr-informatica/3º 2º cuatrimestre/Sistemas gráficos/Práctica 2 - CGPN/node_modules/three doesn't exist
          /home/groctel/Documents/UGR/ugr-informatica/3º 2º cuatrimestre/Sistemas gráficos/node_modules doesn't exist or is not a directory
          /home/groctel/Documents/UGR/ugr-informatica/3º 2º cuatrimestre/node_modules doesn't exist or is not a directory
          /home/groctel/Documents/UGR/ugr-informatica/node_modules doesn't exist or is not a directory
          /home/groctel/Documents/UGR/node_modules doesn't exist or is not a directory
          /home/groctel/Documents/node_modules doesn't exist or is not a directory
          /home/groctel/node_modules doesn't exist or is not a directory
          /home/node_modules doesn't exist or is not a directory
          /node_modules doesn't exist or is not a directory
    
    webpack 5.36.0 compiled with 1 error in 4153 ms

I've read a bit and [found that I have to add a `types` property to `tsconfig.json](https://stackoverflow.com/questions/39818429/how-do-you-import-type-definitions-from-types-typescript-2-0), which I've done. Ove also added `baseUrl` and `paths`, but I can't where I read it. Here's my `tsconfig.json`:

    {
        ""compilerOptions"": {
            ""baseUrl"": ""node_modules/@types"",
            ""paths"": {
                ""@/*"": [""*""]
            },
            ""target"": ""es6"",
            ""module"": ""commonjs"",
            ""moduleResolution"": ""node"",
            ""experimentalDecorators"": true,
            ""emitDecoratorMetadata"": true,
            ""preserveConstEnums"": true,
            ""suppressImplicitAnyIndexErrors"": true,
            ""outDir"": ""./lib/"",
            ""sourceMap"": true,
            ""types"": [
                ""three""
            ]
        },
        ""exclude"": [
            ""node_modules"",
            ""lib""
        ]
    }

The linter has also yelled about THREE being a [UMD module](https://www.typescriptlang.org/docs/handbook/modules.html#umd-modules), which I guess checks out [given its export syntax](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/three/index.d.ts#L14)? According to that I should be able to the library with the `tsconfig.json` shown above and no `import` statement. Doing that compiles, but then Firefox returns the following error:

    Uncaught ReferenceError: THREE is not defined
        &lt;anonymous&gt; index.ts:3
        &lt;anonymous&gt; bundle.js:9770
        &lt;anonymous&gt; bundle.js:9957
    index.ts:3:14
        &lt;anonymous&gt; index.ts:3
        &lt;anonymous&gt; bundle.js:9770
        &lt;anonymous&gt; bundle.js:9957

So I'm completely lost. Am I being unreasonable about TS's capabilities or am I just a complete n00b? Thanks for reading this wall and thanks to anyone who helps me.",I'm having a really hard time understanding how to import a DefinitelyTyped module.
1517,2021-04-28 09:20:07,0,1,,concise return arrow function in typescript
1518,2021-04-28 10:17:49,7,1,"I have started learning typescript and have been thinking about how should I store objects comming from an API rest request.

I did something like this on typescript playground to outline the idea:

&amp;#x200B;

[2 ways of define the structure of the returned API object](https://preview.redd.it/zefhi2u93wv61.png?width=1225&amp;format=png&amp;auto=webp&amp;s=1c529768ef40cc8e78ed30be0fd216845ce1c360)

I think, in my case I would go for the first option. Having an interface. But as I used to other POO languages like c#, java, etc. second feels more natural.

Is there any difference in performance/memory allocation between both options? From the generated javascript code It seems that we only incur in an extra call to the constructor when using classes?

Thanks in advance.",Is there any difference in performance/memory allocation between this 2 ways of allocate an object?
1519,2021-04-28 11:43:34,2,1,"I'm trying a [random experiment](https://calendly.com/victorofoegbu0009/typescript) where I'll put 30mins slot to chat about Typescript. It'll be great to chat with you if you're   
\- looking to learn typescript  
\- currently learning typescript  
\- migrating an app to typescript",Random Typescript Chat
1520,2021-04-29 19:12:31,4,1,"I'm using serverless framework. They made some changes with typescript templates some time ago and now local function invocations, but when they are deployed, it works fine.

&amp;#x200B;

I tried to run ts-node, and it raised the following message.

    await odyss?.close();
                ^
    SyntaxError: Unexpected token '.'

&amp;#x200B;

Typescript doesn't complain in code. Does anyone know how to fix this?",I cant figure out this error with ts-node
1521,2021-04-30 16:43:54,2,1,,What are the best sources for learning typescript to use it with rect and node ????
1522,2021-05-01 06:41:42,8,1,[playground link](https://www.typescriptlang.org/play?#code/MYewdgzgLgBCBGArGBeGBvAUDHMCCAXBtrqQEJFanW4DCRAjADQk0C+LpHmbA3KzUGkBQoZlCRYtGEQBEtWanmz+48NBgA3AIYAbVHCQA6PAG1ZZWQF1TtK6oCmADwAOIAE6woATxcP8Bj5+IABmhogm5pY2dvyi8TBAA),why am I getting a linting error here?
1523,2021-05-01 20:56:52,20,1,"Hi r/typescript,

I'm writing a web application that use WebSockets as a means of transport. I'm writing a protocol on top of the WebSockets for client / server interaction. The protocol is pretty simple, an 'event' sent from client to server would look like this:

    { action: ""AUTHENTICATE"", payload: { username: ""user"", password: ""letmein123"" } };

However, I can't think of an elegant way to strongly type map this on the backend (TS + Node). I've considered treating each event type as a DTO and then mapping that DTO to the specific type however, I'm not sure what the return type of that mapper would be.

So far I've got the following:

`enum EClientAction { AUTHENTICATE = ""AUTHENTICATE"", MESSAGE = ""MESSAGE"" };`

`interface IClientEvent&lt;T&gt; { action: EClientAction; payload: T };`

`interface IClientAuthenticationPayload { username: string; password: string; };`

Then an event would be built like this:

`const clientAuthenticationEvent: IClientEvent&lt;IClientAuthenticationPayload&gt; = { action: EClientAction.AUTHENTICATE, payload: { username: ""user"", password: ""letmein123"" } };`

(Sorry for the lack of formatting, I can't figure out how to get it any better with Reddit's editor 🤣)

It's probably something very trivial and I'm perhaps over thinking it but I can't figure out an elegant way of doing this mapping. I've considered factory functions that take in the parsed JSON and return a mapped object but what would that return type be? It couldn't just be `IClientEvent` as that requires a payload type and I don't like the idea of having a multiple return types like `fn(json: string): IClientEvent&lt;IPayloadOne | IPayloadTwo | IPayloadThree&gt;` etc...

Hopefully that makes sense,

Thanks in advance,

SE21",Help mapping JSON string to types
1524,2021-05-02 01:23:11,3,1,"Is there an elegant way to achieve sth like: [https://www.typescriptlang.org/play?ssl=1&amp;ssc=1&amp;pln=17&amp;pc=2#code/GYVwdgxgLglg9mABAIwIYCcAUYQFsBciOuyApugJSIDeAUIg4jMItnogHyICMADFXUZDEUABbo4AdyKlpAUXQSsAcnJLlFeowC+tLQ3SkoIdEmK1dtUJFgJEwOHDYEieMpULF3NfSPQBPH2FGABsjRAA3VBCQUkQAXhQMZ00hbUQIVCgIUVZSAV8hMKhI6NiEngBWX0shQ2NTUpjSCyA](https://www.typescriptlang.org/play?ssl=1&amp;ssc=1&amp;pln=17&amp;pc=2#code/GYVwdgxgLglg9mABAIwIYCcAUYQFsBciOuyApugJSIDeAUIg4jMItnogHyICMADFXUZDEUABbo4AdyKlpAUXQSsAcnJLlFeowC+tLQ3SkoIdEmK1dtUJFgJEwOHDYEieMpULF3NfSPQBPH2FGABsjRAA3VBCQUkQAXhQMZ00hbUQIVCgIUVZSAV8hMKhI6NiEngBWX0shQ2NTUpjSCyA)  


I thought about setting an initial value, but with more complex objects and interfaces it's impossible.",Declaring variables within blocks and returning them in a method
1525,2021-05-03 01:54:13,9,1,"I am new to typescript and not an expert in FE development. I've encountered issue that seems pretty basic, but I failed to found any solution. Maybe I just don't know how to google it properly.

In react component I have a button, that is disabled on some condition, which triggers a component's function:

    import React, {Component} from 'react';
    
    type DraftCompany = {
        id: null
        name: string,
    };
    
    type Company = Omit&lt;DraftCompany, 'id'&gt; &amp; {
        id: number;
    };
    
    type Props = {
        company: Company | DraftCompany,
        onDeleteCompany: (companyId: number) =&gt; void,
    }
    
    class CompanyRow extends Component &lt;Props&gt; {
        handleDeleteCompany = () =&gt; {
            this.props.onDeleteCompany(this.props.company.id);
        };
    
        render = () =&gt; {
            return (
                &lt;div&gt;
                    &lt;div&gt;{this.props.company.name}&lt;/div&gt;
                    &lt;div&gt;
                        &lt;button disabled={this.props.company.id === null} onClick={this.handleDeleteCompany}/&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            )
        }
    }
    
    export default CompanyRow;

I am getting typescript error on calling `this.props.onDeleteCompany(this.props.company.id);` that says that there is a chance I will pass `null` as a parameter. I fully understand why typescript gives me this error, the question is: **what would be the best way to deal with this error?**

&amp;#x200B;

I have found multiple ways:

&amp;#x200B;

1 ) Add `if` guard:

    handleDeleteCompany = () =&gt; {
            if (this.props.company.id) {
                this.props.onDeleteCompany(this.props.company.id);
            }
        };

It works, but I don't like the idea of adding such guards into every function, if someone removes `disabled` logic, I want to receive console error telling me about it immediately, not to have it be silently swallowed. In my project I have a lot of such code that relies on render, I doubt it is a best practice to add such checks everywhere. Correct me pls if I am wrong.

&amp;#x200B;

2) Apply `as` operator  to field :

     handleDeleteCompany = () =&gt; {
            this.props.onDeleteCompany(this.props.company.id as number);
        };

It works, but looks kinda hacky.

&amp;#x200B;

3) Apply `!` operator to field:

     handleDeleteCompany = () =&gt; {
            this.props.onDeleteCompany(this.props.company.id!);
        };

It works, but looks kinda hacky too.

&amp;#x200B;

4) Apply `as` operator to whole object and pass it to function:

     &lt;button disabled={this.props.company.id === null} 
             onClick={() =&gt; this.handleDeleteCompany(this.props.company as Company)}/&gt;

and

     handleDeleteCompany = (company: Company) =&gt; {
            this.props.onDeleteCompany(company.id as number);
        };

It works, but it looks like I am unnecessary passing the value I could have grabbed in function itself from props. I am not sure it is best practice to do such things.

&amp;#x200B;

I am sure there should be some pure typescript solution like defining Props type as a union or using conditional types with some combination of `any` and `never`. But I haven't figured it out.

As I said, I am not a FE expert so there is a high chance I am wrong about what is considered best practice. Help me please.

&amp;#x200B;

Here is a [playground](https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAJQKYEMDGMA0cDeBhCcCAOyWJgF84AzKQuAcilQwYG4BYAKG5gE8wSOABEoKajALgUxPnAC8ubnBVxgAEwBccYgFcANvuWriKEEm0BnGFGDEA5pm4VOPLv0FwpYGXMUB5EGAYAB5RcUlCH1lsBg0GAD44ADIlLlU1LR1dEAAjJChXF25eASEABTowSwU0jLQo321vXzgAHxExCRaY4xUSYSR9JBgkHr5tAAoG6VkASSy9PIKASgUkgDcIDScuChKuNH0USxrxhAgAdzgkAA9R4nUzqJIyeBDKiGqknD64AAsZOphoNhqNxrVJmt5D8-hkYP9gJYAHRgKoogZDEZjRqySYIpGo9HImbRPjIjQrVwZYpuDLMR4FSHQ2HpDKqZgwXRQYhwSZw9kqELqYAbBICwUZYWihI4AkotFfFGk3zI0zmCghAD0IrFEslQt14rZBtNcBCuV0MBgJDgIssKFyw3U8jliIVxJVsgp6gU8kUekMVBIeH0wDQAGtXfLkYDHiCseDcXwKFrjWbBdqjfqpTqZfqVn99nsDndILA7UhqCgDPBzlc2EA)",Typescript and react conditional render
1526,2021-05-03 23:20:52,8,1,"I've been banging my head for a few hours over this with no luck. Can't seem to find any stackoverflow questions that help either. Basically, I have a component that takes two children nodes like so:

    &lt;SharedTwoColumns
      outer={{ className: ""mt4 mb4"" }}
      gap={&lt;div className=""h4 w4"" /&gt;}
    &gt;
      &lt;div className={isMobile ? """" : ""pa3""}&gt;Left Column&lt;/div&gt; // first child
      &lt;div className={isMobile ? """" : ""pa3""}&gt;Right Column&lt;/div&gt; // second child
    &lt;/SharedTwoColumns&gt;    

I'm trying to type the ""left column"" and ""right column"" children in a way that says that they both might have props, but not necessarily. What I have so far is:

    const SharedTwoColumns = ({
      outer: { className: ocn, ...outer },
      children,
      gap: {
        props: { className: gcn, ...gapProps }
      }
    }: {
      outer: { [x: string]: unknown; className: string };
      children: ReactNode;
      gap: { props: { [x: string]: unknown; className: string } };
    }) =&gt; {

    ...

      const [leftColumn, rightColumn]: ReactNode[] = Children.toArray(children);
      const {
        props: { className: lcn, children: leftColumnChildren, ...leftColumnProps }
      }: ReactNode = leftColumn || {}; // TS error happens here when I hover over 'props'

However, this gives me the typescript error: 

    Property 'props' does not exist on type 'boolean | ReactChild | ReactFragment | ReactPortal | null'.
    
    any

Does anybody have any ideas on how I can type this correctly when destructuring props from `leftColumn`?",[Help] How to type ReactNode that may have props?
1527,2021-05-04 08:59:06,16,1,,I have made a decorators based testing framework for typescript called oral.
1528,2021-05-04 10:18:36,5,1,"Is there a plugin/rule for typescript-eslint that would force me to pass only arrays to the Set constructor? I've passed strings a couple of times by accident, without wrapping it in an array, only to discover that the characters were entered individually into the set. This is great functionality, but I would like the default to be only arrays. If I want the general iterable functionality I would explicitly ignore the rule",Forcing only arrays to be passed to set constructor
1529,2021-05-04 13:41:25,4,1,"I'm new to typescript and I want to convert my old javascript npm packages (and projects in general) to typescript. But I have a few questions:

1. Is it recommended to start a new project or should I just overwrite every .js file of the existing project with a .ts file and keep the same project (folder, npm &amp; git repository)?
2. Can I use the new typescript package in (old) javascript projects? I think this should be technically possible because of the compiled js code, but is there any downside or will there occur any problems?",Convert npm packages to typescript
1530,2021-05-04 14:00:43,7,1,"Hello everyone.  
I created a Github action using Typescript that allows you to automatically populate your learned section in your Github readme with data pulled from a remote notion database. Would appreciate it if you could take your time to check it out and drop any sort of feedback. Thank you.  
Github: https://github.com/Devorein/github-readme-learn-section-notion",I created a Github action using typescript that auto-populates your Github readme learned section using remote notion db.
1531,2021-05-04 15:26:48,4,1,"I have been working with my project on JavaScript but I want to completely shift down to typescript . I crawled whole internet(including google , youtube and github) for getting tutorials and learning typescript but There is a problem with that . I found alot of them that they were made around typescript v3.2 or v3 and the latest version of typescript is v4.2.4 . So could help me by posting down some of the best internet resources for learning complete typescript with latest version ?",Which is the best resources for learning TypeScript ?
1532,2021-05-05 12:21:05,4,1,"I'd like to make a library with an API like this, to shield the user from accidentally accessing a value when it doesn't exist:

    interface Callback {
      (value: number, done: false): void;
      (value: never, done: true): void;
    }

    declare function run(cb: Callback): void;

    run((value, done) =&gt; {
      // Do things here
    })

However, this causes TypeScript to complain that both of the parameters implicitly have `any` type. Can I somehow get this to work?

[TS Playground link](https://www.typescriptlang.org/play?#code/JYOwLgpgTgZghgYwgAgMJwDYYEaINbIDeAUMsgBQBumArhAFzIg0C220ANMgCYD2IDZPAwBnCAEpGlXsG4BuUhWoY6jAZU49+gsFDqTk02QoC+xYhAAeAB15QwPCAgxwoKGDRAIwwfsj0g5AjYjOhYuAh4Bkby5gHkVLQQXHwC4sgAvAB8ROYm4kA)",Function parameter types aren't inferred for overloaded function type
1533,2021-05-06 10:22:04,7,1,"Hey!

&amp;#x200B;

If I have a custom type, like:

`export type CustomType = {`  
 `a?: string;`  
 `b?: number;`  
 `c?: boolean;`

`}`

Is there anyway to check if a string variable is in the type?

Something like a function belongsToCustomType(""a""). And if so can i get the type of a (in this case string).

Sorry if it sounds confusing, i'm still new to typescript and don't know the terms very well.

Thank you!",Custom types
1534,2021-05-06 12:49:15,6,1,"I want to use useRef hooks with typescript but in my every hooks throws that error:

 **Object is possibly 'null'.**

 My hooks are look like this:

`const videoElement = useRef(null)`

`videoElement.current.play()`

 **Cannot find videoElement -&gt; error**

`const ScreenRef = useRef(null)`

`screenReft.current` 

Object is possibly 'null'. error","How should I use useRef with TS &amp; React, Object is possibly 'null'. error"
1535,2021-05-08 02:55:42,2,1,"&amp;#x200B;

    const executeSeedDatabase = async (
 Trips: Model&lt;ITrips&gt;,
 tripsData: unknown
): Promise&lt;string&gt; =&gt; {
 // Do some logic
 return Promise.reject(""Specifiy --import or --delete args"");
};
    
    In the above function I am explicitly passing Trips and denoting it's type as `mongoose.Model&lt;ITrips, {}&gt;` or `Model&lt;ITrips&gt;`. 
    
    In my case I want to pass 4 more Models, Model for users i.e `Model&lt;IUser&gt;` and 3 more. 
    
    How can I generalize the first parameter to take any `Model&lt;ITrips&gt;`, or `Model&lt;IUser&gt;` ? As of now I have to explicitly change the code and this script is not useful. 
    
    Thanks
    Please help me",A typescript function to take argument of type Model mongoose.
1536,2021-05-08 15:51:43,2,1,"I'm pretty new to typescript, and I'm trying to compile a single file: `tsc fix-records.ts --showConfig`, but that outputs an empty configuration, not `tsconfig.json`

How can I build that file only but using `tsconfig.json`? Didn't find anything on [CLI reference](https://www.typescriptlang.org/docs/handbook/compiler-options.html)",How can I compile a file and use tsconfig.json
1537,2021-05-09 01:25:34,4,1,"I wrote [some code to extract types from a function signature](https://www.typescriptlang.org/play?#code/PTAEDkHsBcFMC4BQJSgIICcDmAVAngA6xrQA8OANBAHygC2AllgBbSgDOssdoGsAJgFcAdvwCGwtmPagA7rFABjSIIA2-UIM7ps+Iu3LUA2uAC6VAEaDoyMKGjMFAM0gY6sDKAAUEjZGGqePaOoC5uHlRoAGJoAJIA0gCUoGKqqpCyMlr2kJraynQE1gKgAAbgpewAdLaoUa6gDMLs0BKKsFTySirqeQqYuITEZJSgAMqCdKTgAIxUACzUtA3skO4OTVigqgwA1goOYtA1KN4AQjgA6lQOHrAA5DLCueyCBASubGEcO4qbVBgmKwAPzjNawDbCLY7fagPSwdhGADMVSqAFZTMDEohENAhqAACIAUQAwgAlIkAWSJ4Bw01oAF4IKBYAAPOCiGRGJpODwQOaNYS8zzgABMplAoIA+lLieSqTScKLSCYBWLTLR4KAZXKKdTaTN6QBuXH4nWkvWKw3gRnMtkc-gyAAMktAwlgADc+UhUL6-f6A77wCz2bBOaAZq6XT7A7HA8H7WHHaBRa7IzG45nUAnQ+Gka7Uxms3Gcw6ZPNXfmi8X4yGy6A0a6K9Wa-7S0mZAA2V2NlutoN1jugADsru7ff7dtzyYAHK7RxP++3wwBOV1zrXur0YI2TwOmoja2UWhW05U20BM5fJ7lCvkE0VUHn3mamRB7gOgowPqgE1+D8MjCdKgnQlUEt29d8PwDP8AOTF0v3NeV9RwQ0H2oKgVwlRdJ2-R8j11U9UNIP9qDfaC-U3T0PBNPFDzGWJKQABQAGViKIAE16UvKd61vYVCXw59PD-ciP1BB84OdV1YK1cAoL3OTaPxIkAEUAFU0BY6Y1VFW0GOYtjOJ02hE3DAzWPYrixVoUFoAwQQFC1JxUk4E1aigOAkFOIxWS1f9SAAWloIxX1qUBQtAAAfTRRFgJwmgECUgpC1lgX85LgoitL-Oi2L+HixL+DfU5ZEcPh0FALKznoWAJBkQ42DQRoZGkdgmGEMQLFUA5cjOE5gHCqB3VuHr2HYChwtQJwREUaAGH8UAsBmLw-LdSYLD5GKRAKhL3X4Kg8E3DaPGSABvABfcKGBkZQMD4ObLGsKbQlm+bFqwUVVvS9a6E2jBDuOv7TtAS7rpkcAAHlRk2xQxC0A4Qj4ABHQQGD4DQxGwSYwzYUo8FKJQJHuL5IDSDJggUSACHezrVHCrGsBxyQylZUoBvCylXAUBhCk+CRoECG5mBu0BmDEd4w3YJA6IUS4iViMlYKZXyfv-MybzWiQ8DA+wHKc0JXIUD8UHsxyDzlhWldTFWcojCUNa5LXhDwKhUSqRnpZSF2jFMXWzYNlzVG0VAUCDzgLdAeXFYJfNbbVh3pydn7tbd1FPa1bXff9-XQGco3Q7AAOcVl0AmIYRRdhIcgqAvBkFLhKSIt1rwG79CDPEzFAGCcZlRegSBcgsJgAQhQQMGaMoO9KBvki1HAm98rVhNAdS0497AvZXgA1Fu299NTNO08AQNMpO9cc111LzsuK6rsht9-E8UPpahZ5vhfHeyn6V7X0B3YzoKASu9XSt1jIfLS0xT5NwDlfPKO1Cr7RvuXSu1dH6EmfoqV+78qLbl3HGFAqx1giyhHIXGcgMD+CwCXfEKDdhREoVMUYdcG6f3Pr7UB+9UAcJrCgZ4LIeruEkOwHBjcv6q0zi7degCd573ARpSBJ9QBOjPvWWBoIF5ajoQwtYpB0GERfjaN+fo55umojuLuYAiEQhIVseQLNZCUKhDQw8dCcCQBrjQHi2j0YtHAJ4m0ylXF3yiL46A-jmG2hlD4jAfiAlUF9tQIJChokhLCRE2uVAcBoHiDSRkrDF5yMDNk3J8kTE3wgcfaBX91HeC4XCHJNJRFsL4mtX+0jN7LzvJ4EBoIwHFMadeVqPtdapMrqE2J4S9FP2Qlgm0CT3YlJpFQdSGob4d2aYvO27T-7p06UAvkvS6mxiWUM72eAOHSilDEuJ+jMG0npAs1EpyVnwLintJKmozHblER3fBsZCHgkhHY8hjiqEuIUNoxh7jPFRDJJDSkWTIb5L9JU0gcKEXVPPrU-pAY3EeNGDgZFmzxFFIDDw4sfDciwEEbjER5T55bMka7XZG8sBb26aAI5uL-RQrWDCu5syHkYspBhDBQq6REqWCS9h2zOV-wAfs2RnDYx8roAKmZlphXwtFZqoi5BkXGN9KYv5liOBAtsWQhxTjqGRwGPCAwOBbQtKHF4RV7KukCXUskBktBtZwNwTRO1ughjV0iTxF14Y3V7I9Qczw3rLx+pdq6Oh1c-4XkDTuYNgx9A6KYVQEVzqm7RrZRyr1Pqk1BFBGq0gf9C3rPMcknQOaER5phaMEVSKi1fxLTI+VFbzkppCdCjxdadVdobXgnEKAxjgnsAiaAIjI44CJGMHAspYCKEjEyAxWCVxJJNmAGcy7V3roJJum24qtV0mRBQcUB7eFgFvWFUuK610bsUHHK9+qjAzgoKBB9lKn3DgoFhE977z2KArDu+5N65gAf+VmFAQFQNvlfaej9jYmRot3Q80K-6NSYUA6AU2+sIVwgwyQbdt9UFkBQxGKg+EkQLHMMo4jFF-QoCdOB9dJBL2pro6yJ0WpgKgFZDMfyVBWSih+vhVkSIfrMbE-MH68xWNInYyRsA+ZtrvKKuRt96683UZrfRgUTHWN6UQ5OZDFmeNSjzfx4dujfLCeUVJiTDGxMya1HJhTWokSWYfch6Tsm3m7SKlJ-zoAdP5UQUlAzGH3EmbvjCszjGqCBcY5p1syHRMvvxIZqU7inOVzS0JkTHnJPedk1FxT6ngtPvy4x8L8XirkZlDKNAZIADiWHspudE+J6roXfN1YC1JlTWp5hSbRD9DETaittsgCl8ZI6VTNZTJlhYVAMQZYbDlv0tntugDU-Z5bpX6HrfS1tmLO2GyWYScxzsGprOFwikx+7GJzsjq-WqmFnWpTdb6ydtEh3H0RViwgj5B1TutZh2hwrGHlvQZo1d-lHibufdO7t1jK4ElzHvW9rTzcfsY-6-9zHm3sczYe-dqzSGn1vlqESVkYhCg9UQDNYQc0FrCFCCtCr7mxMzDVlJnzv1-rjY4PZTY50rrc954tJwX08CebOpAXYnmLCDx6hIX2F1Dqii1Br3YxvJceEN6APASITea9tzFq3eB5h292C7i3GALry6529PnS0fBAyl6ACwWoWiAihFQRQofZdQl9pNLM-AtT2tDWQWWkBe5OHMxhepvoEDNodaQNPGeZjGHFFQAMhD2cKGkNsRKKQddehz6gd2dBtZJ5Dbm9bRfQj4QFBp86DdlDNDYBgTzYfNgcKZIoE0foh8tF4Ob4QJ1PC6Yi0gpk-AZ++jnyPh3S-gYr7izDnisAt+oB37wd3puHdIgujxVvPtXwmiukAA) because I needed it, but then it became more of an exercise to get familiar with the type system. As I'm new to Typescript, I'm still learning what I can and I can't do.

At first my code didn't work because I thought that `[x: infer U, ...args: infer V]` would match anything, but it turns out it doesn't. We need to use `[x?: infer U, ...args: infer V]` instead. I guess this is useful in case we want to distinguish the two cases. It's a little weird though:

    type WEIRD1 = [x?: 1] extends [x: any] ? true : false                   // true
    type WEIRD2 = [x?: 1] extends [x: any, ...args: any[]] ? true : false   // false
    type WEIRD3 = [x?: 1] extends [x?: any, ...args: any[]] ? true : false  // true

I started with recreating my own version of Peano numbers, but then I realized I could use actual numbers. Unfortunately, they're just as dumb as ""dumb1"" and ""dumb2"", i.e. strings. AFAICT, we can't do math with them as they're just symbols.

I also noticed there's no support for higher-order types. For instance it's not possible to pass T&lt;,&gt; as argument to another type.

Anyway, could you have a look at my code and let me know if it can be simplified or you'd do some things differently? There might be features, in the language, I'm not taking advantage of.

Thank you for reading!",Extracting types from a function signature
1538,2021-05-09 08:18:54,3,1,"        // Query Middleware
        tripsSchema.pre&lt;Query&lt;unknown, ITrips, unknown&gt;&gt;(/^find/, function () {
          void this.find({ secretTrip: { $ne: true } });
        });
        
        // Aggreation Middleware
        tripsSchema.pre(""aggregate"", function (this) {
          console.log(this);
        });
    

 In the below \`ts\` code my middlware seems to run fine even if i don't call \`next()\`. Is this kind of new update for ts? It seems to hang the the req , res cycle in \`js\` code.

Anyone with mongoose ts experienced pls help 

        tourSchema.post(/^find/, function(docs, next) {
          console.log(`Query took ${Date.now() - this.start} milliseconds!`);
          next();
        });
        
        // AGGREGATION MIDDLEWARE
        tourSchema.pre('aggregate', function(next) {
          this.pipeline().unshift({ $match: { secretTour: { $ne: true } } });
        
          console.log(this.pipeline());
          next();
        });",next() in typescript
1539,2021-05-10 13:19:52,2,1,"For those who haven't tried that combination yet, I got [two cool DYI examples](https://tsh.io/blog/why-typescript/) with code samples: 

* Generic reusable list with render props,
* Custom button with conditional props and union types.

Hope it's going to be useful for somebody out there! :)",Reactjs + MaterialUI + Typescript = &lt;3
1540,2021-05-11 02:28:31,7,1,"I've been working with the serverless framework with typescript, but I want to add additional AWS resources to my stack, but long for type safety when configuring these resources.

I haven't found any official types that I can use for this. I found this spec file: [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html)

But IDK enough to know if this can be converted to TS easily, or if this is a standard specification in the first place.

Any help or a point in the right direction would be greatly appreciated!",Looking for CloudFormation Resource Templates as Type Definitions
1541,2021-05-11 03:37:29,12,1,"I really like C#'s optional named parameters. It makes it easy to extend the interface without re-coding the calling points, and often makes the code more legible. Example: ""foo.showReport(true);"" versus ""foo.showReport(printAlso: true);"" One can't tell what ""true"" means in the first without digging up the parameter signature. 

While TypeScript does support [an indirect way]( https://betterprogramming.pub/named-parameters-in-typescript-e32c763d2b2e) to have such, it's verbose, and requires reworking calling points to add. I'd like to see direct first-class support. Thank You!

Once you use optional named parameters, going back creates withdraw syndromes.",Please add optional named parameters to TypeScript
1542,2021-05-11 10:17:08,3,1,"The below code does not give me an error. **But If I use interface it gives an error. I tried reading docs but really not getting what is the problem.**

*The catchAsync function always take a asyn function (express request handler) and returns it.*

// This gives me an error

    
        interface asyncController {
          asyncFuncController(
            req: Request,
            res: Response,
            next: NextFunction
          ): Promise&lt;void&gt;;
        }
        
        export const catchAsync = (asyncFuncController: asyncController) =&gt; {
          return (req: Request, res: Response, next: NextFunction) =&gt; {
            asyncFuncController(req, res, next).catch(next);
          };
        };
        
        const someController = catchAsync( async function (req: Request, res: Response, next: NextFunction){
            // Do some stuff
        })

// Error

        This expression is not callable.
          Type 'asyncController' has no call signatures.ts(2349)
        Unsafe member access .catch on an `any` value.eslint@typescript-eslint/no-unsafe-member-access
        Unsafe call of an `any` typed value.eslint@typescript-eslint/no-unsafe-call

// This does not error

        import { NextFunction, Request } from 'express';
        
        type asyncController = (
          req: Request,
          res: Response,
          next: NextFunction
        ) =&gt; Promise&lt;void&gt;;
        
        export const catchAsync = (asyncFuncController: asyncController) =&gt; {
          return (req: Request, res: Response, next: NextFunction):void =&gt; {
            asyncFuncController(req, res, next).catch(next);
          };
        };
        
        const someController = catchAsync(
          async (req: Request, res: Response, next: NextFunction) =&gt; {
            // Do some stuff
          }
        );

&amp;#x200B;

Pls help",type vs interface when passing a async function in function.
1543,2021-05-11 12:54:19,0,1,"Hey, Typescripters! In 4.3 we are getting improvements to Template Literal Type (think `type AnimalTag: \`Animal;${string}\`` ) assignability, and it prompted me to revisit Redux pattern. I really wanted to switch to using Redux in cases where my team used MVVM classes with inheritance before, and now Typescript makes it possible in a very organic manner. I made some tutorials and showcases for my team, and thought I'd share them . 

There is an [article explaining how Tag hierarchies can be done with String Literal Templates](https://ikoshelev.azurewebsites.net/search/id/16/Pragmatic-uses-of-TypeScript-type-system-03-Tag-hierarchies-via-Template-Literal-Types). I also implemented a [POC app](https://uiappashowcases.blob.core.windows.net/$web/rematch2-advanced/index.html), which imitates a UI for car dealership manager who is working on several deals in parallel.  It has a normal type of `Deal` and a  `DealForeignCurrency`, which ""exactly the same, but with a few differences ;-) ""

https://preview.redd.it/iko84yyvhhy61.png?width=1248&amp;format=png&amp;auto=webp&amp;s=54390ad295cc06cdd6a6e67cd5ea6094e5b16871

Previously, I made an [MVVM POC](https://github.com/IKoshelev/ui-app-architecture-showcases/tree/mobx-mvvm) that relied on classes, this time - it's all [Redux (via Rematch2)](https://github.com/IKoshelev/ui-app-architecture-showcases/tree/rematch2-advanced) , all state is kept in POJO stores, with all the goodies like snapshot rewinding. At the same time, Typescript keeps all code secure by forcing tag checks, and polymorphism is achieved via [multimehods](https://github.com/IKoshelev/typescript-multimethod-type-tag-hierarchy) , so we don't have to use hordes of `switch` statements and base types don't depend on derived types. Seeing how good the POC turned out, I'm thinking this will be my default pattern for enterprise apps from now on.",String Literal Templates and Tag hierarchies
1544,2021-05-11 16:57:00,0,1,"I noticed recently that `strictNullChecks` can't infer that `x` can't possibly be null in something like:

```typescript
// example1.ts
let x: number | null = null;
function f() {
  x = 1;
}
function g() {
  f();
  x++;
}
```

```
$ tsc example1.ts --strictNullChecks
example1.ts:8:3 - error TS2531: Object is possibly 'null'.

8   x++;
    ~

Found 1 error.

```
But it can if you inline it:

```
// example2.ts
let x: number | null = null;
function g() {
  x = 1;
  x++;
}
```

This may be more common in everyday use inside class methods, where the same thing happens:

```
// example3.ts
class Example3 {
  x: number | null = null;
  public f() {
    this.x = 1;
  }
  public g() {
    this.f()
    this.x++
  }
}
```

```
tsc example3.ts --strictNullChecks
example3.ts:8:5 - error TS2531: Object is possibly 'null'.

8     this.x++
      ~~~~~~

Found 1 error.
```

Again if you inline that , it's fine. 

I was wondering if anyone had any info on why Typescript isn't able to infer the types properly here, and maybe if some people had some links to issues and discussions on this on what makes this a hard case for Typescript to support.",strictNullChecks and shared variables between functions
1545,2021-05-12 21:46:51,0,1,,Currying in typescript for argument binding
1546,2021-05-13 15:25:17,1,1,"There is a specific rule I'm trying to add to the default typescript-eslint/naming-convention rule

I added the following to my eslintrc file, under `overrides.rules`:

    ""@typescript-eslint/naming-convention"": [
      ""error"",
      {
        ""selector"": ""enumMember"",
        ""format"": [""camelCase"", ""UPPER_CASE""]
      }
    ]

I realized the above would only set the rule for enumMember. All the defaults have been removed..

Visiting [https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/naming-convention.md](https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/naming-convention.md)

I see they have defaults listed, so just copy-pasting those in..

    ""@typescript-eslint/naming-convention"": [
      ""error"",
      {
        ""selector"": ""default"",
        ""format"": [""camelCase""]
      },
      {
        ""selector"": ""variable"",
        ""format"": [""camelCase"", ""UPPER_CASE""],
        ""leadingUnderscore"": ""allow""
      },
    
      {
        ""selector"": ""typeLike"",
        ""format"": [""PascalCase""],
        ""leadingUnderscore"": ""allow""
      },
      {
        ""selector"": ""enumMember"",
        ""format"": [""camelCase"", ""UPPER_CASE""]
      }
    ]

Now, my linter is complaining about naming-convention across multiple instances that were previously not a problem.

Does anyone know what the actual defaults are for this linter rule? Or is there a way to still apply the defaults and add on additional rules?",Question: How to overwrite the default typescript-eslint/naming-convention linter rule
1547,2021-05-13 21:53:24,1,1,"I’m a new typescript developer and want to nest one interface into another. At first, it seemed like a I could do this by simply setting an interface to be the type/value of a property on another interface. However, it seems that the new property becomes set to undefined. 

Any suggestions?",Nesting Interfaces
1548,2021-05-14 22:19:50,8,1,"I’m a relatively new typescript developer (new to JS actually). I come from a Java background.

I wanted to write some unit tests, but for the life of me I can’t find a universally popular Typescript mocking library that’s still maintained?

According to SO, JS mocking libraries like Sinon or Jest do not have full typed capabilities.

Of the fully typed mocking libraries, people recommend typemoc or ts-mockito but the former hasn’t been maintained since 2017, and the latter not since June 2020. 

I see a relatively new one called @fluffy-spoon/substitue which looks maintained but not that popular at the moment. I’m also not sure if it works on TS4 (will play around with it)

I guess my question is: given the lack of activity around this, are people just not mocking code these days? Or are we just sacrificing type safety using jest or sinon?",Help me understand the state of TS mocking ecosystem
1549,2021-05-15 07:22:48,1,1,"I used graphql code generator alongwith react-query and graphql-request in order to generate custom hooks.

This is my codegen.yml file:

```yml
overwrite: true
schema: ""http://localhost:4000/graphql""
documents: ""src/graphql/*.graphql""
generates:
  src/generated/graphql.ts:
    plugins:
      - ""typescript""
      - ""typescript-operations""
      - ""typescript-react-query""
    config:
      fetcher: ""graphql-request""
      exposeDocument: true
      exposeQueryKeys: true
```

But while doing SSR, I'm unable to pass my session cookie (created with express-session) alongwith my request. Any help would be appreciated.

This is the getServerSideProps method:

```typescript
export const getServerSideProps: GetServerSideProps = async (ctx) =&gt; {
  const queryClient = new QueryClient();

  await queryClient.prefetchQuery(useMeQuery.getKey(), () =&gt;
    client.request(useMeQuery.document, undefined, {
      ...(ctx.req.headers as any),
    })
  );

  return {
    props: {
      dehydratedState: dehydrate(queryClient),
    },
  };
};
```",[AskJS] How to pass session cookie with graphql-request while doing SSR in Next.js?
1550,2021-05-15 11:16:52,9,1,"I have a js code that wokrs fine

        const { promisify } = require('util');  
        // 2) Verification token
        const decoded = await promisify(jwt.verify)(token, process.env.JWT_SECRET);

I tried to convert it into the similar \`ts\` version. But is gives me weird error

&amp;#x200B;

        let decoded = ''
        if(process.env.JWT_SECRET){
        const asyncJWTVerify =(token:string,JWT_SECRET:string)=&gt;  promisify(jwt.verify)
        decoded = await asyncJWTVerify(token,process.env.JWT_SECRET)     
        }

Error

        const asyncJWTVerify: (token: string, JWT_SECRET: string) =&gt; (arg1: string) =&gt; Promise&lt;jwt.SigningKeyCallback&gt;
        Unexpected `await` of a non-Promise (non-""Thenable"") value.eslint@typescript-eslint/await-thenable

What am I doing wrong here?",convert a jwt.verify async to typescript version
1551,2021-05-15 16:33:35,0,1,"Installation:

    npm install --save-dev ts-doc-gen-md

Documentation generation (notice that you have to pass the entry point to the typings and that you have to add extra quotation marks):

    npx ts-doc-gen-md ""'./dist/index.d.ts'""

I have already used this library to generate documentation for one of my projects: [declarative-tree](https://github.com/lillallol/declarative-tree#documentation).

You can use the library also as function (just try to import via the library's entry point). The function and the cli have the exact same functionality (in fact the function has been converted to cli via [fn-to-cli](https://www.npmjs.com/package/fn-to-cli)).

You might want to inject the generated documentation into your `README.md` file, so you might find [md-in-place](https://www.npmjs.com/package/md-in-place) useful.","ts-doc-gen-md : A documentation generation library for typescript projects, in markdown."
1552,2021-05-16 05:44:50,1,1,"According to StackOver Flow TypeScript ranked #1 loved programming language across the world.

That is totally unbelievable.

[https://untiedblogs.com/t-s-vs-j-s-7-powerful-ways-to-know-typescript-language/](https://untiedblogs.com/t-s-vs-j-s-7-powerful-ways-to-know-typescript-language/)",T.S. vs J.S.: 7 Powerful Ways To Know TypeScript language
1553,2021-05-17 09:03:45,2,1,"**Monday, May 10 - Sunday, May 16**

###Top Posts

| score | comments | title &amp; link |
|--|--|--|
| 434  | [37 comments](https://www.reddit.com/r/javascript/comments/nd14sf/modern_javascript_everything_you_missed_over_the/)  | [Modern Javascript: Everything you missed over the last 10 years &amp;#40;ECMAScript 2020&amp;#41;](https://turriate.com/articles/modern-javascript-everything-you-missed-over-10-years)|
| 422  | [179 comments](https://www.reddit.com/r/javascript/comments/n9rvke/babeljs_is_used_by_millions_so_why_are_we_running/)  | [Babel.js is used by millions, so why are we running out of money?](https://babeljs.io/blog/2021/05/10/funding-update.html)|
| 294  | [26 comments](/r/javascript/comments/ndnhgs/learnjs_a_fast_introduction_to_modern_programming/)  | [Learn.js: A fast introduction to modern programming with javascript](https://github.com/MarcoWorms/learn.js)|
| 265  | [61 comments](https://www.reddit.com/r/javascript/comments/nbh4ct/drop_ie11_support_plan_for_vue_3/)  | [Drop IE11 support plan for Vue 3](https://github.com/vuejs/rfcs/blob/master/active-rfcs/0038-vue3-ie11-support.md)|
| 238  | [112 comments](https://www.reddit.com/r/javascript/comments/naipj5/prettier_23_in_which_assignments_are_consistent/)  | [Prettier 2.3. In which assignments are consistent, short keys non-breaking, and Handlebars official](https://prettier.io/blog/2021/05/09/2.3.0.html)|
| 219  | [35 comments](https://www.reddit.com/r/javascript/comments/na6uor/wu_tang_lorem_ipsum_a_text_generator_vanillajs/)  | [wu tang lorem ipsum - a text generator - vanillaJS](https://s-kngstn.github.io/wu-loremipsum/)|
| 197  | [18 comments](https://www.reddit.com/r/javascript/comments/nb1flc/announcing_typescript_43_rc/)  | [Announcing TypeScript 4.3 RC](https://devblogs.microsoft.com/typescript/announcing-typescript-4-3-rc/)|
| 183  | [15 comments](https://www.reddit.com/r/javascript/comments/nc3dkr/dev_tool_a_markdown_editor_for_js_developers/)  | [Dev tool: A Markdown editor for JS developers](https://dev.to/alagrede/dev-tool-a-markdown-editor-for-developers-1j13)|
| 147  | [57 comments](https://www.reddit.com/r/javascript/comments/n9cp8n/askjs_how_has_your_experience_with_deno_been_so/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; How has your experience with Deno been so far?|
| 73  | [27 comments](https://www.reddit.com/r/javascript/comments/ncbqvx/map_of_javascript/)  | [Map of Javascript](https://github.com/mechaniac/Map-of-Javascript)|


&amp;nbsp;

###Most Commented Posts

| score | comments | title &amp; link |
|--|--|--|
| 26  | [23 comments](https://www.reddit.com/r/javascript/comments/ncsst8/showoff_saturday_may_15_2021/)  | `[Showoff Saturday]` Showoff Saturday &amp;#40;May 15, 2021&amp;#41;|
| 27  | [21 comments](https://www.reddit.com/r/javascript/comments/nb3nrs/exalt_a_javascript_framework_for_building/)  | [Exalt - A JavaScript framework for building universal apps.](https://github.com/exalt/exalt)|
| 5  | [15 comments](https://www.reddit.com/r/javascript/comments/n9aucq/components_are_pure_overhead/)  | [Components are Pure Overhead](https://dev.to/this-is-learning/components-are-pure-overhead-hpm)|
| 4  | [13 comments](https://www.reddit.com/r/javascript/comments/naxdpo/askjs_create_email_js_replacement_for_vbs/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Create email: JS replacement for VB’s CreateObject&amp;#40;&amp;#41;?|
| 59  | [13 comments](https://www.reddit.com/r/javascript/comments/nbra9c/aurora_websites_analytics_made_easy_cookieless/)  | [Aurora. Website's analytics made easy! Cookieless &amp;amp; Privacy Focus out of the Box. Built in NextJS.](https://github.com/itsrennyman/aurora/tree/main)|


&amp;nbsp;

###Top Ask JS

| score | comments | title &amp; link |
|--|--|--|
| 8  | [2 comments](https://www.reddit.com/r/javascript/comments/nce8v1/askjs_best_javascript_markdown_wysiwyg_editors/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Best JavaScript markdown WYSIWYG editors?|
| 7  | [6 comments](https://www.reddit.com/r/javascript/comments/nbgz8i/askjs_searching_for_a_library_that_can_create/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Searching for a library that can create gravity for a normal html element|
| 5  | [9 comments](https://www.reddit.com/r/javascript/comments/nai7dn/askjs_how_do_some_spas_make_back_button_feel_like/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; How do some SPAs make back button feel like it's a static page without even SSR?|


&amp;nbsp;

###Top Showoffs

| score  |  comment  |
|--|--|
| 6  |  /u/Murky_Apricot1111 said [Created an npm library for a fancy gradeint progressbar.   I would really love to share and get some feedback regarding the new library that I just did. You can check them out in the link below.  Gith...](/r/javascript/comments/ncsst8/showoff_saturday_may_15_2021/gy7sk1s/?context=5) |
| 5  |  /u/jonny_eh said [I made a site to show you how old your favorite movies are: https://itsbeenthatlong.jonabrams.com/1893](/r/javascript/comments/ncsst8/showoff_saturday_may_15_2021/gy7w5pa/?context=5) |
| 3  |  /u/itays123 said [I spent the last 6 months developing a multiplayer game with React.js, Node.js and Spring Boot! I spent a lot of time and effort working on it so any feedback would be appreciated!  Repo link: https:/...](/r/javascript/comments/ncsst8/showoff_saturday_may_15_2021/gy6zchc/?context=5) |


&amp;nbsp;

###Top Comments

| score  |  comment  |
|--|--|
| 105  |  /u/warlockdn said [No point even explaining why they are not considering supporting IE11. They should have just dropped it.](/r/javascript/comments/nbh4ct/drop_ie11_support_plan_for_vue_3/gxzaf1t/?context=5) |
| 96  |  /u/rk06 said [People: companies should fund open source maintainers.  People: everyone should treat open source contributers with respect and do not abuse them   Also people: why are they paying open source maintai...](/r/javascript/comments/n9rvke/babeljs_is_used_by_millions_so_why_are_we_running/gxptlg7/?context=5) |
| 63  |  /u/sproingie said [I could handle one of these ""what's new"" articles every decade.  Looks like we knocked over the site tho.](/r/javascript/comments/nd14sf/modern_javascript_everything_you_missed_over_the/gy8drlu/?context=5) |
| 59  |  /u/intrinsnik said [I just got buy in from my product owners at work today to stop supporting IE11. Life is good.](/r/javascript/comments/nbh4ct/drop_ie11_support_plan_for_vue_3/gy009h9/?context=5) |
| 55  |  /u/MaxGhost said [Import statement completions!!! 🎉](/r/javascript/comments/nb1flc/announcing_typescript_43_rc/gxx9u3c/?context=5) |


&amp;nbsp;",Your /r/javascript recap for the week of May 10 - May 16
1554,2021-05-17 13:53:06,0,1,,Hello guys I am noob in typescript still in the learning stages. Creating a login mechanism and its giving me a type error I don't know how to solve can anybody please help
1555,2021-05-17 15:38:19,20,1,"Hey

I've a React Nextjs project, it's not that big but maybe 10-20 KLOC, whenever I delete a line, or fix an error or type something new, it takes 5-6 secs to just ""update"" and show new info (intellisense, new errors, resolved errors, etc).

I'm also on a fairly old machine (core i7 4702MQ, 12Gb DDR3 Ram, no SSD) I was wondering what the bottleneck exactly is, will a SSD fix this? I thought maybe the CPU is the bottleneck,",Slow typescript intellisense in React Nextjs project
1556,2021-05-18 16:52:24,14,1,"This might be a bug or me not understanding union types. Take a look at this code:

[https://www.typescriptlang.org/play?ts=4.4.0-dev.20210518#code/JYOwLgpgTgZghgYwgAgILIN4ChnLgfgC5kBnMKUAcwG4dkAjIhge2YBsI4RaBfLLUJFiIUAIWQQAHpBAATEmmy5Jxeqw5dauAJ7EyFEDSx8sMAK4gEYYMxDIADgbABhVlFkAKe2GLoAPsiiAJSYdAi2JOwQAHRszJQeAEQAKgAWKOHM7qBwkADkCpLIAG5wbGYowAqJyADUDmDRcEFayOEgkRyx8UlpGW6yOfkK2iVlFchVyDX13tH0LcZYjoKuWZ4YeMSJcCSyMIkANAzE5BM8i8tOa+4eGHDbu-tHyCrI8GwkEBfUQA](https://www.typescriptlang.org/play?ts=4.4.0-dev.20210518#code/JYOwLgpgTgZghgYwgAgILIN4ChnLgfgC5kBnMKUAcwG4dkAjIhge2YBsI4RaBfLLUJFiIUAIWQQAHpBAATEmmy5Jxeqw5dauAJ7EyFEDSx8sMAK4gEYYMxDIADgbABhVlFkAKe2GLoAPsiiAJSYdAi2JOwQAHRszJQeAEQAKgAWKOHM7qBwkADkCpLIAG5wbGYowAqJyADUDmDRcEFayOEgkRyx8UlpGW6yOfkK2iVlFchVyDX13tH0LcZYjoKuWZ4YeMSJcCSyMIkANAzE5BM8i8tOa+4eGHDbu-tHyCrI8GwkEBfUQA)

&amp;#x200B;

    interface A {
      a?: string;
      b?: boolean;
    }
    
    interface B extends A{
      x: boolean;
      y: string;
    }
    
    function printCoord(pt: A | B) {
      console.log(""The coordinate's x value is "" + pt.a);
      console.log(""The coordinate's y value is "" + pt.b);
    }
    printCoord({ a: ""asdf"", b: true });
    
    printCoord({a: ""asdf"", x: false});

The last line should not compile, because the presence of \`x\` enforces type B, but \`y\` is missing so it should actually be invalid.",Bug? Function accepts Object with missing prop when defined to accept union of type A and B where B extends A.
1557,2021-05-18 23:56:02,1,1,"I'm thing this might be more of an issue with javascript but I wasn't entirely sure.
I have this lib that is a wrapper around a rust client application and makes a few functions available to javascript. I'm currently trying to export the functions (and their type declarations) to use in a vscode extension. I'm kind of learning javascript/typescript as I'm going along so I'm kind of lost as to what the issue is.

here are the functions I'm trying to import/export (in `lib/index.js`)
```js
""use strict"";
""enable eslint"";
const { promisify } = require('util');
const { sniper } = require(""../index.node"");
const get_triggers = promisify(sniper.get_triggers);
const get_snippet = promisify(sniper.get_snippet);

module.exports = {
  get_triggers: promisify(sniper.get_triggers),
  get_snippet: promisify(sniper.get_snippet),
  add_target: sniper.drop_target,
  drop_target: sniper.drop_target
}
```
here are the types (in `lib/index.d.ts`)
```ts
export as namespace sniper;
export function add_target(session_id: string, uri: string, language: string): void;
export function drop_target(session_id: string, uri: string, language: string): void;
export function get_snippet(language: string, snippet_key: string): Promise&lt;[string]&gt;;
export function get_triggers(session_id: string, uri: string): Promise&lt;[string]&gt;;
```
currently I'm importing it like this:
```
const { sniper } = require('sniper-node');
```
and I'm using a relative path to the library to manage depependencies

I was setting the type to be a module in the package.json and then using import both library side and extension side but it kept saying that `required()` was not allowed in `lib/index.js` despite me changing all imports to `es6` imports, and rebuilding/relaunching the project. so I switched back to commonjs to try and resolve that issue.

the current issue I'm having is this error:
```
TypeError: Cannot read property 'get_triggers' of undefined
```

any ideas what the issue is?",Issue importing wrapper library
1558,2021-05-19 20:10:08,3,1,"When im working with .vue files in typescript mode, i do get code type-checked for some time and then typescript service just stops working so I have to restart it so as to start checking types again. This has been the case for a long time and across multiple WebStorm instances on several different PCs.

Has anyone encountered this issue and perhaps found a solution to this?",WebStorm Vue + TS service stops
1559,2021-05-20 19:09:16,0,1,"Hey people!

I am trying to have an error handling functionality where I set the origin of an error to the function given by the argument.  


    import { FunctionKeys } from 'utility-types'
    
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    abstract class AbstractClass&lt;Derived extends new (...args: any) =&gt; any&gt; {
        protected baseMethod (capture: FunctionKeys&lt;InstanceType&lt;Derived&gt;&gt;): never {
            try {
                throw new Error('Random error')
            } catch (e) {
                Error.captureStackTrace(e, (this as InstanceType&lt;Derived&gt;)[capture])
                throw e
            }
        }
    }
    
    class DerivedClass extends AbstractClass&lt;typeof DerivedClass&gt; {
        invoke () : void {
            this.baseMethod('invoke')
        }
    }
    
    new DerivedClass().invoke()

Does anybody know of  a better approach to this?  
Even just being able to tell the Derived class it can reference itself would be cool.  
I know I could pass the function as a parameter too, but Id rather avoid it.",Retrieving the type of the Derived class
1560,2021-05-21 04:42:46,0,1,[removed],"Introduction to Chore-cli, easy to generate development infrastructure for typescript project."
1561,2021-05-21 07:39:25,5,1,"I was trying to type return value of \_.[defaultsDeep](https://lodash.com/docs/4.17.15#defaultsDeep)

Heres the return type for 2 arguments

`type Primitive = string | number | boolean | null`  
`type DeepDefault&lt;T, K&gt; = T extends Primitive ? T : Omit&lt;T, keyof K&gt; &amp; {`  
  `[Key in keyof K]: Key extends keyof T ? DeepDefault&lt;T[Key], K[Key]&gt; : K[Key]`  
`} ;`  
Heres the link to [playground](https://www.typescriptlang.org/play/?ssl=5&amp;ssc=4&amp;pln=1&amp;pc=1#code/C4TwDgpgBACgTgSwLYOAgbtAvFAzsRAOwHMoAfKQgVyQCMI5ypaB7FgGwgENCnr32AKEGhIUACIQIYSQDMuVdsAA8AFQA0UANIA+KDlVQIAD2ARCAE1yxEKNJigB+KIYBcUAPJ21mgNYQQFlltPQAyKABvQSgoAG0tAKgEXn9A4K0AXXcEkCNTcysoVKCXJwkpGQh5RRVVeICMzS16kAy9bJaMwQBfKABuYVFoFloAKwBGfUjoqC53cfUZ2nd8ImJFmIh3KJiY2QQ4fHcCKggZ7pnZbZm9g6OoAHJEYgALYAfznsHwYbGAJimOygAGN5hsoBYVgRkusZltprs8BBgSxLO55OxcGcYhc9tdEftDsB3A8AO5wVHED44r4iH5QACSHjAYC4U0k0jkCiUyhGE00fL+OkEKMI+CgLBZc0ZzNZgJm0oWS3cACJVjCVeDQVAlTFIVA1dCSJq4fjdoT7icIOCYljRfqMVjzuCrgjzXdiY9nm9qVALhcgA)   
The problem is typing the general case of N parameters   
I know i can just add overloads for up to \~10 parameters for example like so  
`DeepDefaultFor3&lt;T,K,J&gt; = DeepDefault&lt;T, DeepDefault&lt;K,J&gt;&gt;`  
but that doesn't seem right  
Does any one have ideas about hot one would type  \_.[defaultsDeep](https://lodash.com/docs/4.17.15#defaultsDeep) of N parameters  when N is unknown?",Typing some complex lodash stuff
1562,2021-05-21 11:00:29,9,1,[Here](https://www.typescriptlang.org/play?#code/FAFwngDgpgBAtgQwjAvDAskgPAZzHAIwHsAbAGgDsBXQqAJwD4BuYUSWRCANQRKtjScYUAB4goFACY4M2PIVJkAlhQBm9GAFUGMAPxaYALhgUoAN3pMgA) is what I have tried so far. Is this how it is done? Are there any better ways to do it?,"How to get the value type from type Map&lt;key,value&gt;?"
1563,2021-05-21 11:48:42,0,1,[removed],Best resources for learning typescript
1564,2021-05-21 12:01:26,9,1,"[Here](https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/typedef.md#options) is what I am talking about. I want to know your opinions regarding this rule. Do you use it? Why? Do you enable all the options or some of them? 

I have never used that rule, however I am thinking it would be a good idea to use it and enable all the rules. It is my opinion that it forces you to write extra code so that your project is more secure.",Enforcing explicit types via @typescript/eslint typedef rule.
1565,2021-05-22 17:17:52,17,1,"I've been building a basic node/express/typescript template on github to use as a starting point for a personal project I have been planning, as well as future projects.

I am however very new to all of the technologies involved and am consistently having trouble getting types configured correctly.

One such instance is declaring the type of the request parameter in my express router when using my auth middleware which adds a user object to the request.

    interface authRequest extends Request {
 user: IUser;
}

// u/route GET api/test
// u/desc Get a user's test data
// u/access Private
router.get('/', auth, async (req: authRequest, res: Response) =&gt; {
 try {
 console.log('GET api/test hit');
 // TODO fix this as authRequest
 const test = await Test.findOne({ user: (req as authRequest).user._id });
 if (!test) {
 return res.status(404).json({ msg: 'Test data not found' });
        }
 return res.json(test);
    } catch (err) {
 console.error(err.message);
 return res.status(500).send('Server error');
    }
});

I'd have thought the preferable pattern would be to type Req as authRequest rather than Request as it's more precise and avoids the need for doing this: `(req as authRequest).user._id`.

However if I declare the type of req as authrequest (i.e. like this: `router.get('/', auth, async (req: autRequest, res: Response) =&gt; {)` I get this error:

    No overload matches this call.
    Overload 1 of 3, '(path: PathParams, ...handlers: RequestHandler&lt;ParamsDictionary, any, any, ParsedQs, Record&lt;string, any&gt;&gt;[]): Router', gave the following error.
    Argument of type '(req: authRequest, res: Response) =&gt; Promise&lt;express.Response&lt;any, Record&lt;string, any&gt;&gt;&gt;' is not assignable to parameter of type 'RequestHandler&lt;ParamsDictionary, any, any, ParsedQs, Record&lt;string, any&gt;&gt;'.
    Types of parameters 'req' and 'req' are incompatible.
    Property 'user' is missing in type 'Request&lt;ParamsDictionary, any, any, ParsedQs, Record&lt;string, any&gt;&gt;' but required in type 'authRequest'.
    Overload 2 of 3, '(path: PathParams, ...handlers: RequestHandlerParams&lt;ParamsDictionary, any, any, ParsedQs, Record&lt;string, any&gt;&gt;[]): Router', gave the following error.
    Argument of type '(req: authRequest, res: Response) =&gt; Promise&lt;express.Response&lt;any, Record&lt;string, any&gt;&gt;&gt;' is not assignable to parameter of type 'RequestHandlerParams&lt;ParamsDictionary, any, any, ParsedQs, Record&lt;string, any&gt;&gt;'.
    Type '(req: authRequest, res: Response) =&gt; Promise&lt;express.Response&lt;any, Record&lt;string, any&gt;&gt;&gt;' is not assignable to type 'RequestHandler&lt;ParamsDictionary, any, any, ParsedQs, Record&lt;string, any&gt;&gt;'.ts(2769)
    test.ts(10, 5): 'user' is declared here.

I guess it's because authRequest contains a user field and the type expected by router.get() doesn't, but I don't know what to do about it beyond the fix I already implemented which seems very clunky.

Any advice?

Here is the file in question on my github repo: [https://github.com/SSamps/template-backend-node-express-typescript/blob/feature/newCollection/src/routes/test.ts](https://github.com/SSamps/template-backend-node-express-typescript/blob/feature/newCollection/src/routes/test.ts)

P.S. I imagine my code is littered with similar mistakes. If you have any other pointers I'd love to hear them!",Question: Node + Express + Typescript - How should I type an express request parameter with an added custom field?
1566,2021-05-23 00:30:49,23,1,"So I want to update my (very large\*) project from TypeScript 2.3.3 to the latest version, and I know that a [breaking changes doc](https://github.com/microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md) exists.

What's your approach? The way I see it is...

1) Switch to latest version, run a TS build and address errors as needed. I figure this is the best approach, but maybe I'm wrong.

2) Use the breaking change doc and look at major version only. So look at 2.x -&gt; 3.x breaking changes. Fix each manually, then upgrade to 3.x (which version?). Fix those errors an move on. This sounds pretty time consuming.

3) Go through the doc and address all issues. This sounds insane.

I figure #1 is probably the quickest approach (and I guess I could've been well on my way in the time that it took to write this damn post). But I wanted to see others opinions.

\*this project is 180,000 lines of typescript code. I consider it a humongous projects, but I have no idea what other people work on, so who knows.",How to upgrade TypeScript versions - what's your process regarding breaking changes?
1567,2021-05-23 11:43:31,2,1,"Hello community,

I have put together, a super simple reference project to deploy a TypeScript Node Express app onto GCP Cloud Run. Hope you find this helpful!

Github project URL: [https://github.com/MatthewCYLau/node-express-typescript](https://github.com/MatthewCYLau/node-express-typescript)",Super simple reference project to deploy a TypeScript Node Express app onto GCP Cloud Run
1568,2021-05-23 16:34:26,2,1,"Hello, I've created a typescript library for Json serialization / deserialization with the emphasis on strong typing and effortless, declaritive way of resolving complex deeply nested json structures. Every feedback is truly welcomed. :)

npm: [https://www.npmjs.com/package/ts-jackson](https://www.npmjs.com/package/ts-jackson)

github: [https://github.com/Eljoy/ts-jackson/](https://github.com/Eljoy/ts-jackson/)",Json serialization deserialization with the support of deeply nested json structures.
1569,2021-05-23 18:21:45,4,1,,"zap-db: we made a JSON based database written in typescript and running on node, especially suited to slack/discord bots and works great as a replacement to json blobs :)"
1570,2021-05-23 18:27:44,0,1,[removed],"We made a JSON based database written in typescript, especially suited to slack/discord bots and works great as a replacement to json blobs :)"
1571,2021-05-23 19:44:27,8,1,"Hello typescripters!

&amp;#x200B;

I'm new to typescript and by now I think I have learned the basics such as simple types, interfaces, enums, etc.. 

I'm trying to use TS in a new project of mine and se so many weird things. For instance, within this route handler as I hover over req.params I see this horrible thing

 

https://preview.redd.it/gusibp0lbx071.png?width=941&amp;format=png&amp;auto=webp&amp;s=9a5344892dc065092619c45b74e5ee77a54472c5

My question is: Can anyone explain what does this type definition is describing and also, what type for reading should I do in order to understand something like this?

&amp;#x200B;

Thank you folks!",How to understand more complex types
1572,2021-05-23 20:46:47,2,1,"I have trouble correctly typing a slightly more complex react component.

When the component gets the argument `type` with the value ""`string`"" it should type the arguments `value` as a string and receive a callback that accepts a string.

If it receives the argument `type` with the value ""`date`"" it should get the argument `value` with the type date and the callback should also receive a date.

I tried to implement this with an overloaded function but for some reason typescript complains ""This overload signature is not compatible with its implementation signature."" which is not really helpful to me.

I tried to create a minimal example on codesandbox, can anyone figure out how to solve this?

[https://codesandbox.io/s/react-typescript-error-ltn2t?file=/src/index.tsx](https://codesandbox.io/s/react-typescript-error-ltn2t?file=/src/index.tsx)

Thanks in advance","Overloaded React Component Error ""This overload signature is not compatible with its implementation signature."""
1573,2021-05-24 07:27:44,0,1,"It seems that mixins are a fairly non-standardized part of JavaScript/TypeScript atm.  I've read so many articles that I'm starting to lose my mind and figured posting for help would keep me straight, so I apologize for any rambling or things that seem incoherent.

Let's say I have a Base class that includes boilerplate code for all of my classes.  Let's then say I want my actual class to extend from Array and Base, and let's say I want some mixins.  When it comes to mixins, the official docs allude to using [Constrained Mixins](https://www.typescriptlang.org/docs/handbook/mixins.html#constrained-mixins).  I'm extending this idea to my Base class because that actually makes sense for multi-inheritance.

However, through my struggles, I'm starting to not like my mixins as classes.  Ideally, they'd just be objects that I can ""mix into"" my actual class... I don't like the idea of my mixins sharing the constructor call chain with my extended class, let alone having a constructor at all.  So then I was like, ""Simple.  I can use Object.assign.""  Wrong.  The problem I've had with doing a simple \`Object.assign(this, myMixinConfig)\` is that TS has no clue about the properties that get mixed in from the config.  From everything I've read, there's no way to do this because obviously that breaks the idea of TypeScript.

So I'm back to wondering how to properly do this.  I have [this example](https://www.typescriptlang.org/play?#code/C4TwDgpgBA4gwgewHYGdgCcCuBjYD0A8AKlALxQDeAvgHxlRIQDuUAFAHScCG6A5igC4oXJCADaAXQCUZOkQDcAKEUB6FVDgioASSiYU0YAAsIBqCgQBbCEYRMA-IuzI0UAPIBBehUVQ-UEwAbQIQhAHIACQhghCgwxSolJxdgdwAhb19-JnxAgBNwgHVcvIBCeKplADNMJFwAS2QoAFkPYigIAA9gCCQ8lFhEVAwcPHQaVmxAwSgiGR9-KHQIYEx0JCgprhQBrp6+gamBhcX-IJChNHR6pF56SOiQuKVFysrFGrrgRo3mtPa9r1+oMUlhcPgJkchHNKFk-MtVutNoFtrtukDDtNYadsiVLhgbndyGFiuh8uUXv43tVag0ms16p0AeiDiDhmCxhNLIybjMAGK077ISQAGnMmEg6C2O2hUiE8FBo3w2P8gRWyIG5BQEogUpRO0pfiqytYatS9Xo3M6vPYatuxigAFooABGeRQC00cgABnd9UdjvmcNOR0tPNQYnqEkm0ykhqglUWCLWGyOSnenzpGzS2wgzP2wIV7KV41Y2sl0pmRDFVt59iEAq+P0kQcWzmGGrD1tQUHsLUZrFrqDF5d1lZklx1etR8eTSMrHRZwNDJxxIV42iQxsHKF4+Out1bOJDLgQattCF4O94ceDr2D1NU6iIRnqAxy6AA1igxQAjTCpLoeTIGEqSBPUn7QLYLD1MAYQDMBjDsE+yKolAXiAqyrSsH8rA5gYrAeOg6BcCAUjkbCainK+QhIJgli-rq9AAExKFR7xUS+b5QMBphIKBUAfp+Tj6gMGFLgM+EQIRxGkWKYitGKfzSCqfg0Qw9GMegLHpso7auFw9CMCwHisLeXAXhuW4IKwFmvuweAAMoErcZm3vpZ4QJZrAAAYACQUHZjwIFQUABRZH75FQPlihZvEoAAcggwAAKLWmgcZAA), which works, but I get warnings from the TS parser about the properties not existing.  If you run the Fiddle, it does console log the properties, but I don't like the fact that I don't get autocomplete and warnings.

My questions:

* Can I use objects as mixins and somehow merge them into my class while also getting autocomplete and no warnings?
* If not, can I fix my example, so I get autocomplete and no warnings?
* If not, is MA(MB(Base(Array))) the only way mixins can be accomplished?

Thank you for reading, and if anyone has any comments as to why I'm doing things, please feel free to post... I'm very new to TS, so I might be doing something awkward.",How to properly implement mixins
1574,2021-05-24 09:03:51,1,1,"**Monday, May 17 - Sunday, May 23**

###Top Posts

| score | comments | title &amp; link |
|--|--|--|
| 777  | [129 comments](https://www.reddit.com/r/javascript/comments/ngd4ep/microsoft_finally_retiring_internet_explorer_on/)  | [Microsoft finally retiring Internet Explorer on June 15,2022](https://blogs.windows.com/windowsexperience/2021/05/19/the-future-of-internet-explorer-on-windows-10-is-in-microsoft-edge/)|
| 520  | [19 comments](https://www.reddit.com/r/javascript/comments/nev94y/a_visualiser_to_help_people_learn_about_the_dom/)  | [A visualiser to help people learn about the DOM Event system through exploration](https://domevents.dev)|
| 490  | [57 comments](https://www.reddit.com/r/javascript/comments/niu5o3/doom_captcha_captchas_dont_have_to_be_boring/)  | [DOOM Captcha - Captchas don't have to be boring](https://vivirenremoto.github.io/doomcaptcha/)|
| 392  | [70 comments](https://www.reddit.com/r/javascript/comments/nhdfkj/introducing_webcontainers_run_nodejs_natively_in/)  | [Introducing WebContainers: Run Node.js natively in your browser](https://blog.stackblitz.com/posts/introducing-webcontainers/)|
| 256  | [19 comments](https://www.reddit.com/r/javascript/comments/nfffpj/learnjs_a_fast_introduction_to_modern_programming/)  | [Learn.js: A fast introduction to modern programming with javascript &amp;#40;Updated + Restyled&amp;#41;](https://github.com/MarcoWorms/learn.js)|
| 238  | [69 comments](https://www.reddit.com/r/javascript/comments/nh3kl3/parcel_2_beta_3_10_faster_javascript_compiler/)  | [Parcel 2 beta 3: 10× faster JavaScript compiler written in Rust](https://v2.parceljs.org/blog/beta3/)|
| 199  | [42 comments](https://www.reddit.com/r/javascript/comments/ng3nnq/trombonejs_a_digital_trombone_for_your_web_browser/)  | [Trombone.js - a digital trombone for your web browser](https://github.com/bignimbus/trombone.js)|
| 174  | [58 comments](https://www.reddit.com/r/javascript/comments/ni9zer/the_time_i_sorta_had_a_real_use_case_for_a/)  | [The Time I &amp;#40;Sorta&amp;#41; Had a Real Use Case for a Bitwise Operator in JavaScript](https://macarthur.me/posts/use-case-for-bitwise-operator-in-javascript)|
| 173  | [18 comments](/r/javascript/comments/njdo3f/zapdb_we_made_a_json_based_database_written_in/)  | [zap-db: we made a JSON based database written in typescript and running on node, especially suited to slack/discord bots and works great as a replacement to json blobs :&amp;#41;](https://github.com/sdslabs/zap-db)|
| 163  | [18 comments](https://www.reddit.com/r/javascript/comments/nebmum/typehole_create_typescript_interfaces_from_js/)  | [Typehole – Create TypeScript interfaces from JS runtime values automatically](https://github.com/rikukissa/typehole)|


&amp;nbsp;

###Most Commented Posts

| score | comments | title &amp; link |
|--|--|--|
| 91  | [51 comments](https://www.reddit.com/r/javascript/comments/nhsxmf/the_ember_framework_takes_the_gaad_pledge/)  | [The Ember Framework Takes the GAAD Pledge](https://blog.emberjs.com/gaad-2021/)|
| 40  | [27 comments](https://www.reddit.com/r/javascript/comments/ned09m/challenge_javascript_calculator_in_the_smallest/)  | [Challenge: Javascript calculator in the smallest code.](https://codepen.io/j-creative/pen/MWpjgQV)|
| 22  | [26 comments](https://www.reddit.com/r/javascript/comments/nea8fo/askjs_will_there_be_a_replacement_for_the/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Will there be a replacement for the deprecated orientationchange event?|
| 149  | [25 comments](https://www.reddit.com/r/javascript/comments/ne8a4w/react_17_internally_uses_the_browsers_focusin_and/)  | [React 17 internally uses the browser's focusin and focusout events for onFocus and onBlur events](https://blog.saeloun.com/2021/05/14/react-17-uses-browse-focusin-focusout-for-onfocus-onblur)|
| 117  | [23 comments](https://www.reddit.com/r/javascript/comments/nhsr5y/announcing_a_new_appwrite_release_a_step_closer/)  | [Announcing a new Appwrite Release - a step closer to becoming a complete OSS Firebase Alternative](https://dev.to/appwrite/announcing-appwrite-0-8-an-open-source-self-hosted-baas-kda?x=y)|


&amp;nbsp;

###Top Ask JS

| score | comments | title &amp; link |
|--|--|--|
| 6  | [2 comments](https://www.reddit.com/r/javascript/comments/neb7so/askjs_question_about_event_loop/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Question about event loop|
| 5  | [8 comments](https://www.reddit.com/r/javascript/comments/nfbbtq/askjs_how_does_your_website_know_a_user_is_a/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; How does your website know a user is a paying customer?|
| 4  | [0 comments](https://www.reddit.com/r/javascript/comments/ni1srw/askjs_building_a_cli_using_typescript/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Building a CLI using Typescript|


&amp;nbsp;

###Top Showoffs

| score  |  comment  |
|--|--|
| 2  |  /u/xarg said [Fraction.js got rational exponentiation this week https://www.npmjs.com/package/fraction.js](/r/javascript/comments/nicumk/showoff_saturday_may_22_2021/gz3027a/?context=5) |
| 1  |  /u/MrLebbo said [&amp;#91;Who IP&amp;#93;&amp;#40;https://www.npmjs.com/package/who-ip&amp;#41; - CLI to get information about an IP address, such as coordinates, timezone, city district, organisation and whether the IP is a hosting ...](/r/javascript/comments/ncsst8/showoff_saturday_may_15_2021/gyi23mh/?context=5) |
| 1  |  /u/mr__peterman said [&amp;#91;coinchart&amp;#93;&amp;#40;https://www.npmjs.com/package/coinchart&amp;#41; \- a small npm package that lets you view cryptocurrency candlestick charts in your terminal.](/r/javascript/comments/ncsst8/showoff_saturday_may_15_2021/gykltk3/?context=5) |


&amp;nbsp;

###Top Comments

| score  |  comment  |
|--|--|
| 174  |  /u/dwitman said [And now the circle is compete.](/r/javascript/comments/nhdfkj/introducing_webcontainers_run_nodejs_natively_in/gyws1c3/?context=5) |
| 147  |  /u/nelmaven said [It's already too damn late. I have to support IE11 at work and we waste so many hours because of this damn browser it hurts my mind...](/r/javascript/comments/ngd4ep/microsoft_finally_retiring_internet_explorer_on/gyqxm4n/?context=5) |
| 129  |  /u/sadidiot616 said [I’ll believe it when I see it](/r/javascript/comments/ngd4ep/microsoft_finally_retiring_internet_explorer_on/gyqaula/?context=5) |
| 92  |  /u/itsnotlupus said [If, like me, you hate fun:  Complicated way: Run this in your dev tools console:      &amp;#40;async&amp;#40;&amp;#41;=&gt;{for&amp;#40;;;&amp;#41;{frames&amp;#91;0&amp;#93;?.document.querySelector&amp;#40;"".enemy""&amp;#41;.click&amp;#40;&amp;#41;...](/r/javascript/comments/niu5o3/doom_captcha_captchas_dont_have_to_be_boring/gz4asqc/?context=5) |
| 90  |  /u/PM5k said [I like that people started using Rust more, seemingly throwing it at anything anecdotally makes it “better/faster”. However I am wondering how much of “faster” is really down to Rusts safety, better r...](/r/javascript/comments/nh3kl3/parcel_2_beta_3_10_faster_javascript_compiler/gyue1a5/?context=5) |


&amp;nbsp;",Your /r/javascript recap for the week of May 17 - May 23
1575,2021-05-24 23:45:19,4,1,"```
export const useBar = (
    event: React.MouseEvent&lt;HTMLDivElement, MouseEvent&gt;,
    elmRef: React.MutableRefObject&lt;HTMLDivElement | null&gt;,
    callback: React.Dispatch&lt;React.SetStateAction&lt;number&gt;&gt;
  ) =&gt; {}
```
if I was to change the above typescript to plain javascript how would it look like?  
would it just be 
```
export const useBar = (
    event: React.MouseEvent,
    elmRef: React.MutableRefObject,
    callback: React.Dispatch
  ) =&gt; {}
```
?  
appreciate feedback",Typescript type annotation to plain JS question
1576,2021-05-25 11:17:33,2,1,[removed],NEO Block-chain where you can use TYPESCRIPT
1577,2021-05-25 14:39:31,10,1,[removed],Is there a simpler way to convert every property in a typescript interface to an optional boolean?
1578,2021-05-26 12:09:07,8,1,,typescript-strict-plugin - turn on strict mode on a per-file basis!
1579,2021-05-26 15:52:03,1,1," Error:   
Type 'object' is not assignable to type 'IconProp'. Type 'object' is not assignable to type '\[IconPrefix, IconName\]'.ts(2322) index.d.ts(25, 3): The expected type comes from property 'icon' which is declared here on type 'IntrinsicAttributes &amp; FontAwesomeIconProps' 

interface Props {   img: object; }

Parent Component:  
import { faBriefcaseMedical } from ""@fortawesome/free-solid-svg-icons""; &lt;MissionCards img={faBriefcaseMedical} /&gt; 

Child Component:  
import { FontAwesomeIcon } from ""@fortawesome/react-fontawesome""; &lt;FontAwesomeIcon icon={Props.img} /&gt;",(typescript) facing problem trying to pass font-awsome icon as object to child component
1580,2021-05-26 15:53:43,2,1,[removed],(typescript) facing problem trying to pass font-awsome icon as object to child component
1581,2021-05-26 15:56:23,2,1,[removed],how to pass font-awsome icon as object to child component (typescript)
1582,2021-05-26 17:04:16,2,0,"Hi all, 
I'm experimenting with types. Starting from [getProperty example](https://www.typescriptlang.org/docs/handbook/2/generics.html#using-type-parameters-in-generic-constraints) in TS documentation:

    function getProperty&lt;Type, Key extends keyof Type&gt;(obj: Type, key: Key) {
        return obj[key];
    }
    const x = { a: 1, b: 2 };
    const aa = getProperty(x, ""a""); // type number
    const bb = getProperty(x, ""b""); // type number

I would like to extend this function such that  it can handle function inside the x object, like:

    let x = {a: 1, b: function(){return 2;} }
    const aa = getProperty(x, ""a""); // this should be of type number
    const bb = getProperty(x, ""b""); // this should be of type number

I've tried a bit more [articulated example](https://www.typescriptlang.org/play?#code/C4TwDgpgBAYglhANgExgVwHYGNhwPYYBqAhomhADwCqAfFALxQAUAlA3VVAD5SbIQAzOBgjIA3AChQkWAhQkylWg1lJUmHPiKly1OjyqSA9EenQACgCc8kS6AW6AKgBooAaSgQAHsAgZkAM5QANYQIHgCUI50jI4A2m4AupJmUFY2EHYgDpQu7p4+foEhYRFRMVEJiQW+-kGs7FDEGCBQAPxQAEoQwGiWGI7guVV0AFyVSZISAhq4BFAA5j3ptqAUeR7etcWh4ZHRTBJQxyfH-ALjLkenJ2DWqyAAcsQAthDjbs7XN1DnxGiIYA5cYrTL2HS5VxuGhfU4sEH3MHZCHrKF0ADe3xOcEiTAAhEw7hkss83lBhL9BCw2JYen0MJSBP9ATlJD8sAQAsAoESwCpznFeUjSRBkljjrTev0efdyRguc0sBAyuhsHMGR1xTdeQA6LCkRBMdEAX3hWtOvLZJ2NEikQ1UKAAIoIVJjThhXu8HcgchQuZZhAsaFbjvqwOq2uN4Gpff7A8GsQB3ODIYAAC0j3t9GDQLwARpkEzaJBz5dzzlG5MhnZFGOiflqPW9xgAidNwIIdqDp6BNiAt2E3MPq8YzNVaBr1yX0qBttNdrs9qDDrQt42D47FkxRAASAFEAMp7qAHncAeSoABlHVAAELHuMYBZQDB4bnR+Qox9Bkuc7lCNQRRUJZgFBLImHOVwWz7AdZz+AFgBFFsWEkUsuSgACUAAYWIcMtGA5ZEXAyDZxXAhYJbeDARwvDyJQ38ywwqsAHUU3TAjQKI0AIMEKDk1TNNYIARgABnohiAjwRAIB1RA8AWJhMOQEVXCUmj1VUli2LTcSgA) in the playground, but my problem is that I can't get the right type.
Basically I want the return value of getProperty to be number or string not any or function type.

Could someone point me in the right direction?",Extend getProperty example
1583,2021-05-27 00:17:06,0,1,"Hello guys!

I did some decltype for typescript using webpack loaders.

[https://www.npmjs.com/@hipreme\_entertainment/decltype-loader](https://www.npmjs.com/@hipreme_entertainment/decltype-loader)

It works well, but it can conflict if you have variables with the same name, and it doesn't work intermodules, as it is a stateless regex matcher.",Decltype for typescript
1584,2021-05-27 08:02:18,3,1,,Do typescript's interface only support public data modifiers ?
1585,2021-05-27 10:35:46,2,1,"Trying to call a method using the object key, but I'm not sure how to get TS to infer the parameter types correctly. I'd rather avoid changing `funcsObject`.

`callFunction` works as expected, accepting only the correct pairing of `key` and `param`. It's just `funcsObject[key]` that gets its parameters inferred as `never` (because TypeScript will try to do an intersection of all possible parameters, so `string &amp; number`, which is `never`).

[Check the code in TS Playground](https://www.typescriptlang.org/play?#code/MYewdgzgLgBAZgVzMCB5ARgKwKbFgXhgG8AoGeJYAQQC4YAKaAJwEswBzO5t9gShnwA+GGAQAbMQBoyFZACE69UQFt02JnRVqm-ISPFSSAXwDcJEomRQW4GMACGEgGKVr4ADwAVGNgAeUbDAAEwgYAGtsAE8QOBgoSIAHbBjZFAwcPEF6GQjIuk9pcgT7JntlOgAFErLsAKYId3iklMs0rFwoAG1PAF1BToAGHul+UnIAenGYT0TsHyYmECYYNhhi0uUAOhlJmDlcewQIOda0drxO3J6AclD1spXQpuwgmHtQsGwAN3Vt8lP0h1LlEevR7speGYjOZdgA5EDzRbLVZQAAW2GOkjeoT8STwL22DmcrhsYHo11aVGuWOu6IkIGukJIRLELispPJrTk1JgAEYBkySLsZklEUsVmA4ujMdifL48QEgoTHKySeBOZQqVj+UyWWy8ByKZRuTS6WIGUygA), or just read it here:

    const funcsObject = {
      funcA: (string: string) =&gt; null,
      funcB: (number: number) =&gt; null,
    };
    
    function callFunction&lt;T extends keyof typeof funcsObject&gt;(
      key: T,
      param: Parameters&lt;typeof funcsObject[T]&gt;[0],
    ) {
      // Type error in param.
      // Because funcsObject[key]'s param is typed as never.
      funcsObject[key](param);
    }
    
    // No error in these, as expected.
    callFunction('funcA', 'hello');
    callFunction('funcB', 10);
    
    // Type error in these, as expected.
    callFunction('funcA', 10);
    callFunction('funcB', 'hello');",Calling method that's in an object via key: how to correctly infer param types?
1586,2021-05-27 15:23:32,5,1,,"This is one of the best tutorial for using react hooks with typescript, I found it to be very helpful so I am posting it. Happy learning"
1587,2021-05-28 03:03:23,0,1,[removed],"Introduction to Chore-cli, easy to generate development infrastructure for typescript project."
1588,2021-05-28 17:30:15,0,1,"The following block in my code is throwing 3 error messages:

1. Unsafe call of an any typed value.(@typescript-eslint/no-unsafe-call)

2. Unsafe member access .ready on an any value.(@typescript-eslint/no-unsafe-member-access)

3. Element implicitly has an 'any' type because index expression is not of type 'number'.

        private readonly TWITTER_OBJECT = 'twttr';
        private readonly TWITTER_SCRIPT_ID = 'twitter-wjs';
        private readonly TWITTER_WIDGET_URL = 'https://platform.twitter.com/widgets.js';
        private readonly document: Document;
    
        constructor(@Inject(DOCUMENT) document: Document) {
          this.document = document;
        }
    
        loadScript(): Observable &lt; unknown &gt; {
          return new Observable((observer: Observer &lt; unknown &gt; ) =&gt; {
            this.startScriptLoad();
            if (this.document.defaultView) {
              // eslint-disable-next-line @typescript-eslint/ban-ts-comment
              // @ts-ignore
              // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access
              this.document.defaultView[this.TWITTER_OBJECT].ready(this.onScriptLoaded(observer));
            }
          });
        }

I attempted to fix this by creating a interface to work with:

        export interface ICourseContentElementEmbedTweetDocument extends Document {
          [key: string]: string | number | unknown;
          ready(observer: (twitterData: unknown) =&gt; void): (callback: unknown) =&gt; void;
          defaultView: Window &amp; typeof globalThis;
        }

But there's a problem here, the ready attribute is in the wrong place, it needs to be nested under *\[key: string\]: string | number | unknown* as the nesting is as follows: *this.document.defaultView\[this.TWITTER\_OBJECT\].ready(this.onScriptLoaded(observer))*.

How do I fix this?",Nesting attribute in interface
1589,2021-05-28 18:50:15,2,1,"**Context:**

My new schema has two variants: 

One where no parentGroupId is required:

    type IlistGroupReg = {
 owner: IgroupMember;
 members: [IgroupMember];
 type: 'basicList' | 'giftList' | 'giftGroup';
 name: string;
 createdAt: Date;
};

 And another where parentGroupId is required when the type is ""childGiftList""

    type IlistGroupChild = {
 owner: IgroupMember;
 members: [IgroupMember];
 type: 'childGiftList';
 name: string;
 createdAt: Date;
 parentGroupId: Schema.Types.ObjectId;
};

 I use type intersections and unions as below to try to enforce this, with TlistGroup passed into mongoose's model&lt;&gt;.

    export type TlistGroupBase = IlistGroupReg | IlistGroupChild;
export type TlistGroup = Document &amp; TlistGroupBase;
    .
    .
    .
    const ListGroup = model&lt;TlistGroup&gt;('Test', ListGroupSchema);

You can see the specifics here: [https://github.com/SSamps/template-backend-node-express-typescript/blob/troubleshooting/newSchemaTypeCheck/src/models/Trouble.ts](https://github.com/SSamps/template-backend-node-express-typescript/blob/troubleshooting/newSchemaTypeCheck/src/models/Trouble.ts)

&amp;#x200B;

**Problem:**

If I create a new ListGroup passing in fields which do not satisfy the type declaration as follows (it's missing parentGroupId) typescript does not throw any errors:

    const A: TlistGroupBase = new ListGroup({
        owner: testUser,
        members: [testUser],
        type: 'childGiftList',
        name: 'myName',
        createdAt: Date.now(),
    });

Is there any way I can rework the type declarations to correct this?

I know I can do the following, but it seems somewhat clunky and to be frank, I might just forget and it doesn't offer the same level of protection:

    const B: TlistGroupBase = {
        owner: testUser,
        members: [testUser],
        type: 'childGiftList',
        name: 'myName',
        createdAt: now,
    };
    
    const C = new ListGroup(B);

Any other input is also always welcome!",Question: How to get type checking working when creating a new document from a mongoose schema [Typescript + MongoDB + Mongoose]
1590,2021-05-29 10:07:34,7,1,I wanted to use a javascript library which doesn't have any type declaration or doesnot support typescript script. The library was initial written ecmascript7 . So who can I use non typescript or regular javascript library in typescript project,How to use plain or regular javascript framework or library in regular typescript project ?
1591,2021-05-29 11:24:21,5,1,"I'm creating the schema below using Mongoose and I want to specify that if the groupType is 'childGiftList' the parentGroupId field is required, otherwise it is not.

I have that working with the below code:

    export const ListGroupSchema = new Schema({
        owner: {
            userId: { type: Schema.Types.ObjectId, required: true },
            oldestUnreadMsg: { type: Date },
        },
        members: [
            {
                userId: { type: Schema.Types.ObjectId, required: true },
                oldestUnreadMsg: { type: Date },
            },
        ],
        groupType: { type: String, required: true, enum: GROUP_TYPES },
        groupName: { type: String, required: true },
        creationDate: { type: Date, default: Date.now },
        parentGroupId: {
            type: Schema.Types.ObjectId,
            required: function () {
                return this.groupType === 'childGiftList';
            },
        },
    });

However typescript is complaining about ""this"" with the following:

    this: {
        type: typeof Schema.Types.ObjectId;
        required: () =&gt; boolean;
    }
    Object is of type 'unknown'.ts(2571)

I guess it thinks ""this"" refers to the parentGroupId object, not the ListGroupSchema schema. I can get rid of the error message with an `@ts-code` comment but I'd rather deal with it properly, but I don't know what I need to change.

Any help would be really appreciated thanks!","Question: Typescript incorrectly identifying ""this"" when specifying a conditionally required MongoDB field using Mongoose."
1592,2021-05-31 01:08:41,20,1,"[playground link](https://www.typescriptlang.org/play?#code/GYVwdgxgLglg9mABMMAKADogXIgSgUwjgCcATAHgGcpiYwBzAHzBAFsAjfYgGnAGswcAO5gAfIkaJ+gkQG0AugEpEAbwBQiTYnSyARAEZd8gNxqAvmqA)

In older versions, this used to work. But now it does not.",How to allow string index access in arrays?
1593,2021-05-31 02:48:19,7,1,"I have a whole suite of tests that all passed and functionality that works just fine in the browser extension I am making. But I have isolated the problem and simplified the code for demonstration purposes. This passes when I run it:  

FocusTimer.test.ts:   
  import FocusTimer from './FocusTimer';
  import { render } from '@testing-library/react';
  
    it('displays without crashing', () =&gt; {
        const { container } = render(FocusTimer(null));
        const button = container.querySelector('div');
        expect(button.innerHTML).toEqual('Start');
    });  
  
FocusTimer.tsx:  
    import React from 'react';
    
    const FocusTimer: React.FC = () =&gt; {
      return &lt;div data-testid='button'&gt;Start&lt;/div&gt;
    };
    
    export default FocusTimer;  
  
But the moment I add a React hook, even something as simple as this `const [ a, b ] = useState('');`, Jest no longer runs and gives me this error message:  
  
    Error: Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
    1. You might have mismatching versions of React and the renderer (such as React DOM)
    2. You might be breaking the Rules of Hooks
    3. You might have more than one copy of React in the same app
    See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.
  
I am familiar with that error message and have run `npm ls react` and all the other usual diagnostics. I wonder if this error message is being recycled for a case that isn't one of three enumerated there. Any ideas? I have been trying different syntactical variations of what I have here, but those either cause TypeScript to complain or Jest to not run for other reasons. Here's my config files:  
    
jest.setup.ts:  
`import '@testing-library/jest-dom'`  
  
package.json snippets:  
    ""jest"": {
      ""collectCoverageFrom"": [
        ""src/**/*.{js,jsx,ts,tsx,mjs}""
      ],
      ""setupFilesAfterEnv"": [
        ""&lt;rootDir&gt;/jest-setup.ts""
      ],
      ""testPathIgnorePatterns"": [
        ""src/**/*{!Popup}.css""
      ]
    }  
and  
    ""devDependencies"": {
      ""@testing-library/jest-dom"": ""^5.12.0"",
      ""@testing-library/react"": ""^11.2.7"",
      ""@types/chrome"": ""0.0.141"",
      ""@types/jest"": ""^26.0.23"",
      ""@types/react"": ""^17.0.6"",
      ""@types/react-dom"": ""^17.0.5"",
      ""clean-webpack-plugin"": ""^4.0.0-alpha.0"",
      ""copy-webpack-plugin"": ""^9.0.0"",
      ""css-loader"": ""^5.2.6"",
      ""html-webpack-plugin"": ""^5.3.1"",
      ""jest"": ""^26.6.3"",
      ""jest-chrome"": ""^0.7.1"",
      ""react"": ""^17.0.2"",
      ""react-dom"": ""^17.0.2"",
      ""style-loader"": ""^2.0.0"",
      ""terser-webpack-plugin"": ""^5.1.2"",
      ""ts-jest"": ""^26.5.6"",
      ""ts-loader"": ""^9.2.2"",
      ""typescript"": ""^4.2.4"",
      ""webpack"": ""^5.37.1"",
      ""webpack-cli"": ""^4.7.0"",
      ""webpack-merge"": ""^5.7.3""
    }  
And finally the tsconfig.json:  
    ""compilerOptions"": {
        ""jsx"": ""react"" /* Specify JSX code generation: 'preserve', 'react-native', 'react', 'react-jsx' or 'react-jsxdev'. */,
        ""module"": ""es6"" /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */,
        ""target"": ""es6"" /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */,
        ""moduleResolution"": ""node"" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
        ""esModuleInterop"": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,",Jest objects the moment I add a React hook to my .tsx file
1594,2021-05-31 09:03:26,2,2,"**Monday, May 24 - Sunday, May 30**

###Top Posts

| score | comments | title &amp; link |
|--|--|--|
| 424  | [107 comments](/r/javascript/comments/nlsddu/mdn_is_launching_mdn_plus/)  | [MDN is launching MDN Plus](https://developer.mozilla.org/en-US/plus)|
| 241  | [43 comments](https://www.reddit.com/r/javascript/comments/nkznwp/hate_cookies_introducing_aurora_100_cookiefree/)  | [Hate Cookies? Introducing Aurora, 100% Cookie-Free Javascript Open Website Analytics.](https://useaurora.app/)|
| 150  | [20 comments](https://www.reddit.com/r/javascript/comments/nk67p4/zx_112_introduces_a_new_nothrow_function_and_a/)  | [zx 1.12 introduces a new nothrow&amp;#40;&amp;#41; function and a better TypeScript support](https://github.com/google/zx/releases/tag/1.12.0)|
| 150  | [19 comments](https://www.reddit.com/r/javascript/comments/nlmqvj/announcing_typescript_43/)  | [Announcing TypeScript 4.3](https://devblogs.microsoft.com/typescript/announcing-typescript-4-3/)|
| 147  | [24 comments](/r/javascript/comments/njtfrf/sveltekitauth_enables_developers_to_rapidly/)  | [SvelteKitAuth enables developers to rapidly implement OAuth and other authentication flows in their SvelteKit apps using a class-based architecture and HTTP only cookies!](https://github.com/Dan6erbond/sk-auth)|
| 117  | [0 comments](https://www.reddit.com/r/javascript/comments/nkr0zr/jest_27_new_defaults_for_jest_2021_edition/)  | [Jest 27: New Defaults for Jest, 2021 edition](https://jestjs.io/blog/2021/05/25/jest-27)|
| 105  | [5 comments](https://www.reddit.com/r/javascript/comments/nkl2hk/it_was_pretty_difficult_to_share_opensource/)  | [It was pretty difficult to share open-source contributions to anyone in Github so I made a Kanban Chart page that shows all your open/closed pull-request and issues in a very visually appealing form.](https://github.com/codescientist703/github-kanban)|
| 80  | [5 comments](https://www.reddit.com/r/javascript/comments/nljlbm/refactor_a_free_software_development_conference/)  | [Re:factor - a FREE software development conference for charity](https://www.re-factor.be/)|
| 56  | [26 comments](https://www.reddit.com/r/javascript/comments/nkvb7o/codelockr_a_website_built_for_developers_to_keep/)  | [CodeLockr: a website built for developers to keep all the stuff they need while coding in one place, like code snippets, and much more.](https://www.codelockr.com/)|
| 30  | [0 comments](https://www.reddit.com/r/javascript/comments/nknrb2/scheme_based_powerful_lisp_interpreter_written_in/)  | [Scheme based powerful lisp interpreter written in JavaScript](https://github.com/jcubic/lips)|


&amp;nbsp;

###Most Commented Posts

| score | comments | title &amp; link |
|--|--|--|
| 8  | [27 comments](https://www.reddit.com/r/javascript/comments/nl2e0t/askjs_why_do_you_think_js_gets_so_much_hate_from/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; why do you think JS gets so much hate from devs?|
| 1  | [16 comments](https://www.reddit.com/r/javascript/comments/nkcn2k/the_bad_reasons_people_avoid_typescript_and_the/)  | [The Bad Reasons People Avoid TypeScript — and the Better Reasons Why They Shouldn’t](https://medium.com/@billwohlers/the-bad-reasons-people-avoid-typescript-and-the-better-reasons-why-they-shouldnt-86f8d98534de)|
| 3  | [14 comments](https://www.reddit.com/r/javascript/comments/nlhe4q/making_it_possible_to_write_strongly_typed/)  | [Making It Possible to Write Strongly Typed, Overloadable Constructors and Methods in JavaScript](https://www.youtube.com/watch?v=F-fa_yXcJbc)|
| 22  | [11 comments](https://www.reddit.com/r/javascript/comments/nkcwun/javascript_inheritance_the_dark_arts/)  | [JavaScript Inheritance: the Dark Arts](https://dev.to/nickkelly314/javascript-inheritance-the-dark-arts-1bh1)|
| 3  | [8 comments](/r/javascript/comments/nklxcb/askjs_can_i_make_an_ecommerce_with_pure_js/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Can I make an ecommerce with pure js?|


&amp;nbsp;

###Top Ask JS

| score | comments | title &amp; link |
|--|--|--|
| 7  | [7 comments](https://www.reddit.com/r/javascript/comments/nkkuyg/askjs_live_reloading/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; live reloading|
| 0  | [6 comments](https://www.reddit.com/r/javascript/comments/nkpza6/askjs_is_jsrender_important/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; is JsRender important?|


&amp;nbsp;

###Top Showoffs

| score  |  comment  |
|--|--|
| 1  |  /u/Incomplete-Sentenc said [I made a &amp;#91;script&amp;#93;&amp;#40;https://chirav.substack.com/p/videos-auto-to-watch-later?utm_campaign=javascriptsubreddit&amp;utm_medium=web&amp;utm_source=reddit&amp;#41; in Apps Script which goes through a list o...](/r/javascript/comments/nicumk/showoff_saturday_may_22_2021/gz92f2o/?context=5) |
| 1  |  /u/marshallbananas said [I made a HackerNews alternative interface with NextJS that supports dark mode, comments, and live updates from the HN Firebase API:  &amp;#91;yahni.news&amp;#93;&amp;#40;https://yahni.news/&amp;#41;](/r/javascript/comments/nicumk/showoff_saturday_may_22_2021/gzd2wz1/?context=5) |


&amp;nbsp;

###Top Comments

| score  |  comment  |
|--|--|
| 42  |  /u/javascriptPat said [Huh. TIL about zx, this looks nice.](/r/javascript/comments/nk67p4/zx_112_introduces_a_new_nothrow_function_and_a/gzbm19b/?context=5) |
| 32  |  /u/jakubiszon said [A video showing how it works would be helpful. I m too lazy to complete a registration form just to see how a tool looks like.](/r/javascript/comments/nkvb7o/codelockr_a_website_built_for_developers_to_keep/gzf5fwm/?context=5) |
| 29  |  /u/TuckerMcInnes said [How do you track the same visitor between pages?  For example, if Joe and Mike are behind a firewall so both have the same IP and the same spec work computer, how do you know which person is looking a...](/r/javascript/comments/nkznwp/hate_cookies_introducing_aurora_100_cookiefree/gzgo8iy/?context=5) |
| 27  |  /u/license-bot said [Thanks for sharing your open source project, but it looks like you haven't specified a license.  &gt; When you make a creative work &amp;#40;which includes code&amp;#41;, the work is under exclusive copyright by...](/r/javascript/comments/nkl2hk/it_was_pretty_difficult_to_share_opensource/gzde3e1/?context=5) |
| 21  |  /u/alphaqu2twice said [Or just use Git gists.](/r/javascript/comments/nkvb7o/codelockr_a_website_built_for_developers_to_keep/gzf5tlj/?context=5) |


&amp;nbsp;",Your /r/javascript recap for the week of May 24 - May 30
1595,2021-05-31 15:57:33,2,1,"I have something like this

export interface CompanyDoc extends Document {  
\_id: something  
companyName: string  
}

If I don't add the \_id explicitly, it seems Document is setting it as ""any"". How can I say that it's an ObjectId so typescript will through an error if I use it incorrectly?",mongoose typescript interface (interface ABC extends Document) how to define _id as an objectId on the interface?
1596,2021-05-31 22:13:01,0,1,,typecheck.macro (typescript validation library/macro) is looking for maintainers
1597,2021-06-01 03:13:28,6,1,"I wanted to know about the strength of a cryptocurrency or a blockchain system created with typescript, not in C++, Solidity or Go. I wanted to virtual try once created a blockchain system (cryptocurrency) using typescript. But I am in little bit in dilemma that, can it will give all the computational power and efficiency that another programming language or a system programming language gives in real world ?","How much sustainable a cryptocurrency would be if created with javascript aka ""typescript"" instead of C++ or Solidity ?"
1598,2021-06-02 02:25:28,12,1,"I'm kinda learning front-end stuff but I found that I need to learn about Typescript because it's so beneficial to learn for my plan. My question is that

Is essential to good at JavaScript before learning typescript?",Real quick question
1599,2021-06-02 16:59:24,2,1,"I'm trying to use an enum to narrow down another field on interface they're both in. The enum field is `type` and the other field is `value`. I'm using a conditional type for the `value` field to map it to the right interface. Here's the relevant code I'm using:

    enum MyEnum {
        Option1,
        Option2,
    }

    interface Opt1Val {
        innerValue1: string;
    }
    interface Opt2Val {
        innerValue2: number;
    }
    type EnumValMapper&lt;T extends MyEnum&gt; =
        T extends MyEnum.Option1 ? Opt1Val :
        T extends MyEnum.Option2 ? Opt2Val :
        never;

    interface AllTogetherImpl&lt;T extends MyEnum = MyEnum&gt; {
        type: T;
        value: EnumValMapper&lt;T&gt;;
    }

Trying to use it naively, however, does not work:

    function thisDoesntWork(at: AllTogetherImpl) {
        switch (at.type) {
            case MyEnum.Option1: {
                console.log(""Value1"", at.value.innerValue1); // Error: Property 'innerValue1' does not exist on type 'Opt1Val | Opt2Val'.
                break;
            }
            case MyEnum.Option2: {
                console.log(""Value2"", at.value.innerValue2); // Error: Property 'innerValue2' does not exist on type 'Opt1Val | Opt2Val'.
                break;
            }
        }
    }

But I can get it working with this awkward workaround:

    type AllTogether = AllTogetherImpl&lt;MyEnum.Option1&gt; | AllTogetherImpl&lt;MyEnum.Option2&gt;;

    function butThisWorks(at: AllTogether) {
        switch (at.type) {
            case MyEnum.Option1: {
                console.log(""Value1"", at.value.innerValue1);
                break;
            }
            case MyEnum.Option2: {
                console.log(""Value2"", at.value.innerValue2);
                break;
            }
        }
    }

Why do I need this workaround, and is there a way to get it working without having to list all the types out awkwardly like that?

Playground link [here](https://www.typescriptlang.org/play?#code/FAAjIUwOwVwWxAWQJ4FFYIN6nLg8gA4AuAlgPZQCMANDrmIaRQEy24C+wdIJUREAJwBmAQwDGEEI0oA1EQBsQ2euF5RBc+TAiUAXCADORAbwDmAbm6dcvfsPGTGzTUu42o6gZu3N9GAEaClhzcRMgEkujwmogiBBECADwAKpAAHvxQACYGSGgYAHwgALxu4KkQGdA5eVFwAHSM5FQgAPxSxLIKILplYBVV2bkodY3EzcxtHUTO3b0qYOoAbkFc7naiEiAAgvLyyWSmEEQAFoIAknAE8inpmTUjGCW1ha4LIGER+snBC0sK2n0dRicQSKQKvzAnG4QhgUDETCgHxOJAMABEyBADHwAOpkAQAawAFCIiPpdvtDsczgJLtcAJRvBYGADuJCIYhOIBJRHqnwgjOU73AYhEBkkj3gY0ReiZwvoYgoBjI8gg9XkhyJACJvDotdQQKT6v8tGq1BoATp6ZD5eB-AIICICTb3tZbaLxS8pU0WPohbaRUqVWqNaZtbrmPrDbyTdp6uavJbmNa+sL7Y7namQq6rGtwPydnsDkdToJnhTi9SLlcbpKGj6qEUAD6Fyklml02v5b3jFgQvNgWHwxEgfwwIjJFEGPGEgw88lFqmlgSC1Os9mc7lG-mrgMeiXd+u9qh+rMLRVQZWq9WanWWyhRo2xs0eC2mygpgO4dNOl0LN3yvuXpHoivhyl+F5XiGt4Ro+MaWvGr6JqayZ-vKP6ZgGAH0Nh7BAA)",Enum field with another field conditional on the enum field's value
1600,2021-06-02 17:45:33,190,1,"This really interested me particularly in the React ecosystem. A lot of times I see something like this:

    const UserList = (props: Props) =&gt; {}
    export default UserList;

I've never really understood this: why would you use a \`const\` here and an arrow function when you can just use the function keyword and make it far more concise? I would say it's even easier to understand and read

    export default function UserList(props: Props) {}

Maybe I'm an old fart but I remember the arrow function being introduced basically for two primary purposes:

1. lambda-like inline functions (similar to python)
2. maintaining an outer scope of this

for the lambda function, it's basically just replicating python so you don't have to write out an entire function body for a simple return:

    // before arrow function, tedious to write out and hard to format
    users.map(function (user) {
      return user.id;
    })
    // after, quick to read and easy to understand
    users.map(user =&gt; user.id);

the other way I've really seen it apply is when you need \`this\` to reference the outer scope. For example:

    function Dialog(btn: HTMLButtonElement) {
      this._target = btn;
      this._container = document.createElement('dialog');
    }
    
    Dialog.prototype.setup = function setup() {
      this._target.addEventListener('click', () =&gt; {
        this._container.open = !this._container.open;
      });
    }
    
    // Gotta use the `const self = this` if you wanna use a normal function
    // Without an arrow function, it looks like this:
    Dialog.prototype.setup = function setup() {
      const self = this;
      self._target.addEventListener('click', function () {
        self._container.open = !self._container.open;
      });
    }

but in the case I showed above, I see it *everywhere* in react to use constants to store functions, but I don't totally understand what the inherent benefit is past maybe some consistency. The only other one I've found is that if you're using typescript, you can more easily apply types to a constant.

So is there some reason I am not aware of to prefer constants and avoid the function keyword?",[AskJS] why are arrow functions used so universally nowdays? What's the benefit over named functions/function keyword?
1601,2021-06-02 18:08:45,5,1,"Tl;dr:

I have a `const` assertion, where I want to use it's values 

    const Enum = {
      A: 'abcef',
      B: 'efef',
    } as const;

This is my ""enum"". I have defined some related constants/enum here. I am using them as a ""discriminated union"". The reason I haven't just done `type Enum = 'abcdef' | 'efef'`, is because this only exists compile time, and won't exist in my JS code, and if I decide to change 'efef' to 'eded', I get to change all occurences over the project.

    const Entities = {
      [Enum.A]: {
        name: 'page a',
      },
      [Enum.B]: {
        name: 'page b',
      }
    }

This part is where I have defined the ""config"" that my program ""discriminatively"" uses. Since the config is ""discirminated"", I have used my enum to discriminate it.
    
    const works = [
      Enum.A,
      Enum.B
    ].map((key) =&gt; {
      // see type of `key` for correct answer
      return Entities[key];
    })
 
Above code works, but I need to explicitly list down each key in the enum. So if in future I add another key, I get to add it everywhere the code is used.

    const res = Object.keys(Enum).map((key) =&gt; {
    
      return Entities[key];
    });

Hence, I want to use something like above, `Object.keys()` which will iterate my enum automatically. However, Object.string() seems to be widening the `key` type to `string`. How do I restrict it to `keyof Enum`?




Link to playground: https://www.typescriptlang.org/play?#code/LAKAxg9gdgzgLgAgKJQK4FsEF4EG9QIICCAXAgOQCGARmAKYBm5ANAQgEJnmOMugC+CSjASRYcANyhQY+MihwAlkroic+EIQDaKDADoiAXTIbChKJXR0uAB0oBzOkL6aE-Vq51p0e9sbxs5pbWFHaOCNQuhPwC0uDQcgDuEABOANZqCFpsuj5EHoS5vqCGeuiUNgAUlWl0AJ4AlNgAfAGuAPTtCDB0TnB1Nk4QDAgABrV1owgMqaKpKXRgiJSwiXQpbAtwqClQ8koqMFoThlIg-A1xsogLmQDy1ABWi3B6EzCVuQ1lFdUTTVhWhpNnRtrt9spFKpjvVTgIGmcgA",[Help needed] Iterating on a const type via Object.keys() vs WET [Prevent widening]
1602,2021-06-02 19:34:55,0,1,,"Stop reading Express with TypeScript tutorials, just use “express-generator-typescript”"
1603,2021-06-03 00:27:01,1,1,,An actual complete guide to typescript monorepos
1604,2021-06-03 00:56:45,1,1,,A better tsc --build --watch for typescript projects
1605,2021-06-03 02:49:07,0,1,"I need to update every document within one of my Firestore collections. Each document needs additional data from its corresponding user document.

For example, The document that needs to be updated contains ""John"" and ""Amanda"" 's uids. I need to add additional fields to their shared document that is each of their ""FullName"": ""John Adams"" and ""Amanda Smith""

Before Update:

     {
      ""Document""
        ""userA"": ""John"",
        ""userB"": ""Amanda""
    }

After Update:

    {
      ""Document""
        ""userA"": ""John"",
        ""userAFull"": ""John Adams"",
        ""userB"": ""Amanda"",
        ""userBFull"": ""Amanda Smith""
    }

**Approach**

Since I have to update every document within the collection (Approx 20k documents) I decided to write a Cloud Function using chained batched writes to solve this problem so that all the requests do not have to go through the Firestore API, like the client reads and writes.

Here is the material I have referenced when creating my function:

[Chained Batched writes](https://stackoverflow.com/questions/52165352/how-can-i-update-more-than-500-docs-in-firestore-using-batch)

[Get Data From Single Document Firestore Typescript](https://stackoverflow.com/questions/61300188/how-do-i-get-a-document-field-from-a-specific-document-in-firestore-using-typesc)

[Firestore JavaScipt SDK](https://firebase.google.com/docs/reference/js/firebase.firestore#documentdata)

[Returning multiple values in Typescript](https://stackoverflow.com/questions/63526969/how-do-you-return-multiple-values-from-a-typescript-function)

[Firestore Batched writes documentation](https://firebase.google.com/docs/firestore/manage-data/transactions#swift_2)

Here is my code that has errors:

    export const updateFollowersSchema = functions
      .runWith({ timeoutSeconds: 600 })
      .https.onRequest(async (req,res) =&gt; {
        const query = await db.collection('Followers')
        query.get()
          .then(query =&gt; {
            if (query.empty){
              return null;
            } else {
              const batchArray: any[] = []
              batchArray.push(db.batch())
              let operationCounter = 0;
              let batchIndex = 0;
    
              query.forEach(async document =&gt; {
                const fromUserFullname = await getFromInfo(document)
                const [forUserFullname, forUserProfileImageURL] = await getForInfo(document)
                batchArray[batchIndex].update(document.ref, { 
                    fromUserFullname: fromUserFullname,
                    forUserFullname: forUserFullname,
                    forUserProfileImageURL: forUserProfileImageURL
                })
                operationCounter++
    
                if(operationCounter == 499){
                  batchArray.push(db.batch())
                  batchIndex++
                  operationCounter = 0
                }
              });
    
              batchArray.forEach(async batch =&gt; await batch.comit)
              return
            }
          })
      })
    async function getFromInfo(data: Document){
      const userQuery = await db.collection('users').doc(data.uid).get()
      return userQuery.fullname;
    }
    async function getForInfo(data: Document){
      const userQuery = await db.collection('users').doc(data.uid).get()
      return [userQuery.fullname, userQuery.profileImageURL];
    }

**Context**:

&gt;profileImageURL

is a field of a user document that stores the user's profile

&amp;#x200B;

&gt;fullname

 is a field of a user document that stores the user's full name",Google Cloud Function that updates documents in chained batched writes: How can I pass documents to async functions?
1606,2021-06-03 11:03:08,5,1,,"I created a very simple boilerplate for react, typescript, redux &amp; docker and would like to share it with you all."
1607,2021-06-03 11:03:50,0,1,,"I created a very simple boilerplate for react, typescript, redux &amp; docker and would like to share it with you all."
1608,2021-06-03 19:04:35,8,1,"I randomly started running into these VS code errors today when trying to mix `undefined` with optional object fields. [Here's the example](https://www.typescriptlang.org/play?ts=4.0.5#code/JYOwLgpgTgZghgYwgAgLIE8Aq6AOKDeAUMsnAPwBcyAzmFKAObIA+yIArgDacDcxyAI0o06jFmy69CAX0KEEAexC1SVWvRBNWHbuPYgAJhBigIB5AF5kAchgKF1vvKUrQOdmGpUM2PJeREJHAANPwCVNYCcFDWpNQiGloSuqz6RiYgZqHSfEA) working perfectly fine in the TS playground with the same TS version I'm using (4.0.5).

But here's what I'm seeing in VS Code 1.56.2 on my Mac. It's like VS Code suddenly stopped understanding that optional fields get the \`undefined\` type. Despite the VS Code error, this code compiles without error when I run \`tsc\`.

[VS Code typescript error](https://preview.redd.it/wt08fpw9m3371.png?width=1602&amp;format=png&amp;auto=webp&amp;s=f18a7263b521ff54534ed306095f91e30a7c1712)

Any ideas?",VS Code suddenly showing errors when `undefined` is assigned to an optional field?
1609,2021-06-04 00:31:34,5,1,"I'd like to use JSDoc to create some documentation for my React + Typescript project. The typescript documentation landscape is a little confusing though, and I'm not really sure where to get started, or what a ""standard"" approach might look like using this tech stack. A simple google search of ""react + typescript + jsdoc"" turns up [this pretty obtuse article from the React Typescript Cheatsheet site](https://react-typescript-cheatsheet.netlify.app/docs/migration/js_docs/), and I haven't been able to find much on github on the matter. In addition to not being able to find anything in terms of articles/examples/documentation, I see that their are also some JSdoc alternatives out their specifically for typescript:

1. [Typedoc](https://typedoc.org/) \- Documentation is pretty anemic and doesn't provide examples of how to use with React
2. [TSDoc](https://github.com/microsoft/tsdoc) \- Looks promising but is still in early development, and lacks many examples 

I know that documenting a Typescript + React project isn't that different from just documenting a regular typescript project, but if JSDoc could provide any React specific features that would be helpful, that'd be great.

So I guess I'm wondering if any has examples of using JSdoc + React + Typescript, or has thoughts or experiences on the alternatives I listed. 

Thanks in advance!",Getting started with JSDoc + Typescript + React
1610,2021-06-04 12:13:28,9,1,"I'm trying to install typescript, I need it for an internship I have starting at the end of August and the company has asked me to look at Angular and Typescript as well as Java. I tried the npm method in terminal and received pretty much the same error message. I don't understand because it's my computer and I am the admin. I have downloaded and installed node.js. Any help would be greatly appreciated.",Struggling to install typescript on Mac
1611,2021-06-04 14:58:14,5,1,"New to TypeScript, would like to do something that I expected to be trivial, but its not.

Lets say I have

```typescript
export interface Foo {
  bar1: string;
  bar2: string;
}
```

And I want to create an array of `&lt;Foo&gt;`.
```typescript
let x = new Array&lt;Claim&gt;(3)
```

But if try to assign one of its fields, boom:
```typescript
x[0].bar = ""foo""
//TypeError: Cannot set property 'bar' of undefined
```

Any idea?","Array of a given type ""cannot set property"""
1612,2021-06-05 01:47:32,6,1," 

https://github.com/samchon/backend

For freshmen developer just starting out as a backend programmer in my company, I've made an example backend project. It was built by using those libraries: typescript, nestjs, typeorm + nestia and safe-typeorm.

As I've mentioned, this project is designed for the freshmen developer's study. Therefore, I've tried to write the best possible code. Modern methodologies like TDD  (Test Driven Development) and NDS? (Non-distruptive Distribution System) are adapted exemplary. 

Also, this project doesn't need to generate any API document like swagger, because I've designed the backend server to build SDK library automatically by analyzing the backend source code in the compiler level.

At now, I'm sharing this exmaple project to everyone, because it seems to be helpful to many other freshmen backend developers. I hope that this example project to be a good solution for studying the backend server development.",Example backend project using NestJS for freshmen developers
1613,2021-06-05 20:35:34,3,1,"Hi all 
So any good book to learn typescript for javascript developer 

Thanks",Book to learn ts
1614,2021-06-06 07:28:52,2,1,,"Better typescript monorepos - Typescript Project References, Pnpm, Esbuild ..."
1615,2021-06-06 13:34:27,0,1,,[OC] Has anyone seen TYPESCRIPT? (r/javascript is taking itself too seriously and disallows sharing images 😒)
1616,2021-06-07 04:33:32,5,1,"I'm using Visual Studio Code for React Native development with TypeScript. One thing that **annoys the heck out of me**, though, is Visual Studio Code's ESLint plugin marking any unused variable or argument as an error. Not a warning, an **error**. I honestly do not think that an unused variable or parameter is on the same level as, say, trying to reassign a constant. Even Qt Creator only marks unused parameters as warnings.

I have turned ESLint off because this was driving me crazy, but I do like having a linter. I've tried everything I can think of to turn this feature off or downgrade the errors to warnings. Putting `""typescript.validate.enable"": false` in my `settings.json` file didn't work, nor did attempting to add rules to the project's `tsconfig.json` file. I opened `@typescript-eslint.js` in the `eslint-config-prettier` folder under `node_modules` and added `""@typescript-eslint/no-unused-vars"": ""off""`, and also edited the `settings.json` file and added this:
```
""eslint.options"": {
  ""@typescript-eslint/no-unused-vars"": ""off"",
},
```
None of this worked. I object to putting `/* eslint-disable no-unused-expressions */.` at the top of the file, as it's not part of the program. All I want is to turn off this feature or for it to simply flag unused variables as warnings (not errors).

Any advice how to disable this irritating feature?","How to disable ""no-unused-vars"" in Visual Studio Code (or at least downgrading it to a warning)?"
1617,2021-06-07 05:30:50,1,1,"    I created a controller:
    
    import { Request, Response } from ""express"";
    
    export const signIn = async (req: Request, res: Response) =&gt; {
      try {
        await res.send(""This is the signIn route"");
      } catch (err) {
        return res.status(400).send(err);
      }
    };
    export default signIn;
    
    Then I exported the controller into my route handler:
    
    import express from ""express"";
    const router = express.Router();
    
    import signIn from ""../controller/signin"";
    router.post(""/signIn"", signIn);
    
    My index.ts file:
    
    import express from 'express'
    import authRoutes from '../src/routes/auth-routes'
    import errorHandler from '../src/middlewares/error-handler'
    import {connectDB} from '../src/database/db'
    
    
    const app = express()
    connectDB()
    
    const port = 3005
    
    // @Body parser
    app.use(express.json())
    
    // @Routes
    app.use('/api/users', authRoutes)
    app.use(errorHandler)
    
    // @Listening port
    app.listen(port, () =&gt; {
        console.log(`*********Server listening on port ${port}*******`)
       
    })
    However, I got this error:
    
    {
        ""resource"": ""/C:/Projects/myAppName/auth/src/routes/auth-routes.ts"",
        ""owner"": ""typescript"",
        ""code"": ""2769"",
        ""severity"": 8,

""message"": ""No overload matches this call.\\n  Overload 1 of 3, '(path: PathParams, ...handlers: RequestHandler&lt;ParamsDictionary, any, any, ParsedQs, Record&lt;string, any&gt;&gt;\[\]): Router', gave the following error.\\n    Argument of type '(req: Request, res: Response) =&gt; Promise&lt;Response&lt;any, Record&lt;string, any&gt;&gt; | undefined&gt;' is not assignable to parameter of type 'RequestHandler&lt;ParamsDictionary, any, any, ParsedQs, Record&lt;string, any&gt;&gt;'.\\n      Types of parameters 'req' and 'req' are incompatible.\\n        Type 'Request&lt;ParamsDictionary, any, any, ParsedQs, Record&lt;string, any&gt;&gt;' is missing the following properties from type 'Request&lt;ParamsDictionary, any, any, ParsedQs, Record&lt;string, any&gt;&gt;': RequestValidationError, DatabaseConnectionError\\n 

        ""source"": ""ts"",
        ""startLineNumber"": 12,
        ""startColumn"": 24,
        ""endLineNumber"": 12,
        ""endColumn"": 30
    }
    I do not understand why I get this ""No overload matches this call error"". Please can someone take a look at my code above and help me? I'll appreciate it so much.",No Overload matches this call error (typescript/nodejs7express)
1618,2021-06-07 09:03:23,4,1,"**Monday, May 31 - Sunday, June 06**

###Top Posts

| score | comments | title &amp; link |
|--|--|--|
| 300  | [22 comments](https://www.reddit.com/r/javascript/comments/nr8klu/yareio_practice_your_javascript_skills_by_playing/)  | [yare.io - practice your JavaScript skills by playing a real-time strategy game](https://yare.io/)|
| 273  | [164 comments](https://www.reddit.com/r/javascript/comments/nqrmuu/askjs_why_are_arrow_functions_used_so_universally/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; why are arrow functions used so universally nowdays? What's the benefit over named functions/function keyword?|
| 218  | [8 comments](https://www.reddit.com/r/javascript/comments/nsxrxl/quickly_integrate_face_hand_andor_pose_tracking/)  | [Quickly integrate face, hand, and/or pose tracking to your frontend projects in a snap](https://github.com/midiblocks/handsfree)|
| 174  | [30 comments](https://www.reddit.com/r/javascript/comments/noz8ah/i_have_created_a_home_cloud_project_for_sharing/)  | [I have created a home cloud project, for sharing files across your devices on the same network. Please do check it out and star it if you like the project. There are more features yet to come which I have planned. Thank you](https://github.com/Rishi-Bidani/local-cloud)|
| 172  | [11 comments](https://www.reddit.com/r/javascript/comments/nqf3ie/vulnerable_visual_studio_code_extensions_impact/)  | [Vulnerable Visual Studio Code extensions impact over 2M Developers - timely disclosure](https://snyk.io/blog/vulnerable-visual-studio-code-extensions-marketplace/)|
| 172  | [12 comments](https://www.reddit.com/r/javascript/comments/nrowf8/react_aria_a_library_of_react_hooks_that_provides/)  | [React Aria - a library of React Hooks that provides accessible UI primitives for your design system](https://react-spectrum.adobe.com/react-aria/index.html)|
| 162  | [19 comments](https://www.reddit.com/r/javascript/comments/nq6uh3/mermaid_a_javascript_based_diagramming_and/)  | [Mermaid - a Javascript based diagramming and charting tool that renders Markdown-inspired text definitions to create and modify diagrams dynamically](https://mermaid-js.github.io/mermaid)|
| 138  | [8 comments](https://www.reddit.com/r/javascript/comments/npufyk/my_fullstack_opensource_heatmap_based_social_app/)  | [My full-stack open-source heatmap based social app made with React Native and Apollo GraphQL](https://eytanmanor.medium.com/behold-my-full-stack-open-source-heatmap-based-social-app-made-with-react-native-and-graphql-e9783d431092)|
| 117  | [16 comments](https://www.reddit.com/r/javascript/comments/nsbo5f/milkdown_editor_online_demo_and_documents_is/)  | [Milkdown editor online demo and documents is available now!](https://saul-mirone.github.io/milkdown/)|
| 116  | [15 comments](/r/javascript/comments/ntqt3n/creating_a_serverless_function_to_scrape_web/)  | [Creating a serverless function to scrape web pages metadata](https://mmazzarolo.com/blog/2021-06-06-metascraper-serverless-function/)|


&amp;nbsp;

###Most Commented Posts

| score | comments | title &amp; link |
|--|--|--|
| 66  | [38 comments](https://www.reddit.com/r/javascript/comments/nsfpky/esbuild_the_incredibly_fast_and_promising_bundler/)  | [Esbuild, the incredibly fast and promising bundler !](https://slashgear.github.io/esbuild-incredibly-fast-and-promising/)|
| 89  | [29 comments](https://www.reddit.com/r/javascript/comments/nt3fnf/chess_app_built_using_react_redux_and_rxjs/)  | [Chess app built using React, Redux, and RxJs](https://rxjchess.com/)|
| 0  | [21 comments](/r/javascript/comments/nu1aoo/lets_stop_making_it_cool_to_hate_jquery/)  | [Let's Stop Making it Cool to Hate jQuery](https://macarthur.me/posts/lets-stop-making-it-cool-to-hate-jquery)|
| 3  | [16 comments](https://www.reddit.com/r/javascript/comments/noxtyr/askjs_why_should_i_use_nodejs_as_a_python_full/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Why should I use Node.JS as a Python full stack developer?|
| 0  | [14 comments](https://www.reddit.com/r/javascript/comments/ns2gbn/52_responsive_snippets_to_create_a_website_for/)  | [52 responsive snippets to create a website for your project](https://dev.to/przemek/52-responsive-snippets-to-create-a-website-for-your-project-51e6)|


&amp;nbsp;

###Top Ask JS

| score | comments | title &amp; link |
|--|--|--|
| 0  | [3 comments](/r/javascript/comments/nu36z3/askjs_javascript_beginner/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Javascript beginner|
| 0  | [5 comments](/r/javascript/comments/ntudkj/askjs_can_someone_give_me_an_idea_for_a_library/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; can someone give me an idea for a library to work on in js?|
| 0  | [3 comments](https://www.reddit.com/r/javascript/comments/nrlp06/askjs_intrinsic_motivation_as_a_swe_how_drug/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Intrinsic MOTIVATION as a SWE. How Drug Dealers do it and how I can as well.|


&amp;nbsp;

###Top Showoffs

| score  |  comment  |
|--|--|
| 3  |  /u/bikepep said [Made a Gatsby theme for myself:  https://github.com/andrasna/gatsby-theme-andras  It is ""cool"" in a sense that now I have a bunch of links and a blog in one place . :&amp;#41;  Feedback is appreciated!](/r/javascript/comments/nspvyv/showoff_saturday_june_05_2021/h0odkex/?context=5) |
| 3  |  /u/nullvoxpopuli said [Made this earlier this week: https://www.reddit.com/r/javascript/comments/nr12o1/a_better_tsc_build_watch_for_typescript_projects/  It hides most tsc output, so you can focus on root causes](/r/javascript/comments/nspvyv/showoff_saturday_june_05_2021/h0o9s5b/?context=5) |
| 2  |  /u/Jncocontrol said [Hello I could use some advice on my upcoming project, I'm currently making a retro-NES-esque design &amp;#40;if that makes any sense&amp;#41; for my portfolio. I'm looking for some ideas. One thing that comes...](/r/javascript/comments/nspvyv/showoff_saturday_june_05_2021/h0ojobv/?context=5) |


&amp;nbsp;

###Top Comments

| score  |  comment  |
|--|--|
| 190  |  /u/leroy_twiggles said [I've done loads of JavaScript interviews, and many people simply don't know the difference between the function types.  To them, arrow functions are the ""new way"", and the other way is the ""old way"", ...](/r/javascript/comments/nqrmuu/askjs_why_are_arrow_functions_used_so_universally/h0cgc73/?context=5) |
| 37  |  /u/addiktion said [Should be retitled, ""How to get a 100% performance score with nothing but text and a black background on your landing page"".](/r/javascript/comments/nswj5x/here_is_how_you_can_achieve_a_100_performance/h0oz4rt/?context=5) |
| 32  |  /u/acemarke said [Yeah, this was the best kind of update - the kind where I barely had to do any work myself :&amp;#41;  For background, this was inspired by React's own error code extraction process, and a user filed an i...](/r/javascript/comments/nrz7pf/redux_410_converts_error_messages_from_strings_to/h0kiiw1/?context=5) |
| 27  |  /u/TheSecondCore said [Ugh, all the ever-present Snyk promotion throughout the article, as well as on the account that posted this leaves a bad taste in my mouth.  Can't fault the information though, good work has been done...](/r/javascript/comments/nqf3ie/vulnerable_visual_studio_code_extensions_impact/h0anmzt/?context=5) |
| 27  |  /u/Kirill-89 said [Also have a look at &amp;#91;the detailed research we published&amp;#93;&amp;#40;https://snyk.io/blog/visual-studio-code-extension-security-vulnerabilities-deep-dive/&amp;#41;. It describes 4 different vulnerable ext...](/r/javascript/comments/nqf3ie/vulnerable_visual_studio_code_extensions_impact/h0apsao/?context=5) |


&amp;nbsp;",Your /r/javascript recap for the week of May 31 - June 06
1619,2021-06-08 05:18:28,24,1,"I'm trying my had at TS and testing. I'm trying to test Redux state (starting with the Counter app the template provides) with Mocha and Chai, using the TS-Mocha wrapper.  Maybe you can help me stop pulling my hair out.

Here's all my test files and results.

.mocharc.json

    {
      ""extension"": [""ts"", ""tsx""],
      ""spec"": [""./tests/*.test.ts"", ""./tests/*.test.tsx"", ""./tests/*.spec.tsx"", ""./tests/*.spec.ts""],
      ""require"": [""ts-node/register"", ""./tests/compiler.ts""]
    }
    

compiler.ts

    require('ts-node').register({
      project: './tests/tsconfig.json',
    });

./tsconfig

    {
      ""compilerOptions"": {
        ""target"": ""ESNEXT"",
        ""lib"": [
          ""dom"",
          ""dom.iterable"",
          ""es2020""
        ],
        ""allowJs"": true,
        ""skipLibCheck"": true,
        ""esModuleInterop"": true,
        ""allowSyntheticDefaultImports"": true,
        ""strict"": true,
        ""forceConsistentCasingInFileNames"": true,
        ""noFallthroughCasesInSwitch"": true,
        ""module"": ""esnext"",
        ""moduleResolution"": ""node"",
        ""resolveJsonModule"": true,
        ""isolatedModules"": true,
        ""noEmit"": true,
        ""jsx"": ""react-jsx""
      },
      ""include"": [
        ""src"",
        ""src/react-app-env.d.ts""
      ],
      ""exclude"": [
        ""./tests"",
        ""./node_modules"",
        ""./dist""
      ]
    }
    

tests/tsconfig

    {
      ""ts-node"": {
        ""files"": true
      },
      ""extends"": ""../tsconfig.json"",
      ""compilerOptions"": {
        ""baseUrl"": ""./"",
        ""module"": ""commonjs"",
        ""experimentalDecorators"": true,
        ""strictPropertyInitialization"": false,
        ""isolatedModules"": false,
        ""strict"": false,
        ""noImplicitAny"": false,
        ""typeRoots"" : [
          ""../node_modules/@types""
        ]
      },
      ""files"": [
        ""jsx.d.ts""
      ],
      ""exclude"": [
        ""../node_modules"",
        ""../tsconfig.json""
      ],
      ""include"": [
        ""./**/*.test.js"",
        ""./**/*.test.ts"",
        ""./**/*.test.tsx"",
        ""./**/*.spec.ts"",
        ""./**/*.spec.tsx"",
        ""../src/react-app-env.d.ts""
      ]
    }
    

counterSlice.spec.ts (the default one provided by create-react-app --template redux-typescript

    import { expect } from 'chai';
    import counterReducer, {
      CounterState,
      increment,
      decrement,
      incrementByAmount
    } from ""../src/components/counter/counterSlice"";
    
    describe(""counter reducer"", () =&gt; {
      const initialState: CounterState = {
        value: 3,
        status: ""idle""
      };
      it(""should handle initial state"", () =&gt; {
        expect(counterReducer(undefined, { type: ""unknown"" })).to.equal({
          value: 0,
          status: ""idle""
        });
      });
    
      it(""should handle increment"", () =&gt; {
        const actual = counterReducer(initialState, increment());
        expect(actual.value).to.equal(4);
      });
    
      it(""should handle decrement"", () =&gt; {
        const actual = counterReducer(initialState, decrement());
        expect(actual.value).to.equal(2);
      });
    
      it(""should handle incrementByAmount"", () =&gt; {
        const actual = counterReducer(initialState, incrementByAmount(2));
        expect(actual.value).to.equal(5);
      });
    });

This is the error I get on a consistent basis:

    Error: Could not find source file: '/home/brian/Documents/c0de_box/projects/Stormcaster/stormcaster-client-refactor/src/components/counter/counterSlice.ts'

The file is there, so I don't know what's causing it to cry. I followed tutorials from about 5-7 different sources so maybe I got wires crossed.",Does anyone actually know how to test Redux-Typescript with Mocha?
1620,2021-06-08 20:49:37,7,1,"I am trying to use typescript to do some browser automation with Playwright. The main reason I'm using TS is for the autocompletion in VSCode. So far I have done:

    npm init
    npm i -D playwright
    npm i D typescript

 and in index.ts I have:

    import chromium from ""playwright"";
    (async () =&gt; {
      const browser = await chromium.lau
    })

but VSCode is not bringing up any autocomplete (I was expecting it to bring up "".launch()"" which is a method on chromium. I'm probably missing something basic because I'm new to TS but can't work out what it is.",VSCode won't show autocomplete
1621,2021-06-09 03:54:11,0,1,,"Start your Wednesday off right with learning how to use #typescript with React on today's No BS TS. We set up a project for Typescript, and create our first components!"
1622,2021-06-09 04:35:37,0,1,[removed],I have downloaded the typescript fetch client SDK. Now what?
1623,2021-06-09 05:59:19,0,1,[removed],I have downloaded the typescript-fetch client SDK . Now what?
1624,2021-06-09 06:03:45,0,1,[removed],I have downloaded the typescript-fetch client SDK. Now what?
1625,2021-06-09 17:48:34,12,1,"Hi, I wasn't satisfied with the available extensions for formatting the MariaDB scripts, so I had to learn Typescript to write my own: [https://gitlab.com/Boiethios/mariadb-formatter](https://gitlab.com/Boiethios/mariadb-formatter)

I'm not a fan of structural typing, but I really liked to use it in Typescript. It feels natural and convenient to use. The type system is very powerful, and allowed me to do whatever I imagined with few friction. I just miss a kind of pattern matching that would allow to run a branch depending on a field, something like:

    match (obj.type) {
        'foo' =&gt; { /* some code */ }
        'bar' =&gt; { /* some code */ }
    }

Don't talk me about `switch`, it's awful with the `break`s, and an `else if` forest is better (IMHO).

Also, I don't understand the point of the classes. I know that they come from JS, but neither in JS nor in TS do they serve a purpose (or do they?).

Well, it was a fun adventure, and I'll continue to use it to maintain my project!",I've written my first typescript project: a (very alpha) VSCode extension to format MariaDB scripts
1626,2021-06-09 18:18:34,52,1,"Hello, fellow Typescript programmers.

I am just started working with Typescript and am looking for best tool for it. Other than that I am a seasoned developer and worked with Java and JavaScript before big time.

Please recommend a good IDE/tool to work with it. I will consider all recommendations. Here are optional things I would love to have there.

* Eclipse or Eclipse based.
* Git support, of course.
* Ease of cross navigation between methods, types, classes, etc.
* Ease of searching/replacing. The more flexible, the better.
* Building and running functionality for npm, yarn, etc.

Thank you in advance for all hints.",Please recommend best typescript IDE
1627,2021-06-11 01:09:47,19,1,"I can't decide if I want to invest any time.


One one hand, [reScript](https://rescript-lang.org/) or [Reason](https://reasonml.github.io/en/) claim to have a [""sound"" typing system](https://rescript-lang.org/docs/manual/latest/introduction).  Another super cool feature is that, except for for where types are obviously needed (like when you are actually modeling data), you [almost never need to annotate the types](https://rescript-lang.org/docs/manual/latest/type). reScript in particular [looks almost like JS](https://rescript-lang.org/docs/manual/latest/overview)


On the other hand, they have async that looks like [absolute s**t](https://rescript-lang.org/docs/manual/latest/promise) and its been like that for years.  Which surprises me because who writes JS without lots of networking?


Besides typescripts ""unsoundness"", another thing that concerns me about typescript is they seem to want keep adding new syntax and ways of typing until I'll have no idea what I'm looking at anymore.  reScript and Reason seem like more stabilized and simpler languages (its a subset of JS, no objects, etc).",Anybody here considering reScript / Reason?
1628,2021-06-11 10:58:24,6,1,"I'm working on an experiment to make regular expressions type-safe in the [typed-regex](https://github.com/phenax/typed-regex) library. It infers the result of the capture groups using the regex string literal.

An example from the README -
    const regex = TypedRegEx('^(?&lt;year&gt;\\d{4})-(?&lt;month&gt;\\d{2})-(?&lt;day&gt;\\d{2})$', 'g');
    const result = regex.captures('2020-12-02');
    result // : undefined | { year: string, month: string, day: string }

[Demo on TS playground](https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAbzgFQJ5gKYBMBKGDmAogB5wC+cAZlBCHAOQzrYC0UBGx9A3AFC8BjCADsAzvHb5OcALwpmuAiQAU9AHrKA-AB5UGAIZQAfAB0TWBABYyAShZbtIETAAWp8wgBMt+zqz7UdwtvGwASegAaBnx6Gz4hMQkMUQBXABt4OUlOADoBfTAYFPZRVU8ABgqWAEZPFkrYvl4Aema4AAkIADcMKDhu3rgS9PgYCDhRDAw4YBhROCZMCeB8YX0i9l5hjLhWuAAuOBThLAxKYGFsOAAfRDg9Q0PxKAv8KKdhVyeYF+E3uH8qG+v3w5F4QA)


The types are not perfect yet but it can get there. I'd really appretiate some feedback on it and contributions are always welcome!

Github: https://github.com/phenax/typed-regex",Type-safe regular expression matching with named capture groups
1629,2021-06-11 11:54:57,6,1,"Hi! I am a CS student starting out. Have you ever worked with a great recruiter? Especially ones who are familiar with the tech or startup space and would recognize more niche terms like typescript. It's been tough spamming LinkedIn for connections and getting limited responses, and I'm sure I'm not alone, so I thought we could help each other out with some warm connections, or just share good experiences we've had with various recruiters/recruiting firms for some uplifting success stories! If you have any recommendations or contacts in the US, feel free to reach out to me too.",Finding tech recruiters familiar with Typescript (or other niche terms)?
1630,2021-06-11 20:20:37,3,1,"Im starting a new job on monday and It will be the first time ill be using typescript on a large project with react, what are some helpfull patterns or tips that make the language and framework mix well?",What are some must know patterns for typescript + react
1631,2021-06-12 02:48:21,14,1,I keep googling axios examples but they are all so different. Does anybody know a good way to fetch from an api with typescript?,Axios and Typescript
1632,2021-06-12 06:38:25,7,1,"Hello, I want to validate JSON data based on 2 criteria:

1- Type checking

2- Custom checking 

By type checking i am using ajv to validate the data against a predefined schema, but i faced some problems while doing that:

a- Errors provided by the package are limited, no line, column or position numbers are available which make the validation error useless if i have a big JSON file so is there any solution to that?

&amp;#x200B;

As for custom checking, by that i mean i want to check if the data presented in the JSON is valid for example if i have a person object `({id: 1, name: 'John', age: 20})` and then an address object `({id: 1, country: 'Eu', personId: 2})` in this case i want to raise an error because the `personId: 2` in address object does not exist, and also i want to provide a detailed error that include line, column and position numbers.

I appreciate the help.",Validating JSON Data in typescript and return line number and position
1633,2021-06-12 16:18:14,3,1,"Hey!

I recently wrote a Data Class implementation in typescript that uses minimal boilerplate and provides functions likes \`copyWith\` and \`parse\`, as well as constructor intellisense and automatic field validation.

https://preview.redd.it/aelg2d041v471.png?width=1390&amp;format=png&amp;auto=webp&amp;s=8e6c58d4c6e8e8c23c1d5b104dc605b5a53683a5

It's still in beta, but I'd love to hear your feedback!

[https://www.npmjs.com/package/ts-data-class](https://www.npmjs.com/package/ts-data-class)",Data Classes in Typescript
1634,2021-06-13 06:41:49,12,1,"I am trying to deploy an app to DigitalOcean's App Platform. The structure I have is as follows:

    .
    ├── client
    ├── common
    └── server

I am trying to build and run the server component. The build goes fine, using tsc. However, when I try and run it, the following happens:  


    // This is what ""yarn start"" does
    node dist/server/src/server.js
    
    // This is the error that is reported
    (node:1) UnhandledPromiseRejectionWarning: TSError: ⨯ Unable to compile TypeScript:
    src/entities/visualisation.entity.ts(2,31): error TS2307: Cannot find module '@common/interfaces/vis.interfaces' or its corresponding type declarations.
         at createTSError (/workspace/server/node_modules/ts-node/src/index.ts:513:12)
         at reportTSError (/workspace/server/node_modules/ts-node/src/index.ts:517:19)
         at getOutput (/workspace/server/node_modules/ts-node/src/index.ts:752:36)
         at Object.compile (/workspace/server/node_modules/ts-node/src/index.ts:968:32)
         at Module.m._compile (/workspace/server/node_modules/ts-node/src/index.ts:1056:42)
         at Module._extensions..js (internal/modules/cjs/loader.js:1097:10)
         at Object.require.extensions.&lt;computed&gt; [as .ts] (/workspace/server/node_modules/ts-node/src/index.ts:1059:12)
         at Module.load (internal/modules/cjs/loader.js:933:32)
         at Function.Module._load (internal/modules/cjs/loader.js:774:14)
         at Module.require (internal/modules/cjs/loader.js:957:19)

This makes no sense to me. It looks like the ""node"" command is somehow running the ""ts-node"" command under the hood? The TS file it is trying to load is under the code directory, not the dist directory. 

I have not been able to replicate it on my machine, or debug it. When I run it on my machine it just works straight away. I'm wondering if there is some typescript/javascript reason for this to occur, or if I need to get in touch with DO to see if this is something to do with them. Any help would be appreciated.",Node using ts-node??
1635,2021-06-13 23:29:07,16,11,"hope you guys can help me with this.

from my understanding, newer versions of typescript support await at top levels.

im trying to use await in my node project inside the get/post routes.

i looked online and the solution was to change the module/ target settings which i did. the issue is still there. What do i do?

this is my tsconfig.ts file.

    {""compilerOptions"": {
    ""target"": ""es2017"",
    ""module"": ""esnext"", 

this is where the error shows up.

    app.get(""/api/apis"", (req: Request, res: Response) =&gt; 
    {
    const AllAPis=await ApiCall.getAllApis(res);  
    res.send(AllAPis)
    })

&amp;#x200B;",'await' expressions are only allowed within async functions and at the top levels of modules.
1636,2021-06-14 01:26:45,2,3,"I have a class like the following
```ts
interface obj_i{
    [key: string]: number
}

class A{
    b: any
    constructor(config: {obj: obj_i}){
        this.b = this.config.obj
    }
}


const a = new A({obj: {x: 123, z: 456}})

// how do I tell typescript that a.b should have the properties x and z on it

a.b.x // 123
a.b.z // 456
```

I want to properly type attribute `b` on `class A` so as to handle the dynamic keys provided in the `config.obj` object.

What resources can I look at to accomplish this / are there any recommendations on how to do this?

Many thanks!",How to type a dynamically provided object
1637,2021-06-14 09:51:05,43,9,"Hello !I'm trying to learn Typescript lately, and I have simple fake component that I want to convert to typescript.

For the moment I have something that look like this, but I don't know how to use the interface from typescript...

    import axios from ""axios"";
    import { useEffect, useState } from ""react"";
    
    
    //var component = (props: any) =&gt; {
    export default const component = (props: any) =&gt; {
    
      //var listeOuNon = 0;
      let listeOuNon = 0;
      //var listes = props.lists;
      const = props.lists;
      listeOuNon = props.isLists;
      //var montrecomposant = props.show;
      const montreComposant = props.show;
    
      if (listeOuNon) {
        //var [trad, ajoutTrad] = useState();
        const [trad, ajoutTrad] = useState();
    
        useEffect(() =&gt; {
          (async () =&gt; {
            axios.get(""/api/trad"").then((reponse) =&gt; {
              if (reponse.status == 200) {
                ajoutTrad(reponse.data);
              }
            });
          })();
        });
      }
    
      //if (montrecomposant) {
      if (montreComposant) {
        return (
          &lt;div&gt;
            {listeOuNon ? (
              &lt;div&gt;
                &lt;div&gt;le super titre {trad}&lt;/div&gt;
                &lt;div&gt;
                  &lt;ul&gt;
                    {listes.map((elements: any) =&gt; (
                      &lt;li&gt;{elements.text}&lt;/li&gt;
                    ))}
                  &lt;/ul&gt;
                &lt;/div&gt;
              &lt;/div&gt;
            ) : (
              &lt;div&gt;
                &lt;div&gt;le super titre&lt;/div&gt;
                &lt;div&gt;Bonjour tout le monde&lt;/div&gt;
              &lt;/div&gt;
            )}
          &lt;/div&gt;
        );
      } else {
        return &lt;&gt;&lt;/&gt;;
      }
    };
    
    //export default component;

If there is a typescript expert, I would love to have some advices on the good practice.",Converting a react component to typescript
1638,2021-06-14 10:42:14,16,7,"Hey folks I have a problem with dealing with a callback's function type.

Anyone know how to infer the type of a callback's return when I know the input of the callback? My example always infers the return type as `any`, but in the below example it should be `string[]`

You can see the code I am working on [here](https://www.typescriptlang.org/play?#code/CYUwxgNghgTiAEAXAngBwQRQK4hsgSiAM5YSLwC88A3gLABQ88cYA9jMEQFzxGIwBLAHYBzANoBdBkxIBbWbGQ8+g0QwC+DBinTwAqkRAARQQDdcAeVSIBrIUUo1pTeADN2CxISKo7hgPw8ABTAUIhQPNi4BMSkiACUlAB88FhCANZCrADuQgDczkz8UPZQYDZ2ACpoIIHwAEQA6vgAkpUAovXwAD4N+O0Agkb1BYzw6qMMbPbkRiCuUHEGxmYgVhX2PMsmAuYw67b2jnRjTO4wnt6+9iA8aaCuwiDAADSFSDAlRGUb1eg89X6Q3qb3oEy09GmfHgCmEOz2jnqoFkrHqzimfnIIAAHuAsIgQABlYQiCAgKJ4RxQIjIIRgeBBd4ARxweGU-BJoJc8FY1kODiocwWS0M8LWfL8zkSFBSJ25UPI1DcHjCVz8IBeHy+P0OfwQ6kcvI2RFG8sxvGIREOjiCsKEYpg8GpTqEyHiQXiADpDEQrXYPU6HAAFGCsWQCQwAHjlLhY7E47NU4ikp14WHkikTJPe6iSppcZKxMFDMB4QlIEB6vA5okc5YgEEmqcL8BZ0TVNyb3P4yCcqaYAlcDOKpXKupqlAoVEBg2GiRj3KYbbwHcMVOyUAE5B9fvy7yYBpAEDXg+Hn1HvwnU+nzTanXn+5cy5iPnV68328th3z3MPx4QC6LogAAWobZPAQggOB7TFuwQRNKGtaVOe3xjnY8B6vU8Q-i4mj0I+p5BDoICsEO5yXMQ1xrteDSuGkaFCFhfaLk+rIvlRCBUORqqUeqQTPquIDxI+eG-vAYBhGAwEMrgD79vAuAlo4uCeogrCEjWIgejheHvHAiBYDAQg0PAoThDwAm8TcmqKew4z5uC+GQuacAkGQym4mA+JEiSZIUsg8HIqwrZsSCJkjqhl7-H0s5hdxXhWYYwRmVA8QyilnpxhwRDqPEQA)",Correctly Infer Return type of optional callback (when we know the input of callback)
1639,2021-06-14 16:48:05,33,19,"Hi. I am a software engineering student about to enter the workforce.

I love typescript.

One thing I would like in typescript (as so many others) would be an inbuilt Result type.

That is easy enough to implement on my own, or I can use some npm package or smth like that.

However, I would like to add some syntax functionalities to typescript, in order to make it easier to work with results.

Like this (notice no parentheses)

&amp;#x200B;

[nevermind the syntax errors I am getting](https://preview.redd.it/ppvqmo16g9571.png?width=451&amp;format=png&amp;auto=webp&amp;s=92f80cf65ad8bdadae474b9d0190f73f74dacdc6)

Also, would love to add some clever way of handling successful and failed results, which I have not thought through very well yet.

Is it possible for me to fork the typescript compiler and expand it to include these syntax changes? It's more for me to learn and have this amazing project on my portfolio, rather than to actually make it usable by everyone (even though I am open to the idea if that is possible. However, I know that takes lots of work).

Is it possible to have a community driven typescript compiler, where the community decides on the features to add and adds them? Much like with vim and neovim.

If it is, what should I take into account? 

Thank you",Forking the typescript compiler and building on it?
1640,2021-06-16 15:36:49,7,10,"I'm tryin to use a new library and it looks like their typescript types are broken:

../../node_modules/@antv/g6-core/lib/index.d.ts:1:23 - error TS2688: Cannot find type definition file for '_gl-matrix@3.3.0@gl-matrix'.

    1 /// &lt;reference types=""_gl-matrix@3.3.0@gl-matrix"" /&gt;
                            ~~~~~~~~~~~~~~~~~~~~~~~~~~

I think really the ONLY way I can set this up is to create a new project and link to it directly and disable this within the typescript config.  Correct?

Any other workarounds rather than fixing the upstream?",I want to use a library that uses reference types but they don't exist. Anyway I can force Typescript just for this library?
1641,2021-06-16 16:47:00,4,2,"Maybe i'ts just me, but sometimes I think: Why doesn't this module have this function? It would make the code much more readable! If I could only implement it myself... Well, you can!

I tried it with extending the element Finder in Protractor and it works like a charm. Take a look here:

[https://www.digitalocean.com/community/tutorials/typescript-module-augmentation](https://www.digitalocean.com/community/tutorials/typescript-module-augmentation)

Hope this enlightens you as much as it did to me :D",Today i learned about module augmentation - Extend all those libraries with the methods of your dreams
1642,2021-06-16 18:58:20,14,3,"I'm trying to typesafe the args for an (existing) event system. I have some experience with typescript, but not much, and I've been stumped on this for a day and a half.

The emitter looks like this:

    emitEvent(eventName: string, eventArgs: IEventArgs): void

Right now, it uses this all-purpose type for eventArgs:

    export interface IEventArgsBase {
      senderId: string;
    }

    export interface IEventArgs extends IEventArgsBase {
      [key: string ]: any;
    }

One of the goals of the event system is to support quick-and-dirty events, so this works, but I'd like to be able to add type safety for events that are known.

So for instance, for the `""MyEvent""` event, I have an args interface:

    export interface IEventArgsMyEvent extends IEventArgsBase {
      someArg: string;
    }

What I am trying to achieve (without re-architecting the whole event system) is:

1. Type emitEvent such that for known event names, it requires a specific eventArgs interface. E.g., if you pass `""MyEvent""` as eventName, you must also pass IEventArgsSpawned as eventArgs.
2. If you pass an unknown event name (you are firing a new, quick-and-dirty event) then IEventArgs is fine - it should be the default.

Doing the same to the handlers is going to be the next step, but they are implemented in a slightly unintuitive way, and I'm hoping that if I can answer this, I will understand enough to handle that.",Typesafe Event Args Interfaces
1643,2021-06-17 21:46:09,8,3,"When working with typescript in Webstorm, if there was an error it would spit out the stack trace and code location in the typescript code instead of the javascript code (and it allowed clicking the code like a link) , I believe this was possible due to the source map.

Is there something equivalent to this in vscode? Trying to find anything for stack traces on google just brings up how to do debugging which I am already capable of doing.",Stack trace in typescript in VScode output.
1644,2021-06-17 22:01:14,3,2,"I'm currently  evaluating Imba, Svelte and Mint, as replacement for React or Elm going forward (I've used both in legacy projects)

\-----------

**Disclaimer:** This  is not an attempt to inflame a Holy War against React or Elm - both are  great projects, that work well for 1000's of people, and worked great for me in the past. Both projects were pioneers in their own right. Below is just my  subjective experience, and what I'm looking to gain out of switching to  Svelte, Imba or Mint. So if there are some things below that may come  off as negative about certain feature X or Y of React or Elm, this is  only to explain my position, my experience and my reasoning.

Just a backend dev here, looking for new tools to add some flair and interactivity to the frontend of my projects.

\-----------------

I'm  looking for feedback from people who either used one of the said  libraries/languages (or 2 or all 3) or done some research/comparisons of  features and advantages, but primarily I'm interested in any  non-obvious issues, i.e.  ""underwater stones"".

Main reasons I'm considering Imba, Svelte and Mint

1. Performance
   1. Imba  is very performant on par with Svelte, beating out all major   full-featured competitors, like React, Vue, Angular, Ember, and even Elm.   [https://krausest.github.io/js-framework-benchmark/current.html](https://krausest.github.io/js-framework-benchmark/current.html) . Mint uses Preact under the hood, so performance there is also pretty good.
2. JS interoperability/ecosystem
   1. I  ran into (one more) roadblock with Elm recently, that has to do with JS  library interoperability, I end up fighting the language. Elm is a  great for some use-cases and ***no-runtime-errors*** is **super great**, but sadly, drawbacks are starting to outweigh it for me.
   2. Elm's release schedule is a separate conversation, but let's just say it doesn't work for my use-case anymore.
   3. React is a behemoth. Many of the things that require a bunch of plugins, come standard in Mint, Imba and Svelte.
      1. Whenever  there is a new version for one of the plugins, it often takes time  (as  in extraordinary more time) and effort for a small team to orchestrate  updates for big projects.  In this particular case, projects where we  used Elm - update process was far less painful.
3. Types
   1. **Elm has a great typing system**, and I'd like to continue with that. I'm not happy with Elm for other reasons (above).
   2. React can be used with typescript, but let's just say it's not an enjoyable dev experience.
   3. Mint  had a built-in type system similar to Elm; and Svelte, with TS, can  accomplish the same outcome. I just started evaluating Imba.
4. New project setup &amp; tooling &amp; error reporting/handling
   1. Elm actually excels here
   2. React on the other hand.... Sometimes it feels I spent my days trying to get config just right
   3. Primarily just looking for a dev experience similar to Elm's
5. Expressiveness / Verbosity / Syntax
   1. ***This is a purely personal preference!***
   2. The verbosity of React and Elm, and the amount of boilerplate setup that needs to be done, is overwhelming.
   3. I've  never been a big fan of JS syntax or the whole ""=="" vs ""==="" :facepalm:  When CoffeeScript appeared on the scene - I was one of the first  adopters.
   4. In  addition, personally, the more LOCs I have to consider, the more  cognitive load it is for me personally.  For me, it is harder  to read  and keep it in ""RAM"" of my head. Thus, expressive languages appeal to me (up to a point, i.e. BF) 
   5. One  of the reasons I continue to use Ruby, Elixir, Crystal as my primary  language, is precisely that - beautiful, expressive syntax.

Bonus question:

Does  anyone have any feedback on using Mint, Svelte or Imba frontends with  Rails, Phoenix or Lucky (Crystal web framework) backends?","[AskJS] What are the Pros/Cons of using Imba, Svelte or Mint?"
1645,2021-06-18 12:42:10,34,0,,"If JSdoc had enough of capabilities to provide type checking and even more than that, then why to use typescript ?"
1646,2021-06-18 14:28:35,0,0,,How to use HarperDB with your typescript project?
1647,2021-06-18 16:08:29,48,2,,Which is the best functional programming library for typescript?
1648,2021-06-19 10:57:49,2,1,[removed],"If JSdoc had enough of capabilities to provide type checking and even more than that, then why to use typescript?"
1649,2021-06-19 19:38:04,26,3,I recently had to start learning ts for a job and I would like to know what might be some tips &amp; tricks that could help me learn / look out for while coding? My background is not web-related so I don't really have that much javascript/ts knowledge. Currently I learn by writing a game in an html canvas with ts.,What should a new typescript-developer know (never coded any js)
1650,2021-06-20 07:44:42,1,1," In this post I’ll quickly walk throw the process of re-implementing a dummy query lang parser written in Typescript. The new implementation is in Rust. 

Read the whole post [here.](https://lironhazan.medium.com/from-parsimmon-to-nom-playing-with-parser-combinators-typescript-rust-c915865edd91?source=friends_link&amp;sk=d22bd6d8bd981d3db832f25d6c607aa8)",From parsimmon to nom — playing with parser combinators (Typescript → Rust)
1651,2021-06-21 01:13:52,3,1,"What is your preferences on typescript linting?

I'm using GTS for a while now and I just found out about XO yesterday.

What's your thought?",XO vs GTS?
1652,2021-06-21 12:32:52,10,1,"So I just learned typescript not too long ago, I used to code in JS so I don't really familiar with statically typed language but what baffles me is, how to find the correct type definition from the provided .d.ts file by the third party libraries? does anyone just skim through the whole .d.ts file which usually contains thousand of type definitions to find the correct type definition or there's some tricks?",I'm beginner in typescript and I'm confused how to fid the type definition of 3rd party libraries
1653,2021-06-21 17:32:07,6,1,"[https://docs.microsoft.com/en-gb/learn/modules/typescript-implement-interfaces/3-declare-instantiate-interface](https://docs.microsoft.com/en-gb/learn/modules/typescript-implement-interfaces/3-declare-instantiate-interface)

Note: The TypeScript coding guidelines suggest interfaces should **not** start with the letter 

    I

Proceeds... 🤯 why?

Declare an interface named 

    IceCream",TypeScript docs on MS
1654,2021-06-21 18:41:24,2,1,"I had great luck asking here about how to add type safety for the event args to an event emitter last week, and feel like I have a better handle on more advanced typing, but I'm still struggling to type a (somewhat obtuse) handler architecture.

Specifically, the handlers are in container objects, and the events are just called by name on each container - handlers are just function props named after events. I'm struggling to even get the containers to accept the more specific event args interfaces (i.e., to offer optional type safety), let alone to enforce type safety for the event args.

[This](https://www.typescriptlang.org/play?#code/JYOwLgpgTgZghgYwgAgJIFEBuFwEEoDmAzgEJxEoDeAUMshSACbSqMBc9YUoBA3NQF9q1APQjkEbOGRxCRZDAD2UCVLDyA7sDAALZAFcQAaxCKNIZMpmNkOxQhlzqoSLEQoMa-MQDiOaMAOEAAekEzynjhg3qTkVLTIANpGEACeHERcPAC6HHAgqfxCouIhcAC2AA4ANhAcklGOxApWcMgmZhYN0gAUALKpWFEAlMhauu2m5k1EzuDQ8EhoQ3hyAytgEqE4jBEbMWQUyDR0RIrlEN4ZWSB8gsJiyH1wlfJw1dWTnapRmtp6HWmsmaYEUyF0iiOwOQLgW7lmsLcSw28hOT0Gag4kVWxHWaiKwhghgQYGAii65W0GwAPABpLZhXacbi3AB8PQS3TAADkKnVkLSADScrxyDj0kKM+QpVKKGDIFHIAD8CrUREStOyyCx+zkfhAAQQ1GGHEwimANjRIgAVAk6ABlc4oBCKZjgnRwTYId7VeRc3kXSxdbBQVLIADC5LAcFA0GQPQ9TFqUDeUBQACt9JkFMTSeT5CA+TY4DBXD9wERhoLkJVyEQeOXok46NaRPcSgrghUaihI+AYwaoNQXSBswM+9HY1AOBOB3GALzHBKPNMAR30wDTNkyLIILRUDVDEajc6HDqdACUIOvNxBGPabgQOAAiAAqOmA8k-MmQa43W+ZHgADpn2FOhHkUSo80LT44BsOwHB3Hh5CUFRdG-EdJ0HBJHQuXBGAACXsB9dxfd9v2-fJrFsexANuECwOQXDLlMXRoHwoiEBIngyI-L83lYnQ4zgmjEMfBjhHA8QNgkSkwDLTNs29D4UNzMlR2QAAjRRDBsUFG2QQsLlmZdpK7KpakbIg2FMn4j1nKdkHKLNNkTRhLPQv01GrTT9E2bQvMaYFUxQQwiEqCAEGAGBgDvHDL2vf87w2HouRiHVRV8fxuAQUY0ToEczlqIDqkUAhUsyoggLOPDCPsAAFKBIOgMBUmGfg6AEYVbMg6D3gMtzkyIatqmAFJ93RGSekBYNGnGAEpgsYLhgSPEogqqJ0uWSq1vAPK7WQQrFGK0ryrSuRqqdbx2oSLrJOQCCoPU-q4IAWgQqz40MGbPvmgxjEWmYVvPWrOJS87iAyza9WywJ9roAr82OiASrKjacSqmrLjqhBGuaqBWpuzrGOY3BBPYnHwcqqGMf1Q14YRo6TrRiHMaunG8Yigm2o65AhGKB5xAAdQ9TZUFsOBsF-YACB0TYphs6hWoi1UogI-J3IXeNGE9OAaabLLBzh5B51ZZAzQtfg5lcRZexPRy0WYq8by3bjbmuXdeAe8QfUO+3B3kZzsw9KW2idxLb3vR86IIeKLmdpLGA2DgNnVpNoC9x5fcw09A5ciX06YhKXeStQEmSNIPZyFO1DTzWVAAHxjzOfYKSw2JUGU8+zTSUBEj6kNueQrC5Av69mYpHgAeU0zAySzapUmrTyxnJAByTYuHycLgEsv7drANfU2achtuh3EMSiIDBfRBRN2zAhFH679FM3sE720GFNjOL+xl3z4t6jkqLvPumwfQdjoNyRQm8hISCYJYeUbFV5QGqDYaK4JUgqyICWCArUYTDygq9UAEC0CHXyBvO+BB9BpksH5GiGhwTv0YJ-VOGtkyWDQrAmKMFkCjQNAg90dt+yOURLbRhTk4DjRXh6SoEUQA3xILgssqRcGr30KgrSKB9KIDAPoH0YYcCoSWMrFA2CYC4LDKNcaoBBGyW0K4EhUDv7UJQOgle35GBP00pZAgwApDuk9LY0eRlXFEBABQgKEBqjyjaCYmwtYoB8jLDYpBg1oCzEeHQVA-l5CVCappOA3iwysWQJ4wpHkwQIETAQLRsCCn1gcGklQsgqnaEiromhqEfzmIYWmcg+YfJ0M-hQCA5R5BWI8PQOw6ibC9xkN4rRYJPH0CdOhW4vCxp1BIXQA+1JnwH2fOyVm+sYgHzykAA) is a toy example of what I have so far, what I'm working on, and what I'm aiming for.

I appreciate any answers, but it's unlikely that the basic architecture will change, so suggestions for or examples of different architectures that are easier to type won't be of much direct use (though I'm sure I can still learn something for the future). I've seen a few event handler architectures that I understand how to type - I'm just really struggling with this one!",Typesafing Event Handlers
1655,2021-06-21 23:19:47,6,1,"The definition of the utility `Extract` type [in typescript's lib.d.ts](https://github.com/microsoft/TypeScript/blob/663b19fe4a7c4d4ddaa61aedadd28da06acd27b6/src/lib/es5.d.ts#L1488-L1491) is as follows:

    type Extract&lt;T, U&gt; = T extends U ? T : never;

and an [example in the handbook](https://www.typescriptlang.org/docs/handbook/utility-types.html#extracttype-union) goes like this:

    type T0 = Extract&lt;""a"" | ""b"" | ""c"", ""a"" | ""f""&gt;;  // type T0 = ""a""

But the type `""a"" | ""b"" | ""c""` in the example above does not,  [as can be plainly verified in the playground](https://www.typescriptlang.org/play?#code/C4TwDgpgBAglC8UBEBDJUA+yBG6tIGMkBuAKFEigCEFk1NkAzE088aAFQgGdha4IAD2AQAdgBNu1KAH5YUAFxRREAG4QATsSA), extend the type `""a"" | ""f""`.  So how is it that the example above works?",How do types such as Extract work?
1656,2021-06-22 17:49:05,8,1,"Looking at getting a TypeScript book to get a better understanding of how it is suppose to be used. Saw a lot of recommendations for [Programming TypeScript by Boris Cherny](https://www.oreilly.com/library/view/programming-typescript/9781492037644/), and some recommendations for [Effective TypeScript by Dan Vanderkam](https://www.oreilly.com/library/view/effective-typescript/9781492053736/). Some questions I had about these books:

- How are these books different and/or the same?
- Is it worth it to get both or would it be better to get only one?
- Are there other books on TypeScript you would recommend?
- What did you like or dislike about these books?

I have a background in JavaScript, looking to expand into TypeScript. From reading reviews and the description of the books it looks like *Programming TypeScript* is more information focused while *Effective TypeScript* is more example focused. I am leaning towards an information style book (as an alternative to just reading through online docs), so I am thinking of getting just *Programming TypeScript*.

Thanks in advance for anyone who answers!",Programming TypeScript vs Effective TypeScript vs Both
1657,2021-06-22 19:49:14,82,1,"Hi guys,

I'd like to take a minute to introduce you one of my newest projects: a new high-performance TypeScript ORM for MongoDB, MySQL, PostgreSQL, and SQLite. https://deepkit.io/library/orm

Deepkit ORM is one of a whole collection of high performance libraries written in the last years for my need in developing complex isomorphic TypeScript applications (like for example https://deepkit.ai). Since we approach the beta version I'd like to introduce you to one of its flagship libraries, the ORM, and collect feedback. So, if you are interested, please keep reading and drop me a comment about your thoughts!


It has many features, but here is a quick overview:

- Extremely high performance. By using JIT technique, highly optimised unit of work, and simple yet efficient code it is the by far the fastest full-featured ORM out there. In fact, for MongoDB we have written our own Mongo driver and BSON parser to get much greater performance compared to the official driver (and bigint support as well as correct error stack traces).
- Data mapper, unit of work, and identity map. Optional with active record pattern.
- Entity schema definition is based on [Deepkit Type](https://deepkit.io/library/type). Another library for high performance serialization, validation, runtime reflection, and more. It makes it very easy to use TypeScript classes (or functional schemas) as entities: No additional proprietary schema format. It makes it possible to share entities with other applications (like your frontend).
- Relations, even in MongoDB.
- Support for all kind of types: string, number, boolean, array, map, custom classes, ArrayBuffer/typed arrays, (discriminated) unions, ObjectID, uuid, and  more.
- SQL Migrations.
- Cross-database, fluid, and typed query builder.
- Event system for plugin development or custom hooks.
- Query composition. Makes it very easy to re-use queries in a typesafe manner.
- [ORM Browser](https://deepkit.io/library/orm-browser): GUI to manage content with model diagram, seeding, JavaScript query prompt, and migration assistant.

Example

```typescript
import 'reflect-metadata';
import { SQLiteDatabaseAdapter } from '@deepkit/sqlite';
import { entity, t } from '@deepkit/type';
import { Database } from '@deepkit/orm';

async function main() {
    @entity.name('user')
    class User {
        @t.primary.autoIncrement public id: number = 0;
        @t created: Date = new Date;
        constructor(@t public name: string) {}
    }

    const database = new Database(new SQLiteDatabaseAdapter('./example.sqlite'), [User]);
    await database.migrate(); //create tables
    
    await database.persist(new User('Peter'));
    
    const allUsers = await database.query(User).find();
    console.log('all users', allUsers);
}

main();
```

In fact this is a ready to use program: Use `ts-node app.ts` to execute it. No configuration, build process, or anything else necessary to get started.

### Why another ORM?

I tried in the last years many ORMs like TypeORM, MikroORM, and Prisma. All have their shortcomings. TypeORM was (or is?) basically dead with a lot of bugs, weird API (e.g. connection needs to be created async), does not support strict classes, and basically no good MongoDB support. Prisma had no MongoDB support either, bulk insert, weird way to implement joins, and is based on Rust. Both are rather slow and don't have a unit of work.

What all have in common is that they have an inefficient way of defining the entity schema. TypeORM and MikroORM use decorators which I can't reuse in my frontend (because frontend should be ORM agnostic). Prisma is on another level: it forces me to learn a new language. None of those explicitly had in mind to reuse defined models in my whole tech stack: http controllers, RPC actions, micro-services, message bus, file storage (using BSON), or simply in my frontend. Since several years I build complex full-stack applications completely in TypeScript and refuse to write a single model more than once. Deepkit ORM with Deepkit Type allows me to do so. I can serialise entity instances from the ORM directly in JSON or BSON, and send it to the client, where it can be deserialised - without adding any additional library or schema annotations. It does not only allow me to write much less code, but have on top the most performance implementation of it. Exactly what I needed to build my last complex projects completely alone in record time.


Please bear with me: The documentation is not yet complete nor is the rest of the library collection fully described. We are adding more and more content to the website in the next weeks.

We are a new community, so if you have any questions or feedback you'd like to share, please [join us](https://deepkit.io/community)! I'm hanging around in Telegram and Slack most of the time.","Introducing Deepkit ORM, a high performance ORM for TypeScript"
1658,2021-06-22 21:14:34,3,1,"Hi all, I'd like to be able to auto generated typeguards. For example, say I have a file with an interface in it, I'd like to be able to autogenerate an \`isThatInterface\` function.

For a more concreate example, say I have a file Person.ts

\`\`\`typescript

export interface Attribute {  
  value: string;  
  timestamp: number;  
}  
export interface Person {  
  id: string;  
  attributes: {  
\[key: string\]: Attribute  
  }  
}

\`\`\`

I'd like to be able to auto generate a typeguard \`isPerson\` for this, either with a cli or some magic babel/webpack plugin.

I've tried [https://github.com/rhys-vdw/ts-auto-guard](https://github.com/rhys-vdw/ts-auto-guard) but it doesn't handle the attributes object very well (it just checks that it's an object, not that its values match \`Attribute\`).

I've also looked at [https://github.com/gcanti/io-ts](https://github.com/gcanti/io-ts) and  [https://github.com/pelotom/runtypes](https://github.com/pelotom/runtypes) but both have a manual step converting the types into a runtime representiation by hand which I'd like to avoid.

I'm pretty sure I've seen someone on this subreddit talking about this! Any pointers would be great",Automatically generating typeguard functions
1659,2021-06-23 19:14:02,6,1,"I'm trying to create a helper that maps a tuple of keys to a tuple of values of some object ([playground link](https://www.typescriptlang.org/play?ssl=8&amp;ssc=3&amp;pln=1&amp;pc=1#code/C4TwDgpgBA0hIGcAqB7AagQwDYFcIIB4kAaWeBKCAD2AgDsATCgCgGt4UAzKJASgG0AugD4oAXigBvALAAoKAqj8Ako2pQAlnSjsQXMokEAuHvziIVaqoMEBuOQF97suaEg98wcQeTpseQjlFKU4UFBM6HABbACMIACdSGIx4kwRgeK0AcySMAC8TGLCsCAw6B2IgxX4AcmS8mtIa0JQawTlhWyA)):

    type KeysToValues&lt;T, Keys extends (keyof T)[]&gt; = {
        [Index in keyof Keys]: T[Keys[Index]];
    };

    type Test = KeysToValues&lt;
        {foo: number, bar: string, baz: boolean},
        ['baz', 'foo']
    &gt;;

It even seems to work (if you hover over `Test`, the type is correctly inferred as [boolean, number]), but the compiler complains that `Keys[Index]` cannot be used to index type T. This seems strange to me, because I was explisit about Keys only containing `keyof T` elements.

Why does it happen and how do I fix this generic helper?

Thanks!",How do I map a tuple of keys to a tuple of values?
1660,2021-06-24 12:47:35,6,1,"Hi,

just posted a question: [https://stackoverflow.com/questions/68116059/typescript-prevent-exports-from-beeing-available-globally](https://stackoverflow.com/questions/68116059/typescript-prevent-exports-from-beeing-available-globally)

would be great if you could take a look, thanks :D",Question regarding export namespace
1661,2021-06-24 15:23:22,2,1,"i tried using it today but npm said there were two high security vulnerabilities, where one of them was a ddos vulnerability, and the other was an outdated dependency with a vulnerability. npm audit fix didn't do anything either.

is ts-node-dev worth using, or are there any other alternatives? nodemon with ts-node is horribly slow.

(as a note, i can't really use tsc or tsc-watch bc of a config file with mediocre typescript support so i gotta compile it in place)",is ts-node-dev worth using?
1662,2021-06-25 16:28:47,5,1,"**Overview**

I'm building and publishing a custom TypeScript type declaration library to be used across my projects. I'm having an issue with importing the TypeScript library into my projects. It imports, but I keep getting the error: \`Module not found\`.

&amp;#x200B;

**What I've tried**

* I've tried modifying the \`package.json\`
* I've tried modifying the \`tsonfig.json\`
* I've exported the \`type\` and \`interface\` from \`src/types/locationTypes.ts\`

&amp;#x200B;

**src/types/locationTypes.ts**

    // TypeScript Type: Latitude
    export type TLatitude = number;
    
    // TypeScript Type: TLongitude
    export type TLongitude = number;
    
    // TypeScript Type: Coordinates
    export interface ICoordinates {
      latitude: TLatitude;
      longitude: TLongitude;
    }

&amp;#x200B;

**src/index.ts**

    // Imports: TypeScript Types
    import * as dateTypes from './types/dateTypes';
    import * as locationTypes from './types/locationTypes';
    
    // Exports
    export {
      dateTypes,
      locationTypes,
    };

&amp;#x200B;

**package.json**

    {
      ""name"": ""@username/custom-types"",
      ""version"": ""1.0.0"",
      ""main"": ""./dist/index.ts"",
      ""types"": ""./dist/index.d.ts"",
      ""description"": """",
      ""repository"": {
        ""type"": ""git"",
        ""url"": ""git+https://github.com/username/custom-types.git""
      },
      ""publishConfig"": {
        ""registry"": ""https://npm.pkg.github.com/username""
      },
      ""author"": ""Jeff Lewis"",
      ""license"": ""MIT"",
      ""keywords"": [
        ""typescript"",
        ""types"",
        ""component-library"",
      ],
      ""scripts"": {
        ""build"": ""cd src &amp;&amp; tsc &amp;&amp; cp ../package.json &amp;&amp; Echo Build completed!"",
        ""lint"": ""eslint . --ext .js,.jsx,.ts,.tsx""
      },
      ""devDependencies"": {
        ""eslint"": ""^7.29.0"",
        ""typescript"": ""^4.3.4""
      }
    }

&amp;#x200B;

**tsconfig.json**

    {
      ""include"": [""src/*""],                                                   // Specifies an array of filenames or patterns to include in the program
      ""exclude"": [                                                            // Specifies an array of filenames or patterns that should be skipped when resolving include. It is not a mechanism that prevents a file from being included in the codebase - it simply changes what the include setting finds.
        ""**/__tests__/*"",
        ""node_modules"",
        ""babel.config.js"",
        ""metro.config.js"",
        ""jest.config.js"",
      ],
      ""compilerOptions"": {
        ""module"":  ""ES6"",                                                     // Sets the module system for the program. (https://www.typescriptlang.org/docs/handbook/modules.html)
        ""outDir"": ""./dist"",                                                   // If specified, .js (as well as .d.ts, .js.map, etc.) files will be emitted into this directory. The directory structure of the original source files is preserved
        ""declaration"": true,                                                  // Generate .d.ts files for every TypeScript or JavaScript file inside your project.
        ""emitDeclarationOnly"": true,                                          // Only emit .d.ts files; Does not emit for .js files. (For TypeScript type definition libraries only?)
        ""typeRoots"": [""./node_modules/@types"", ""./dist/index.d.ts""],          // If typeRoots is specified, only packages under typeRoots will be included.
        ""strict"": true,                                                       // Enable all strict type-checking options.
        ""strictFunctionTypes"": true,                                          // Enable strict checking of function types.
      }
    }",How can I create a custom TypeScript Declaration library and import them into my projects via NPM/Github Packages?
1663,2021-06-26 15:31:11,27,1,"So, the thing is my friend keeps on telling me how awesome is typescript but I don't even know the basics of JS  
My question is where can I start my TS journey?  
Help!!!",Where should I start?
1664,2021-06-27 00:00:20,6,1,"**Overview:**

I'm building a TypeScript declarations NPM/GitHub Packages library ([https://github.com/jefelewis/typescript-declarations](https://github.com/jefelewis/typescript-declarations)) that I want to import into my projects, but I'm having an issue with importing into projects.

&amp;#x200B;

**Project:**

    import { ICoordinates } from 'typescript-declarations';

**Error**

    Module '""typescript-declarations""' has no exported member 'ICoordinates'.

&amp;#x200B;

**What I've tried:**

* I've tried modifying the \`package.json\`
* I've tried modifying the \`tsonfig.json\`
* I've exported the \`type\` and \`interface\` from \`src/types/locationTypes.ts\`

&amp;#x200B;

**src/index.ts:**

    // Imports: TypeScript Types
    import * as locationTypes from './types/locationTypes';
    import * as measurementTypes from './types/measurementTypes';
    
    // Exports
    export {
      locationTypes,
      measurementTypes,
    };

**src/types/locationTypes.ts:**

    // Module: Location Types
    declare module locationTypes {
      // TypeScript Type: Latitude
      export type TLatitude = number;
    
      // TypeScript Type: TLongitude
      export type TLongitude = number;
    
      // TypeScript Type: Coordinates
      export interface ICoordinates {
        latitude: TLatitude;
        longitude: TLongitude;
      }
    }
    
    // Exports
    export default locationTypes;

**src/types/measurementTypes.ts:**

    // Module: Measurement Types
    declare module measurementTypes {
        // TypeScript Type: Measurement (Distance)
        export type TMeasurementDistance = 'Kilometers' | 'Miles' | 'Yards' | 'Feet';
    
        // TypeScript Type: Measurement (Length)
        export type TMeasurementLength = 'Inches' | 'Feet' | 'Yards' | 'Miles' | 'Light Years' | 'Millimeters' | 'Centimeters' | 'Meters' | 'Kilometers';
    
        // TypeScript Type: Measurement (Speed)
        export type TMeasurementSpeed = 'Centimeters Per Second' | 'Meters Per Second' | 'Feet Per Second' | 'Miles Per Hour' | 'Kilometers Per Hour' | 'Knots' | 'Mach';
    
        // TypeScript Type: Measurement (Angle)
        export type TMeasurementAngle = 'Degrees' | 'Radians' | 'Milliradians';
    }
    
    // Exports
    export default measurementTypes;","Error: Module '""typescript-declarations""' has no exported member 'ICoordinates'."
1665,2021-06-27 01:07:25,284,1,"Original Post: [https://www.reddit.com/r/javascript/comments/bfsdxl/if\_you\_dont\_use\_typescript\_tell\_me\_why/](https://www.reddit.com/r/javascript/comments/bfsdxl/if_you_dont_use_typescript_tell_me_why/)  


Hi /r/javascript!  


I'm asking this again, because the landscape of the broader JS ecosystem has change significantly over the past 2 years.

  
We're seeing 

* higher adoption in libraries (which benefits both TS and JS projects) (e.g.: in EmberJS and ReactJS ecosystems)
* higher adoption of using TypeScript types in JavaScript via JSDoc type annotations (e.g: remark, prismjs, highlightjs)  


For me, personally, me like of TypeScript has remained the same since I asked ya'll about this two years ago:

I use typescript because I  like to be told what I'm doing wrong -- before I tab over to my browser  and wait for an update (no matter how quick (HMR has come a long way!).

The quicker feedback loop is very much appreciated.  


So, for you, your teams, your side projects, or what ever it is, I'm interested in your experiences with both JS and TS, and why you choose one over the other.","[AskJS] If you don't use TypeScript, tell me why (2 year follow up)"
1666,2021-06-27 01:27:44,9,1,"I'm trying to recreate the numpy [randn](https://numpy.org/doc/stable/reference/random/generated/numpy.random.randn.html) in TypeScript.

here's my javascript implementation:

    const randn = (...d) =&gt; {
        if (d.length === 0) {
            return (Math.random() * 2) - 1;
        }
    
        const [a, ...b] = d;
        const arr = [];
        for (let i = 0; i &lt; a; i++) {
            arr.push(randn(...b));
        }
    
        return arr;
    }

This works, but I'm not sure how to assign types. `...d` is obviously a `number[]` but the return type can be multi-dimensional depending on the varargs passed. I get this error when letting typescript infer the return type: 

    TS7023: 'randn' implicitly has return type 'any' because it does not have a return type annotation and is referenced directly or indirectly in one of its return expressions.

And this is its inferred type: `function randn(     ...d: number[]): number | (number | any[])[]`

How do I type this?",Type of a matrix of variable dimensions
1667,2021-06-27 17:16:19,6,1," 

    function ReleaseApproval() { 
        const data: string[] = [];     
        const firstName: string[]=[]; 
        Object.entries(item).map([key,values])=&gt;{ 
            firstName.push(item.name); 
            Object.assign(data,[{name: item.name, lastName: item.lastName}]);
              return(
                      &lt;&gt;         
                       {data.map((key, value) =&gt; ( 
                                     &lt;div&gt;{value.name}&lt;/div&gt;         
                        ))}       
                      &lt;/&gt; 
                       )};

I'm getting the following error. How can I fix these?   
1) Missing return type on function.   
2) 'index' is defined but never used.   
3) 'key' is defined but never used.   
4) I'm getting an additional empty element in `data`. So array length of data is 1 more that `firstName`.  5) What is the best way to write this function in typescript and assign types?",Typescript errors with function
1668,2021-06-28 09:05:43,2,1,"**Monday, June 21 - Sunday, June 27**

###Top Posts

| score | comments | title &amp; link |
|--|--|--|
| 235  | [61 comments](/r/javascript/comments/o5rwwt/es2021_features_list_as_approved_by_the_ecma/)  | [ES2021 features list as approved by the Ecma General Assembly!](https://h3manth.com/ES2021/)|
| 199  | [79 comments](/r/javascript/comments/o6o9t9/50_javascript_best_practice_rules_to_write_better/)  | [50 Javascript Best Practice Rules to Write Better Code](https://beforesemicolon.medium.com/50-javascript-best-practice-rules-to-write-better-code-86ce731311d7)|
| 185  | [68 comments](/r/javascript/comments/o7m0v6/askjs_how_do_hundreds_of_engineers_work_on_the/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; How do hundreds of engineers work on the same project?|
| 168  | [11 comments](/r/javascript/comments/o5m9dr/ive_been_building_an_imaginary_game_console_in/)  | [I've Been Building an Imaginary Game Console in JavaScript, Based on an Imaginary CPU - and Now I'm Writing Its First Game](https://www.youtube.com/watch?v=_eu8hFZP0oU)|
| 166  | [258 comments](/r/javascript/comments/o8n3uk/askjs_if_you_dont_use_typescript_tell_me_why_2/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; If you don't use TypeScript, tell me why &amp;#40;2 year follow up&amp;#41;|
| 153  | [13 comments](/r/javascript/comments/o72kpf/storybook_63_is_outhandy_new_css_tools_test_utils/)  | [Storybook 6.3 is out—handy new CSS tools, test utils, and revamped integrations](https://storybook.js.org/blog/storybook-6-3/)|
| 122  | [94 comments](/r/javascript/comments/o4tjz6/askjs_what_is_better_than_webpack/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; What is better than Webpack?|
| 118  | [19 comments](/r/javascript/comments/o7tozd/grok_vscode_extension_a_mind_map_for_development/)  | [Grok &amp;#40;VSCode Extension&amp;#41; - a mind map for development](https://marketplace.visualstudio.com/items?itemName=Adaptilab.grok)|
| 110  | [4 comments](/r/javascript/comments/o981mh/the_last_codebender_a_gamified_platform_to_learn/)  | [The Last CodeBender: A gamified platform to learn how to code. First course will be about JavaScript!](https://lastcodebender.com/)|
| 104  | [17 comments](/r/javascript/comments/o83kyj/we_made_a_little_web_component_for_collecting/)  | [We made a little web component for collecting binary &amp;#40;thumbs up/down&amp;#41; user feedback on a website.](https://github.com/RamseyInHouse/feedback-component)|


&amp;nbsp;

###Most Commented Posts

| score | comments | title &amp; link |
|--|--|--|
| 100  | [65 comments](/r/javascript/comments/o7i072/askjs_whats_the_best_way_to_learn_advanced/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; What's the best way to learn &amp;#40;advanced&amp;#41; javascript?|
| 72  | [33 comments](/r/javascript/comments/o4r55z/working_on_a_frameworkless_online_frontend_ide_to/)  | [Working on a framework-less online frontend IDE to code reactive apps faster. Your thoughts?](https://www.glue.codes)|
| 3  | [19 comments](/r/javascript/comments/o6vomt/askjs_avoid_cancellation_of_xhr_calls_while/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Avoid cancellation of XHR calls while Navigating|
| 63  | [14 comments](/r/javascript/comments/o6b8i7/juke_build_a_generalpurpose_build_system_with/)  | [Juke Build - a general-purpose build system with JavaScript DSL.](https://github.com/stylemistake/juke-build)|
| 9  | [14 comments](/r/javascript/comments/o85s7d/showoff_saturday_june_26_2021/)  | `[Showoff Saturday]` Showoff Saturday &amp;#40;June 26, 2021&amp;#41;|


&amp;nbsp;

###Top Ask JS

| score | comments | title &amp; link |
|--|--|--|
| 7  | [5 comments](/r/javascript/comments/o8ds1u/askjs_arrays_with_namevalue_pair/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Arrays with name-value pair|
| 5  | [12 comments](/r/javascript/comments/o8z0bw/askjs_looking_for_stack_advice/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Looking for Stack Advice|
| 5  | [4 comments](/r/javascript/comments/o4q64r/askjs_choice_of_graphing_library_for_network_graph/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Choice of graphing library for network graph|


&amp;nbsp;

###Top Showoffs

| score  |  comment  |
|--|--|
| 5  |  /u/Jncocontrol said [hi, here is my portfolio website &amp;#40;at least the index page is complete &amp;#41; WIP     &amp;#91;https://vigilant-cray-49d5e3.netlify.app/&amp;#93;&amp;#40;https://vigilant-cray-49d5e3.netlify.app/&amp;#41;     that ...](/r/javascript/comments/o85s7d/showoff_saturday_june_26_2021/h3371t9/?context=5) |
| 3  |  /u/joshua264 said [i made a fullstack clone of TeamBlind using PERN &amp;#40;PostgreSQL, Express, React, Node&amp;#41; along with TailwindCSS     &amp;#91;https://andha-app.herokuapp.com&amp;#93;&amp;#40;https://andha-app.herokuapp.com&amp;#41...](/r/javascript/comments/o85s7d/showoff_saturday_june_26_2021/h33avh4/?context=5) |
| 3  |  /u/throvn said [I visualized some popular sorting algorithms a few weeks ago.  &amp;#91;Demo&amp;#93;&amp;#40;https://throvn.github.io/sorting-visualizations/&amp;#41; and code &amp;#91;here&amp;#93;&amp;#40;https://github.com/Throvn/sorting-vi...](/r/javascript/comments/o85s7d/showoff_saturday_june_26_2021/h342fir/?context=5) |


&amp;nbsp;

###Top Comments

| score  |  comment  |
|--|--|
| 301  |  /u/11b403a7 said [&gt;How do hundreds of engineers at big corporations work on the same project  Typically they don't. This is a misunderstanding. Most large companies have several different internal projects that speak t...](/r/javascript/comments/o7m0v6/askjs_how_do_hundreds_of_engineers_work_on_the/h2zhupx/?context=5) |
| 112  |  /u/real_kerim said [Oh boy, did I wait for this thread. Let's see.  1. Because the time spent fixing missing or outright wrong typings for third-party packages is a gigantic waste, unless you want to ""any"" everything and...](/r/javascript/comments/o8n3uk/askjs_if_you_dont_use_typescript_tell_me_why_2/h36ekqy/?context=5) |
| 91  |  /u/fix_dis said [What are you defining as “better”? More configurable? Less configuration headache? Faster compile times?  For configurability, Webpack has everything. The trade off is, you’ll have to set it up and le...](/r/javascript/comments/o4tjz6/askjs_what_is_better_than_webpack/h2j6od1/?context=5) |
| 85  |  /u/Tomseph said [I absolutely disagree with function expressions vs. declarations. You should not be afraid of hoisting. If you stick to pure, single purpose functions there's nothing to worry about. Hoisting can help...](/r/javascript/comments/o6o9t9/50_javascript_best_practice_rules_to_write_better/h2u67og/?context=5) |
| 85  |  /u/Baturinsky said [1. JS code can be read by those not familiar with TS. 2. I can define types with JSDoc, and IDE will understand it. 3. Modern JS has nearly everything that TS has, except fot types&amp;#40; and for those,...](/r/javascript/comments/o8n3uk/askjs_if_you_dont_use_typescript_tell_me_why_2/h369pf3/?context=5) |


&amp;nbsp;",Your /r/javascript recap for the week of June 21 - June 27
1669,2021-06-28 09:52:55,5,1,"Hello wonderful community,

I'm having quite a lot of trouble typing the following expression. I'm trying to port Haskell's do notation to typescript, following a technique I read somewhere I don't remember.

Basically, it works like this:

```typescript

type User = {
    name: string
    age: number
}

const getName = (): Result&lt;string, string&gt; =&gt; Ok('John')
const getAge = (): Result&lt;number, string&gt; =&gt; Ok(24)

const result = Result.CE&lt;User, string&gt;(({ bind }) =&gt; {
    const name = bind(getName())
    const age = bind(getAge())

    return Ok({ name, age })
})

result // Result&lt;User, string&gt;

```

This way it works. I've even figured out type inference without specifying the generics:

```typescript

const getName = () =&gt; Ok('John')
const getAge = () =&gt; Ok(24)

const result = Result.CE(({ bind }) =&gt; {
    const name = bind(getName())
    const age = bind(getAge())

    return Ok({ name, age })
})

result // Result&lt;{ name: string, age: number }, unknown&gt;

```

However, my typescript magic is not enought to correctly infer the Err case type. See that I currently get a `Result` with an `unknown` Err case. My objective is that, if the `getName` and `getAge` functions specify a complete Result type: 

```typescript
const getName = (): Result&lt;string, string&gt; =&gt; Ok('John')
const getAge = (): Result&lt;number, string&gt; =&gt; Ok(24)
```

The function can infer the complete result return type **without** specifying any type parameters, to let typescript infer as much as possible.
Here's a link with an example:

https://www.typescriptlang.org/play?jsx=0&amp;ts=4.3.4#code/PTAEAkFECVNBBAMo0AVKaDynEGUBQ+ALgJ4AOApqACICqAPKqBQB5EUB2AJgM6g9EATgEsOAcwA0oAGqgAvKA4BXADYqAfPNABvUKUoAuNAG5QANwCGKpRSOyAvoQ4WAthR5kLAYyp0d+UEDQYAAqEICg0BDQAGFBCgt2PgsaWlAvCx4qAHdhIgALAHslIlAuRIsAOlBaLIAzVVA6wsFQMmF28QigkOBu5hYyFtKvQo4BZhcyUi1GAfZuPgERcXUACn1bNABKIzpGTTlNNe1+yM2JM6DLay3lNUvI+23CSNYhwVKGji8iYTH0vFEhQ5qwFrx+EJRGJ1psjKhdqkDv13sMmkofn8AV4gexQWxOBDltCpNJYeQtqgpDcbHZEfsqTJ1CjBmjvr9-hxAQk8UwwYSllDxKTyYY0NSrDYAPx0-yRSLCOqgNYAQhpFG2cvl2viRCUgi5ugu5kld1UKlA9lAmXSYwEV0CjgdoF1+sNzvOFMe2vl6u92qtNtG4yI-UcTuIFNAmAA1gctPsAOSxxNSVDM4MTWOzdNrG7wxGx+NHVKVHE8ihrZMx1MmlQvSOUUCQQSCYtIxMtwS19P4TOlLs59b5nZGLvFzR0Mu4yud1u1m4NzagaDuVREei4KSQQ7RuO4TQAH2brfoO8IqM+ilc7k8PhXa5UpVOkS8KkyfFXPHXXZa8ZfPr9oISi-C0axkEoABGKjCF4dYFjojhPK8QT9qAkGiFwsxbs26zxN+T5GF+66btu6iIrg8iaAB2qKsq+HrpUy5yCxoBzt2mo0T6gQFIIhTZIoFACcRT6-oIawMU+lTqi83FIT6roGi6j5ENJpphihgShOE8rRDEhRTCUiScs2gz4TwJnNK0ImlPA1CMlYPCFPwBkUAU0KgDBMZUOAmTeWoiZ8FwhSlBwIXGWMlRnNEuAUFQ+REEQZA8AYIDBV4PCVC4sF8U5dSqaMLjAJwAC0Sg8MAwVEBwbnAHUPD5BYghkMA77iEoFhiBQJXxHUFDxD8FDAIVEFEBFHAle85mcjw0VNC0oAuC0VCiM0UW6X0bysleaExHACikaAABi6zOnUHBGGsGHcEYXHcddXBGPQABCmEHhJKlESpL1vVIJ2aiWr3cAQckA5oNmHSd-SIhDOEnVRWrakIJCI9xtohspBGlAo50nOhmGWrJaOBIpXKSaGcnpIkXj5Mq-WCJxHpBHRaz06AogCBYg2FEqNliYzxM6m5bonm2J2s62an1kzjqaWjvH8cwrbOvJssRmhXVEAAcjeWhrDD33EsKkIrDCCOxlWABShT5BwiYvBrbnwF1esG1j9DKC4kH9VIRtmyWFsAEwACwNmh5NaDZlR7WseMPYTCNcWhzhuFoD1rJrOtuPrROBGhnVUAo6ea87lbbA2kSk3ueMpxQUgF4T+DPIQEcgBAitEM5XBuf12U1Xo+RUIOGRZFKQA",Help porting Haskells dot notation to typescript
1670,2021-06-28 19:57:52,16,1,"I have a type of object that contains some functions. Each of these functions takes an args object. Every such function is similar except:

1. Some have known args structures

2. Some have unknown args structures

[This playground link](https://www.typescriptlang.org/play?#code/PTAEBUAsFMCdoOQGdQENQAdYHsOngI4CuAlvACagkB2o0AbnAJ5qwDmKNALnAGaoBjaAChufQdFABBdkgBCqJNACS1HrH5DQAb2Gh9oJNgC20AErRiZaOQAKODAC5DXWDTYBuYQF9hwkKAAyibQXCSmKADukuTY1AhcoADW1NiRoJGQqIlcMKwcVGriWpEkADZloGXY2ElVJEnQADSg2LlwoLmotF2JJImlFaBZjJ15WLj4lqQUoLw4xmOSAEaKkmIaEqJFm1oAqtQpadQyHKrqmpLQAB481OQop-Jr58WSugagANo05DfOSFc7gAus5ukwvL5hFwmBhJAcjpFqAAxIjUASgAC8oAAFKhZM4EakkU9XrtoABKLEAPlA9GwJHIXm2FwkoFR6KQAHV+pAiccnjo9AYfvd-i43NQ2KDQPykRyBJC-AEuZIBN1QMtSGVKBrsMsAFbQASJbC8JZKOZogRIFoGoiA+qNDKSSLdLjCARxR1GUwAeUNxq4zgV3N5cpOsixQs+vugCuceIJssOxMjZx2lypmNp2i91CMZWgADpqmwkxxi3HTjiKRTvE1hfo4372rAE7j8RxCamBbIyVmaTp84WS2WK0gqyFWzBYDW674oX5-GA5EREnHWub2lb0WFvcNUKNEbQNpckCy3qAANJpgcSP3UK63aD3R6yBRKe9aD4GOOBIEpQBQDPCbQwQgAOSIYxljgZxqGg2DYCVS9yRvO9MwkcBImwOgXzfaQPxeTCfzAuM5BqMpnGWSjoG6LxYxCADJTYGRYFQJhgJYr5gRQs82VvY5v2gKB4GfO4HkIjhPxUEj3jIyDELg0AEJguAGL-RS1LnWB2M4lSlNgHiUJVNUNQdSR0GMVA8C4XDFCMAQSGySQT13E0SAPUpcmSNNClZIQL34rRBPla0AFkbJjAwTwVR9oGcULqGE+KNP0WLrWw7BEowgKRJwtLfOOBVROgBL0KEuTSugEywD2JB3DQUBrIwOFKBhOEWlyEgomwWAkhQNh4GyFdcQACUUTpcNgpqOssspnJQBr0XWOSUFieJElQCo0jmPqLVc34UDNQo-muaAkApaFYUkUMeVyJLBWxX99C+a9CmSaAmBOpKFUijBgQAfkTCccuKiKbLe4Fs1pelGQpSFmQCAMjRNUB8y4VAaCWkIiqRdzbTQe4iZYXo0FaujYA+nd9VRxInxsKbQAspZ0b6+AkAwOJyEartODk0AAFpQCGuiuAAQk9b0N2nNsUaDENrTDB60ye6L0rTEqcMTPmwaRYSsph4dvWwItS2wcs+anUwKNN+tG0+DL0WqnXkySlKnyNvMTbN8crbjKDtPrUAAhIc0+f8q9YguzbmuyARIBaaIRdCWabroXT9uF0XsklpdlVXdcMiyPpzWUDJ3U1NpIEB0by5GSzaFpoM5nKItKG8yACeLuAEtGz4w9Z3hrVAZRAg+36IYwFoI-CvZAnAUA5AAUVZr1dIurn7ka4LJHmEwKrC9F-v7gxB53Yf0VHwIIIQReaEPlEp5nqMepTE9STkgvR-R7oElbtgRB4CtCLpAXadlQCxDGD1SWo0IK4GgJLXej8pD3AjKGPCEkUB3V5I9KML1viNH0oCFiMocSg3fqrfsckjZw3IAjHw38oBvy9MYDA5QLotC1H0RIfwSHYCYCgOahhUC8FCEwYso9aCaC4C0YkVAuDIEwNgJADVlhFj2lTCOECZroGEdXDoXQm5Pi3KzNyfozDM17PjXeSAkEC0emg6xT9OTgFQI0LKmDXySRwSrPsBQCFfCIVxEEINdYk1oQyehoAAA+Vi-i8BoDYSEQA) lays out it out more clearly, shows what I have so far, and then gets to the problem I'm having.",Having trouble typing objects
1671,2021-06-29 07:27:28,6,1,"I have created a new react project using the command `npx create-react-app my-app --template typescript`. Then introduced some type errors but `yarn build` is not catching those.

The changes i made are
1. Create a new file `test.jsx` under the `src` directory with following contents
```
type Props = {
  message: string
}

export function getValue(props: Props): string {
  return props.message1
}
```
2. Call the above function from index.tsx
```
import React from 'react';
import ReactDOM from 'react-dom';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';
import {getValue} from ""./test""

ReactDOM.render(
  &lt;React.StrictMode&gt;
    &lt;App /&gt;
  &lt;/React.StrictMode&gt;,
  document.getElementById('root')
);

reportWebVitals();

console.log(getValue({message: ""test""}))
```
3. Run `yarn build`, its not throwing any typescript errors

Github repo - https://github.com/kanagarajkm/my-app-ts

Any help here is really appriciated. Thanks.",Type checks not working in a create-react-app typescript project
1672,2021-06-30 01:36:48,0,1,"Hey guys, just published my second package on NPM, would be glad if you guys could test and open any issues if it is found:

This is a simple Macro function that would pretty much resemble C macros, so, we would be able to execute a function by passing variables by its reference instead of value(even numbers)  

```js
DEFINE(Increment, (v) =&gt;
{
   return v++;
});

let i = 0;

Increment(i);
console.log(i); //Prints 1
```

Just search for define_macro-loader
[https://www.npmjs.com/package/@hipreme\_entertainment/define\_macro-loader](https://www.npmjs.com/package/@hipreme_entertainment/define_macro-loader)",C-Like macro plugin for javascript/typescript
1673,2021-07-01 05:56:34,12,1," Hi everyone, I want to share with you a project I have been working on in the last couple of months:  
[https://github.com/ivanhofer/typesafe-i18n](https://github.com/ivanhofer/typesafe-i18n) 

With typesafe-i18n  
you can easily translate your application and profit from a variety of TypeScript bindings. Additional it supports **plural rules, formatting of arguments** and only adds **less then 1kb** to your bundle size.The library can be used together with all frameworks in all kind of TypeScript (and also plain JavaScript) projects. So you can use it in your **server-, API- and frontend-projects**.

How does it work? The generator looks at your base locale file, parses all translations and generates the according types for you. When you then call the translation function, you'll get **100% type-safety**. The generator outputs types according to your project's TypeScript version. With the help of [Template Literal Types](https://www.typescriptlang.org/docs/handbook/2/template-literal-types.html) improved types are being generated if you are above version 4.1.x, so you also get errors if you have typos in your arguments or forgot to specify an argument for translations in other locales.

&amp;#x200B;

[typesafe-i18n in action](https://i.redd.it/hr4cf9ocjj871.gif)","typesafe-i18n: a fully type-safe, lightweight localization library"
1674,2021-07-01 12:52:25,2,1,"Hi,

I'm looking for a dev in typescript/CSS/html that is a fan of magic the gathering to finish a project that was abandoned by the previous one.
It's a nice tool to let mtg fan share a visualization of there commander deck by each colors combination with the decklist embedded.

I have the code and screenshots if you are interested :)",Looking for a Typescript/CSS/html Dev for a magic gathering fan made project that is already half done
1675,2021-07-01 18:21:34,4,1,"I'm working on a project that is ostensibly in typescript, but we seem to have decided to leave it up to whomever is coding on how to bundle a set of functions into a ""namespace"".  Is there a best/idiomatic/commonly accepted way this is done in TS?  

We are currently using TS 3.8.0, and our code is node + express + typeorm.

We have a smattering of different styles in different files, and of course the various and sundry ways to get at them; require, import, import {}, import ... as, and so forth.  

What I'm looking for is One Standard Way that VS-Code/WebStorm/etc can do intellisense on it all, and works with TS.  Does such a canonical way exist?

I've seen in our codebase:

    export = {
        function() { ... },
        function() { ... }, 
        ...
    }

    export const Namespace = {
        function() { ... },
        function() { ... }, 
        ...
    }

    export function() { ... };
    export function() { ... };
    ...

    export default {
        function()  { ... },
        function()  { ... },
        ...
    }

    export default class Namespace {
        method() { ... };
        method() { ... };
       ...
    }",[Noob alert] How best to modularize/namespace a set of functions in TS?
1676,2021-07-03 13:14:12,13,1,"I have an interface which defines the properties of a component, but I also want to be able to add any other property when using that component.  
[Here's the playground link of the example below](https://www.typescriptlang.org/play?ts=4.3.4#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wChTgA7GJKTdJOASQGEJqUraAFHMAZzgBvUnDhoAFsAA2AEyKUAXImIwAdMnQwAchFlIA3KPERp0APzLCSWfjgAfAgCNpAVyT4jAX3Jp2-eDYOLig4AF44AAohSRl5JEoAGhMzUIjrW2S1bKIAr2VWdhhOSh4+fgBKcIA+YWMiGFcoSjgAHllgADdxaRR+fm0UECQwoQADJ3QAawBzHFdKWQBaABIY02gvMa9hbLVcmC9qmKk5BS9WgHoOzurSH1I-SgC4AEEwMHCoqrDakTEGk0WpFjGJWkFiiEUtAwvgXO47OwWNJgGgpqNIj9ak9+KYkGozDNIvhkaipjZ8BUjqCxG0wNUAMq4Rg0AAeMCu9JpVwhJVodzEFXuQA)

    interface IContainerProps {
      children: React.ReactNode;
      color?: 'red' | 'blue';
    }
    
    const Container = ({children, color = 'red', ...rest}: IContainerProps) =&gt; {
      return &lt;div className={`background-${color}`} {...rest}&gt;{children}&lt;/div&gt;
    }
    
    const App = () =&gt; {
      return (
        &lt;Container color='blue' onClick={() =&gt; console.log('Clicked')}&gt;
          &lt;p&gt;Some text&lt;/p&gt;
        &lt;/Container&gt;
      )
    }

The `onClick` attribute gives the error `Property 'onClick' does not exist on type 'IntrinsicAttributes &amp; IContainerProps'`.

Thanks",How to handle React rest props?
1677,2021-07-03 15:47:19,0,1,right now I try to use threejs by installing it via npm and then I get this [package.json](https://pastebin.com/SiAUcHVM) \-file. But when I try to run the compiled js-file in my index.html I get this error in the browser: \`ReferenceError: Can't find variable: exports\` I have no clue as to what this means. I'm new to all the js/ts package-managing tools and stuff so I would like to know what I am doing wrong and how I can change it. This is the [script.ts](https://pastebin.com/ZX3qC146) which doesn't throw any errors,How to use threes with typescript?
1678,2021-07-04 15:18:13,3,1,"Hi all,

my first post here, please be kind 😉

I was upset to setup and setup again my boilerplate project each time I would start a new kata or teach on a blank project.

I did a boilerplate with setup done to not be upset anymore and to be able to focus on kata/experiments.

https://github.com/Maeevick/kata_sandbox_typescript

If it's useful for some of you, I will be glad. 
Obviously, feedbacks and suggestions are welcome. 

See you in space🚀, Goblins ! 💚",TS boilerplate for kata
1679,2021-07-04 22:29:02,7,1,"Hello everyone,

can someone suggest an online course that goes beyond the basics I already know (I learned them on the job when the frontend developer of our team was busy with other projects) which is 

* &amp;#x200B;
* writing very basic React components with storybook
* writing very simple functions in TypeScript (mapping objects' properties, using the spread operator, etc.)

Things I want to learn

* How to architect clean frontend applications in React (Architecture Models, usage of things like Redux, etc.)
* All relevant typescript features (classes, interfaces, etc., when to use a class, when an interface - at the moment it seems to be a lot different than in Java but maybe that is a misunderstanding on my side)

I want to avoid buying beginner courses labeled as advanced courses. I want to become a potential lead frontend dev using that tech stack so I need the bigger picture but also know all the tiny things to watch out for which might lead to bad code quality etc.

Which courses would you suggest. Video courses welcome as well as article series",In depth TypeScript and React learning learning
1680,2021-07-05 12:06:31,6,1,"I have to create a nested JSON object from input parameters in typescript. Currently I'm making use of multiple classes to achieve the same. Wondering if there is any cleaner way to achieve this. 

Problem statement :


{
name : ""abc"",
age: 24,
details: {
 address: some random address xjs,
 city: Manhattan,
 country: America,
 educationDetails: {
   class: 5th,
   major: ece 
}
 }
}

I wish to create this as final json from say segregated attributes like an object of type user details with certain keys of result json, and so on.",How to model a nested object in typescript using custom inputs ?
1681,2021-07-05 12:51:19,4,1,,Best online course for apollo server in typescript ?
1682,2021-07-05 14:38:05,2,1,[removed],"Trello clone with Nextjs, typescript, and Chakra UI with MongoDB"
1683,2021-07-05 16:33:27,23,1,"I would definitely expect an error here but i would have expected something like 'number is not assignable to type string' but instead typescript infers this to be of type never. Using the same below without the assignment shows that typescript infers it to be of type string | number. 

&amp;#x200B;

Why would typescript be inferring type never here?

\`

function keyandval(key: 'A' | 'B', value: number) {  
 let data = {A: 1, B: ""1""};  
data\[key\] = 123 as unknown as (string | number)  
 // says type never  
 const d = data\[key\]  
 // says type string | number  
}

\`",Why is type never being inferred here?
1684,2021-07-06 09:47:36,15,1,"My project uses react redux, redux toolkit and this package has some complicated types to make everything work smoothly.

I wanted to inspect the inferred type for my dispatch function.

The only way I know is, to hover my mouse on it, and scroll in that pop up that comes.


Ans there as well, it is truncated where type becomes too long.


Is there a way I can do 

          console.log(typeof variable)

Where it will print the typescript type?

I would like to have the type printed in a file/console to read it better",Can I print the type?
1685,2021-07-06 10:21:24,8,1,"When using TypeScript with React, the first bump in the road is figuring out what type to use for the children prop. That's because there are several different types React provides for this. [This introductory post](https://iskenxan.medium.com/using-react-children-prop-with-typescript-37f6821351bb?source=friends_link&amp;sk=bdfb4935d44d4c48901f717e9f073f7a) covers each of the types you can use and discuss the trade-offs so you can pick the right one for your use case.",Using React children prop with TypeScript
1686,2021-07-06 17:48:18,2,1,"I've been trying to find a solution to this issue for a while now, and I can't seem to figure it out. A [related comment on Stack Overflow](https://stackoverflow.com/questions/64305120/react-and-typescript-how-to-extend-generic-component-props/64306982#64306982) indicated it might just be a limitation of TypeScript's design. I'm more inclined to think I'm just not doing it properly.

TL;DR I'm trying to create a component that accepts a custom renderer prop that allows arbitrary data to be passed in and I'd like the component type to be inferred by the data passed to the renderer function. Both the component and renderer function are generic types.

    // basic example
    // arguments are: label, renderer
    const MyCustomLabel = Label(""foo"", (label) =&gt; label);

    // custom props example
    // arguments are: label, renderer, custom props
    const MyCustomLabel = Label(""foo"", (label, { foo }) =&gt; `${label} ${foo}`, { foo: ""bar"" });

Please see the playground link below for complete details and examples. Would love to understand this problem better.

[Playground link](https://www.typescriptlang.org/play?#code/C4TwDgpgBAqgdgazgewO5wPICMBWEDGwUAvFAEoHIBOAJgDwDOwVAlnAOYA0UAroiugB8AbgBQogPQAqKaKhSoAFQAW0AGbIANprRt2UAET5kAWzDI4EOMAYGoAQyrQLmkFGNx8EMDajBkUBAAHmA6Tn6qfuDQDCBMECYAdHKy8krKLAyBIWH2wCwWUPEmJhA0UGpUplCZDDwQWcGQrFZe5aiqcFCorPkcDlAAslY8AJLACSnupuaW1jVdFPaE3B0s+MoO+F4+WfZQAAaa9lgQmhRwNBBOVAdQYFVgfgH22mjuPEzVx6eaDFP+KCnKBOS7XMoVahQUpwHg1CYmLIACggiXYiSgPzO3RYwE26wsAEpkvIpipoCZ7GwoOxkK8oMg1BFMtlrvhMtAWYC2GprhFoPhPv4TAAFR5RSAMrp46BGGYWKzAAxTSrVGUgqxXG4Aciygq+ovFoEgJNSCgAQsg8QymTKGLLjGYFdZbA5wg17dYWK9XFAaMg9PyivZSsyOKaJOIJNGY1AADIAQXNAFE41AAMIYQYijAAOWTucUUBjMajMjJkTULCoTGmTrmRFU4RZ+zjJ2xcvrirseLyUBwQsMoK1rv2WM0pqm4z89gQDSgAGY3eweDCbAAuTHtzTcYfgqjceyXBk+ApwH1ufXC+6PLKA4GfMpTLBudV7m4RstmqAAMWrtbyBEfAcIh9gMd9rjsNQ+EIM8JWgXtQO2bxfAAJmXVdFQYdcpgARkJLdfimVCCKvUwxWQMBkUo-ILFeQkUkjY1oDbX4Li1a46CLYIJkuLJ4CQNBMFwAgiFIABvABfQQSCgJE5EIs5NyYVgOE4BSyMNSjsKgOcQEZJRsl4mgsksAA3PloxqJkEh8NxkBEwgFKgKAAH4oHMyyJD9CxtSQnYiE0iiqOcqBN0UUQCOIGSVL0MRJHLNIAGVKGPQDbNA0Ch01fcoJg2jpWiDEkpDaB7D2LBkAs7gsB4IhHzvVQpkcFc1z2KgqHsEBP2Y+Nt3Y-dUK4ozNX4-ghOwPBCFkqSZNIeSXMSJaWp0vSDO4oJjNMiALKoUL3IAbXHZTmD0ABdULNyO7cTtUrgPgNYKdMUC6opi06OHiqyrjUeweE0Ihx2ysEbjsFkBwAroWCuL1QAqfKz1EDxax+v6AYGm5N1Ys4Mb5ebjqKD72DexTNHi5GiGxzRZOGnjRtgcb0Em0TBAW0nbr0dSXIgqgsf6nKbi4ua-QgX7-uAXGDwU6Meb5tiBeuIbFGF1HxclrmHuFJ7XPCyKOf6aKNRB64kXHbggtvQlyYsBgtFRHR2CRKmkQMCYmAMQkreLbyHjYXxXYaJUo28zTgY4qge2UPtlgCvZDg0ZA7geSiHDSsBID4oMzNeepJG8wF1TAcr7XKcckZtwKhVMSW5ZxhWqDocTIWQfX9Gk2S2YJ2K1IUpuE6gSTIpIGSDgAEnE8dJKgceE8kg5rbgW3NHt5BHedgwE4Mc2q5MdWoD75AW8MLBHDsSTPeEb2bz9rIN8PoFT+DkshgLGAoFGRRk0GDMsxzfNC29iWL8FZoDDFhOMBIhhHSzG7A4P4AQIZEHAgLUcpMUhTiIMAWc859gMD0MvBkjlQJUFaoqHE1olx6QYKaFyUB8JoLSC5EipNJZyRomeV4NU6pQCjnHVWAMoDZ00PUBi8hIyiF6mAsYCJzTlQgE9GaCku5EzEJJL6+dIg8xpBAXw6oT72hvNpVO5QjyXh3oYkKkiRgQJMFTSWT1aabXpgJAQwkppiX3u3UgRYABkCkpE2NkfaJ66iH4GOTlRKAABqTW1QIlZBieOSWEjohDGsQiBxG0toM0EkzIhwsAkIjsfXTJMkfH7yUfzY2VAdZyRagABk3IUhIxTqmlJJt3dgqjQn8MBtuMOuV+yPg1MAHgVBF5BiLgwEuaCKYizFgDZptiqnhw7k3IGkkmnpJaSs-cT03qVN+F9RKChRhdGoFqSEVAgzMTvAEVA1AEA8PBNvR6t5oSDmBMYNkEJASKBoRgGUVBUAcm4ECsq4R2BWGuOsaYi9mBUnmLUeo1CpggPCI4GI+RtA1GmSi8hmx1TGkDE2CAh445JPrgSjyyApih3iXAnQqA9hwBAHiQM95oBTJmdScqhwpJ3FIKYtFyVkBgtJW6aA6FkXzkBEvCyzynA4UYXQgiILrQoFiSYCxWQHgNEVNwf0cA-KMveI4LAuJOpUDcFQ54QIuXFyfCq5hULLCsHwHClSiKiCZGNUQaC2g3AMDyJkKsTqpCRjmUsmmWTnGMzcSzJE4lDl12qbJXpSzWnhw1mbBSS1EgW20qITZaTwEZNvELEmybuY6LGV0Sl1Sk2hVzbQ72haqIa0WktJESJ217CyHwXJcACJ8sUISbgVkOhuC5BkbaXhpmOBAK5BS59unBxpCwCy0oo6YM0VS3qrqYUet6Xc-lc82HXNMeOoM0aQXaDzlsAKqc3CwhMKca5BkqHl0XnbRIDskRLKTc3TcBgT4Rxqo4EDJ8ABeW92aGDdkqAeF8r6+xdAhwOyoH2h2QdUyO0dkK7AGKHA4Cck7iiPCY9O9N1RCNzlZAukRuUQjLnMzSmbdk3DWSmncCkE7qRLRx+WbSK0HyPp0geggSZjwntuKeM9D5z1CfYGgNBcQcOprazFNKiDNBMLiCY5RSXfqXivR2-jtkmCba2gmd9kBb2bZx64m52OWazfuTtwHj6n081ZMDUH7CwagHQAAtGF5kWQ73UycHUARvL4KBA6tQFdDEvZWTQ-7fuYHlRAA)","Is this a limitation of TypeScript, or my knowledge? (Generic Constraints)"
1687,2021-07-06 21:35:51,0,1,,How to use typescript with useReducer
1688,2021-07-07 13:25:37,18,1,"I want to learn detailed typescript without knowing any JavaScript, i am learning typescript for angular and react, any course you share would be appreciated, most courses i found on youtube need some level of JavaScript","Hey, I am looking for a tutorial on Typescript that doesn't require any knowledge on JavaScript"
1689,2021-07-09 14:15:38,12,1,"I have a class like the following

```ts
class Test{
    a = 123
    constructor(){
        return new Proxy(this, {
            get(target, name){
                if (name in target) return target[name]
                return {
                    b: 456,
                    c: 789
                }[name];
            }
        })
    }
}


const test = new Test()

console.log(test.a)    // 123
console.log(test['b']) // 456
console.log(test.b)    // Property 'b' does not exist on type 'Test' ts(2339)
```

and I want to make the class typesafe by providing the following interface 
```ts
interface proxy_i{
    b: number
    c: string
}
```

is there anyway to do this?",making a typescript class with Proxy typesafe
1690,2021-07-10 18:52:03,0,1,[removed],"""--isolatedModules flag"" in typescript"
1691,2021-07-10 21:49:36,15,1,Playground [here](https://www.typescriptlang.org/play?#code/KYDwDg9gTgLgBAYwgOwM7wMoHkBKAVAfQDEBJAUQBkARDOAXjgG0ByMKASwWGYBo5mAnsACGUXvwC2wgNbAxfZsIBuw9gBthAIzXAiUCBOYBdOMNSIU6ANwAoGzAFhgcPAFcwOvBACqydigAePDhQGGBkABNzHBEIlDUBAEEoKGEBAOFkAQA+bPoXEJAwyPNGGzg4dmQAMzk4AAlYnnK4ADp2qtqoF1U1GyMWgH4G2LgAHxd3Tx8-QLxe7JaALjhkYCU5W3tHZzcPYABGfJY2Tm4FIVFxZilZeX5lXq0dPQNjWwcnSf2AJnzP4AQapwbD4YjkagYLYAlzAdBHBh7aa+fzIIJTQ7ZD47WHoP6IjFeFFzDE-LF2AD0FLgAHV6gBNOAkWh4OEwI4AQkRbL+cEGHLgS2YAAogA),Can anyone explain this one?
1692,2021-07-11 00:32:02,0,1,"I am currently learning typescript and using it with vscode. I created a launch json file and I want to include a directory in the ""program:"" so I can debug any file that is inside that directory. If I run the the  debug, it doesn't run the debugger at all.  

Here is my launch.json file: [https://pastebin.com/DnbahP15](https://pastebin.com/DnbahP15)

Here is my tsconfig.json file: [https://pastebin.com/BZ0dnsTt](https://pastebin.com/BZ0dnsTt)",How do I include a directory in launch json file?
1693,2021-07-11 09:13:09,9,1,"Hello! I'm new to typescript, and I'm struggling with one thing currently.

Using the Prisma library, I can generate some types, useful for my NextJS project. From those types, I have one field which is a relation to another model through an ID. I would like to be able to add not only the ID, but the whole object from the related model. So in other words, I want to add a new property to the generated type. Since those types are generated by the library, I can't just go inside the \`node\_modules\` and add it, I need a more.. perennial way I guess \^

Can you help me understand how I can achieve this, please? I would be very thankful!

For the example:   
My type is Workout:

      id: number
      movementId: number
      repetitions: number

And I want to add a field so it looks like this:

       id: number  
       movementId: number
       repetitions: number
       movement: Movement",Trying to add a property to types generated by Prisma library
1694,2021-07-11 16:12:25,24,1,"I want to be more competent at developing javascript, especially for browser apps. This includes the wider ecosystem, not just the language. I'm more comfortable in backend programming (python, R, java, C++, ..). I joined [r/learnjavascript](https://www.reddit.com/r/learnjavascript/), but I felt that answered micro questions (difference between == and ===), not the big stuff.

**How did you level up your javascript game?**

**Do you remember particular moments, choices, tools, blogs?**

Below is a number of things I think make javascript programming a hellscape for me. Also, perhaps I don't know what I don't know.

* Debugging in the browser is awkward. The web page takes up most of the room, the chrome debugger is less than one quarter of the screen. Changing the web page size can change behavior. I'm also not good at it.
* I don't know a good javascript IDE well. No auto-complete. I installed vscode, but don't know it well.
* Hard to set up unit tests for in-browser functionality. (Presumably there's a mock browser somewhere?)
* Many libraries (packages, plugins) seem to have no unit tests. (Examples: [editor.js nestedlist component](https://github.com/editor-js/nested-list), [summernote map plugin](https://github.com/maiyaporn/summernote-map-plugin), ..)
* Using selectors (e.g., jquery) fails silently. Sometimes the only way to find the right selector seems to be to try things at random. Example: I tried to use [clipboardjs.com](https://clipboardjs.com/). I set up the example and .. the button just didn't work. It's not clear how to debug something that just doesn't hook up.
* Javascript errors can be arcane. Undefined symbols because of version conflicts or insufficient webpack config, or different jquery versions.
* webpack is hard to truly understand.
* webpack-generated source is hard to read
* There are many different versions of javascript/typescript, and the tooling, and blog posts are often describing a version I don't have. Example: I once spent a couple of hours on a crazy error message, and it turned out the easiest thing was to remove 'type=""module""' and transpile out of typescript. Ugh.
* Popular tools change fast, so many documented things are losing momentum. (jquery?)",[AskJS] How did you level up your javascript game?
1695,2021-07-12 23:21:14,1,1,"[TypeScript 4.4 Beta Link](https://devblogs.microsoft.com/typescript/announcing-typescript-4-4-beta/)  


For me, the Control Flow analysis would be great to see if it can help and reduce a bit of redundancy and help clean the code a bit.",TypeScript 4.4 coming out soon!
1696,2021-07-13 09:47:49,29,1,"Hi,

[Here is a playground with my issue.](https://www.typescriptlang.org/play?ts=4.4.0-beta#code/PTAEEFQZwSwWwA4BsCmoUA8CGjWgO4wAuAFgPYCuRoA5igHYoBOMAxlAFAcz1HMBmWVmnBJ8WAJ5QAyhPqtQAbw6hVofvQAUASgBcoAG5kYAEwDcHAL5dWSLFCgQxkmXNYBJXCjih4ybwxEjqLiUrLySipqIKDAAIQAOqAAKiQwjlDkFEgmoABGaFj06ExMZExxUaoIFHlIbKD2bupaeqAACmVw6SgAPEamAHxK1tZcXDGQsLgw-GxYRDBkxWT8oHASjaxEFFhIoKz2KAA0BMQk69mL-r5ecIELS-SORGSgXDx8TILCoACykgK4Cgbl6wOamD49BMjjyZDIqCKw2UanWgJQ4PkADEKPJFssdPpMQpIQwYaAiEwKGgAPwdLo9frGEzDfQDcxWGx2BwQEHyTz+Hx+VD3XiOAESIF81i9SnU5FVUA1OoNJoRODo4k4vFPQn0sjdKB9dnI0Zc+zBaUCkUAJlugsC4s10tlVJQCtRMVS6V8jiKJTKTFO9nQGAQKG2KBMiuV9QUGslGOl2u2ura7JGnI4tgtoHCHju9pFjv+ztBgiQRo9aljDQTUrcKfxrTZzMzYxzPPz1u8duFATFpcTxN6FarkU9YHiSW9GSyOUalbeBUaxWYgbiKTSjh9pDQhyNFJIC1A7lAJmWAHJqLiTMwoEQitHUbWFGr42XsbjUwS2p0DYyJrtuaXZuD2cAAMxFgOQRDg28ijns44otEYCzr6q4BuUwaOJg4aRuYvjUEwKB7EgmxIPCADWjj1FRaB7r6UDUhhhCkOo37No4d45iRuRsRcjHvqA9ESPg5TPjWtRxmiw7Jpxab6P+hrGsypqckAA)

In short, I'm trying to understand why `public async func(): Promise&lt;void&gt; {}` is a valid implementation of an interface method declared as `func(): void`. If I remove the `async` keyword from the implementation, I get a TS error as I expected, but with this `async`, TS ignores the fact that my function does not respect the interface definition...

Is this a bug? A design decision? I'd love an explanation for this. Thanks for your help.",async function returning Promise&lt;void&gt; successfully implements an interface expecting a void return type?
1697,2021-07-13 14:21:23,2,1,"What's a good framework to use for developing a simple store application? I'm a C.E student and my final for this semester involves developing an application similar to a online store, but I've never used a framework before; this is also my first time using typescript. Any recommendations?",Framework for Store Application.
1698,2021-07-13 20:35:49,0,1,,Working with object in typescript
1699,2021-07-13 20:44:55,0,1,,Use mongoose with typescript
1700,2021-07-13 20:45:29,0,1,,Use mongoose with typescript
1701,2021-07-14 06:29:34,7,1,"We're using sequelize-auto (not my decision..) which generates Sequelize models given our DB. Its typescript generation has its flaws (could be flaws on Sequelize's as well, not sure) causing it to generate a file which works fine but gives 1-2 typescript errors. Because it's a generated file I have to make sure to add ""// @ts-nocheck"" on top of the file every single time it's generated which is easy to forget and you end up pushing a commit that doesn't compile. Is there any other way to exclude this file from being checked that doesn't involve adding that line each time?",Disabling type checking on a specific file without // @ts-nocheck
1702,2021-07-15 09:25:01,2,1,,What is the colour scheme used in typescript docs?
1703,2021-07-15 15:39:18,6,1,"I have been teaching myself how to create web components using typescript &amp; while I have been able to formulate a library of files &amp; functions that are commonplace for me, I was wondering how I could make myself  something similar to reacts 'create-my-app' cause I know it should be possible &amp; probably less fiddly.",making my own 'create-my-app' command line tool... but how?
1704,2021-07-18 14:46:07,4,1,[This brief post](https://iskenxan.medium.com/typescript-five-most-useful-utility-types-for-react-65c849ebad0b?source=friends_link&amp;sk=ba4411c852e5ee6ebe9f5376e175c7a6) covers five TypeScript utility types practical in React applications,Five most useful utility types for React
1705,2021-07-19 13:05:54,2,1,"Hello,

I have a typescript class, which has some property: id, name etc...

  
In my next app, I'm instantiating my class, which calls the constructor() and set my properties to their default state. This instance is then set as the default value of a state. 

Later on, when I call a method from that instance, which is supposed to validate his properties, those properties (id, name etc...) are still at their default state, even though if I log the instance, I can see 'name' has been updated for instance. 

I'm definitely doing something wrong, but I am struggling to understand what :/ I feel like the method inside the class is called before I'm calling it somehow, not when I want it to be called but when I instantiate it, so for that method, the properties will never be updated :/ 

Hope my question is clear enough, sorry if it's confusing and thanks for any help you can provide!",Can't get value of an updated property in a class from a method inside that class
1706,2021-07-19 23:22:52,0,1,"Please have a look at this code ([TS playground](https://www.typescriptlang.org/play?#code/C4TwDgpgBA6glgEwgOwDwBUA0V0GUB8UAvDrlBAB7AoIDOUA2gLpQD8UyEAbhAE5QAuAFBRRY8RIl5yVGvQZxkAMz5QAGtgB02gBSKV-NbgCUTEZIuXR7HehnVkddW2cDYiFBmxH8x81YCxN04eXgBuIVBIHHAIWnQAVzAAG2gSBmQEgFsAIz5sWmBeRQBzJgio6HRY+hJqyHik1IzsvN5yyNj3JGQAOVwMQhJ4Hq8YhsSUiHwIoQBjZIBDWnoAMQBxAHtNhAx7OXG47BhibpR+wcIAb38oOc3kQt4EueBN3h1gNxhsJTcdAD632MxEIMBBVwAvkJoQtlmstjsAExjE7DDx9AbofDXW73R5FF5vD5fWC-f5A2AgohgiHQ2FLFZQVYAIUWuzslAcTnqcVx4nxTyJ70+3wxF2x5KggLFPQlvlBZ0xgzpMPmjLWbIQKOxUBuAoeQteItJI3OWPwUplSvl1LB4otquhnWiAHkANKnM3KzK5VQAHygT1KMyEQk4AHdmYiEDoAGzYCiKpMAaigSOMYUCAHps9Htrtg8gSlBA762thy3x8OGIFGNgWkfHE8moGmM1mrLn88jUAlkABrZCbCPISutau1+ta5tQJM0udt9OZwJQbus9moIslssT3g1yPMrVNhOLhep5edrt5jfavuD4ejg91o-slFx-Cz+eEC8dyzr49UA-IQgA)):

    type Widen&lt;T, TS&gt; = TS extends [] ? never :
                        TS extends [infer X, ...(infer XS)]
                            ? (T extends X ? X : Widen&lt;T, XS&gt;)
                            : never;
    type TypesTuple = [number, string];
    type Types = TypesTuple[number];
    type WidenNS&lt;T&gt; = Widen&lt;T, TypesTuple&gt;;
    
    class FGood&lt;T extends Types, W = WidenNS&lt;T&gt;&gt; {
        constructor(t: W, f: (_: W) =&gt; W) {}
    }
    class FGood2&lt;T, W = WidenNS&lt;T&gt;&gt; {
        constructor(t: W, f: (_: W) =&gt; W) {}
    }
    class FBad&lt;T extends Types&gt; {
        constructor(t: WidenNS&lt;T&gt;, f: (_: WidenNS&lt;T&gt;) =&gt; WidenNS&lt;T&gt;) {}
    }
    class FBad2&lt;T&gt; {
        constructor(t: WidenNS&lt;T&gt;, f: (_: WidenNS&lt;T&gt;) =&gt; WidenNS&lt;T&gt;) {}
    }
    
    type OK = WidenNS&lt;number | string&gt;;
    
    new FGood(6, x =&gt; x + 2);           // FGood&lt;string | number, number&gt;
    new FGood2(6, x =&gt; x + 2);          // FGood2&lt;unknown, number&gt;
    new FBad(6, x =&gt; x + 2);            // FBad&lt;string | number&gt;
    new FBad2(6, x =&gt; x + 2);           // FBad2&lt;unknown&gt;
    new FBad2&lt;6&gt;(6, x =&gt; x + 2);        // FBad2&lt;6&gt;

I use Widen to convert `6` into `number`, i.e. literals into more general types.

The difference in behavior between `FGood` and `FBad` is surprising to me since it breaks reference transparency.

Also, why is `T = unknown` in `FGood2` and `FBad2`? I think that `unknown` causes `T` to be `number | string` instead of just `number` in `FGood` and `FBad`.

Evidently, I have no idea how TS does type inference.

I hope someone can shed some light on this issue! In the end I got it working, but I'd like to know why it works.",Referential Transparency in Types?
1707,2021-07-21 22:45:53,14,1,"What is the best way to share typescript code between a node.js backend and the frontend?

&amp;#x200B;

I am working on a project using node.js and express written in Typescript. Structure of the application is loosely based on [https://github.com/Microsoft/TypeScript-Node-Starter](https://github.com/Microsoft/TypeScript-Node-Starter). This is not a SPA, Pages are mostly static server-side rendered from pug views. I have some Typescript code for the frontend which gets copied to the public directory and compiled.

&amp;#x200B;

There is a form on one page that I do a lot of validation on in the backend. However, I would like to replicate some of that validation in the frontend so user can get instant feedback as they fill out the form.

&amp;#x200B;

How can I structure my code so that I could import it into both my backend and frontend? Do I need to use a bundler for the frontend?",Sharing code between frontend and backend?
1708,2021-07-22 15:57:22,0,1,"I'm writing an ASP .NET core app that will use Typescript. Rather than NPM, I would like to use libman to manage dependencies to simplify things (not having to introduce a task runner to copy js files mainly). My issue is, without NPM, I'm having trouble getting the typescript compiler into a state that it recognizes the type definition files.

I've distilled my issue into a pretty basic repository (at the bottom of the post). I have a main.ts file that simply imports a single library I've installed via libman. After restoring packages, my project structure looks like:

&gt; libman.json

&gt; main.ts

&gt; tsconfig.json

&gt;lib

&gt;&gt; list.js

&gt;&gt;&gt; list.js library files here

&gt;&gt; types

&gt;&gt;&gt; list.js

&gt;&gt;&gt;&gt; list.js type definition files here



In my [tsconfig](https://github.com/ptsoccer/TypingsTest/blob/WithRestore/tsconfig.json), I have

`""typeRoots"": [ ""./lib/types"" ]`

set, which to my understanding should cause tsc to look there for type definition files.

Interestingly, in the output of tsc with traceResolution on (it's already turned on in tsconfig), I see:

&gt;======== Module name 'list.js' was successfully resolved to 'F:/TypesTest/lib/list.js/src/index.js' with Package ID 'list.js/src/index.js@2.3.1'. ========

and

&gt;======== Type reference directive 'list.js' was successfully resolved to 'F:/TypesTest/lib/types/list.js/index.d.ts' with Package ID '@types/list.js/index.d.ts@2.3.1', primary: true. ========

So to me, this looks like it should work. However, the actual compiler output gives me:

&gt;main.ts:1:23 - error TS7016: Could not find a declaration file for module 'list.js'. 'F:/TypesTest/lib/list.js/src/index.js' implicitly has an 'any' type.

Which is obviously indicating that it didn't link the type definitions with the actual js module.

I've been researching this for a while now, and am unable to see what the issue is. Even more confusingly, if I copy the types directory into a new directory ""node_modules/@types"" at the root of my project, everything compiles. [According to the documentation](https://www.typescriptlang.org/tsconfig#typeRoots) Specifying typeRoots should cause tsc to not even look at ""node_modules/@types"" unless I include it in typeRoots as well (which I don't).

`tsc --version` outputs
&gt;Version 4.3.5

Thank you for any assistance

Repos:

[Before libman package restore](https://github.com/ptsoccer/TypingsTest/tree/master)

[After libman package restore](https://github.com/ptsoccer/TypingsTest/tree/WithRestore) (if you don't have libman)

[With node_modules](https://github.com/ptsoccer/TypingsTest/tree/WithNodeModule)",Type definition file resolution confusion
1709,2021-07-22 19:35:06,9,1,"I've been beating my head against the wall with this problem.

I have two node.js packages containing type declaration files.
I have a namespace declared in package `a` that I would like to reference in package `b`.

## Package A

**index.d.ts**
``` typescript
declare namespace foo {
    export interface A {}
}
```

**package.json**
``` json
{
  ""name"": ""a"",
  ""version"": ""1.0.0"",
  ""description"": """",
  ""main"": ""index.js"",
  ""types"": ""index.d.ts"",
  ""scripts"": {
    ""test"": ""echo \""Error: no test specified\"" &amp;&amp; exit 1""
  },
  ""author"": """",
  ""license"": ""ISC""
}
```

## Package B

**index.d.ts**
``` typescript
declare namespace bar {
    const A: foo.A;
}
```

**package.json**
``` json
{
  ""name"": ""b"",
  ""version"": ""1.0.0"",
  ""description"": """",
  ""main"": ""index.js"",
  ""scripts"": {
    ""test"": ""echo \""Error: no test specified\"" &amp;&amp; exit 1""
  },
  ""author"": """",
  ""license"": ""ISC"",
  ""dependencies"": {
    ""a"": ""file:../a""
  }
}
```

## Error

```
$ cd b
$ npm install
$ tsc --noEmit index.d.ts

index.d.ts:3:14 - error TS2503: Cannot find namespace 'foo'.

3     const A: foo.A;
               ~~~


Found 1 error.
```

How get I get package `b` to see the `namespace` declared in package `a`? Here's a repo with the code https://github.com/icholy/typescript_problem_example",Help: TypeScript cannot find namespace in Node.js dependency
1710,2021-07-23 12:44:34,1,1,"In [this](https://kainlite-32799.medium.com/custom-kubernetes-operator-with-typescript-javascript-b69df89131fd?source=friends_link&amp;sk=88d45921705fa37f8979dd9d6b60f3a0) article we will explore how to create a sample operator using typescript and to deploy it to our cluster, the operator will be pretty dummy in the sense that it will only deploy some resources based in a CRD, but you can customize it to do whatever you might need or want, the idea is to get an idea of all that it takes to do an operator outside of the magic land of Go and kubebuilder.",Custom Kubernetes Operator With TypeScript (JavaScript).
1711,2021-07-23 19:50:22,0,1,I usually use criterion for testing in c but since recently had to do some typescript stuff I learned about testing in jest. It has this nested approach with `describe` and `it` blocks which read really nicely when you run the test suite. Is there a similar library in C?,Is there a jest-like testing framework for C?
1712,2021-07-25 05:39:02,3,1,"I’ve been writing typescript code for a few months now. I am trying to make my code more readable. To do this, should I include header comments for every file that executes a specific function? If so, what should these header comments include?",[AskJS] Header Comments in Files
1713,2021-07-25 16:17:03,107,1,"I just graduated with my CS degree last year. While I did some functional programming, most of my courses involved a strongly-typed language (C++, Java, Python 3 used with types, etc).

It wasn't until my first (and current) gig that I really dove into a language like JS and I must say, I'm preferring it AND struggling to find a solid reason to go back to a typed-language (i.e. adopt TS). 

Hopefully those answering could lay aside personal preferences and the 'little things like better IDE support' and answer the very pointed question - 'Have (and how have) strong types ever saved you from a nightmare'?",Has typescript ever REALLY saved your project?
1714,2021-07-26 08:18:45,4,1,"Hi Peeps,

I developed / am developing a library to generate mock data and fixtures using typescript. It's already quite developed and I have been testing and tweaking it in the current project I am working on (using both NestJS and React with TS). It would be great if some of you would like to check it out, and I'd gladly answer any questions! Here is a link to the brand new docs site (using docusaurus): 

[https://goldziher.github.io/interfaceForge/](https://goldziher.github.io/interfaceForge/)",Interface-Forge: TS Mock Data and Fixture factory
1715,2021-07-26 13:06:32,13,1,I am thinking about creating a discord bot in typescript. I want to write the code based around OOP. What are your thoughts on this? Is it a good or bad idea? What are the advantages/disadvantages of this?,[AskJS] Object Orientation in a Discord Bot
1716,2021-07-26 17:23:30,43,1,"I'm currently trying to push the rest of my team towards TS, so yesterday I asked the question of [Has Typescript ever REALLY saved your project](https://www.reddit.com/r/typescript/comments/orehf3/has_typescript_ever_really_saved_your_project/)?

I received lots great responses but (because I didn't ask) very few spoke about the problems/pitfalls of TS. 

Quick google searches show issues but I would prefer to hear from the supporters of TS. What has been a pain-point of TS and how did you overcome it?

It's not your fight, but my team is NOT taking the bait of the (understandably) biased answers. I could really use some opposing-team arguments and the reason they fall flat.",Why should I avoid Typescript?
1717,2021-07-26 18:56:26,1,1,"I made [an online compiler](https://jarble.github.io/typescript-to-zig/typescript_to_zig.html#function%20add(a,b):number%7B%0Areturn%20a%20+%20b;%0A%7D%0A%0Avar%20an_object%20=%20%7Ba:1,b:2%7D;) that translates a subset of TypeScript to [Zig](https://ziglang.org/). It's still a work-in-progress, but it can already translate some simple JavaScript functions like this one:

`function add(a,b):number{`

`return a + b;`

`}`

`var an_object = {a:1,b:2};`

This is the compiler's output:

`fn compiled_add(arguments:anytype) f64{var compiled_a=arguments[0];var compiled_b=arguments[1];return compiled_a+compiled_b;}var compiled_an_object = .{.compiled_a=@as(f64,1.),.compiled_b=@as(f64,2.)};`",Compiling TypeScript to WebAssembly using Zig
1718,2021-07-26 22:33:38,4,1,"Hi.

I was wondering if it makes sense to learn and practice typescript without relying on framework. I thought about learning typescript along with react but it seems too big and feature rich for hobbyist like me who just want to add simple web application / demo on my personal website for fun.

Given that I know rudimentary level of HTML5/CSS and how javascript interact with DOM, do you think it makes sense to port simple things like simulator (I like poker and gambling in general so I have few things in mind) or games that I already wrote in python to typescript? Has anyone done something similar?

Thanks",Practising typescript without framework?
1719,2021-07-27 01:45:46,7,1,,"Trying to convert a node express project to use typescript, how to go about it given that many of the dependencies don't support typescript"
1720,2021-07-28 06:31:13,2,1,"So as the title suggests, I am struggling a bit here.

I have a couple of older VueJS projects and would like to leverage TypeScript. The projects have a fairly good separation between VueJS specifics and core application logic. The latter resides in pure vanilla JS-files.

My gut tells me that it should be trivial to convert the vanilla-js files into TS but so far I have nothing working.

I tried fiddling around with my tsconfig.json and babel.config.js with not much luck. I also installed  `@babel/plugin-transform-typescript` following an online tutorial. It did......*something* because the unit-test errors now look different. So I feel like I'm getting close. But I'm also not sure whether using this plugin is the right way to go considering that this babel-plugin is already a year old.

The thing that puzzles me is that the unit-test error points right into the middle of a string-value saying ""Unexpected Identifier"". I assume that this is an issue with the transformer in use.

What am I missing? And, what are the ""necessary and sufficient"" steps to support a single TS-file in an existing VueJS project?

All I did so far was:

* Take an old plain VueJS-2 project
* Add a new TS-file with a unit-test file
* Install the babel-plugin
* Add a tsconfig.json

The tsconfig file:

```
// tsconfig.json
{
  ""compilerOptions"": {
    // this aligns with Vue's browser support
    ""target"": ""es5"",
    // this enables stricter inference for data properties on `this`
    ""strict"": true,
    // if using webpack 2+ or rollup, to leverage tree shaking:
    ""module"": ""es2015"",
    ""moduleResolution"": ""node""
  }
}
```

The error-message I get:

```
 FAIL  tests/unit/tagging.spec.js
  ● Test suite failed to run

    /workspaces/schmackhaft/src/storage.ts:2
        urls: { [key: string]: Set&lt;string&gt;; };
        

    SyntaxError: Unexpected identifier

      1 | import {UrlStorage} from ""@/storage.ts""
      2 |
    &gt; 3 | describe(""Tagging"", () =&gt; {
        |                ^
      4 |   it(""adds tags to a new URL"", () =&gt; {
      5 |     let storage = new UrlStorage();
      6 |     storage.addTags(""https://example.com"", [""tag-1"", ""tag-2""]);

      at ScriptTransformer._transformAndBuildScript (node_modules/@jest/transform/build/ScriptTransformer.js:537:17)
      at ScriptTransformer.transform (node_modules/@jest/transform/build/ScriptTransformer.js:579:25)
      at Object.&lt;anonymous&gt; (tests/unit/tagging.spec.js:3:16)
```


The TS-File I added:

```
class UrlStorage {
    urls: { [key: string]: Set&lt;string&gt;; };
    constructor () {
        this.urls = {}
    }
    addTags(url: string, tags: Set&lt;string&gt;): void {
        if (!(url in this.urls)) {
            this.urls[url] = new Set()
        }
        tags.forEach(tag =&gt; {
            this.urls[url].add(tag)
        })
    }
    getTags(url: string): Set&lt;string&gt; {
        if (!(url in this.urls)) {
            return new Set()
        }
        return this.urls[url];
    }
}
```

The unit-test file:

```
import {UrlStorage} from ""@/storage.ts""

describe(""Tagging"", () =&gt; {
  it(""adds tags to a new URL"", () =&gt; {
    let storage = new UrlStorage();
    storage.addTags(""https://example.com"", [""tag-1"", ""tag-2""]);
    let result = storage.getTags(""https://example.com"")
    let expected = [""tag-1"", ""tag-2""];
    expect(result).toEqual(expected);
  });
});
```",I am struggling with using TypeScript in an existing VueJS project with unit-tests. Is it possible to *add* TS-files after the project was created?
1721,2021-07-28 14:05:12,3,1,"Is it possible to avoid unions from being ""distributed"" when they go through a conditional ?

    type Promisify&lt;T&gt; = T extends Promise&lt;any&gt; ? T : Promise&lt;T&gt;;
    // PromisifiedUnion is now Promise&lt;string&gt; | Promise&lt;number&gt;, while I would want it to be Promise&lt;string | number&gt;
type PromisifiedUnion = Promisify&lt;string | number&gt;;

I first encountered the issue with the `boolean` type which was distributed as `true | false`, I resolved the issue by treating this case separately (`type Promisify&lt;T&gt; = T extends boolean ? Promise&lt;boolean&gt; : (T extends Promise&lt;any&gt; ? T : Promise&lt;T&gt;);`), but I have no idea if there is a generic solution to this problem which would work with unions.

Thanks for your help!

[Playground](https://www.typescriptlang.org/play?ts=4.3.5#code/C4TwDgpgBACgTgewLYEsDOKBmIA8AVAPigF4o8oIAPYCAOwBM1ZFU0IcBDWkIgfjKgAuZsnTtCAbgCwAKFCQRrLCgj0AqrRQJaJReiy40wOCloBzKAB8otAK5IARhDgFpMgMbajUMCzHD4UQxMFXVNbV1aCAB3PTYcIxNzKxt7JxcACjgIJmIibLQMgAYAShK3IA)","Avoid type union ""distribution"" in conditional type"
1722,2021-07-29 02:01:34,12,1,"Have you ever wanted to create a vscode extension with python but thought it wasn't possible?  
Well it's now possible with [vscode-ext](https://github.com/CodeWithSwastik/vscode-ext).

It lets you use python to its full potential (use any libraries and packages) and you can even publish extensions generated with vscode-ext just like you'd publish any extension.  


For people who have previous experience creating extensions with typescript or javascript, now you'll no longer need to edit your package.json everytime you add a command because vscode-ext does it for you!",Creating VSCode Extensions is now possible with Python!
1723,2021-07-29 02:47:55,0,1,[removed],typescript-field-validation
1724,2021-07-29 04:12:08,10,1,"This rule come from **typescript-eslint**, I like to use them in my typescript project. But this rule does not make sense to me.  
TS can infer the type of exported function and class even better than me do it manually, so why should I don't let the type be infer base on the code I write ?  
I usually don't like to turn off rules because it feel like cheating and go again the purpose of install eslint from the first place.",Does explicit-module-boundary-types rule even needed ?
1725,2021-07-29 04:28:34,0,1,[removed],Package review: typescript-field-validation
1726,2021-07-29 20:16:48,7,1,"I'm trying to create a function that validates an animal feeding plan at type-checking time. It accepts a map of animals to their possible foods and a list of meals of the form (`{ animal: 'tiger', food: 'meat }`). All data is completely static and known at compile time. So far I came up with the following ([playgorund link](https://www.typescriptlang.org/play?#code/GYVwdgxgLglg9mABMApigJjMBzACgGwEMwAeAKEUsQEEwYBbQ-AZwBpEKqBZFJ5xFAA8oKMOn4BvRMQZMAXIgDWKAJ5xgNOoxbtgcOOgUB+E4gC+AbQC6ZAHwAKOAAdYCZgqkzt7zbJ2J6XhYFHj5zAEpECU5KACcUKBBYpGdXMGYAbjIzMjIAN0JYxCciJABeZDRMHAJie2iqaS0+DxjGxFhsFFiFCwByQMIoPqtWNsaAI14exH7gGGYACz72PsWEVRGx9qoAdzh6CaHevuxYwmZmFcQ+2P0oK5tGs22qQeDZ8aoAem-EABVFihmChpPFpPh8IgIHBYvFoF9KJ5mvgFH1Ot1rnoDGjBsNzK8dsi-GipoUsfpDDd5ks+gTEVEmiSbvtDkMKTibmcLld6TskUztGjWUdhrpKWi7nAHnSXrl+YhfogAJJgAr4GDoZCU7VFMmxBlKrggZhQRCLQh5UHEARw2HSM0AIicWF4ThKKEdDOJQpu+o5VL6LrAbo9srGhr+qvVmsFTEQYEIgUjiGNpvNlutSG6dyKQ0QjphahEXoVPvkNyL0pQAeFFpEVti4baNjM4QyQA)):

    function feedingPlan&lt;
        Animals, 
        Meals extends { animal: keyof Animals, food: ??? }[]
    &gt;(options: { animals: Animals, meals: Meals }) {
        return options;
    }

    var plan = feedingPlan({
        animals: {
            tiger: ['meat'],
            bear: ['fish', 'honey'],
            wombat: ['grass', 'roots']
        },
        meals: [
            // These are all correct
            { animal: 'tiger', food: 'meat' },
            { animal: 'bear', food: 'fish' },
            { animal: 'wombat', food: 'grass' },
            { animal: 'wombat', food: 'roots' },

            // Invalid food for bear
            // Must have an error at ""pineapple""
            { animal: 'bear', food: 'pineapple' },

            // Invalid animal name
            // Must have an error at ""coyote""
            { animal: 'coyote', food: 'whatever' },
        ]
    });

Notice the `???` in the type definition. I don't know what to put there.

I kinda can solve this using mapped types (`something extends somethingValid ? something : never`), but this will give me horrible errors and highlight the whole object as invalid if a mistake is made. Another idea is to have overloads for every possible number of meals, but this feels like a wrong approach and would require dozens of type variables:

    Animal1 extends keyof Animal, Food1 extends Animals[Animal1][number],
    ...repeat 20-30 times...

My goal is to make the error reporting somewhat ergonomic. In my example I want to have errors at ""pineapple"" and ""coyote"", but not in other unrelated parts.

Is there a sensible way to achieve what I want without changing the shape of the data too much? I feel like the new tuple types can be useful. but I'm not proficient enough with them.

Thanks!",Type constraints on each item of animal feeding plan?
1727,2021-07-30 06:35:45,13,1,"My previous post was all about my frustration with TS.

This time I'll still complain a little, but offer a solution as well! :)

#Disclaimer

What follows is a **POC** (**P**roof **O**f **C**oncept). I'm not suggesting you should do this in production code, but I'm not saying you shouldn't either.

#DRY in Type Programming

**DRY** is short for **D**on't **R**epeat **Y**ourself, of course, and it's nothing new, but this time I'll apply it to *Type Programming*.

## IterableArgs

Have a look at this simple *type code*:

    type IterableArgs&lt;IS extends Iterable&lt;any&gt;[]&gt; =
        IS extends [] ? [] :
        IS extends [infer I, ...(infer IT)]
        ? I extends Iterable&lt;infer A&gt;
            ? IT extends Iterable&lt;any&gt;[]
                ? [A, ...IterableArgs&lt;IT&gt;]
                : never
            : never
        : never;

Even if you don't understand it because you're not comfortable with type programming, ***bear with me and you'll be able to understand it soon.***

The code above is used to convert a type of the form

    [Iterable&lt;number&gt;, Iterable&lt;string&gt;, Iterable&lt;boolean&gt;]

into

    [number, string, boolean]
    
that is, as the name implies, it extracts the type argument from `Iterable`s.

These kinds of operations come up all the time. For instance, I use `IterableArgs` to define the return type of the function `zip`, which you should know from *Python* or *Functional Programming*:

    function any(xs: Iterable&lt;any&gt;) {
        for (const x of xs) if (x) return true;
        return false;
    }

    function* zip&lt;TS extends Iterable&lt;any&gt;[]&gt;(...xs: TS)
              : Generator&lt;IterableArgs&lt;TS&gt;&gt; {
        const iters = xs.map(x =&gt; x[Symbol.iterator]());
        let nexts;
        while (true) {
            nexts = iters.map(it =&gt; it.next());
            if (any(nexts.map(n =&gt; n.done))) break;
            yield nexts.map(n =&gt; n.value) as any;
        }
    }

(Note that the implementation above is *not* optimized for performance.)

I use `as any` because type checking the whole function isn't worth it, IMHO, but the signature *has* to be correct if we want things to work correctly:

    // to show that zip works with iterables
    function makeIter&lt;T&gt;(...xs: T[]) {
        return (function*() { yield* xs})();
    }

    function f() {
        const nums = [6, 2, 9, 8];          // the shortest of the 3
        const strs = makeIter('a', 'b', 'c', 'd', 'e', 'f');
        const bools = makeIter(true, false, true, true, true);
        for (const [n, s, b] of zip(nums, strs, bools)) {
            // We have correct types and autocompletion!
            if (b) console.log(`${n - 1}: ${s.toUpperCase()}`);
        }
    }

You can play with it in [TS Playground](https://www.typescriptlang.org/play?#code/C4TwDgpgBAksECcCGAjANhAggg5gZwB4YBlKCAD3gDsATPWeZdCApKkAPgG0BdDqALwAoKKNikK1OlF5QA-DJ5QAXCLEkylCLXpcAllQBmiWABooAOisAKA8YSwAKgEoea0Qpiap9OIlQYBHYmmBzuYh5O3trSfkyBbJy84RERClyY5lYWcQFYuIQwjhxuqWUqUFQQAG6IKWLKlTV1EY1VtQgA3EJChgCuVADGwHoA9lRQidbkeI25zKzsHM5QAN7hhqMO1oPjeMBQ5FCjhod4K3qn0ysIEMB9CBPACH0Q3RG3949QhkhoeG8hABfHr9IYjcYAKigAC89GACI4JFodAx-AtEtw+NZsjNGkjnPUyo0AOLafzALZERh5bD4RHEDj8dYRXZUfZQPSMegCM4WAC2SDA00E-HIXGIIH5KFGaAsXIpWx41mczneYgwByqlDw6tEAHcABZ6DBQazPV4rFnlbXAHmc7kCoW2A4Cfhciy2lVqomcq5TW14J3CiZuyoWGjjCCqlYoW5IADWetSID0EDQNCaOuD1lD-CoFmqf0tk3oiWTIJBQgA9NWoJSoHhDaN9fXDUgDnCwFB9VsE-R9VzDQ70Rg8L0BsMxhNBQmIHFERwcVY8VBHLwreFPg8JtYwVOoSq1lBU+maNCZkDnCrulX9xCJoYj9bRGyOVQ+vz7VwAGzmABM5gAJzmAAHDwnTlGItZttATZbPAHInLBUAAMzhG+Bz7Ag9qzvOjDWAA5EghHmIRKCkVAhGDJRhE0LREC0YYhE+qyewHDKsq4Ym+GIOaLwQOYvz-IJ9YCeYFqiZJrFiJs2yYTIVDmHg5goEoyFdrmn4qY2zw6Zx-yqmsvowQA6tA7a1FAuwILcwz1uAEBlrQkx9JSuz8mAmrTgAhL6lxmigKxvrKEAWGgow4NYAAGAAkqwTAAtFAACMQKNPFQaUgAqmAkAIAAwkgAIqkC0UyaIlagjeQhAA) and check that the types in `f` are indeed correct by hovering over them.

## Understanding IterableArgs

Here it is again:

    type IterableArgs&lt;IS extends Iterable&lt;any&gt;[]&gt; =
        IS extends [] ? [] :
        IS extends [infer I, ...(infer IT)]
        ? I extends Iterable&lt;infer A&gt;
            ? IT extends Iterable&lt;any&gt;[]
                ? [A, ...IterableArgs&lt;IT&gt;]
                : never
            : never
        : never;

First of all, note the pattern

    condition
    ? then_expression
    : else_expression

I use it a lot to make my code more readable, at least for me.
Here's another important pattern:

    condition1
    ? condition2
      ? condition3
        ? success
        : failure3
      : failure2
    : failure1

The *failure* branches are not that important since they will never be taken when everything works out as it should. They're needed to complete the **?:** expressions and make the compiler happy.

We could also write it as

    condition1 ? condition2 ? condition3 ?
        success
    : failure3 : failure2 : failure1

In *Value World* we'd write

    (condition1 &amp;&amp; condition2 &amp;&amp; condition3) ? success : failure

but *Type World* is more limited.

In *Type World*, *casting* is done like this:

    T extends number ? (here T is a number) : else_branch

*Destructuring* is done like this:

    T extends Array&lt;infer A&gt; ? (here we can use A) : else_branch
    T extends [infer X, infer Y, ...infer ZS] ? (here we can use X, Y, ZS) : else_branch

and so on.

Since *casting* and *destructuring* require **?:**, we need to use **?:** even when the condition is always true.

Now that you're more comfortable with the *structure* of the code, let's focus on the *meaning* by rewriting `IterableArgs` in a more familiar way (it won't compile, obviously!):

    type IterableArgs(IS: Iterable&lt;any&gt;[]) {
        if (IS === []) return []
        else {
            const [I, ...IT] = IS;
            if (the destructuring above was successful) {
                const A = I.Arg
                if (I is Iterable&lt;A&gt; and A was extracted correctly) {
                    const IT2 = IT as Iterable&lt;any&gt;[];
                    if (the casting above was successful) {
                        return [A, ...IterableArgs&lt;IT2&gt;]
                    }
                }
            }
        }
    }
    
`IterableArgs` is a simple recursive function and it works like this:

    IterableArgs&lt;[Iterable&lt;A&gt;, Iterable&lt;B&gt;, Iterable&lt;C&gt;]&gt; =
    [A, ...IterableArgs&lt;[Iterable&lt;B&gt;, Iterable&lt;C&gt;]&gt;] =
    [A, ...[B, ...IterableArgs&lt;[Iterable&lt;C&gt;]&gt;]] =
    [A, ...[B, ...[C, ...IterableArgs&lt;[]&gt;]]] =
    [A, ...[B, ...[C, ...[]]]] =
    [A, ...[B, ...[C]]] =
    [A, ...[B, C]] =
    [A, B, C]

## Is that DRY?

*No, it isn't!*

The first problem is that that recursive pattern is ubiquitous. In *Value World* we would just use `map`:

    iterableTypes.map(t =&gt; getArgument(t))

Why is `map` so important? Because it encodes a pattern which comes up over and over again in disparate contexts.

The second problem is a minor one, at least in this case, but still annoying. What's the point of the line with the arrow?

    type IterableArgs&lt;IS extends Iterable&lt;any&gt;[]&gt; =
        IS extends [] ? [] :
        IS extends [infer I, ...(infer IT)]
        ? I extends Iterable&lt;infer A&gt;
            ? IT extends Iterable&lt;any&gt;[]           &lt;-----------------------
                ? [A, ...IterableArgs&lt;IT&gt;]
                : never
            : never
        : never;

Simply put, *Typescript* can't infer on its own that `IT` is of type `Iterable&lt;any&gt;[]`, so we need to use *casting*, which, as shown before, requires the ternary operator **?:**.

# What We Want

**We want a function, *TMap*, which takes a *function* and a *tuple* to operate on.**

We'd be using it like this:

    type GetIterableArg&lt;T&gt; = T extends Iterable&lt;infer A&gt; ? A : never
    type ListOfIterables = [Iterable&lt;number&gt;, Iterable&lt;string&gt;, Iterable&lt;string[]&gt;];
    type ListOfArgs = TMap&lt;GetIterableArg, ListOfIterables&gt;;
    
    type TMap&lt;F, TS&gt; =
        ....
        F&lt;T&gt; ???                // where T is in TS
        ...

As expected, the implementation of `TMap` is not that straightforward.

# The Problem

Let's consider

    type Type&lt;A, B, C&gt; = ...

I will say that

* `Type` is *FREE3*
* `Type&lt;SomeType1&gt;` is *FREE2*
* `Type&lt;SomeType1, SomeType2&gt;` is *FREE1*
* `Type&lt;SomeType1, SomeType2, SomeType3&gt;` is *FREE0* or *FULL*

In general, **a type is FREE*N* if it has *N* free type-variables**, i.e. *N* ""holes"" with missing arguments. The operation of *filling* the holes is called *BINDING*, or at least that's the term I'll use here. It should remind you of the JS function `bind`.

**A *Type Function* is a FREE*N* with *N* &gt;= 1**. Let's call a Type Function simply *FREE*.

The problem with *Typescript* is that **we can't pass *FREE*s as arguments to other *FREE*s**.

For instance, consider this:

    type ToArray&lt;T&gt; = Array&lt;T&gt;                  // ok
    type ToSet&lt;T&gt; = Set&lt;T&gt;                      // ok
    type WrapInCont&lt;ToCont, T&gt; = ToCont&lt;T&gt;      // KO :(
                                       ^^^ not allowed
                                       
I know the code above is contrived, but it's just to keep things simple.

# The End Result

Let's have a look at the final result before diving deep into the technical stuff. I hope this will motivate most of you to keep reading till the end! :)

Here's the same example again:

    type ListOfIterables = [Iterable&lt;number&gt;, Iterable&lt;string&gt;, Iterable&lt;string[]&gt;];
    
    interface LObjs&lt;T&gt; { 'Iterable': Iterable&lt;T&gt; }
    type ListOfArgs = TMap&lt;'Arg', ListOfIterables&gt;;       // [number, string, string[]]

That works because I've already implemented a *FREE1* `Arg` which works with every *LObj*  (**L**ifted **Obj**ect).

To make `Arg` work with `Iterable`s as well, we just have to add them to the `LObjs` interface.

Please take a moment to appreciate the ***beauty*** of ***interface merging***. In the code above we're adding a new property to the preexisting interface `LObjs`.

But that might just look like an ad-hoc solution. What if `Arg` were not already defined? What if we wanted something different? No problem:

    interface Funcs1&lt;T&gt; {
        GetIterableArg: T extends Iterable&lt;infer A&gt; ? A : never
    }
    type ListOfIterables = [Iterable&lt;number&gt;, Iterable&lt;string&gt;, Iterable&lt;string[]&gt;];
    type ListOfArgs = TMap&lt;'GetIterableArg', ListOfIterables&gt;;

Again, we can define functions and *LObjs* ***in-place*** thanks to ***interface merging***.

Now `zip` simply becomes:

    function* zip&lt;TS extends Iterable&lt;any&gt;[]&gt;(...xs: TS)
              : Generator&lt;TMap&lt;'Arg', TS&gt;&gt; {            // DRY way
        const iters = xs.map(x =&gt; x[Symbol.iterator]());
        let nexts;
        while (true) {
            nexts = iters.map(it =&gt; it.next());
            if (any(nexts.map(n =&gt; n.done))) break;
            yield nexts.map(n =&gt; n.value) as any;
        }
    }

Again, `TMap` applies `Arg`, which extracts and returns the type argument, to every type in `TS`.

# So what's the trick?

It's simple! Instead of

    type ToArray&lt;T&gt; = Array&lt;T&gt;
    type ToSet&lt;T&gt; = Set&lt;T&gt;
    type WrapInCont&lt;ToCont, T&gt; = ToCont&lt;T&gt;      // KO :(
                                       ^^^ not allowed

we use

    interface Funcs1&lt;T&gt; {
        ToArray: Array&lt;T&gt;;
        ToSet: Set&lt;T&gt;;
    }
    type WrapInCont&lt;FName extends keyof Funcs1&lt;0&gt;, T&gt; = Funcs1&lt;T&gt;[FName];
    
    type Arrays = WrapInCont&lt;'ToArray', number&gt;;        // number[]
    type Sets = WrapInCont&lt;'ToSet', number&gt;;            // Set&lt;number&gt;
    
(I use `0` because it's shorter than `any`, especially with something like `Funcs5` where you need 5 of them! The types used don't matter when we're just interested in the keys.)

I hope the trick is clear:

1. Instead of passing the actual function, we pass the *name* of the function, that is, a *reference* to the function.
2. Since `Funcs1` is not passed as an argument, we can certainly write `Funcs1&lt;T&gt;` inside of `WrapInCont`.
3. With `Funcs1&lt;T&gt;` we ***bind all the functions at once***...
4. ... and with `[Cont]` we retrieve ***only one*** of the ***already-BOUND*** functions.

Note that this trick would be much less valuable if it wasn't for *interface merging*. (Have I stressed enough the fact that I *really* like *interface merging*?). Imagine if every time you wanted to define a new *FREE1* you had to go to the file with the type definitions and add it there. It would still be doable, but much less convenient.

# TMap

TMap's implementation is very straightforward and I think the code below speaks for itself:

    type TMap&lt;F extends FREE1, TS&gt; =
        TS extends [] ? [] :
        TS extends [infer H, ...(infer TS2)]
        ? [APPLY1&lt;F, H&gt;, ...TMap&lt;F, TS2&gt;]
        : never;

It's just like `IterableArgs` but simpler and, yet, *way* more general.

For now let's pretend that `APPLY1` is just *syntactic sugar* for the trick with `Funcs1` we saw before, that is:

    type APPLY1&lt;F extends keyof Funcs1&lt;0&gt;, T&gt; = Funcs1&lt;T&gt;[F];

Let's rewrite it a little better:

    type FREE1 = keyof Funcs1&lt;0&gt;;
    type APPLY1&lt;F extends FREE1, T&gt; = Funcs1&lt;T&gt;[F];

If you go to the actual definition, though, you'll be surprised:

    type APPLY1&lt;F extends FREE1, A&gt; = FEVAL&lt;PUSHARG1&lt;FUN&lt;F&gt;, A&gt;&gt;;

You're still missing some pieces, so don't worry and *keep reading*!

# Is that it? Are we done?

Aren't we forgetting something? Let's try to write a *FREE2* `Comp` which takes two *FREE1*s as arguments and *comp*oses them:

    interface Funcs2&lt;T1, T2&gt; {
        Comp: T1 extends FREE1 ? T2 extends FREE1 ?
            ???
        : never : never
    }

How are we supposed to return a *FREE1* function???

To create a *FREE1* we need to add its definition to `Funcs1` or we won't be able to pass it to other functions. Is it even possible to do that *programmatically* inside of `Comp`? Not likely.

Should we just add the new *FREE1* *manually*? No! What would be the point of having a function such as `Comp`, then?

Should we give up on returning *FREE* functions?

# *FREE*s that return *FREE*s

What about *binding*, *partial application*, *currying* and all that?

Let's say `Comp` takes 3 arguments:

    interface Funcs3&lt;T1, T2, T3&gt; {
        Comp: T1 extends FREE1 ? T2 extends FREE1 ?
            APPLY1&lt;T1, APPLY1&lt;T2, T3&gt;&gt;
        : never : never;
    }

Now let's say we implement a *full BINDing system*!

Let's generalize things a little: a *FREE1* is not simply a function defined in the interface *Funcs1*, but a function with 1 hole, so it may also be a function in *Funcs2* with its first hole filled, a function in *Funcs3* with its first 2 holes filled, and so on.

What happens if we do this:

    type COMP&lt;F1 extends FREE1, F2 extends FREE1&gt; = BIND2&lt;'Comp', F1, F2&gt;;

Since `Comp` is a *FREE3*, if we bind the first two arguments, then it becomes a *FREE1*, that is, ""`F1` compose `F2`"" (as a mathematician would say), which is exactly what we were looking for!

The beauty of it is that `BIND2` (and any `BIND` in general) always produces a *FREE* function without the need to add it to `Funcs1` by hand.

`BIND` doesn't do this by adding the function itself. Instead, the *simple representation*
    
    funcName

(where `funcName` is a valid key of some interface `FuncsN`), is *extended* to

    [funcArity, numMissingArgs, funcName, Arg1, Arg2, ...]

where `funcArity` is the total number of arguments the function can *originally* take. That also identifies the interface, by the way, which is

    `Funcs${funcArity}`

The functions `APPLY` and `BIND` accept functions in this *extended form*, but the *simple form* is still allowed, of course, so one can still write

    BIND2&lt;'Comp', F1, F2&gt;
    
instead of

    BIND2&lt;[3, 3, 'Comp'], F1, F2&gt;
    
which would by quite inconvenient to write.

I also wanted to support *overloading*, that is, the case where the same key (i.e. function name) appears in more than one `FuncsN` interface. Easy solution:

    'MyFunc#1'          // refers to MyFunc in Funcs1
    'MyFunc#2'          // refers to MyFunc in Funcs2
    
## Note

The `numMissingArgs` field was only added later on as it became apparent that it was necessary to reduce the complexity of the implementation.

# Full Implementation

You can find the [full implementation](https://www.typescriptlang.org/play?#code/C4TwDgpgBA0gogTQPIDEUGUoF5aNSgRigB9dk0AmEs-AZmvnJQBYG80BWAbgChRIaaIjgDWEEAHsAZlBQBXAHYBjAM4EAPAAYAfL37RG+KqPHTZi1RS0AaKDr3gD7FPROSZ85Sto27t+3yOgizYUGLu5l7Mvpr+-rqBAoacoeFmnqocMXF+dgk8APQFUABKEGAAThAqEArAAIbAAJYSClBm9VBSFs2tAFyFxVAA2t3KAIIVTaC2CnIAtgCyTSoqTQoA5pMbKrZjSgBy9fMQtgB0F-UVOwC6PINQAJJtG7UQFfUANrYoJXBwBygKygnX2vTaAHcABZNJRQqANMQqKCAq4bBa1YAqM6JaAAfTxv3+mlCw3qChAOQuZ3JIGGNxuDgEBKJcGEI1ptgI50uFPpjNxUBZfzgxg5FNsFB5NL5DKZ+MJItc4spUFo0tp-PlQsV-1YODJEqgzA1soF+h1rI4pM5UA4prpcvuFuF-xtRoIxAoxFoxGYxHtUGpmqdD3GUFeCneXygKgknzk4KByLAElWTQARp9oBnE1AFBJgFAIRIKsB4dMoAAKKSl-MSCEAShxRRRhYgfSgAANNH1NF2QQA3CRNAAmyKUpajFSgSnqNWxgoAInAAMJ4gAq4wAQgAZOChADePCgp7sfa5F6gFD63LVfSlxr66rtfRNUAAbH1AwB2Pof2wAA4+h-WwAE4+kArlezAngAF9eEFdAAFVt3UA4iAgAAPYBanHMJTBkFd1y3Pc4FsA4qGw3CFHwtIiLXTcd33bRsBPM9KKgai8OREkAH4USITsULQ4imLI4YMJuWwxNI-dJIoG58gtES8QOVl1BQLicJ4y0RQo7SaLowioFk5i4FYrB2NPLTuNo5FhnWKR3igcZbCclz1P0oMLg8mcN3QG4oAEry3Ts-DXTgYYCCCvjrLPU9hjcqARPQ1kKO0aUAruBLOyjQcXLyiACoqRDWwOJANzgAZWygDcoWgWsKnmRoRjmeYQWuXYugsfNjlOHyaS6oKvk+BtkQkEqxvqUd1g2FshhQOt1hUBplAGiFoDnNooXqAqaqGBLhkfcYDiXaU7lqo6X1O87Bsuw6z2Gd9bouh46oahEoSqaBbs66BRwgKR1ggUcgTaDIVEfSGX3JMHIffKoVEgJRmgKz4QBxB4LRQZCDnXFdt2QgBxTTDN03H8cs96zy7YYABJDxQYZNBuODbEZ5mYvZ+7q2zNocE54YAHJ+Y2cthbZxsu0Qi0AAVkPQAAJcYSmJjRbJ0+y9P+WxxkskZqVU0K4E0rlMtc80ggV5XVeJqxNaM5FIr1u9xgoA3hiN1C1I0lBJQt8Y3cU7UbZVtWfEd3SXdc4O9doT3ve3X2RTNtVA7j1zaCtgQw7t6Io+1mOg71k6buYROLmNv3bAr13S-jvXmBz6A87VrJC4i3VyNjhus6bvWOErs5q9T-27QzvvxnLweBQeOAtcBsHGHQfBqya9opokGa5ubQU4GSDBQgP5wiFIE+mCoc-D-oa-nFYO+mG4ffD-ZV-qHoqBD2GERweCIh5zdkZiIOCABiAgXYbidk0AhF+zgxSHyvgRCI39f7rGCFQQBXZgFgIoJA6BsCLQXzoKEG+H8TKoL-mQrBODQG0HwXYQhQRiFoH1MEB+yCzCUPQYfVgNDDwgNAcwBhMDtQsJQNaHAh9rSkE-twto0iQTImwQIsBHARGwIeKyQE4Vnbd0BBmEAIJRyzU2AiEsUAMxXGgKtKYZiCwNHBIuVsjwZAACIMhHBOG45MX1oAKH6u0GQoIegtEhDCOECJ6hIjVJ1dEJw6jdVaFtckDwvhxigHIGoUAPEWC8RAHxdZcnKHyXQnxVZyzQE+I0XCM5RrjU3u8aapiNh7xxiKEkBpbSxEGiGFusgRTskNKqO8wYzTUHEQQbUrIxTDMlA6fkEzEHTKVO6VUL4xmOiCo-OgKy9RrNrgshkSz757LgJIlUthAybMWTszgZVijhkjNGT4sZ4yJjCb41M6Ysw5jzA44spZyxAiLDWOsBYmw4gtBuJABxkKLHEvuI88VhYEGFreWwwsKDosfMLWg6KXzC2YOi98wsODosDMLD86KAJQGFj+dFoE6WAXRVBOlYF0VgUxQQTQ6KeXwVlkESmZNdE6wPHcjA1MEqdz0ayYKsgoADGleTbWKi-KyAOGAxm6rNUDjiglBKOjF7Ik-jCuFCK5IHgEsMM18LEVRQONJOqsK7WWskk6lAjr4oGp9b6v1PqiolUVfFGV-95XRS5D8IKSqzyhsQeGx80No0hpVfhMh1qXwvhQMm5VoreHhvfO+bNwbc3GuCNaa1gZAzFpjaefK7xBUCG3I8M6GtU3IhmcQVkvpWT+itHrA2bd1aaTxppQOCQLTNrOg7dtAz-g9pFH2kUgYS6uQ9qEIdDtR0oEnmuidQQp1LkjrO3tXbl31zXfHQditw7E0jtu3d7sr3akPQXE957e6Xv7q5CuG6b35xHQcMdF6n3fvGBXXgrZKlVGFsiAsUBD0cGdEEcYcs5a7gQG20VrI3YGxQHAAAauMXc6gh0awfQO-dAhUPoYQDO7DIoTrBzw4R4jpH-1qy3UBndIGPZUd+mhjDx6GPzt41e0I+GiMkaHfe7jj6y7aH465QTCA30ibgC9TO08m4sak+x22asC4Uc-aB7TP7FPahoxhju77-grq0zPVyQ8JOsekxx4mHdjOrtM458YQ98jlXbCoA6UAAC0H1oAVAkIoMGYBrF1Aaguf6UAABWWSiwbyqDNeoGYmifGmJjB44X6rQGi7UnJuifHoDgPuVcAVbDQjy9ASp4NpztCjLYDMEBgCbVqFAOLVQEvVGqNYGmwIsmgyUSCOqCA5YHlXOMdAG4FphZyaG1kmgfEljkJ8MGVQACOcgmhVGmxaOcq0-5WYQAAKihUK1zZMCjXds3AEk12ChStjbOiNuR1WeulOqxbsVvVnirJ62d78BKQw0ItlmSlhieujfmYq7xGwlq+6K46OQ-sHABwoZyM4gfBRB6eMHRqnYYPlZDKwsPWZ63QNFeHiPFXI5Kmj2tCrMcvh6TjvHBPXKBWJ36snEPnD0ChxYbw6hadOthzFenx0meOpZ-Wio7OU2Y-fDz-HLl-uDUB4L-VvqRd5vvlTyX0QZcK-lwLxXCvs7aAR8rwNqP0c2W+4GbX-O9fUgN8D4X4PTdP3N14LIVvbc29h4pe3suGfN0d8zl3au3es-ePcKDQQkAwHZFdjQP27zCw3BISYHwQCS1mAsLrFRdC+tbO1Kv9JsaZ5gGKXP6hC-F4qKX4WFf5hV5r-6g1dfK-vEbxngQWflRt47yX+oIBwE9-zCP6vXBB9nmH330fdxBS7iQNuAAUuoDcBtd8ZhSyoI-jvP6n-P5f-pdtL+hA3LO3fB-1CA9YgJcMSftSrlhegI-AdZFI6NBNoa-JAM-C-WkbQKBKAOAAARWQkAKgBvwvwf2PyvyUlnWAAqDkAgBJzXzXwElQOl0wJVxR1KnghGHAMgPUGgLnnWFqSkHqCUGgGh0f0PDgh4EYPeGYNYMiEsCPzvA3HXU4O4LqF4JYLYMlx8A3GEMfA3ATi-i4J4IqD4OkKiCENsBEO0JfA3F-TENUPUIEJUCyDkO0IUL0PfA3GczENbG6yUGpHuCMKkJQIgNv2P2UOQwEA3EWHqDABFTLRw20PQE+1PACm+1ihGBzTPAiMx3VSVmlCrHVQCgoEbByjPGtTb3HiVgtmpF8P8LTlSJgPih-28OgA3BQDy1qUCIp2CLqlCLYgSjiLLXpHDRiPCMwHiJ1xnESMGmSJ6IaLSIyNPC-xUw1lsFyOwNwOgGtT6PyKqM+BqPHmKKR0qOqPeCKPQA9lKNT0oMFEqOqWAD8ICPW0GRCLCIaMiPaJTxaIp0ckGPmIuAGP51SPSKFzPGyMmNYlFRDHimtWpC+KgFyKyhQCOJOK2I9hGPIKDTKIeF3CaCkFwjBncIgFRhUHEKYNcJIM8OPASlnxAE7AJMv14ASnQG62Em6xJIFWcIkLUNcPYNxPim2CJLVmpOaM71LyJK7zn3ZNjSi3mAJM7Gf1FWJI-3lW-z2NJM+J5JACL3JOAGFNnTFMGP1nlQVNIJhIbWZOuCLwOGX07D-wOAAI3F73714E0SIUQK0LqnXRwDkNnREPlSdNFQdIEhwLwJZ2YM+GyU7G9JqEQhcP4OpxtJENYjxLPFXFaGCygCNJNPkISGaJOOFMwiCMGWdIhPMNtNYjKOaMWNqRTJeyIAEnWKWM2KzLDK1MoLzPBP8MLPU2LLqjBMaEzITKrItPTwKFC27J7N7L7P7IHMHKHOHJHN7MGFHInMnKnOnPHOnIHIPAAA1XIoBFgoA5YUC4CUows5zRzZydz9yDyRy9zDyTzTzQtOyzzLzDyHgCiwBjyryHyJyDjHBkQDR693gzSPzYwcC5pOsJB4wIByRbANThZ6gwLhYYDLNZTXy6oISZ9ZTF8NwXyB9CCoBWwkpZT1Azg8iLg7hoUXyxRbz28UABSCTF8CSVAlNVwGolARB2QECkCkLIBuomLqgPZV9UKh9igPT8CVJusYKiLhYCT5TutyLoKULB90KNTsK3oLRxhPhXkDRAToLpQFSVB+lWLvAn84LthyKFKqKaKRAxQGKj8XyXwvYLhNKsoXylIOLTwoMZjBQAB1aYKEfUzfCoASnS3UiQdyqvPSz4ALLsx8kK3c1sUs2pe80K6KscoMjQ1QDQXEwg1sScOQMsaoIxMwOKqAE4a4OaeKJWecPy94Vk0mTw0Vd8mcd0mYr09JCADsi0JABQDGFy8sYqzyp-fMzY4WQqlQdqgKoKmKoavsm85s44-wqK4a0KzEyQ4MyXRK8M+KDcaJCADcCEWEDsEYU0uqAUBKcKlapqlq1y9qoklTdvXq-q7Qn4stHi8NDcJHekaU8Ig65qkAVqtyg01yNk8qstSqu6h6xkWvYoNYeYMAbMCoeCQUMoSARoUGTSzq2sgIwvFatajaxC5C7UQ6t6465fKGBGlswo5GsQLG96y61yfS3-Qy5UEykmnGjy7qWmtq3G9ii8qa4ah4bcdYFpEEWiKAKoYANKhQOaHqZQJxSatmh8ma+kuarwWQ+Q3QxahKKM0G+stM-4Rsl0tWtkD4n1NvLMvWywxTXY1XdsyG6FCQBUgk9kIiw9KwYWZWsAHvAgziv1Q9DQe26MxfDU6AzKZ2l2n1N29vKMhQFQMS0vOgikRTX2-2v1TSoKuAgqNoLrYAAswUP-RYOWTSVMuo842QKiLWggA2W2oOiQUGxfQgH4Fm82y22UwiiE9OzOwOj2kOr2qkn20bGOwgpu4O0OvWTCn26Ozug1OOymtEkQNhEykS4AK27Qi27rAklmwUA4aoZE+Gg0H7d8dqp1EWXuulDMRfWxOabenivYOqv8gC8kUMFxGQTaYsckIsYACQfrecZEW8hEJ+6YGoT4KQBrfxCASbR+qAa7fLJE57aYHEbKkMis0Qpa5MuqbOimdMks1siwnMqUs2oITSthG2ltJcd228xfbuz24CtuyOxTDuzu5e1aOGjGzslA0S5EQGScUGtMaAcBh4A4dsL6VqQ9EET4CEOfFMKLUcOQVg5EEB5EkW1GMJRcau7rUIIhlukh4ACOkACzA4uQMG1aueosHAJugh2ehUpTTSi5IijcTR7MKeiiFemh5igysei5Sel86wl8oeB5CWoa8Wjxs8rxqc9ckoJ4FEWMwJ9cx4KAZCFcyWoobx6K3xmJg8uh+qYEYEaEd4NhosUab8q4SRuGesCEEFKAMaCQEQZEQ7aYZrKYQcJoL4LGOvVoULJcEoBAO+oxNmwUR4WpHLbMbYC-R4LostDp6MX5VRx3LAqyBKPp6461Dop4fp+49VR4JIhZjcdI-4wJ0VQZj4YZj-AggSR4EUgZzp4Z6AxvQgrI6UTZrpiAHp9QfZkowgpPAgx53KdB1seJ-suhxp5pgR1pjxqW4wnExWs8YWS535dFJ4I57MS-SGt595scngMET5WkKsLCGM0FqF6AtHCM08DeKsScEOosLCIJKAVFtHRE6sLCNHfmwWhEGYp6vm7rGl-0+qyGhF0JVoZ7AALyaACLuN0nRYgBGfpG0CrGpFReFPQEbAIKuk7GJjeA+EfoqFucheua6iP1CPDLXzqYUAaaaZab9tlflcaFLCP28o2EQo1a-mSuKC+f1YSnxYu3KY6pwFRbOBajABRewFYiwmGHQBAD73jDOCdeNYqBuCrEbEbHpezCLCjBwhUHpca2zGrB4qxYINjaxFCCdexHdeSN0dYnAfTfDcjYIPJarGRfTezf8KrAFlYgUDOFHGSQjbRwzCyxEHpYShACaAgF22RzjbdarZrfzDOEHC+DwLR0AVpHpa4K4LZdFs+RajEE2cv1FYuHFbqnpFTYSmpYqDaBrHZYUGu3Datc7e7dHGe1RbgkbHDY7NnekdaC6CPexdnGjJjYWBguGFpUfC5SgEAkBv9Sg0+hUChCBRXuJZa1oHigdaLFsRgoXYgE2arFAsX2Fn3sxSUGQ9HGQ4gGQ6kGFmLftZfcsX-J9NCDg4Q5Pq6DPtpbwNsAo5Tfpdxag7alsG6gzCCjMG5Y9fam6hg-Pp9Ija-mleKCcugF2gKmfa7zRIfpfJ5rBnqETAkGYa0fBAAEIS2ZAqwMw0cHWAKzgxoNgqwVE2hwsCA4JOxGZsRH7kIwBIAKhVx5wIBw24Iux8Ozxp37gpBr2eAgA) in TS Playground, together with the examples presented in the next section.

***You should keep reading for the explanations, though!***

# Some Examples

## CONS

`CONS` is a function that can *cons*truct objects registered in `LObjs`.

We can register the objects like this:

    interface LObjs&lt;T&gt; {
        Array: Array&lt;T&gt;;
        Set: Set&lt;T&gt;;
    };

Now we can write:

    type OK1 = CONS&lt;Set&lt;any&gt;, number&gt;;                  // Set&lt;number&gt;
    type OK2 = CONS&lt;Array&lt;any&gt;, Iterable&lt;string&gt;&gt;;      // Iterable&lt;string&gt;[]

Note that the specified parameter `any` is completely ignored, but needed to make the compiler happy.

Do you remember the following example?

    type ToArray&lt;T&gt; = Array&lt;T&gt;                  // ok
    type ToSet&lt;T&gt; = Set&lt;T&gt;                      // ok
    type WrapInCont&lt;ToCont, T&gt; = ToCont&lt;T&gt;      // KO :(

Now we can just write

    type WrapInCont&lt;Cont, T&gt; = CONS&lt;Cont, T&gt;;

## ARG

There's also a convenient `ARG` function that, like `CONS`, only works with *LObjs*, i.e. objects registered in `LObjs`. Here's its definition:

    type LOBJ&lt;T&gt; = LObjs&lt;T&gt;[keyof LObjs&lt;T&gt;];
    type ARG&lt;T&gt; = T extends LOBJ&lt;infer A&gt; ? A : never;

This is based, it appears, on a nice feature of *Typescript*:

    type F&lt;T&gt; = T extends Array&lt;infer A&gt; | infer A ? A : never;
    type OK1 = F&lt;Array&lt;number&gt;&gt;;        // number
    type OK2 = F&lt;Set&lt;number&gt;&gt;;          // Set&lt;number&gt;

Note how `infer A` can appear twice (or more) in the same `extends` clause.

In this case the order doesn't seem to matter, so using

    type F&lt;T&gt; = T extends infer A | Array&lt;infer A&gt; ? A : never;

will give the same result. It seems *Typescript* gives precedence to `Array&lt;infer A&gt;` because more specific, but I'd need to do some more tests to be sure.

Anyway, in our case:

    ARG&lt;Array&lt;number&gt;&gt;
        = Array&lt;number&gt; extends LOBJ&lt;infer A&gt; ? A : never
        = Array&lt;number&gt; extends LObjs&lt;infer A&gt;[keyof LObjs&lt;infer A&gt;] ? A : never
        = Array&lt;number&gt; extends LObjs&lt;infer A&gt;[keyof LObjs&lt;any&gt;] ? A : never
        = Array&lt;number&gt; extends {
                                    Array: Array&lt;infer A&gt;;
                                    Set: Set&lt;infer A&gt;;
                                    ...
                                }[keyof LObjs&lt;any&gt;] ? A : never
        = Array&lt;number&gt; extends Array&lt;infer A&gt; | Set&lt;infer A&gt; | ... ? A : never
        = number
        
This means that `ARG` is able to extract the argument of any *LObj*.

## Other utils

I also implemented `TFilter` and `TFlatMap`, and set them all *FREE* by *lifting* them up like this :)

    interface Funcs2&lt;T1, T2&gt; {
        Cons: CONS&lt;T1, T2&gt;;
        TMap: T1 extends FREE1 ? TMap&lt;T1, T2&gt; : never;
        TFilter: T1 extends FREE1 ? TFilter&lt;T1, T2&gt; : never;
        TFlatMap: T1 extends FREE1 ? TFlatMap&lt;T1, T2&gt; : never;
    }

Now we can pass those *FREE2* as arguments to other functions (*FREE* or regular functions).

## TMap

    type Types = [number, number, string, boolean, Set&lt;'aaa'&gt;];
    type Arrays = TMap&lt;'ToArray', Types&gt;;               // [Array&lt;.&gt;, ...]
    type Types2 = TMap&lt;'FromArray', Arrays&gt;;
    type Check1 = EQU&lt;Types, Types2&gt;;                   // true
    type Sets = TMap&lt;'ArrayToSet', Arrays&gt;;             // [Set&lt;.&gt;, ...]
    type All = [...Arrays, ...Sets];
    type Types3 = TMap&lt;'Arg', All&gt;;
    type Check2 = EQU&lt;Types3, [...Types, ...Types]&gt;;    // true
    type WithNumbers = TMap&lt;'ArgToNumber', All&gt;;

I wrote those examples before `BIND` even existed. Bad times...

## TFilter

    interface Funcs1&lt;T&gt; {
        HasNumber: ARG&lt;T&gt; extends number ? true : false;
    }
    type OnlyWithNumbers = TFilter&lt;'HasNumber', All&gt;;

## TFlatMap

    interface Funcs1&lt;T&gt; {
        TakeTwice: [T, T];
        // TakeOnlyWithNumber: APPLY&lt;'HasNumber', T&gt; extends true ? [T] : [];
        TakeOnlyWithNumber: ARG&lt;T&gt; extends number ? [T] : [];       // simpler
    }
    type RepeatedTypes = TFlatMap&lt;'TakeTwice', Types&gt;;
    type OnlyWithNumbers2 = TFlatMap&lt;'TakeOnlyWithNumber', All&gt;;
    type Check3 = EQU&lt;OnlyWithNumbers, OnlyWithNumbers2&gt;;

## Binding and returning functions

    interface Funcs3&lt;T1, T2, T3&gt; {
        Comp: T1 extends FREE1 ? T2 extends FREE1 ?
            APPLY1&lt;T1, APPLY1&lt;T2, T3&gt;&gt;
        : never : never;
    }
    type ToSetArray1 = TMap&lt;BIND2&lt;'Comp',
                                  BIND1&lt;'Cons', Set&lt;any&gt;&gt;,
                                  BIND1&lt;'Cons', Array&lt;any&gt;&gt;&gt;,
                            Types&gt;;

In the example above, `Comp` composes

1. a function which wraps its argument in a `Set` with
2. a function which wraps its argument in an `Array`,

so the result is a *FREE1* which takes `T` and produces `Set&lt;Array&lt;T&gt;&gt;`.

We could also decompose it a little to make it more readable:

    type COMP&lt;F1 extends FREE1, F2 extends FREE1&gt; = BIND2&lt;'Comp', F1, F2&gt;;
    type ToSetArray2 = TMap&lt;COMP&lt;BIND1&lt;'Cons', Set&lt;any&gt;&gt;,
                                 BIND1&lt;'Cons', Array&lt;any&gt;&gt;&gt;,
                            Types&gt;;
    type Check4 = EQU&lt;ToSetArray1, ToSetArray2&gt;;

Now let's consider a tuple of tuples:

    type NestedTypes = [[1, 4, Number], ['s', 'b', string], [true, false, boolean]];

If we want to pass `TMap` to itself, we need to *lift* it (yeah, I've already mentioned that, but it bears repeating):

    interface Funcs2&lt;T1, T2&gt; {
        TMap: T1 extends FREE1 ? TMap&lt;T1, T2&gt; : never;
    }
    type Types4 = TMap&lt;BIND1&lt;'TMap', BIND1&lt;'Cons', Set&lt;any&gt;&gt;&gt;,
                       NestedTypes&gt;;

Let's decompose it! Note that `BIND` always produces *lifted* functions.

    type ToSet = BIND1&lt;'Cons', Set&lt;any&gt;&gt;;
    type TupleToSet = BIND1&lt;'TMap', ToSet&gt;;
    type Types5 = TMap&lt;TupleToSet, NestedTypes&gt;;
    type Check5 = EQU&lt;Types4, Types5&gt;;
    
# The End

I hope you enjoyed the ride! Although this is just a *POC*, it should be easy to extend. Right now, it's neither complete nor clean as I put it together in a couple of days, but I think it's a solid start. I did it just for fun, as always.

This reminded me a little of *Template Programming* (C++), but that was *bona fide* (although *unhygienic*) *Metaprogramming*.

Right now I'm working on a math problem (I'm developing a novel algorithm to train *neural networks*) for *glory* and doing *expdev* and *bug hunting* for *profit*. I'm using *TS* (*Node* / *Electron*) to develop the tools I need, but it was mostly an excuse to play with TS. I chose *TS* because it caught my eye and I wanted to try something new.

I wouldn't mind doing *Type Programming* full time, for glory *AND* profit, this time, so feel free to PM me if you think I could contribute to some interesting project which uses types in interesting ways.

The math problem I'm working on is a risky and all or nothing endeavor, so I wouldn't mind escaping from its clutches... I wish I had a crystal ball... a *working* one...",Higher Order Types: an implementation
1728,2021-07-30 09:29:00,1,1," 

This article talks about how to refactor a function with imperative style into functional style. The function is refactored in a few passes, and rationale of the changes are discussed.

[https://sunnysun-5694.medium.com/path-to-functional-style-a-typescript-refactoring-example-f5f052fe4d84?sk=4215e324b8ed9454c43e154874587602](https://sunnysun-5694.medium.com/path-to-functional-style-a-typescript-refactoring-example-f5f052fe4d84?sk=4215e324b8ed9454c43e154874587602)

Hope it will help you in refactoring!",An example of TypeScript Refactoring
1729,2021-07-30 13:51:47,10,1,What the title says: I would like to do a course on typescript. You know: where I get to type it &amp; get a good overview of common usages.,Recommended typescript courses?
1730,2021-08-01 06:56:05,0,1,[removed],typescript-field-validation
1731,2021-08-01 18:31:15,0,1,[removed],How to get method return type in typescript
1732,2021-08-02 05:16:32,0,1,[removed],How to get the exact returntype of a method in typescript
1733,2021-08-02 10:55:21,4,1,"Let’s cover some of the newer TypeScript features and advancements. These are the features I find most helpful in day-to-day work for writing precise and clean code.

Read the post [here.](https://iskenxan.medium.com/6-new-typescript-features-for-writing-clean-code-ea7810cf5019?source=friends_link&amp;sk=ec707e55ce39e4f2d1bcf88001988ee5)",6 new TypeScript features for writing clean code
1734,2021-08-02 11:14:31,7,1,"Attached is a sandbox link to the problem  
[https://www.typescriptlang.org/play?#code/MYewdgzgLgBATgUwIYBMCMMC8MDaAiFPAGhj2DwF0YkIZRIoBuAWACh7p5kUAmLXPEmKkARpWq0OTNmykwQcFAjgBLMAHN+AbyQAuUmmEj9eHsOAmAzMJS68AFjwBfGe3CcICqAEE4cJACetNgAPABKRACKAHwAFEh+GPph3OAANgG+-gHh0SQJcDzJqWAZWYEhMQCUWNEwWmwwdO6wiKgAwiAAtiJqCCj8OAB0IwVoJCNDBTwULKyuTQD0iwAWIADuMCggMACSMGkIsADWYBswUCtIsJcIMAiHXQhgULRqECpKXKgYSGADbV41EQMGOCCC8gAZvJFMo1JpPBcrrB9sA-jBPHAbis7gVAjA1Ei7hAjjClKoNAB+RrNBgYrz9FKofiAzo9PooIaYqCxGlNeIkEQ1TB1BTk+E4JBUAC0ZLhGhwIgoNKqcxpiCgAFc4GB6VjGdw5k4YEA](https://www.typescriptlang.org/play?#code/MYewdgzgLgBATgUwIYBMCMMC8MDaAiFPAGhj2DwF0YkIZRIoBuAWACh7p5kUAmLXPEmKkARpWq0OTNmykwQcFAjgBLMAHN+AbyQAuUmmEj9eHsOAmAzMJS68AFjwBfGe3CcICqAEE4cJACetNgAPABKRACKAHwAFEh+GPph3OAANgG+-gHh0SQJcDzJqWAZWYEhMQCUWNEwWmwwdO6wiKgAwiAAtiJqCCj8OAB0IwVoJCNDBTwULKyuTQD0iwAWIADuMCggMACSMGkIsADWYBswUCtIsJcIMAiHXQhgULRqECpKXKgYSGADbV41EQMGOCCC8gAZvJFMo1JpPBcrrB9sA-jBPHAbis7gVAjA1Ei7hAjjClKoNAB+RrNBgYrz9FKofiAzo9PooIaYqCxGlNeIkEQ1TB1BTk+E4JBUAC0ZLhGhwIgoNKqcxpiCgAFc4GB6VjGdw5k4YEA)  


`const read1 = [""d"", ""c""] as const;`  
`const read2 = [""a"", ""b""] as const;`  
`const ordering = {a: ""1"", b: ""2"", c: ""3"", d:""4""}`  
`const sortArrays = &lt;R,Q&gt;(arr1 : ReadonlyArray&lt;R&gt;, arr2: ReadonlyArray&lt;Q&gt;) =&gt; {`  
 `const readCombined = [...arr1, ...arr2];`  


`//how do I let know that the elements inside read1 and read2 are keys of ordering so that I can sort the array in the set ordering?`  
 `const sortedRead = readCombined.sort(`  
 `(a, b) =&gt; ordering[a] - ordering[b]`  
 `);`  
 `return sortedRead;`  
`}`   


I think at the end of the day I want the type to be elements of the arrays combined as I will be using that for another type for an object which will contain the keys of R and Q. Something like 

`{...read1, ...read2}`  


Would you need to say that the elements of read1 and read2 are keys of ordering? I'm quite new with generics but I think it's what I need as these array element will be dynamic.  


Thank you! Please let me know if I can explain/clarify anything further.",Looking for help typing out readonly arrays with generics
1735,2021-08-02 17:18:40,10,1,"I have two types defined (the same happens with interfaces): 

    export type TgiftListItemCensored = {
 authorId: string;
 creationDate?: Date;
 body: string;
 links: string[];
 selectedBy?: string[];
 _id: string;
};

and

    export type TbasicListItem = {
        authorId: string;
        creationDate?: Date;
        body: string;
        links: string[];
        selected: boolean;
        _id: string;
    };

I have a react component that takes in the following as a property

    listItem: TbasicListItem | TgiftListItemCensored;

The aim is to reuse the same component for both item types as there is significant overlap.

However I find that if I try to access the properties of listItem VScode only proposes the following and TS will complain if I try to access anything else:

     _id: string;
     authorId: string;
     creationDate?: Date;
     body: string;
     links: string[];

So it's only allowing me to access the common fields of both types. But that isn't a union - that's an intersection! Conversely if I use the &amp; operator instead of the | operator to denote I want an intersection I get the behaviour of a union instead.

Why does Typescript work this way - I find it really confusing. Should I be looking at this from some other perspective?",Why do typescript unions behave like intersections?
1736,2021-08-04 02:31:32,3,1,"I'm looking to learn more about generics through the official documentation, and [found this section for generic interfaces](https://www.typescriptlang.org/docs/handbook/2/generics.html#generic-types).

Would anyone happen to know an example of when to choose putting the type parameter on a function call signature over putting it on the interface itself (or vice versa)?

    interface GenericIdentityFn {
        &lt;Type&gt;(arg: Type): Type;
    }

    interface GenericIdentityFn&lt;Type&gt; {
        (arg: Type): Type;
    }

Thank you!",Question regarding generic interfaces
1737,2021-08-05 06:30:36,0,1,"I am creating a Next.js Blog. Inside it, I have a `scripts/` folder which contains all kinds of scripts from generating RSS to building Sitemap as well as creating new post using [ink](https://github.com/vadimdemedes/ink) CLI.

I have scaffolded a new CLI project inside the Next app using [create-ink-app](https://github.com/vadimdemedes/create-ink-app) under `scripts/new-post/` folder.

I want to access a file named `authors.ts` which exists outside of the `new-post/` folder but inside of the Next.js app under `src/_data/authors.ts`.

The tree structure inside the Next.js root looks like:

```js
.
├── README.md
├── next-env.d.ts
├── next.config.js
├── package-lock.json
├── package.json
├── prettier.config.js
├── public
│   ├── favicon.ico
│   └── vercel.svg
├── scripts/new-post
│   ├── package-lock.json
│   ├── package.json
│   ├── readme.md
│   ├── source
│   │   ├── cli.tsx
│   │   ├── components
│   │   │   ├── Input.tsx
│   │   │   ├── MultiSelect.tsx
│   │   │   └── index.ts
│   │   ├── state.ts
│   │   ├── test.tsx
│   │   └── ui.tsx
│   └── tsconfig.json
├── src
│   ├── _data
│   │   └── authors.ts
│   └── pages
│       ├── _app.tsx
│       └── index.tsx
└── tsconfig.json
```

When I run the CLI using `tsc` (I type `npm run dev`) inside of `new-post/`, it creates a sub-folder in `dist/` while creating folders inside it namely `scripts/` &amp; `src/`. I want the `cli.js` to be created inside the `dist/` folder but it actually creates it inside sub-folders.

The tree command inside `dist/` looks like:

```js
.
├── scripts/new-post/source
│   ├── cli.d.ts
│   ├── cli.js
│   ├── components
│   │   ├── Input.d.ts
│   │   ├── Input.js
│   │   ├── MultiSelect.d.ts
│   │   ├── MultiSelect.js
│   │   ├── index.d.ts
│   │   └── index.js
│   ├── state.d.ts
│   ├── state.js
│   ├── test.d.ts
│   ├── test.js
│   ├── ui.d.ts
│   └── ui.js
└── src/_data
    ├── authors.d.ts
    └── authors.js
```

Notice, the additional `scripts/new-post/source` command created additionally. I don't want that.

I tried to use `""rootDir"": ""./""` in `tsconfig.json` as [this popular question suggests](https://stackoverflow.com/questions/52121725/maintain-src-folder-structure-when-building-to-dist-folder-with-typescript-3) but it doesn't allow me to use `authors.ts` as it exists in `src/_data/` folder.

How do I create a flat output in `dist/` folder that is not nested inside it?

I have scaffolded an entire reproduction here -&gt; https://github.com/deadcoder0904/next-ink-dist-error",Maintain src/ folder structure when building to dist/ folder with Typescript but still be able to reference outside files?
1738,2021-08-05 11:03:50,2,1,"    const jobs = [...Object.values(Job)];
    const jobDescriptions = 
      Object.fromEntries(rolesToFilter.map((job) =&gt; 
        [job,""same description""]
      ));


Job is an enum of type `Job`, if I hover over job inside [job,""same description""] it detects type correctly, so it should know jobDescriptions if of type { [k: Job]: string; } but it says it's of type { [k: String]: string; }

Why is that and how can I go about correcting that? ( I'm fairly new to typescript )",How to make Object.fromEntries infer type correctly?
1739,2021-08-06 19:38:33,6,1,"I recently ran into a situation where I needed a utility type which allowed me to require at least one of the keys in an object be present. I found [this very helpful stackoverflow answer](https://stackoverflow.com/a/49725198) which also included a [TS Playground](https://www.typescriptlang.org/play/#src=type%20RequireAtLeastOne%3CT%2C%20Keys%20extends%20keyof%20T%20%3D%20keyof%20T%3E%20%3D%0D%0A%20%20%20%20Pick%3CT%2C%20Exclude%3Ckeyof%20T%2C%20Keys%3E%3E%0D%0A%20%20%20%20%26%20%7B%0D%0A%20%20%20%20%20%20%20%20%5BK%20in%20Keys%5D-%3F%3A%20Required%3CPick%3CT%2C%20K%3E%3E%20%26%20Partial%3CPick%3CT%2C%20Exclude%3CKeys%2C%20K%3E%3E%3E%0D%0A%20%20%20%20%7D%5BKeys%5D%0D%0A%0D%0Ainterface%20MenuItem%20%7B%0D%0A%20%20title%3A%20string%3B%0D%0A%20%20component%3F%3A%20number%3B%0D%0A%20%20click%3F%3A%20number%3B%0D%0A%20%20icon%3A%20string%3B%0D%0A%7D%0D%0A%0D%0Atype%20ClickOrComponent%20%3D%20RequireAtLeastOne%3CMenuItem%2C%20'click'%20%7C%20'component'%3E%0D%0A%0D%0Aconst%20withComponent%3A%20ClickOrComponent%20%3D%20%7B%0D%0A%20%20%20%20title%3A%20%22test%22%2C%0D%0A%20%20%20%20component%3A%2052%2C%0D%0A%20%20%20%20icon%3A%20%22icon%22%0D%0A%7D%0D%0A%0D%0Aconst%20withClick%3A%20ClickOrComponent%20%3D%20%7B%0D%0A%20%20%20%20title%3A%20%22test%22%2C%0D%0A%20%20%20%20click%3A%2054%2C%0D%0A%20%20%20%20icon%3A%20%22icon%22%0D%0A%7D%0D%0A%0D%0Aconst%20errorWithNeither%3A%20ClickOrComponent%20%3D%20%7B%0D%0A%20%20%20%20title%3A%20%22test%22%2C%0D%0A%20%20%20%20icon%3A%20%22icon%22%0D%0A%7D%0D%0A%0D%0Aconst%20noErrorWithBoth%3A%20ClickOrComponent%20%3D%20%7B%0D%0A%20%20%20%20title%3A%20%22test%22%2C%0D%0A%20%20%20%20click%3A%2054%2C%0D%0A%20%20%20%20component%3A%2024%2C%0D%0A%20%20%20%20icon%3A%20%22icon%22%0D%0A%7D%0D%0A%0D%0Aconst%20errorWithBothWhenOneHasWrongType%3A%20ClickOrComponent%20%3D%20%7B%0D%0A%20%20%20%20title%3A%20%22test%22%2C%0D%0A%20%20%20%20click%3A%2054%2C%0D%0A%20%20%20%20component%3A%20%22should%20be%20number%20here%22%2C%0D%0A%20%20%20%20icon%3A%20%22icon%22%0D%0A%7D%0D%0A%0D%0A%0D%0Atype%20RequireOnlyOne%3CT%2C%20Keys%20extends%20keyof%20T%20%3D%20keyof%20T%3E%20%3D%0D%0A%20%20%20%20Pick%3CT%2C%20Exclude%3Ckeyof%20T%2C%20Keys%3E%3E%0D%0A%20%20%20%20%26%20%7B%20%5BK%20in%20Keys%5D-%3F%3A%0D%0A%20%20%20%20%20%20%20%20Required%3CPick%3CT%2C%20K%3E%3E%0D%0A%20%20%20%20%20%20%20%20%26%20Partial%3CRecord%3CExclude%3CKeys%2C%20K%3E%2C%20undefined%3E%3E%0D%0A%20%20%20%20%7D%5BKeys%5D%0D%0A%0D%0Atype%20OnlyOneClickOrComponent%20%3D%20RequireOnlyOne%3CMenuItem%2C%20'click'%20%7C%20'component'%3E%0D%0A%0D%0Aconst%20noErrorWithOnlyOne%3A%20OnlyOneClickOrComponent%20%3D%20%7B%0D%0A%20%20%20%20title%3A%20%22test%22%2C%0D%0A%20%20%20%20click%3A%20534%2C%0D%0A%20%20%20%20icon%3A%20%22icon%22%0D%0A%7D%0D%0A%0D%0Aconst%20errorWithBoth%3A%20OnlyOneClickOrComponent%20%3D%20%7B%0D%0A%20%20%20%20title%3A%20%22test%22%2C%0D%0A%20%20%20%20click%3A%20534%2C%0D%0A%20%20%20%20component%3A%2053%2C%0D%0A%20%20%20%20icon%3A%20%22icon%22%0D%0A%7D%0D%0A%0D%0A%0D%0A%2F%2F%20This%20interface%20will%20be%20used%20to%20trick%20OnlyOneClickAtComponent%20into%20allowing%20an%20object%20with%20both%20%20%0D%0Ainterface%20ClickMenuItem%20%7B%0D%0A%20%20title%3A%20string%3B%0D%0A%20%20click%3A%20number%3B%0D%0A%20%20icon%3A%20string%3B%0D%0A%7D%0D%0A%0D%0Aconst%20hasBoth%20%3D%20%7B%0D%0A%20%20%20%20title%3A%20%22test%22%2C%0D%0A%20%20%20%20click%3A%2054%2C%0D%0A%20%20%20%20component%3A%2024%2C%0D%0A%20%20%20%20icon%3A%20%22icon%22%0D%0A%7D%0D%0A%0D%0A%2F%2F%20No%20error%20because%20excess%20properties%20are%20only%20disallowed%20when%20directly%20assigning%20an%20object%20literal%20%0D%0Aconst%20temp%3A%20ClickMenuItem%20%3D%20hasBoth%0D%0A%0D%0A%2F%2F%20No%20error%20despite%20temp%20actually%20having%20both%20because%20TS%20only%20knows%20that%20temp%20is%20a%20ClickMenuItem%20%0D%0Aconst%20trickIntoAllowingBoth%3A%20OnlyOneClickOrComponent%20%3D%20temp%0D%0A).

Here's the type

    type RequireAtLeastOne&lt;T, Keys extends keyof T = keyof T&gt; =
    Pick&lt;T, Exclude&lt;keyof T, Keys&gt;&gt;
    &amp; {
        [K in Keys]-?: Required&lt;Pick&lt;T, K&gt;&gt; &amp; Partial&lt;Pick&lt;T, Exclude&lt;Keys, K&gt;&gt;&gt;
    }[Keys]

I am trying to understand exactly what is going on here. Here's what I am thinking:

    Pick&lt;T, Exclude&lt;keyof T, Keys&gt;&gt; &amp;

Type which are the remaining properties of the type T passed in, i.e., the properties you want to stay the same. Intersected with:

    {
        [K in Keys]-?: Required&lt;Pick&lt;T, K&gt;&gt; 
          &amp; Partial&lt;Pick&lt;T, Exclude&lt;Keys, K&gt;&gt;&gt;
    }[Keys]

This is where things get a bit shaky for me. I understand the ""middle part"", but I don't understand the addition of `[Keys]`. When I played around with that syntax a bit (removing it and including it), it seemed to swap behavior from. Here's the [TS playground](https://www.typescriptlang.org/play?#code/C4TwDgpgBA6glsAFgewK7AMoEdUEMBOEAQvrgMYDWEwAzgDwAqAfFALxQDeAsAFBRQBtANJQ4AOyhUQyAGZQGAXQBcUAApxKjADRQhLAGSdkslTWD5xAcwC+vWz16hIsBImx5CJclVqMW7bj5BEXFJCGk5RRV1TQYdPShDDmMZU3Mre2sBKVl5BV5HcGgAeVQyRDZOXn5+NHK0izFLOwKeJxKyxHgkNGAvSmoaSu6UdHcCYlIB31Lyplb2qFmu136fIfYR8c8p9bpl+YceMmQxMyhkAHdkACMVZZHetcHKwJqLzpU395qUlQByFL-LTVH61T5QQGdf6g-iZVonM7AC6XO5LTojZ60V6wj71SF1RDA3F-AmyGE8axAA) but also here inline:

    type WithoutSquareBrackets&lt;T&gt; = {
      [K in keyof T]: Pick&lt;T, K&gt; &amp; {oof: string}
    }

    type WithSquareBrackets&lt;T&gt; = {
      [K in keyof T]: Pick&lt;T, K&gt; &amp; {oof: string}
    }[keyof T]

    type Ouch = {
        ouch: string
    }

    type OuchWithoutBrackets = WithoutSquareBrackets&lt;Ouch&gt;

    type OuchWithBrackets = WithSquareBrackets&lt;Ouch&gt;

    const owob: OuchWithoutBrackets = {
        ouch: {
            oof: 'oof',
            ouch: 'ouch'
        }
    }

    const owb: OuchWithBrackets = {
        ouch: 'ouch',
        oof: 'oof'
    }


How do the brackets turn this from ""intersect the property for that key"" to ""intersect with the full type""?",Help me understand this utility type
1740,2021-08-08 08:40:49,48,1,"To execute a typescript file I have to compile it first or use an appropriate dependency.

For example:

* for executing node modules I have to either use `tsc` first and then execute them, or use `ts-node`
* for executing `jest` test files written in `ts` I have to use `ts-jest`
* for executing in browser I have to use `webpack` \+ `ts-loader` \+ `html-webpack-plugin`
* for properly converting `.ts` files to es modules I have to use `rollup` and I do not know how many more of its plugins, or do the following weird hack : [add `.js` in the imports of my `.ts` files and add `module : ESNext` in the `tsconfig.json`](https://github.com/Microsoft/TypeScript/issues/16577)

All of these weird hacks and dependencies, together with the time needed to learn their API + bugs + plugins, plus the time you have to wait for the compilation to happen in the development stage, can be avoided by just:

* use a jsconfig.json file
* use `.ts` files to define only types
* write the source code in `.js` files
* import in `.js` files the types from `.ts` files via JSDoc comments

The only disadvantage of that way of development is that JSDoc comments are harder to read. Well I do not know about you, but I would choose that anytime over the jadedness introduced by the development stage compilation of `.ts` to `.js`.

Not to mention that each time a compilation dependency is introduced, the chance to get a bug increases, security risk increases, and the code will not execute without that dependency.

I still remember when moving from `.js` to `.ts` the hard time I had to accept that I had to depend on so many packages for my code to execute and how much slow the development stage compilation was. After compiling `.ts` to `.js` in the development stage for more than a year in all of my projects, I now realize that back then, my hard time to accept the new ts norm, was legit.

Does any of you have any counter argument on my claims or at least agree with me, and why?","After a 1.5+ year of typescript development, I understand that my initial skepticism moving from js to ts is legit."
1741,2021-08-08 14:40:47,16,1,"What I'm trying to do is write a function, which take another function as an argument and return another function. I know it sound silly but its a simplified version of what I intended to do.  
[Here is a short playground to show what I mean](https://www.typescriptlang.org/play?#code/GYVwdgxgLglg9mABAWwJ4DFzXmAPAKEUXUQFMAPKUsAEwGdEAKAOlYEMAnAczoC5E2YVAEpEAXgB8AofgmNCiGGAAOIKJkiwE-dPmH8A3go6koIDmFI0N2bU1GTEAJVPmwAFVTLSudBIDc+AC+iEYKEAh0UIgmZhZWNlpIYgJ0qJCIoJo49qEKRLFuAgDubDDRSqrqWEmMwoFEIWwMgqj+iAD0Hc6kyHAAbqTSqIhQcIh0pENQABZDpBwccBz4xq4WeUQF65bWNTgANApBgUH4QA)  
The problem is that

the returned function had type  `() =&gt; ReturnType&lt;F&gt;`

which F is type of the input function  `F extends (...args: any) =&gt; Promise&lt;any&gt;`  


I got error

    Type '() =&gt; Promise&lt;any&gt;' is not assignable to type '() =&gt; ReturnType&lt;F&gt;'.
Type 'Promise&lt;any&gt;' is not assignable to type 'ReturnType&lt;F&gt;'

which I think is weird because `ReturnType&lt;F&gt;` **is** `Promise&lt;any&gt;`  


My solution for now is just type the return function as any before return it.  
I think it very easy to understand it when you visit the playground",ReturnType does not infer correctly
1742,2021-08-09 09:40:13,2,1,"Hello,

I started working with typescript recently and ran into a problem setting it up with eslint. I have a rule for no-multi-spaces and I want to add an exception for interfaces. Adding exception InterfaceDeclaration does not do the trick. Any suggestions?",Typescript + eslint
1743,2021-08-09 14:58:31,8,1,"Hello!

I'm working on a typed API for a JavaScript ECS architecture ape-ecs. I'm having an issue with inferred types around the instance of a class vs. the class prototype.

Here's a full playground, the relevant part is on line 49 and below: [TypeScript Playground](https://www.typescriptlang.org/play?#code/C4TwDgpgBAwg9gOwM7AE4FcDGw6oDwAqAfFALxQDeUCEA7lABQB0LAhqgOZIBcUrCIANoBdAJS8CUAL4BuAFChIsADaskSAuAiES5KjXrM2nHnwEjxUSbIVbYcALZhEEBMBir1hAAqo4kVGAASwgkXRU1DS08eCcXNx8-AODQoiJ5ABMITFVUaBzI+ziaBIJffwhAkLDKOSh6qDAkypTTMuaq0PkGqBRWYMxGjtbefhB5KTk5ADN0BGwgxCstDNjnEuBEis6whjqGpu3WgH4JcuTquUsPSM1IGMd11032o+q0qAAyffr4ZDQsDh8Gt4i9zi13l8rOCdiQKD8oJhECgoIoIKtPEgyIjMctIKtHqCoBAAB7AVwZLEgjZbC6pSg2HpojGRJiHOlYvRQFhs4bVaTdBoAeiFUAAAsAkABaIIcBC4CAIvLAdCoBColY3dQTKZZAp5HGFACibiCoAZUzRePR1Oef2msoAaqxlDpsZJSeSEJTakytLw-igMNhcA9is88EEENNKtC+al0nJJj1jpQNZAJIIAERorPCGRQIIZU69NBRjgF55mkAloPl6RQ14chG8GgAN0q8lsSju6JNwVA9tlbr0CKLtbLCArCOArC4E9Q5ZEgvqmBL8J6PUEAGlC+qANYQEBwaZWYSZ7fCYlkilYjebh9ogPIgEh4GEmlRmOoONvBMrzdkwfTdU17AlwzcIcOGdV0CB3YQiARYCoFbCAO1QACbBsOQ9VyaBZnmYIlkwPJ+ggftq17JBWBjHQ9h6LIHQQM1FgQCQVgowdEAdDgdCuXhOPGKYCnUKBvDgJAWKWT1b2tcCnjcBh73qEleAABgAGgREB1K0qRRAtOQRKxR0IGUOBMGra8vR9MDbQSKgMlU6h0AcAAjTsoAyHSXPczyMgALxLBBXI8n8pCIJSESc3Top8zSkwMihJjkEUoAcfh0BdZQQHTetgAAC2gMDBKgqBaFwfckCMl8oB8krTS46NhwRQQqCfdMIBPMSJKkhApA0tMOrRbrTPMyzQCkYQ5HCZTEV4QQkIadr-R6ySiIQQbnIARkGnztukLTkJWjMoDGizq0GmKoF2ryfIAcijNsXSLTrGCQAq4HQZQMigDzfLC0R7oGhFhD0rsjNI8lBKomiICinoi14LNtqzI6GkwBalvqObkI686JpAdHkPqa7duxzdvN4cnkJBnowcSmQgA)

In short, I'd like to be able to infer the type of arguments to enforce that a class, passed as a value `type`, agrees with any additional properties.

Here's a more concise example:

```ts
class Velocity {
  dx: number;
  dy: number;
}

// ...

const selfConsistentDefinition = {
  type: Velocity,
  dx: 1,
  dy: 'one',
  //  ^ should error
  invalid: 1,
  // ^ should error
}
```

The current type for the config is

```ts
type TypedComponentConfigVal&lt;T&gt; = T extends {
    type: Constructor&lt;Component&lt;infer TProperties&gt;&gt;;
}
    ? { type: T[""type""]; id?: string; entity?: string } &amp; TProperties
    : never;
```

which works if I manually specify the type, but cannot be inferred.

The existing `Component` needs to stay the same to interface with the library properly.

Thanks so much for your help!",Constructor/Instance Types for an ECS Architecture
1744,2021-08-09 16:26:59,16,1,"I have searched many projects on GitHub to find starter templates to bring typescript to express.js web app projects. And most of them are outdated or they are not complete.

1. Is there any good template out there?
2. How should I go about doing this from scratch?
3. What are some essential tooling required in order to make this maintainable?",Typescript + Express starter template
1745,2021-08-09 16:41:25,0,1,[removed],Formidable with typescript
1746,2021-08-10 13:28:01,9,1,"Hello folks, I've been assigned a task that gave me crippled depression.

I have a table that holds a key and language for example; key, en, fr

I retrieve the data and put in to and object like key and value, for example data.resources.topic will give me either en version or french depending on the language of the site.

My question is, I want typescript to warn me if I write data.resources.tpoic instead of data.resources.topic

&amp;#x200B;

Is this possible? I beg your pardon if it is a dumb question",Strongly typed for resources?
1747,2021-08-10 16:50:34,4,1,"Hi everyone,

I have been using Typescript for years now and loving it but there is a problem that I have tried to crackdown a few times and failed every time. So I have decided to build a minimum version of the problem and seek for your help :)

Let's see if I can explain it correctly.

The goal is to build a type validation system, based on the schema used by the developer. This is an example code the developer would write, I also include what is working and what isn't:

    type Product = {
        name: string,
        price: number,
    }
    
    export const productSchema = buildSchemaFrom&lt;Product&gt;({
        properties: {
            name: {
                dataType: ""string""
            },
            price: {
                dataType: ""string"" // THIS SHOULD FAIL
            }
            // missing: { // This fails if uncommented, which is expected
            //     dataType: ""string"",
            // },
        }
    });


And now I include the code in my library, which does not work as expected (as described above):  


    // an EntitySchema is a record of properties
    interface EntitySchema&lt;Key extends string = string, T extends any = any&gt; {
        properties: Record&lt;Key, Property&lt;T&gt;&gt;;
    }
    
    // a property can be a StringProperty or a NumberProperty in this example
    type Property&lt;T = any&gt; =
        T extends string ? StringProperty :
            T extends number ? NumberProperty : never;
    
    interface StringProperty {
        dataType: ""string"";
    }
    
    interface NumberProperty {
        dataType: ""number"";
    }
    
    // This function is in charge of taking the type defined by the user, like Product
    // and return a schema with the right types
    function buildSchemaFrom&lt;Type extends Partial&lt;{ [P in Key]: T; }&gt;,
        Key extends Extract&lt;keyof Type, string&gt; = Extract&lt;keyof Type, string&gt;,
        T = any&gt;(
        schema: EntitySchema&lt;Key&gt;
    ): EntitySchema&lt;Key&gt; {
        return schema;
    }

[A link to TS playground in case it helps](https://www.typescriptlang.org/play?#code/PTAEBUAsEsGdQGbQDYFNQGMD2A7ALgIbQ7wGgC2x05AruaKgB4HkAOaoARgbKgCahcmGgCcRqfJix9UAKBCg8WUL3R5IBPIshqAnq3QYdGANbEA5qGKDRKo6nI9QfLKng4sWgO5YRJ2cR4qCIIBBjoAKL40Hi6AMr2jgA8ANKougyMQTh88LB4IhagALwqBRYANBCZ2bmgBDgZpQ26AHygAN6yoD2grCJYBiJ40G4AXKAASqjYInyp6VUACgNDsUngra0A3LIAvrKysQagK4PB6+Al9Y3txd29V0y1eeU4lgD8oHFv5mdrGTGD16jxqEjqODonGCoC+ADkocF-hdAaAcKgAG7BXaHQLBULhb6-ZHDDJdEF8TQEcD6VATABE+UK73puwOAXw+LC6AR5GhIhJsU6wOcVJpBgZkL5wVZ+0OCBoOAwIyEnBoKD4CR0jgAYgNyBtaWCcvAlgRhtACMgkh1QABtJZWHCgNK6AC6E3A21Ae1aFRFruNdQiWREYTwSRM6SwCAgtKqTIsd1AIYK4cj0dj4tQCd+fpFV2atwAFCLYIkCBMoiNYlqHAQFm1ZABKKvRWsVxvtcm9cR4UTO8vaghsw7HdBnPg0ZXXHs9HAsOllZnmf0g-rQcITKX8-3spisXxabAkLT9aTTvB1xzXNUa68EPVYA2Ty+tYtzvqrC6jWATT8ggu5BLgBIK9JShDZgyiYsiKIJ7GuYE9BuW7CkhSEQdStLQb89KgAo4AABIAJJxN8hEAPIAKoADIACKgDqACCxE0XBvQHOh+FgJQsCwBY-7cRAMDwKEKDwNAsaKtg5DAZyfBVF4MBGFY8AHjMQR8OxPQKBSYrYaAjK4YhSEKAhIoHHsza7EAA)

Any help of finding a way to  make it fail when the \`price\` dataType is not \`number\` would be highly appreciated!! :)",Advanced Typescript question
1748,2021-08-10 16:52:38,0,1,[removed],error when importing react-multi-carousel in typescript
1749,2021-08-10 17:35:05,1,1,"I'm trying to figure out if TypeScript is able to achieve the following: I have an object with React components defined. But before rendering these components, I want to ""guard"" the props to check for nulls, other conditions, etc. But the guard should be optional.

I looked at https://www.reddit.com/r/typescript/comments/cpozpx/preserving_generic_type_in_mapped_types/ and https://manrueda.dev/blog/typescript-complex-types/ and there's some material there that could be relevant. Here's the code below. Note: *it does work*. But I'm curious if it can be *merged* into a single object. For reference: using TS 4.3

Please disregard the ""bindProps"" first step. It's just a way to get the props bound for the actual meat: defineTabs and where I call ""defineTabs"" further down.

    function bindProps&lt;Props&gt;() {
        type Guard&lt;Guards&gt; = Guards extends (props: any) =&gt; infer U
            ? React.ComponentType&lt;U&gt;
            : React.ComponentType&lt;Props&gt;;

        function inference&lt;
            T,
            Guards extends Partial&lt;Record&lt;keyof T, (props: Props) =&gt; any&gt;&gt;,
        &gt;(guards: Guards, tabs: {[K in keyof T]: Guard&lt;Guards[K]&gt;}) {}
        return inference;
    }

    interface Props {
        day: true;
        entry: number | null;
    }

    const defineTabs = bindProps&lt;Props&gt;();

    defineTabs(
        {
            firstTab: (props) =&gt; {
                if (props.entry == null) {
                    throw new Error("""");
                }
                return {
                    ...props,
                    entry: props.entry,
                };
            },
        },
        {
            firstTab: (props) =&gt; &lt;div&gt;{props.entry}&lt;/div&gt;,
            secondTab: (props) =&gt; &lt;div&gt;{props.day}&lt;/div&gt;,
        },
    );

    defineTabs(
        {
            firstTab: (props) =&gt; {
                if (props.entry == null) {
                    throw new Error("""");
                }
                return {
                    ...props,
                    entry: props.entry,
                };
            },
        },
        {
            // Entry is of type number here due to the guard.
            firstTab: (props) =&gt; &lt;div&gt;{props.entry}&lt;/div&gt;,
            secondTab: (props) =&gt; &lt;div&gt;{props.day}&lt;/div&gt;,
        },
    );

And here's how I *wished* it looked:

    defineTabs({
        firstTab: {
            guard: (props) =&gt; {
                if (props.entry == null) {
                    throw new Error("""");
                }
                return {
                    ...props,
                    entry: props.entry,
                };
            },
            // Entry is of type number here due to the guard.
            component: (props) =&gt; &lt;div&gt;{props.entry}&lt;/div&gt;,
        },
        secondTab: {
            component: (props) =&gt; &lt;div&gt;{props.day}&lt;/div&gt;,
        },
    });

Any ideas here? Am I stretching the type system to its limits? Thanks in advance. Pinging /u/SeriTools who seems to be a wizard at this.",Mapped types with self-referencing inference
1750,2021-08-10 20:33:25,6,1,"Alright gang, I've got a problem here that I am _sure_ typescript can solve. 

I've got a discriminated union: 

    interface Cat {
        type: 'cat',
        name: string
    }

    interface Fish {
        type: 'fish',
        count: number
    }

    type Pets = Cat | Fish

Pretty standard. I want to create a type that contains multiple versions of the data in these unions using the `Extract` utility type:

    interface PetRecord&lt;P extends Pets, T extends P['type']&gt; {
        type: T,
        versions: Extract&lt;P, { type: T }&gt;[],
    }

This works, allowing me to create typed pet records: 

    const petRecord: PetRecord&lt;Pets, 'cat'&gt; = {
        type: 'cat',
        versions: [
            { type: 'cat', name: 'Whiskers' },
            // @ts-expect-error 'cat' is not assignable to 'fish'!
            { type: 'fish', count: 1 },

        ]
    }

Okay, looking good. It would be nice if each objects inside the versions array did not have to include their 'type' property, as it is redundant. Easy, we use the `Omit` utility type: 

    interface PetRecord&lt;P extends Pets, T extends P['type']&gt; {
        type: T,
        versions: Omit&lt;Extract&lt;P, { type: T }&gt;, 'type'&gt;[],
    }

    const petRecord: PetRecord&lt;Pets, 'cat'&gt; = {
        type: 'cat',
        versions: [
            { name: 'Whiskers' },
            // @ts-expect-error 'count' doesn't exist on Omit&lt;Cat, 'type'&gt;!
            { count: 1 },

        ]
    }

Great, almost done! The only thing I'd like to change from here, is removing the requirement of the second string type argument, as it's redundant: 

    const petRecord: PetRecord&lt;Pets, 'cat'&gt; = {
        //                           ^ be great if we didn't need to write this
        type: 'cat' //               &lt; as it is right here
        versions: [{ name: 'Whiskers' }]
    }

I've been screwing around for a couple of hours trying to get this last bit to work, but no success. Perhaps I need to do something more complex with conditional types and inferences? 

What do you guys think?",I'm stumped! How do I infer union discriminator properties?
1751,2021-08-11 05:29:19,1,1,,EfficientNet - image recognition and object detection model written in node and typescript
1752,2021-08-11 11:29:46,0,1,,EfficientNet - image recognition and object detection model written in node and typescript
1753,2021-08-11 22:13:17,9,1,"So I am building a library that creates schemas based on the developer input and I have found a roadblock with the Typescript type system, specifically with how types are inferred.

I would like that when the developer enters:

    export const productSchema = buildSchema({
        properties: {
            name: {
                dataType: ""string"",
                stringValue: ""my string""
            },
            price: {
                dataType: ""number"",
                numberValue: ""my string"" // only this should fail but everything does
            }
        }
    });

the type of  productSchema would be

    EntitySchema&lt;{
        name: string,
        price: number,
    }&gt;

I also need that when the `dataType` of a property is e.g. `string`, only the corresponding keys are accepted (`stringValue`, in this case)

[A link to TS Playground with the full example and my code](https://www.typescriptlang.org/play?ssl=33&amp;ssc=6&amp;pln=30&amp;pc=1#code/JYOwLgpgTgZghgYwgAgKLmGAngZQQCwgFs4AeAFWQgA9IQATAZ2QG9kBtAawC5lGwooAOYBdXnBBZkAXwB8rAFDJlyAA5QA9quhhgERrxZKVJrslDJOELBpjJyY5AAVN2qNgpcRsgNzHl0n7SCgrY2s6uOlikACJwYHDkWNryALz+yHEJSeE0dEx8AsLIAPzIOEUgQi5aUcjcGSZZickoeRAMzCAArkQARtClyAByvQNQNW7Y9cggEABu0H4hoJCwiCgVglWTdUYm9PEt2rwARPzbQqd+JhfCAGpwADbdELx3VUEr4NDwSCNjaC7dxSfYqQ7ZVpnHr9aDXDIw8aPF5vWaAqBfBQwbogBC6DQgZB9brAJ70PCEEgUKi0DoFNhcd6VUTiSQyeQACgyjAIxDgvHQumwFL5FFkABoFABKAUYYW8qnkeRg5RQCBgbpQQk8ylwTEKAD0BvshGQQg0z2QAHcNN0yUSUGB8PFkAADdQaejdPEikiu8zMWzIMJvQ3GwWYXAKshGI0mWZwIioj5CSVxkzqYBIXiI6Bp41yBQ0VQadzIBAE-hqTRen3R5CpIkksm+uAclXV2ruPQGRTxlQgROojv95QQ46o87M06S0fxlPI15nIhSFOnRoqaSz0eZ7N9ufgo45Se5qAzjf90+LycrwqXU7IOMEp5SJ3AZiMfC2+3wUkXmQZME0hSn4QA)  


u/guigui_ was of great help in [my previous question](https://www.reddit.com/r/typescript/comments/p1t6ix/advanced_typescript_question/), but I oversimplified the problem and it is not enough to cover the use case of my library.

I will happily pay for your beers for a week if you manage to help me here! :)",Advanced Typescript question II
1754,2021-08-12 17:16:06,5,1,"Heya,

I want to use generic inference to avoid specifying my types over and over again.

I have a simple groupBy function:

    const groupBy = &lt;K, V&gt;(f: (el: V) =&gt; K) =&gt; {   return (acc: Map&lt;K, V[]&gt;, el: V) =&gt; {     const existing = acc.get(f(el))     if (existing) {       existing.push(el)     } else {       acc.set(f(el), [el])     }     return acc   } } 

I can use it to reduce an array in a map of key and values like so:

    const foo = [{ bar: ""x"" }, { bar: ""x"" }, { bar: ""y"" }]  const bar = foo.reduce(groupBy(({ bar }) =&gt; bar), new Map())   // correctly returns {""x"" =&gt; [{ bar: ""x""}, { bar: ""x""}], ""y"" =&gt; [{ bar: ""y""}]}  

My problem is that if I just type new Map()  
 the inferred bar type is wrong:

    const bar: Map&lt;any, any&gt; 

How can I leverage typescript so it can infer the correct Map type without having to specify it every time?

This is a well know problem in e.g. Java where you use static constructors inference like

    static &lt;T&gt; newMap { return new Map&lt;T&gt;() }  // foo needs to be of a certain type T foo = newMap() // the compiler automatically assigns it the correct type based on context 

How can I accomplish the same in TS?",Help on how to use generic inference
1755,2021-08-12 20:23:22,0,1,,First video! Used Create React App to create a simple React app using typescript. Be gentle 🙈
1756,2021-08-14 03:21:52,21,1,"I have had a few requirements where I need to generate a new object from a source object and change the value of a few properties a couple of levels deep. Trying to do this with nested spread operators can drive you insane so I wrote a function where you can go

`const newObj = update(source, data);`

newObj will contain the old properties from source is they have not been updated but any properties in data will create new properties in newObj.

eg:

`const newObj = update({ unchanged: { a: 'value' }, changed: { a: 'value' } }, { changed: { a: 'new value' } });`

Will create a new object

`{ unchanged: { a: 'value' }, changed: { a: 'new value' } };`

Where the property unchanged is the same reference to unchanged in the original object and only the property with changes is a new object instance.

Here is a StackBlitz I am playing with.

[https://stackblitz.com/edit/typescript-jjyz2w](https://stackblitz.com/edit/typescript-jjyz2w)

Main help am looking for is what to name it. update is a bit generic and it doesn't really update anything as it is creating new object instances. It is kind of like like a spread or object assign but you can go as deep as you need rather than just the top level properties. deepAssign maybe?",Looking for some suggestions for a function name that take a source object and returns a new object with the properties copied from a data object.
1757,2021-08-14 16:02:40,16,1,"I don't even know if this is possible with typescript or not.  
What I want is to type a set of function, these function will have 2 argument, the 1st argument will have have constraint to 1 type, and the 2nd argument can be what ever, and will be infer base on the actual implementation.   
Something look like this but this code will yield error

    type KeyOfConstrainInfer = 'functionA' | 'functionB';
type ConstrainInfer = {
  [K in KeyOfConstrainInfer]: &lt;T&gt;(arg1: boolean, arg2: T) =&gt; void;
}

const contrainInferObj: ConstrainInfer = {
  functionA(a, b: number) {
    console.log(a, b)
  },

  functionB(a, b: string) {
    console.log(a, b)
  }
}

contrainInferObj.functionA
// Shoud be typed as (boolean, number) =&gt; void

contrainInferObj.functionB
// (boolean, string) =&gt; void

I know why it has error, just can not think of how to make it work, or could it be possible at all ?","Constrain the first argument, infer the second argument ?"
1758,2021-08-15 20:08:27,8,1,"Just wondering why rule #1 exists?  
Why can't we have something like the cpp-subreddit with a quarterly post for job-listings or like typescript who does a monthly one?  
I quite like looking at the various companies advertising their services as employers.",Why no job postings?
1759,2021-08-17 01:02:34,6,1,"Hi!  
I have this code:

    interface ClientComponents {
      readonly main: [name: string];
      readonly meta: [description: string, age: number];
    }
    
    interface Component&lt;K extends keyof ClientComponents&gt; {
      readonly name: K;
      readonly once?: boolean;
      readonly callback: (...args: ClientComponents[K]) =&gt; void;
    }
    
    function createComponent&lt;K extends keyof ClientComponents&gt;(component: Component&lt;K&gt;) {
      return component;
    }
    
    const mainComponent = createComponent({
      name: ""main"",
      once: true,
      callback: (name) =&gt; console.log(name),
    });
    
    const metaComponent = createComponent({
      name: ""meta"",
      once: false,
      callback: (desc, age) =&gt; console.log(desc, age),
    });
    
    const components = [mainComponent, metaComponent];
    
    for (const component of components) {
      component.callback();
    }

At the end of the file, I use a loop to try to access the `callback` function of each component.  
However, I can't pass the correct parameters there, because TypeScript compiled them incorrectly.  


What TypeScript does:

    (property) Component&lt;K extends keyof ClientComponents&gt;.callback: (description: string, age: number) =&gt; void

**What I need:**

    (property) Component&lt;K extends keyof ClientComponents&gt;.callback: (...args: [name: string] | [description: string, age: number]) =&gt; void

[**TypeScript Playground**](https://www.typescriptlang.org/play?#code/JYOwLgpgTgZghgYwgAgMIBtgXKg9gWwAdcRswBnZAbwChlkoI4ATE9AT2XzlAC5kA2iDj4I-cmCigA5gF0A3HQZNWIDlwhg4-AcwjkEUwmGAlxkmQBpkcaWOQgArvgBG0BTQC+NGqEixEFDwiEjIAHgBpZAgAD0gQZkoAawh2XBg0TDJg4lJwcgA+aiVGFjZOYVF+CMV6UtV1EiQAfn4XXFx0JhBa5TK1TgQ4dHQXRCT+AAoAOlm4KGlyfgwsHAJcsnIBCNkASmQAXiKAN1xgZkVvGhhHEAQTEmRDJkgc0PBI6LjsROQUtIyK2y63eFAKkwQILyYGWUPCEQK+1odU0jigICecPAlx8kJAEi4PBAb2hhyepVeWLAk2RDhE9gARNxQAzLEomvZJI4IGz6EMRmMEBNkJNKhB9kdMfjOhBpuhcNJRfTdmzPLtFDQ8QTRFoSWQyc84JSQtCaUoxfwmZo4Kz2Xd7PB0OQeUp+aNxlM9AZrLZxYcilqZXKFZMvQgfXYVV51biSATISbNmSBMziVTrDq4HrwB5NXGwDYFpQDsV6KmdAyAOokPRQBmyXkaLQVgAq+jArOQAEYG14NTBcFARVqCwmNuBkOlMYn8kjXVTpm7BUlJvNFgIx6DpmK9pcgA)",TypeScript incorrectly defines the array type.
1760,2021-08-17 17:49:23,0,1,"Hey Reddit,

I was working on a project which involved using node and EJS with typescript. While working on it I realized using typescript with nodejs is straightforward, but to use typescript in frontend with EJS can become tricky and involves you using a bundler along with a tsconfig and gulp (can require, depends on you). While researching I didn't find any tutorial on that (you can find it for React, Vue, etc) so thought of creating one for myself.

Got to learn **gulp, webpack, and some detail in tsconfig and node,** hoping it might be useful to someone so here's the link: [Nodejs, EJS with Typescript using Gulp and Webpack](https://rohitlakhotia.com/blog/nodejs-ejs-typescript-using-gulp-webpack/)

I would actually love to hear your feedback or maybe if you have some other way to do the same.","Nodejs, EJS with Typescript using Gulp and Webpack"
1761,2021-08-18 06:02:13,2,1,"[https://trpc.io/](https://trpc.io/)

It  looks like an alternative to graphql, but with the advantage of  everything being in typescript and not having to learn another schema  language.

I could barely find any  reddit posts talking about how people found this, so I was wondering if  anyone here has used it before? Should I try this library instead of  Graphql?

It has over a thousand stars on [GitHub](https://github.com/trpc/trpc), but I find very little about it online","[AskJS] Does anyone have any experience with trpc.io (""End-to-end typesafe APIs made easy"")?"
1762,2021-08-18 17:52:14,7,1,"I'm seeing an issue where my react project is now failing to compile, supposedly because a parameter implicitly has ""any"" type. 

    /app/src/components/pages/lists/miscShared/ListMenuOverlays.tsx/MembersOverlay.tsx
    TypeScript error in /app/src/components/pages/lists/miscShared/ListMenuOverlays.tsx/MembersOverlay.tsx(36,41):
    Parameter 'member' implicitly has an 'any' type.  TS7006
    
        34 | 
        35 |     const renderCurrentMembers = () =&gt; {
      &gt; 36 |         return currentList.members.map((member, index) =&gt; {
           |                                         ^
        37 |             return &lt;span key={'member' + index}&gt;{member.displayName}&lt;/span&gt;;
        38 |         });
        39 |     };

The thing is in the code typescript does know what type members is.  `currentList` is of type `TgiftListFields | TbasicListFields` both of which have a `members` field. TS correctly identifies that in the IDE and if I hover over members it tells me:  

`(parameter) member: IgiftListMember | IbasicListMember` 

So I'm very confused. As far as I can tell TS does know what type members is yet I'm seeing this error anyway. What am I missing?",Parameter 'member' implicitly has an 'any' type despite TS knowing what the type is.
1763,2021-08-18 20:31:41,0,1,[removed],Abstract arrow method in abstract typescript class.
1764,2021-08-19 04:13:10,2,1,"## Quick Overview

*You must already be familiar with JavaScript if you have worked on any Web development project as JavaScript has been here for quite a long time now. Besides being a popular scripting language, JavaScript has served in developing enormous web projects. However, ever since TypeScript has come to play, the dynamics have changed. Initially, JavaScript code was unable to handle complexities. Hence, TypeScript was introduced. It is an open-source programming language that is usually adopted for large applications. Although both serve the same purpose, they are quite different from each other.*

## Instigation

To be quite clear, each of your JavaScript codes is valid in TypeScript; which denotes that TypeScript is a bigger picture or bigger scope of JavaScript. In simple terms,

***JavaScript + extra features = Typescript***

Hence, if you save your (.js) JavaScript file with (.ts) TypeScript extension, it will work just as fine. However, do not misunderstand that JavaScript and TypeScript are the same. This guide states the basic differences between both of them. Without much introduction, let’s get a brief overview of these languages!

## What is JavaScript?

JavaScript is the most in-demand and preferred programming language- whether for the Web or to go with HTML. Javascript is Cross-platform and lightweight; it is an object-based scripting language used to build client-side dynamic pages.

Each program in the JavaScript language is known as a script. These scripts are noted in HTML pages and implemented automatically when the page loads. JavaScript is carried out as plain text. Hence, it does not require any special or unique compilation and preparations to run. There are several [Javascript frameworks](https://www.bacancytechnology.com/blog/javascript-frameworks-trends-2018) in the market that you must know about.

### History Of JavaScript

Created by Brendan Eich(programmer of Netscape Communications Corporation), JavaScript was built to work on Netscape navigator. However, with a huge gain in popularity, this popular scripting tool turned to LiveScript. Later, It was again renamed as JavaScript to consider the Java support of Netscape within its browser.

Below is a significant landmark in the History of JavaScript. Let’s have a look!

* Launched back in September 1995, JavaScript took ten days to develop. Initially, it was known as Mocha.
* Later, in November 1996, Netscape presented JavaScript to the European Computer Manufacturers Association(ECMA) International.
* In 1998, ECMAScript 2 was released
* In 1999, ECMAScript 3 was released
* Later in 2005, Mozilla and Eich joined ECMA to build E4X JavaScript.
* January 2009 was the day when the CommonHS project was launched to define a usual and common standard library.
* In 2011 June, ECMAScript 5.1 was released
* In 2015 June, ECMAScript 2016 was released
* In 2017 June, ECMAScript 2017 was released. This is the current version as of now.

### Features Of JavaScript

https://preview.redd.it/qqsk0ztop8i71.png?width=1100&amp;format=png&amp;auto=webp&amp;s=c2235cf60aa92a41f72037beefd3fa1e47b4b51c

* JavaScript is a Cross-platform language
* It has a high learning curve
* It is easy and friendly to get started with
* JavaScript is used for server-side and client-side
* It is extremely robust, flexible, and powerful
* JavaScript is a dynamic language
* It has added dependencies
* It offers a robust testing workflow
* You have all the freedom and right to operate it however you wish to.

You might want to know the [most trending Javascript frameworks](https://www.bacancytechnology.com/blog/javascript-frameworks-trends-2018).

## [Read more: What is TypeScript?](https://www.bacancytechnology.com/blog/typescript-vs-javascript)

***Note: Spam is like a deadly virus in your body and computer, so please don't do it.***",Humble comparison of TypeScript &amp; JavaScript: Come Face To Face In Battleground
1765,2021-08-19 12:10:36,9,1,"I've be wracking my brain this week. When I start a react typescript app and turn on noImplicitAny I never get compiler errors. I can mouse over the variable to confirm it's ""any"" type but no errors. Is there something about TSX that does this?",Is TSX not compatible with all typescript rules?
1766,2021-08-19 12:28:29,5,1,"a while do I was working on a helper function that allows me to do this:

    let isButton = isHTMLElement('button')
    let isDiv = isHTMLElement('div')

    let button = e.findPathElement(isButton) 
       //compiler infers HTMLButtonElement |undefined type
    let [btn, div] = e.findPathElementMany(isButton, isDiv) 
       //compiler infers [HTMLButtonElement | undefined, HTMLDivElement | undefined]

however I realised that the first helper can be reworked so that it works just by using `keyof HTMLElementTagNameMap` so looks like this instead:

    let button = e.findPathElement('button')

I can't seem to convert my `findPathElementMany` function to work the same way &amp; need some assistance if possible.

currently its defined as such:

    findPathElementMany&lt;T extends IsHTMLElement&lt;any&gt;[]&gt;(...fns: T): FindPathElementMap&lt;T&gt;;
    type FindPathElementMap&lt;T&gt; = { [K in keyof T]: T[K] extends IsHTMLElement&lt;infer E&gt; ? (E | undefined) : never };
    type IsHTMLElement&lt;T&gt; = (obj:any) =&gt; obj is T


    Event.prototype.findPathElement = function &lt;T extends HTMLElement&gt;(this: Event, fn: IsHTMLElement&lt;T&gt;) {
        return this.composedPath().find(fn);
    };

    Event.prototype.findPathElementMany = function &lt;T extends IsHTMLElement&lt;any&gt;[]&gt;(this: Event, ...fns: T) {
        return Object(fns.map(el =&gt; this.findPathElement(el)));
    };

The `FindPathElementMap` &amp; `IsHTMLElement` could most likely in my opinion be obsolete if I can get below working:

    Event.prototype.findPathElement = function &lt;K extends keyof HTMLElementTagNameMap&gt;(this: Event, selector: K) {
        return this.composedPath().find(isHTMLElement(selector));
    };

    Event.prototype.findPathElementMany = function &lt;/*something*/&gt;(this: Event, ...selectors: T) {
        return Object(selectors.map(selector =&gt; this.findPathElement(selector)));
    };

[version using IsHTMLElement type](https://www.typescriptlang.org/play?#code/CYUwxgNghgTiAEBzCB7ARlC8DeAoe8AlgHYAuIMAZlGAgKIBuIZOu+B8lJwAClKQAs6EEAFtmpADwAVeCAAe5YsADO8ABLSAsgBlhYiQD4AFJWIAueAEkVm3fvFkZhgJSXZAH3gBXZSC7EIMAA3GwcnNx8gg4SWlDEAJ4ycorMqta22noijlLxCYYA2gC6JgB0FWYq7m7wAGKR-EI5sVAADs6hBAC+YfCkCW0INnbZBk7ShvAAvPDG6ABWlvkuM1OLRGrSoewDQ-WN0S1kcR2TMzjwhQDSRMTwANYgCSiU8NLF7jfFKUrpI1kYk4SJQKPA6FMAPxzOjwLy+UABIKrSyBJgweDdUK9XCMCRlNowFCkYmDEBlAK8JpA0gXSi+MCkQgoe7JBR-NSjGkmQSEargphkAA0nAsGS5xykk1WeAIcFI3hg915KjKYBQojaKBUQSiAmMLgp3FMxBc2J2eLIBKJJL25MpeppcUSdIZTJZ8DZqWUagB9klknyRVKxhVlktpBFFQpxH50hl7HlivuAHk0AtwKQTarRO1jCAsNMpiqjcpHZL8xAXNXzWwFFqYLT1bHaXyJeNabNJLd2Wk1E8Xm927lpFBEAA5KDiU4i2S9n0aQGS0cTqcgU7fcoVHUiRkoGD8gCCMBgUCS11cazmi2WiVqGz57yvO8z+9VKg1IGML73GKL8EWMpUDATBJ3EGZZh-EkYDNNh6WIRlmWVEAVCzEBw0FUgE3YERWxUAAhbxSBJe5ZjbJcO2MAByNAiJIqiXBwkA8IAEUIBgLnI-1KKo4B2IY9gmNpQpaOIlkRT4hgflme1DmaDtnQSYw+UIsTiBFPk2IYWDuiAA) is currently how it works &amp; works well however having to define a `is""Element Tag Name""` is more excessive than I thought

[version I am trying to migrate to](https://www.typescriptlang.org/play?#code/CYUwxgNghgTiAEBzCB7ARlC8DeAoeB8AlgHYAuIMAZlGAgKIBuI5O+hHVpwAClGQAt6EEAFsWZADwBpeCAAeFEsADO8ANYgAniirwAEgBUAsgBlhYiYaiIAclHHGoABwB8AChUgRYMihgAXPDSAJRBRmYW4uTWdg4gTs4A2tIAuvAAPvAArsogXCQgwADc7BwEBbz8QiLRZE4kWjJyiiyq8ACCMDBQTZo6ehHmtVY29o4urgA08IYtSu1dPU3Srh4AdJtePn4wKkGhQVCNpRwAvrhl8GRazggAkipDURKShq7wALzw7ugAVkdGiEvh9-sQ1IZShdcEwJOtnDAUH4bnd1pU+IIXqxvlRcr4iCgSPBmgoFmp+roDCZhpYYmN4okPIIiPt4LDyDNtuBdgdgXgOHAyNkYETmSp1mAUKJnCgvFVBO4QmjuO4Wc8RuRPN5uf4QiEoaUYcxyPDEcjbiBlcoMTVafVjlovvBcSR8YTibJSW01EtepIKYNqViyLFxglJjM5l7lD7un7VkyBCyguyyDNNusub5-KzQvzCILhUSAPJoP7crU7HPrUQuSs6mAg65J8Xo6rB+vZmB6-W4M6G3AKGUwMjwSUkFSjtVBjWj74k1oxjTaSnqu2hhkuSPzb1UyKzjcTZJpDZbbVd1m+lauYGfD6-MuArRheBglmzJtZ3bilRSkCd3Ym3+dZUDATAwy+b4v11Q0XTdUUQEndwQBTY0yD5S4OBEUc0GyMg-BIABGJ1LTbTFZ3cAByXD8MJSjgQAegYgB3fx1DUAoQEwwhsPgJIaIImZgCIRh0m+UjuBtYMGi0KiBLomZKOExh6KhIA). I know the function works without types, however the compiler complains and unsure what to change so need some help please.",returning HTMLElement types of array elements from my custom Event.composePath function
1767,2021-08-20 20:42:13,0,1,[removed],"AVEROS framework : a low-code web application development framework based on typescript, angular (^12) and schematics"
1768,2021-08-21 09:52:41,0,1,[deleted],EfficientNet - image recognition and object detection model written in node and typescript
1769,2021-08-21 10:09:03,0,7,,EfficientNet - image recognition and object detection model written in node and typescript
1770,2021-08-21 10:09:03,0,1,,EfficientNet - image recognition and object detection model written in node and typescript
1771,2021-08-21 10:09:03,0,10,,EfficientNet - image recognition and object detection model written in node and typescript
1772,2021-08-21 12:44:25,1,1,,EfficientNet - image recognition and object detection model written in node and typescript
1773,2021-08-21 12:44:25,0,0,,EfficientNet - image recognition and object detection model written in node and typescript
1774,2021-08-21 22:30:16,0,1,[removed],how to create an array inside a property object in typescript
1775,2021-08-22 13:07:48,2,1,"[https://www.typescriptlang.org/play?#code/KYOwrgtgBAKgngB2AZygbwFBW1AglAXigHJdiAaLHAIUJOoowF8MNRIoBlAFwENvUmHFADCdYiMbCAIuOlScAUXGLGLDN0TAufbtTjwkAHhhRgAD26gAJqkMoAfHVMWrIW7C3IAdLioB+HX4fMQAfIIFvaSoALlgzSxs7L29qAIifRVioEGAAN2AAJwBuVk0kCIBZXgQTBLcPe2QnIiEcAG1OKABLEAj9exMHAF048AgAIyLS9XLte2qEOjQodtNezyRkUaqaoah1AGMAexBkbhyUK2s4hZrlqmw1lNwdtuEnnmDvER2ARkoHw6X0i0n+gJwTAhTyaqTejw+nV0mXBCJYR1O5ygc2cL1KJzOF3O-DoIJCpQwBKx4zouXOwGs7Tmw3axO4wwpVIuADMwCBDnQ6q4kpsUOQuPURSCBlohg4ABRzW5eKAAMlg4rZcU4AEpCE53lAAPRG2AAC26qF4h24YF4ABt7XAoABzYACKCFbrWKDHbnYs3aIqFY6FKATMAXbo84DAe2oazdQqaBEmqBcqAQGra3SLExeFqXemM5mlYRpwrusCFPpZhCs3Qc1jCSu2mtF65MrQstlNlhAA](https://www.typescriptlang.org/play?#code/KYOwrgtgBAKgngB2AZygbwFBW1AglAXigHJdiAaLHAIUJOoowF8MNRIoBlAFwENvUmHFADCdYiMbCAIuOlScAUXGLGLDN0TAufbtTjwkAHhhRgAD26gAJqkMoAfHVMWrIW7C3IAdLioB+HX4fMQAfIIFvaSoALlgzSxs7L29qAIifRVioEGAAN2AAJwBuVk0kCIBZXgQTBLcPe2QnIiEcAG1OKABLEAj9exMHAF048AgAIyLS9XLte2qEOjQodtNezyRkUaqaoah1AGMAexBkbhyUK2s4hZrlqmw1lNwdtuEnnmDvER2ARkoHw6X0i0n+gJwTAhTyaqTejw+nV0mXBCJYR1O5ygc2cL1KJzOF3O-DoIJCpQwBKx4zouXOwGs7Tmw3axO4wwpVIuADMwCBDnQ6q4kpsUOQuPURSCBlohg4ABRzW5eKAAMlg4rZcU4AEpCE53lAAPRG2AAC26qF4h24YF4ABt7XAoABzYACKCFbrWKDHbnYs3aIqFY6FKATMAXbo84DAe2oazdQqaBEmqBcqAQGra3SLExeFqXemM5mlYRpwrusCFPpZhCs3Qc1jCSu2mtF65MrQstlNlhAA)

Explanation: 

First, look at ""nested"", that's the data structure here.

I'm trying to do ""nested\[type\]\[stat\]"" and it works fine if I just define the correct variables, but it doesn't work when I try to place it in a function with generic parameters.

If you know of a solution, pls help",Help me get rid of TS error - trying to index mapped types in a function
1776,2021-08-22 20:49:25,0,1,[removed],I get confused on how promise in typescript work
1777,2021-08-22 21:56:40,18,1,"I am trying to create a typescript language server in a web worker for the Codemirror editor, but I can't figure out how to import typescript, does anyone know how to import the typescript module?",How do I import the `typescript module` to use it on the web?
1778,2021-08-23 10:18:25,0,1,,EfficientNet - image recognition and object detection model written in node and typescript
1779,2021-08-23 10:18:25,0,1,,EfficientNet - image recognition and object detection model written in node and typescript
1780,2021-08-23 10:18:25,0,1,,EfficientNet - image recognition and object detection model written in node and typescript
1781,2021-08-23 14:58:53,4,1,"I just clone some repository and this happened.

&amp;#x200B;

https://preview.redd.it/r4lq5trlf4j71.png?width=1056&amp;format=png&amp;auto=webp&amp;s=806f624a5291a9ce52f9f879cb5d181ab43dbad9

The message says to include ""dom"", but this is a node project. I maybe wrong but dom is referring to the browser environment.

Here is the typescript configuration:

    {
     ""compilerOptions"": {
     ""skipLibCheck"": true,
     ""target"": ""ES2017"",
     ""module"": ""commonjs"",
     ""lib"": [
     ""es2016"",
     ""es2017.object"",
     ""es2017.string"",
     ""esnext.asynciterable""
        ],
     ""declaration"": true,
     ""strict"": true,
     ""noImplicitAny"": false,
     ""strictNullChecks"": true,
     ""noImplicitThis"": true,
     ""alwaysStrict"": true,
     ""noUnusedLocals"": true,
     ""noUnusedParameters"": false,
     ""noImplicitReturns"": true,
     ""noFallthroughCasesInSwitch"": false,
     ""inlineSourceMap"": true,
     ""inlineSources"": true,
     ""experimentalDecorators"": true,
     ""strictPropertyInitialization"": false,
     ""emitDecoratorMetadata"": true,
     ""esModuleInterop"": true,
      } 
    }

I already tried to set  `""moduleResolution"": ""node""` and  `""lib"": [""ESNext""]` to check if it worked, but with no success.",[Help] Typescript can't find console
1782,2021-08-23 23:35:19,4,1,"[Live example on Stackblitz](https://stackblitz.com/edit/typescript-svswxz?file=some.store.ts)

I have this shared store class for storing away data. In this store, you have slices and for each slice you have a `LoadableState` which consists of a data, loading, and error properties. I'm trying to write a generic function that will handle returning data from the data props.

The `getData$()` function should be able to return data directly from `.data` or from `.data?.[key]`. The return type is different in these cases so we need to make it conditional somehow?

Is there a way to dynamically change the return type based on the presence of the `key` parameter? Or do I need to create two functions for this functionality?",Conditional return type based on supplied function parameters?
1783,2021-08-25 03:34:34,7,1,"I know higher kinded types aren't currently supported by TypeScript and that there's an [issue here](https://github.com/Microsoft/TypeScript/issues/1213) for them. I found this npm package ([hkts](https://www.npmjs.com/package/hkts)) which is designed to help with some cases; but unfortunately I haven't been able to get it to work for me.

I was wondering if any one could help me come up with a way to get something working for my use case. Whether using that library, another lib, or just doing it manually.

# Basics of my Use Case

I have a type (`MergeWithFn`) that takes as generics, 2 any types and a function type that take 2 any type parameters (which also use generics).

I want to be able to get the return type of that function; but if that return type relies on the parameter types, then those types are treated as `unknown` as the generics get discarded.

    type MergeFn = &lt;T1, T2&gt;(x: T1, y: T2) =&gt; unknown;
    
    type MergeWithFn&lt;T1, T2, M extends MergeFn&gt; =
      Or&lt;IsNever&lt;T1&gt;, IsNever&lt;T2&gt;&gt; extends true
        ? Leaf&lt;T1, T2&gt;
        : ReturnType&lt;M&gt;; // &lt;-- Problem is here. M isn't getting the generics &lt;T1, T2&gt;.

[Playground Link](https://www.typescriptlang.org/play?#code/PQ18ZXTvQUCABAFQBYFMkBcCeAHLASSQHcBDAO2xwHskAzASwA8A6eePQpAWQwBOAcwwB1JtjQAxSgB4UARgA0qAEwreSDC2wZKAEwDOfQSJkA+JAF4kAeQGyihgHIYAboPkLzKp648OKKrmltq6BsbYAgCuGPBICUgA-EgAMhjkDF4qQebxiQBcSABKGNjRApQoBBiyvOYA3EjIsgC0rUgACgK0AEYANhgAtkhMxpgCGGx8o4aUAOQ0ItjYTJRCOJhIIpSCTADGxtlq5hyIcBeXV9dg56gYhjTcD2fIKA-YCkiGaLTR-fokL0sAADd6PaqEL4AH3uEJqqhBQOiNDGSBB0UoAGtKLRSJQkcD9uRooYsODsPxhBgZPNjDs9odtmVNj18UhyBRcBxnnDPtYTNTxJIZPIPpCMMo+RL1HyqWZKI1OLyKRKvjYAN75BIMWi0IqPARrIQNeAAX1NXBq0oRAq1iSB5AEBqixtNFuV1op8pplAFx1yAAoWEVFCpcKHVABKayWRRIWFBS03FOptPAO62SSCHA1YwddCCLC41FDfC0ATYKjYM68n0yf1hk7B0NSiNqGNWSyYnF4yiW3npTIB4ICvzuTy5LQ6PRGHAxLApeORgfWpwjyw2ADaigAutPwnOd6p9ykorEkEUGOR+mTVzxxwF5JukOuUCpdgElVaePYvAfZ2MXo9UGKgclUACIiBECMkVAV4zCQD5wvM8F0vNRTSAA) for a more detailed example.

Would anyone be able to help me come up with something that works?

Note: changing `MergeFn` to type `MergeFn&lt;T1, T2&gt; = (x: T1, y: T2) =&gt; unknown;` won't work for my use case.",Help - Higher kinded types
1784,2021-08-25 19:37:42,0,1,,EfficientNet - image recognition and object detection model written in node and typescript
1785,2021-08-25 19:37:42,0,1,,EfficientNet - image recognition and object detection model written in node and typescript
1786,2021-08-25 19:37:42,0,1,,EfficientNet - image recognition and object detection model written in node and typescript
1787,2021-08-26 03:24:31,24,1,"So i’m migrating a fairly small pet project from vanilla javascript to TS, and have been loving how it makes it easier to understand what’s going on when I’m juggling objects around.

One thing I’m struggling with, though: I have a class with a few attributes that get their values in different phases.

Say I instantiate my object with just an ID. Then I read a few config options from disk. And then afterwards I load more data from a web API somewhere.

The way I’m currently doing it, only the ID is required, and that is fine, I guess. The thing is, I forcibly exit the program if I can’t get these other data from disk or API. So my code is now full of optional chaining, null coalescing, and just generally testing for empty variables everywhere, when I know that’s not needed most of the time.

So what are my options here?

- I could just turn strictnullchecks off, but from reading around, I reckon that’s not desired.
- My linter is set to not let me use non-null assertions, which I understand you should not use if you use strictnullchecks since it defeats the purpose, I guess?
- is there maybe a way with Partial, Pick, Omit, and the like? Not sure.

What do you guys do in these cases?

Thanks!","New to typescript and just LOVING it. Having a hard time with strictnullcheck, though."
1788,2021-08-26 04:43:43,2,1,"I met this in developing, and here's a minimal example:

[Playground link](https://www.typescriptlang.org/play?target=99#code/MYewdgzgLgBCBGArGBeGBvAsAKBjAhgFwxgCuANuQDQ4C+OOAZqWMFAJbgzsQCCAFAA9i0AE7swAcwCUxQdwgwARPiUYceUQFMopUWBjyUx5aoDcdBtmasOXRmAA8AFRhbBULWAAmilWoAfZXglAD5+AGstAE9iZ2l1XG5GGEiY1BN-BKwkvHIdAmJ-VBgo6ItcuCQAbTKAXQq8PHYU-h4BMulsjSa8BERamIaevFo3cggtRN68grAtADctUWJ5pdESssam+iTd3ZwgA)

```typescript
const obj = {
  a: null,
}

function isA(x: string): x is ""a"" {
  return x === ""a"";
}

function fn&lt;T extends ""a"" | ""b""&gt;(key: T) {
  if (key === ""a"") {
    let a: ""a"" = key; // no error
    obj[key]; // Type 'T' cannot be used to index type '{ a: null; }'.
    if (isA(key)) {
      obj[key]; // no error
    } else {
      let never: never = key; // no error
    }
  }
}
```

I'm wondering why this error happens.

And, in my real project, I'm using a type predicate like the `isA` in the example to fix it. Is there a better way to deal with it?","Unexpected ""cannot be used to index type"" in generic function and string literal type guard"
1789,2021-08-26 21:34:29,3,1,"New to typescript, I'm sure the answer to this is fairly basic and probably already out there, but I've googled to the point where solving this is costing too much time, so I'm just going to ask.

`interface basicData {`

`A: string,`

`B: number`

`}`

`interface extendedData extends basicData {`

`C: string,`

`}`

&amp;#x200B;

`const dataObject: basicData | extendedData = {`

`A: ""Foo"",`

`B: 12`

`}`

`if ( needsExtendedData() ) {`

`dataObject.C = ""Bar"" // property 'C' does not exist on type 'basicData'`

`}`

I kind of get it that even though I declared basicData | extendedData, it's shape at that time matched basicData, so that's how it's typed?

So what's the best approach to be able to create a basic, common object, and then add more properties to it only in the cases where it needs to be of extended type, without duplicating code with something awful like:

`if ( needsExtendedData() ) {`

`const dataObject: extendedData = {`

`A: ""Foo"",`

`B: 12,`

`C: ""Bar""`

`}`

`} else {`

`const dataObject: basicData = {`

`A: ""Foo"",`

`B: 12`

`}`

`}`",Struggling with extending interfaces and adding properties to objects
1790,2021-08-27 08:59:40,6,1,"I really like the idea of [exactOptionalPropertyTypes](https://devblogs.microsoft.com/typescript/announcing-typescript-4-4/#exact-optional-property-types), unfortunately I can't figure out how to make it work in a functional way, in React JSX props.

I have a component which takes an optional ```onClick?: () =&gt; void``` in its props. It is then rendered in a map like so:

```tsx
cards.map(card =&gt; &lt;Card onClick={someCondition ? () =&gt; {/* some code */} : undefined} /&gt;
```

That way if someCondition is false, ```onClick``` is undefined and it's like it wasn't specified. But that was without exactOptionalPropertyTypes, now this doesn't compile.

The only way I can think of making it work is something like this:

```tsx
cards.map(card =&gt; {
  const props = {};
  if (someCondition) {
    props.onClick = () =&gt; {/* some code */};
  }
  return &lt;Card {...props} /&gt;;
}
```

It's very verbose, and not really following the functional programming paradigm (mutating an object).

Does anyone know of a better way to do it?",TypeScript 4.4 exactOptionalPropertyTypes and JSX props
1791,2021-08-27 15:42:57,8,1,"Can someone recommend a very good iOS development course?   I'm an experienced developer (Frontend Javascript, typescript, React or Backend golang, nodeJS, Python, etc).  iOS has enough uniqueness to it, that I'm not completely understanding what's going on when I go through the Apple tutorials.   I can get through it, but I don't really understand what's going on.  I want to deeply understand what I'm doing and what's going on.

FYI...  I get SwiftUI MUCH better than I get UIKit.  But, I kind of want to know both in case I need to inherit anything legacy.",Recommend really good class for iOS development
1792,2021-08-28 07:07:54,3,1,"I'm trying to figure out why

    interface Artist {
        id: number;
        name: string;
    }
    
    class MetaField&lt;E extends keyof Artist&gt; {
        constructor(private e: E) {}
    }
    
    type MetaFields = {
        [E in keyof Artist]?: MetaField&lt;E&gt;;
    }
    
    function doSomething&lt;E extends keyof Artist&gt;(field: E) {
        let m = {} as MetaFields;
        let q: MetaField&lt;E&gt;|undefined = m[field];
    }

results in

    Type 'MetaField&lt;""id""&gt; | MetaField&lt;""name""&gt; | undefined' is not assignable to type 'MetaField&lt;E&gt; | undefined'.
      Type 'MetaField&lt;""id""&gt;' is not assignable to type 'MetaField&lt;E&gt;'.
        Type '""id""' is not assignable to type 'E'.
          '""id""' is assignable to the constraint of type 'E', but 'E' could be instantiated with a different subtype of constraint 'keyof Artist'.

I would have expected `m[field]` to get a type based on what `field` is. Perhaps it's the `extends keyof` in `doSomething` that makes it ambiguous? Can that be narrowed?

[Playground](https://www.typescriptlang.org/play?#code/JYOwLgpgTgZghgYwgAgIJTMAzmZBvAWAChllgATALmRAFcBbAI2gG5jSQ56JqcpQA5myIBfYsQQAbOFizIAshDBwAYsAiTyAHgCiyCAA9IIcnIDWEAJ4B7GGgzYwAPnztSyBNZB9aCMNagACgAHfgA3OEh9ah0ASnwxUXEiMEtglEVlNQ1TZABeVxJ3AG09UGQLGzt0TBwAXQB+akzVdU1dJ2FE4hhaED9gL2RyawBla24wAAtBXX0jCBNzK1t7WudAmDaqZDjC92RJJWR6fITkGQUlVpysYQOj3ABHZuvs9p0nAB8+8ggtkAQchnejFLY5OpdIA).","Mapped type indexed by ""keyof"" type doesn't resolve the indexed type"
1793,2021-08-28 15:40:42,0,1,"Hi, I'm streaming my coding session this morning.   Adding a widget to a react/node client/server application written in typescript.  Link: [https://www.twitch.tv/nebosite](https://www.twitch.tv/nebosite)",Coding Session Live Stream: React client/server app
1794,2021-08-29 16:59:27,25,1,"I'd like to setup a static demo page for allowing folks to play with my library and see results on the screen. For how I'd have it setup, I don't even need to be concerned with ""safely"" executing the code.

I've looked at https://www.typescriptlang.org/dev/sandbox/ but I'm looking for something that bridges the gap between that actual execution of the resulting JS.

CodeSandbox and StackBlitz don't have very great Intellisense support, which is pretty critical to why I'm hoping to have the demo be done in TS. 

Any leads on something to bridge the gap would be super helpful, finding something that does is harder than I thought!",Solution for executing TS in the browser for library demonstration purposes?
1795,2021-08-29 18:29:59,0,1,"So I was excited for the exactOptionalPropertyTypes flag in Typescript 4.4 because our database does not support serializing explicit undefined values. So we'd sometimes run into issue where we'd attempt to pass undefined values into our database and get an error back. 

I had created a `makeUndefinedValuesOptional` function that deleted any values that were undefined, however, when Typescript 4.4 came out, I needed a way to properly type the function. Essentially, I wanted a function that takes any undefined values in an object and makes them optional instead, deleting the values as needed.

So a function that converts `{a: number | undefined}` to `{a?: number}`

I came up with [this](https://www.typescriptlang.org/play?exactOptionalPropertyTypes=true&amp;ts=4.4.2&amp;ssl=13&amp;ssc=17&amp;pln=13&amp;pc=44#code/C4TwDgpgBA4hwGkIgJIDMDCBDAdgIQgFUcATCNASxwhIB4AVAGigSggA9gJSBnKAa2QB7NFHoA+KAF4oAbQCinAE5YAxsAayEAXWYBXUuSo1x2tp24k+sgFBQo1AG4QljG9rtQA-A4jOlngBcLADcNqCQLMg89AAWWMDY+ESGlNR0EtJQAN6eWlBUAsKi9NrBcIjI6EkExGRpNAzMCOJhAL6ygiAiYtphEdCKqgA2emR1RukAalijEDwMkjK59vmFXT2lwUOjZJo6+qnGJK02bWE2HGBCSsBQaAbqFEI4UAC2WIITDSQzczwAeTAwGeOFmiwAFJ4hAAjABWwSYNgAlMEAW8KBomFEQDF4olcLUjulFpIAGSeAAKWFuFHBlIoqn4tB2YxS9WOfz080WzWicQSNXZk0aEnEkhWUAB8Ig6gAdF0eBDYXDkXK0Dd5GpYhCIV1kdIJZ57KoXjw7o5ZlkVZ1kFAsHwNiU+saCqIIZbhtIpDIDBz0gbJfZ7GRhvBoDauvbHcVemFg1A2p42sj41AlPA9EpXir2jYbFQuEo0GpoIQeC4cq6KCRgualFQAOZp+xh5zDLzBHB6N4wlx5mwPHBPF5QVQZhIQAByEAA7uWXBCa3XgA2cI3mDxYkI9MMSABBHg8CiNnAAGT8EGGwRhQiEYdwqKgC6UVYTAHp32JYhQ+PE+LgbBKEoNxQH2qhYHoFZQG2V4FHwOBCHcszDEIs40FAwBCGB0BXMMjKYsMIBQBWyF8H6IokK6n7ppm2ZvsGNEJsuBQkG4H5fgmsHXiR267geR4nuel5ej4ACMUDBBRPzsYxX5JtR75xL+UCzjc-B8DCeh3CpuCISATaYdhAxQDuwCKWOZp3FBLjBC+WRBlATHBixNYWUmHFulAEJbjue6Hsep4Xu2gYWQmNlKHK3FZGJLZOfJFkZsAWavBFFwccpfAkEI8wOEhUDxM49qvC4IGvuBkHQR8XzEjQXLzECIIvFalDsLlwCxNAv48NyrpJSl7yfMKPz1YCwKgrMEKOcxtasbJCatiJdZ8f5glBSJ3hQBJUm1WxropmcQA), thought it might be helpful for other people 

Lmk if there's an easier way of doing this, or if there's anything that could be improved.",Helper function for easier handling of exactOptionalPropertyTypes
1796,2021-08-30 09:04:15,3,1,"**Monday, August 23 - Sunday, August 29**

###Top Posts

| score | comments | title &amp; link |
|--|--|--|
| 212  | [35 comments](https://www.reddit.com/r/javascript/comments/pa9jtf/i_implemented_raycasting_algorithm_in_react_that/)  | [I implemented raycasting algorithm in React that renders scene using only HTML divs &amp;#40;no canvas&amp;#41;, renders as text in textarea or browser console &amp;#40;works nice in Chrome&amp;#41;. In div mode it has textures, sprites and primitive lighting system](https://github.com/yurkagon/ReactCasting)|
| 190  | [18 comments](https://www.reddit.com/r/javascript/comments/pc8zt5/announcing_typescript_44/)  | [Announcing TypeScript 4.4](https://devblogs.microsoft.com/typescript/announcing-typescript-4-4/)|
| 183  | [43 comments](https://www.reddit.com/r/javascript/comments/pbenma/i_made_a_website_that_shows_you_what_traces_your/)  | [I made a website that shows you what traces your browser leaves behind while surfing the web. This was my first react project so I'd appreciate any feedback on the code. &amp;#40;GitHub in comments&amp;#41;](https://vytal.io/)|
| 169  | [38 comments](https://www.reddit.com/r/javascript/comments/pbg4h3/kyle_simpson_just_launched_a_kickstarter_for_you/)  | [Kyle Simpson just launched a Kickstarter for ""You Don't Know JS Yet"" 2nd edition books](https://www.kickstarter.com/projects/getify/you-dont-know-js-yet-second-edition-books)|
| 126  | [13 comments](https://www.reddit.com/r/javascript/comments/pcnkf4/tree_data_structure_in_js_recursive_and_iterative/)  | [Tree data structure in JS: recursive and iterative traversal](https://stackfull.dev/tree-data-structure-in-javascript)|
| 114  | [24 comments](/r/javascript/comments/pdrliz/if_you_want_to_get_inspiration_from_real_world/)  | [If you want to get inspiration from real world](https://github.com/mrousavy/Colorwaver)|
| 105  | [1 comments](https://www.reddit.com/r/javascript/comments/paty3w/the_npm_registry_is_deprecating_tls_10_and_tls_11/)  | [The npm registry is deprecating TLS 1.0 and TLS 1.1 &amp;#124; The GitHub Blog](https://github.blog/2021-08-23-npm-registry-deprecating-tls-1-0-tls-1-1/)|
| 80  | [6 comments](/r/javascript/comments/pdyo4v/i_have_created_a_robot_that_generates_google/)  | [I have created a robot that generates Google presentations from Wikipedia article](https://github.com/vilmacio22/gslides-maker)|
| 63  | [17 comments](https://www.reddit.com/r/javascript/comments/pb83do/can_a_virtualdom_beat_solid_js_introducing/)  | [can a virtualdom beat solid js? introducing blockdom, a fast virtualdom library](https://github.com/ged-odoo/blockdom)|
| 63  | [34 comments](https://www.reddit.com/r/javascript/comments/pd4crk/neutralinojs_v270_released/)  | [Neutralinojs v2.7.0 released!](https://github.com/neutralinojs/neutralinojs/releases/tag/v2.7.0)|


&amp;nbsp;

###Most Commented Posts

| score | comments | title &amp; link |
|--|--|--|
| 29  | [43 comments](https://www.reddit.com/r/javascript/comments/pa73t6/askjs_what_is_going_on_with_all_websites_in_js/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; What is going on with all websites in JS this decade and being so complicated &amp;#40;compared to 1990s&amp;#41;?|
| 62  | [36 comments](https://www.reddit.com/r/javascript/comments/pdib99/askjs_what_is_the_best_canvas_library_to_make_an/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; What is the best canvas library to make an app like figma or integromat?|
| 8  | [17 comments](https://www.reddit.com/r/javascript/comments/paobin/askjs_api_design_from_a_client_perspective_which/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; API design from a client perspective, which do you prefer? A property which may be null or a string, or a potentially undefined property which will never be null?|
| 10  | [16 comments](https://www.reddit.com/r/javascript/comments/pc2duf/decide_between_ts_and_js_by_comparing_runtime/)  | [Decide between TS and JS by comparing runtime monitoring to type systems](https://doma.dev/blog/why-type-systems-matter/)|
| 6  | [14 comments](https://www.reddit.com/r/javascript/comments/pd53t6/showoff_saturday_august_28_2021/)  | `[Showoff Saturday]` Showoff Saturday &amp;#40;August 28, 2021&amp;#41;|


&amp;nbsp;

###Top Ask JS

| score | comments | title &amp; link |
|--|--|--|
| 25  | [12 comments](https://www.reddit.com/r/javascript/comments/pc497v/askjs_why_does_spacebar_scroll_down_in_multiple/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Why does spacebar scroll down in multiple little jumps?|
| 25  | [12 comments](https://www.reddit.com/r/javascript/comments/pd7pft/askjs_optional_maximum_evaluation_time_for_regexp/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Optional maximum evaluation time for RegExp|
| 5  | [7 comments](https://www.reddit.com/r/javascript/comments/pcoam7/askjs_do_you_ever_needed_child_process_with/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Do you ever needed child_process with inherited stdin, while processing&amp;#40;piped&amp;#41; stdout?|


&amp;nbsp;

###Top Showoffs

| score  |  comment  |
|--|--|
| 3  |  /u/js_chap said [Started out blogging on JavaScript and Algorithms https://stackfull.dev](/r/javascript/comments/pd53t6/showoff_saturday_august_28_2021/hao6osz/?context=5) |
| 2  |  /u/barhatsor said [I created a web game controller demo using the Javascript Gamepad API and Gamepad Haptics API.  Added some cool Discord-like UI to top it off :&amp;#41;  &amp;#91;https://gamepad.berryscript.com/&amp;#93;&amp;#40;htt...](/r/javascript/comments/pd53t6/showoff_saturday_august_28_2021/hat7t0i/?context=5) |
| 2  |  /u/jcubic said [I've created a demo to fit jQuery Terminal into an image of a Laptop. You can use this to create a terminal that will fit into any image. This can be a more generic and better-looking standalone tool ...](/r/javascript/comments/pd53t6/showoff_saturday_august_28_2021/hap5jbj/?context=5) |


&amp;nbsp;

###Top Comments

| score  |  comment  |
|--|--|
| 87  |  /u/getify said [Comments in the other thread were deleted so I can't read them, but... I am aware of some general negative sentiment around my efforts, so I'll just share a few points/thoughts:  1. O'Reilly stopped p...](/r/javascript/comments/pbg4h3/kyle_simpson_just_launched_a_kickstarter_for_you/had2qto/?context=5) |
| 73  |  /u/sproingie said [Because the apps are more complicated than just making rollover menus and making text dance around.    &gt; Today it's more like software development than just designing a website  You got it, because th...](/r/javascript/comments/pa73t6/askjs_what_is_going_on_with_all_websites_in_js/ha2kais/?context=5) |
| 50  |  /u/license-bot said [Thanks for sharing your open source project, but it looks like you haven't specified a license.  &gt; When you make a creative work &amp;#40;which includes code&amp;#41;, the work is under exclusive copyright by...](/r/javascript/comments/pa9jtf/i_implemented_raycasting_algorithm_in_react_that/ha3304j/?context=5) |
| 41  |  /u/gonzofish said [Oh man that control flow analysis is going to make me so happy. The amount of times I’ve run into that is infuriating.](/r/javascript/comments/pc8zt5/announcing_typescript_44/hai3fh7/?context=5) |
| 40  |  /u/kizerkizer said [The JS engines are super fast, the internet is super fast, and websites are no longer built so much as web applications, because browsers have added more and more features and the web has become the d...](/r/javascript/comments/pa73t6/askjs_what_is_going_on_with_all_websites_in_js/ha34ok9/?context=5) |


&amp;nbsp;",Your /r/javascript recap for the week of August 23 - August 29
1797,2021-08-30 17:32:28,3,1,"I am working on a type of SortedList implementation and am implementing the map function. The relevant parts of the interface are:
```typescript
/**
 * Generic Types are ComparisonType and DataType
 * ---&gt; ComparisonType tells us what we need to make a comparison between to DataTypes
 * ---&gt; DataType is the full data type we will be storing
 */
export interface iSortedList&lt;
    ComparisonType,
    DataType extends ComparisonType = ComparisonType
&gt; extends Iterator&lt;DataType&gt; {

/* ... */
/**
 * Map this sorted list to another sorted list
 * @param sortFunc : new sort function to use
 * @param callback : map callback to use
 */
map&lt;
    NewComparisonType = ComparisonType,
    NewDataType extends NewComparisonType = NewComparisonType
&gt;(
    sortFunc: (a: NewComparisonType, b: NewComparisonType) =&gt; number,
    callback: (item: DataType, iteratorIndex: number) =&gt; NewDataType
): iSortedList&lt;NewComparisonType, NewDataType&gt;;
```

The concrete implementation is:
```typescript
export class SortedArray&lt;
    ComparisonType,
    DataType extends ComparisonType = ComparisonType
    &gt; implements iSortedList&lt;ComparisonType, DataType&gt;

/* ... */

/**
 * Map this sorted list to another sorted list
 * @param sortFunc : new sort function to use
 * @param callback : map callback to use
 */
map&lt;
    NewComparisonType = ComparisonType,
    NewDataType extends NewComparisonType = NewComparisonType
&gt;(
    sortFunc: (a: NewComparisonType, b: NewComparisonType) =&gt; number,
    callback: (item: DataType, iteratorIndex: number) =&gt; NewDataType
): SortedArray&lt;NewComparisonType, NewDataType&gt; {
    const sortedAr = new SortedArray&lt;NewComparisonType, NewDataType&gt;(
        sortFunc
    );
    this.items.forEach((item, index) =&gt; {
        const newItem: NewDataType = callback(item, index);
        sortedAr.add(newItem);
    })
    return sortedAr;
}

```

As far as I can tell, that is the correct way to implement the map function based on type definition, but I receive this error:

```
Property 'map' in type 'SortedArray&lt;ComparisonType, DataType&gt;' is not assignable to the same property in base type 'iSortedList&lt;ComparisonType, DataType&gt;'.
  Types of parameters 'callback' and 'callback' are incompatible.
    Type 'NewDataType' is not assignable to type 'NewComparisonType'.
      'NewComparisonType' could be instantiated with an arbitrary type which could be unrelated to 'NewDataType'.
        Type 'NewComparisonType' is not assignable to type 'NewComparisonType'. Two different types with this name exist, but they are unrelated.
          'NewComparisonType' could be instantiated with an arbitrary type which could be unrelated to 'NewComparisonType'.
```

As far as I can tell, everything is in place as it should be and all type definitions are correct, but it seems like it is not making the link properly between the class and interface, and the error message makes it seem it is working with two different versions of 'NewComparisonType' at once.

Is there some detail or bug which I am missing?",Issues with Generic Method Implementation
1798,2021-08-30 18:51:58,12,1,"Hi, I'm building a C compiler in TypeScript.

Picked typescript because I was knew to compilers and wanted some language that I was flexible and I was already comfortable in. I have implemented the C to assembly compiler for:

basic function syntax

variable assignment

When writing the types for an Abstract Syntax Tree, I am finding it very hard to do the arithmetic portion of the language. I am basing that on this EBNF grammar definition (from Nora Sandler's excelent blog on building a C compiler)

&lt;exp&gt; ::= &lt;term&gt; { (""+"" | ""-"") &lt;term&gt; }
&lt;term&gt; ::= &lt;factor&gt; { (""*"" | ""/"") &lt;factor&gt; }
&lt;factor&gt; ::= ""("" &lt;exp&gt; "")"" | &lt;unary_op&gt; &lt;factor&gt; | &lt;int&gt;
My type definitions for the grammar described above:


type TExpression = {
  left: TExpression,
  operator: ""-"" | ""+"",
  right :TExpression,
} | TTerm


type TTerm  = {
  left: TTerm ,
  operator: ""\*"" | ""/"",
  right: TTerm
} | TFactor


type TFactor = TValue | TUnaryOperation|TExpression;

type TValue = number | string

type TUnaryOperation = {
  operator: ""!"" | ""~"" | ""-"",
  operand: TFactor
}



As one might expect, I get an error: ""TFactor circularly references itself""

This happens, I reckon, because TypeScript does not handle self referencing types like for example OCaml does. Since TFactor can be a TExpression, but TExpression can also be TFactor, this problem arises.

The (rather ugly) way I fixed this issue was:


export type TFactor =  {
  factor: TValue | TUnaryOperation|TExpression 
}  
This solves the error, but is very clunky and makes it bothersome to handle in the latter stages of the compilation process. For example: The expected AST for the arithmetic operation ""2*(1+1)"" is

{
  left: ""2"",
  operator: ""*"",
  right: {
    left: ""1"",
    operator:""+"",
    right: ""1"",
  }
}
What I get with my solution:

{
  left: {
    factor: ""2""
  },
  operator: ""*"",
  right: {
    factor:{
      left: {factor: ""1""},
      operator: ""+"",
      right: {factor: ""1""}
    }
  }
}
I can easily get rid of this issue by post processing the AST and fixing it up by removing the ""factor"" attributes and append any child attributes there. However, I wondered if it was possible to solve this problem some other way with more clever types.

So, my question is: is there any legit way to solve the error I was getting by using some typescript feature I am not aware of, or by re-imagining the type definition of the AST? I wasn't sure if this was the correct sub to post this at, let me know if I should have posted it somewhere else and I will do so.",Typing an Abstract Syntax Tree
1799,2021-08-31 07:07:37,0,1,,learn Generics in typescript
1800,2021-08-31 16:19:08,2,1,"I have this type that can merge two records together but I want to generalize it to merge many records together. Unfortunately I haven't been able to figure out how to do it properly so I have turned to the internet for help.

The main problem is probably that my merge 2 type is already being a little hacky, it looks like this:

    type MergeTwoRecords&lt;T1, T2&gt; = {
            -readonly [K in keyof T1]: MergeTwoRecordProps&lt;
              ValueOfKey&lt;T1, K&gt;,
              ValueOfKey&lt;T2, K&gt;
            &gt;;
        } &amp;
        {
            -readonly [K in keyof T2]: MergeTwoRecordProps&lt;
              ValueOfKey&lt;T1, K&gt;,
              ValueOfKey&lt;T2, K&gt;
            &gt;;
        };
    
    type MergeTwoRecordProps&lt;T1, T2&gt; = Or&lt;IsNever&lt;T1&gt;, IsNever&lt;T2&gt;&gt; extends true
        ? Leaf&lt;[T1, T2]&gt;
        : MergeTwoValues&lt;T1, T2&gt;;

Unfortunately I can't just write it as:

    // This doesn't work.
    type MergeTwoRecords&lt;T1, T2&gt; = {
        [K in keyof T1 | keyof T2]: MergeTwoRecordProps&lt;
            ValueOfKey&lt;T1, K&gt;,
            ValueOfKey&lt;T2, K&gt;
        &gt;;
    };

as this version loses optional property modifiers  (e.g. `{ foo?: string; }` =&gt; `{ foo: string | undefined; }`). Note: I do want to lose any readonly modifier.

If you know how to write this type a nicer way, that would probably end up being a big help.

Anyway, what I'm trying to make is a type that takes a tuple (of any length) of records and merges them. So something that looks like this:

    type MergeManyRecords&lt;Ts extends [...unknown[]]&gt; = // ...

[Here's a playground link to my experimentations.](https://www.typescriptlang.org/play?exactOptionalPropertyTypes=true&amp;ts=4.5.0-dev.20210831#code/PQ18ZXTt-DICgQAIDqB7ATgawJYB2A5qgG4Cm2AzvpoapgGaoC2VxFqALgO6YA6JEm4BPAA5cAshwoAVfgCUKAYxwATagB45ARgA0qOQCYAfKgC8qAN5JU91AFpsFAIbr6AG1GoA2gGlUIlRcClFmI10AXQAuVBlsTgVMZTVsdQAFbExxbTsHewA1V08AVwoAeSZ-MJ0DVH9TfXyC4rLK6tqTQ0aW1FMAbnyAX1QAMnzbAuc3D0JvP0Dg0PCWE1j42WTUjSycvIKikvKqmtE6nqa+o-bTruNLvsGRoZRgIwALfGpUEu4qQiubj4SioDwUH4AOQqclQ-Dwvx++G4qE8mGoEMY4mB9BKqHE2Uk2DEbEw6nwTHwVB+AAoKAJiAJUAADayoJiYTAAfji1G42CIxAGqGGzMs5lZ7M5vP5gtQAB9UKVCOoKJTCBR1MLRQBKIRvHgSaRbJSqDTaPSGEzmKy2ND2AJBBgrCJ6BUhMKu4wbBJJU1pTKEvL2hxtE6dc6WhpXEM3cNnHQPaMG+zPNDDV5iSSbRLyf27IMXIxmSyoCrYLQASWokIolAreiaqGrtfridM5goAA9-iqfvzyvkuagADJuJhaXxR9amfJxX15zBhiFF62vRAbzdb7c75BoSH0RxYPBy+u0eiMFjsXNsVyEUT6rPG3NSO+iHbpC0-bu9zR+AQAcquCEJgvCEL4URRDazaEP8NCqDihBaFMDi+JWToeqsRjUBsKGHE4LjuF4PiOssnprNQaGQXE1z4agACi9aiAAQqU3AVBqLZ1lQOjUJ2PYUH2PDYOUqBoFojiOJ83z4tkABGrhyQs3yEAA5Ci3AfFwArEB8KJqCqyJ0ICniGpIQh0Ycw5jq4E5yHxtH4fOsivvey7aHhlmHL4ABSGEuhRGzLnckaUT5USXEMXkOMMzwFMMIzPCIRoMUxrHsZxNbcQ234CUJQEgWBEE2vk9moD+gl-hBQ7siUGJzth5V5VVRBMFQRhRDVB7cFWWVtnIHYNWVFVCb4rXtQAErMhgAQI43YKgyh8lEqA1VxbZTe4-G-v2IkULRw5LSiI1VQVoGEJ10XDt1vWtjxR2+AADFBs7RXEjFUCxbEcRQ633RC3CvYccRHU1O1+GdYGXV5w5-RWD3PUDlnvUxcNaEdQNxBq9bru8chfD8fwAkCIJcOCUIwnCOC4IiQQomiGI-DkiF4gSORUCSrBkhSVI0KgdIMkykoctyMoCiQ2pihYEpsiLYtyoqyqquqmqS3qwhoE+OacK575mp+vFg5VPy+LNkPgZB0F2u80yEXMCykQwZzUFUH6aLxpg+i5b7uchKbeehZFYfZQXHB0Cb2VRkX+-YsVDCGGYa7uycp6nu4GnIANJxg1OCgaAAk9FdpIKjcHIKVsq4cQAEQLlUyTudXwpyTyqAAMzasl2aZ3yC7JKWABinhAnBhAAIKePgrgHNri5uzP9iV3Eugis0BRL6gSYt3Ebcivks5JfumAoseBAkAXRcl2XFe-MvzdxMYndaz33ALrrK9WEPI8AhPU8z2-b556Tj6BvFeww14ODZHJB+e97BQSQIfd43Uc4nnPmgQuxcELl2zKA++qBa6yCqLrRuT8UovwAfeYwg9h7cFHr-aeWh8gUL1gGbQvgQG31QGAwwHDoGb1XqtdeqA+G7wSnAg+uNUDINPnndBl8sE3yrvguuTBiFh2oE3YRD9hQqBriotR7QNGGHUHEAAbKQ7uANmG70-jQuhk8GFMO9veIB7ChFKO4YIyBWj+HgK8YvThbdDC6NQAAFlXhwkJABWYxZjYGoHgYgtOySUmpLAAaAAqsCUy2DMRSXxhCLg1APiYFKJ4dQakUQak1DwTAwiuAqA+HeTg6hHwpWrKuEsVgpzRCNqNdYqBhwDi4HEJgdUKCZnaX1HiA1SwdLkIYbGVAkpaxurCE6Pw5Kck8G4Qg0F1nNV2qJYcYzPAYlQHEYZkzsxjxVHUPpf4tmYB2XeK0VCNnCO2bs-ZK8PmnPOSc8ZFzizXK4OWe5HynkvMIG8h5myvl3h+XC4SxyUUjJBcILWztXb63dsNQ5SpCDAXOsVUs+LwZjUIG1Bam11AzQAvNRaAMVrDgCqgWl7psVMCARjYFSzsCgtQMFCMOhLilkCB8tlsJhxyACCtLG2VBWVlgtSBCxkPZktyhSxltL6VzSpe1I60NhwcrGDBOCGJS7qoxg1c2gqv60J-g4i0Vs-AZH8uRDqcRZUZBWqMM11hE5dy4DZOyWrjaEuJUVKCmrkXVXsMOflQ1w2jUZXIY1Rhk1xtmmmo6hg02uHwJ4DNaM5CFs8NtCN-z9oFBleWvo3rQYfPNvGhw1lxw6BtQUBV9YGr8teMG1Kn1S0pr-C2mNFhSqjpNjq6aqAc0GoWnII1fRYbTIrLSytQlhkHSME2gl47HKDKHdgUQpau10UuXtWiozxkNrRZIiaoEeBaXOdeTgPx4Q01cC4SpQRWDiBwNwO8KIOQLU0lwNmSkKCsCcKgehGJ1C1NQHycWpAyDqOQ1pTw4ggjUGeUCLgEHZKYGg6wIQWs+78F9tOLpyjCFMAbuopug7mE0b4qWAhuYiE+2YwMIAA)

Any help would be must appreciated.",Help - Generalizing a complex type
1801,2021-09-01 01:15:25,0,1,[removed],How to fork typescript
1802,2021-09-01 09:56:14,7,1,"Hello, I'm trying to wrap my head around basic typescript conditional types and I can't understand why this simple example gives an error 

    function titleize&lt;T extends string | null&gt;(text: T): T extends string ? string : null {
        if(typeof text === 'string') {
            return text.toUpperCase();
        } else {
            return null;
        }
    }
    
    const a = titleize(""foo"");
    console.log(a.toLowerCase());
    
    const b = titleize(null);
    console.log(b);

-

    Type 'string' is not assignable to type 'T extends string ? string : null'.
    
https://www.typescriptlang.org/play?&amp;q=160#code/GYVwdgxgLglg9mABLKAbApjAXugPAFUXQA8p0wATAZ0SqgCcYwBzRAH0TBFVQD4AKMqQBcifAEpRhEmUo06jFogD8tBk1aiuPRAG8AsAChEJxDGCCAngAd0cYMhmIAvK8QByBRvfi9R0wGI9OhQIPRIQlAAdFBwAKrWtvQAwgCGVOj84gDc-qYAvkSoGX7GgSbBoeGc3Ki5ZSb5Rk2GRhAIdIipLsgwaJg4-ABEwHBwQzltHXAYUahwzPypMXAAMnAA7ugp6Znik62G7WCdAEY9KBjYmdqoB8dUM+hzC-ynOUA",I'm getting a compiler error on a basic conditional type
1803,2021-09-02 02:49:53,5,1,"Hi, I have orginal data in the following format.

```js

const catg = {
  transaction: 'TRANSACTION',
  segmentation: 'SEGMENTATION'
};

const data = {
  apiClient: [
    {
      id: 1,
      name: 'Test1',
      description: 'Description1',
      category: catg.segmentation
    },
    {
      id: 2,
      name: 'Test2',
      description: 'Description2',
      category: catg.transaction
    },
    {
      id: 3,
      name: 'Test3',
      description: 'Description3',
      category: catg.segmentation
    },
    {
      id: 4,
      name: 'Test4',
      description: 'Description4',
      category: catg.segmentation
    },
    {
      id: 5,
      name: 'Test5',
      description: 'Description5',
      category: catg.transaction
    }
  ]
};

```

My final object looks like the following:

```js
const result = {
  SEGMENTATION: 
    [
     {
      id: 1,
      name: 'Test1',
      description: 'Description1',
      category: ""SEGMENTATION""
    },
    {
      id: 3,
      name: 'Test3',
      description: 'Description3',
      category: ""SEGMENTATION""
    },
    {
      id: 4,
      name: 'Test4',
      description: 'Description4',
      category: ""SEGMENTATION""
    },
    ], 
  TRANSACTION: 
  [
    {
      id: 2,
      name: 'Test2',
      description: 'Description2',
      category: ""TRANSACTION""
    },
    {
      id: 5,
      name: 'Test5',
      description: 'Description5',
      category: ""TRANSACTION""
    }
  ] 
}

```


The code for this  object conversion is below:

```js

export default function App() {
  const arr = data.apiClient.reduce((acc, api) =&gt; {
     if(!acc[api.category]){
      acc[api.category] = [api]
     }else{
      acc[api.category]= [...acc[api.category], api]
     }
    return acc;
  }, {});

  console.log(arr);
}

```


Can someone help me to write  types for this code.


Original code here:  https://stackblitz.com/edit/typescript-j1eucq",Requesting help: on a modified object with reduce method
1804,2021-09-02 10:11:45,0,1,,Implementation sample of higher kinded polymorphism for typescript
1805,2021-09-02 10:15:14,0,1,,Implementation sample of higher kinded polymorphism for typescript
1806,2021-09-02 10:16:04,0,1,,GitHub - vlova/ts-higher-kinded-polymorphism-sample: Implementation sample of higher kinded polymorphism for typescript
1807,2021-09-02 13:50:09,0,1,,Implementation of do-notations for monads in typescript
1808,2021-09-03 14:52:50,30,1,"I was doing an interview challenge and they defined the type like:  


    user: User[] | []

to explicitly show that the list could be empty. I don't have the most experience looking at open source typescript projects but I've never seen this in the docs or other places. Is this necessary or best practice?",Explicit empty list type
1809,2021-09-03 15:20:09,12,1,"Hey everyone, so what I need to do is write a package for Atom using typescript. There are nice tutorials in js but can't find anything in ts. I found this github SHTrassEr/atom-ts-package-example but after doing all the steps it just didn't appear in my Packages menu, and when I try changing js project to ts myself I get the error:

    Failed to activate the plugin-atom package  ENOENT, node_modules/typescript/lib/lib.d.ts not found in /private/var/folders/lf/bz5q43t57d73yw687jdn6qf80000gn/T/AppTranslocation/2EBC2792-4B97-4147-9D7D-F8FD19CCDD29/d/Atom.app/Contents/Resources/app.asar  

I did add the

    /// &lt;reference path='../typings/atom/atom.d.ts' /&gt;  

But it didn't work. Does anyone have any advice? Any tutorials?",Create an Atom package using typescript
1810,2021-09-04 15:06:25,7,1,"Two questions.

1. Does typescript support es2021?
2. If I want to use typescript for NodeJS, what should I set my target in tsconfig.json?",Does Typescript support ES2021
1811,2021-09-06 03:00:45,19,1,,Decrease the idle CPU usage when developing your typescript app with this one weird environment variable
1812,2021-09-06 10:09:20,26,1,"We’re bringing on some new hires at the company I work at (large scale React web app), all of whom have typescript experience and are already including typescript in their commits.

I’m an experienced Rect developer but I just can’t get my head around why we should use typescript. 

Can someone explain it to me like I’m an imbecile?","Explain like I’m 5, why should I (a React dev) use typescript?"
1813,2021-09-07 06:12:06,7,1,"Hi everyone…in summary, I’ve been developing with react for 6 months or so, I just graduated from a bootcamp. My first and new Intership is in typescript so I have been watching tutorials for 1-2 weeks. But I’m not improving. Any tips on how I can be proficient in typescript in 2 months? (I bought a course from udemy from Maximilian and asked a refund and I have been watching several sources which is not helping either). Thanks for your input",Started learning typescript and it’s not going well…
1814,2021-09-07 08:56:17,0,1,,Custom type guards in typescript
1815,2021-09-07 10:05:41,5,1,"I've been having an interesting experience over the last year because I've been forced to use Flow with a very substantial React project. I definitely think that overall Typescript is the better tool, however there is 1 Flow feature that seems really useful to me which is that it seems to infer the props of a React component (within the same file) based on its usage.

The result of this is very little effort when extracting code into a new React component. Typescript on the other hand (at least with the config I have) starts saying \`Parameter 'props' implicitly has an 'any' type.\` and requires me to type out the definition of all the prop values - which can be quite frustrating especially if you are passing things like React Element Refs which can end up being like 5 lines of code.

But maybe theres a typescript plugin which will do the same? I wonder if anyone has thoughts on this",Can Typescript infer the arguments of a function from its usage? For example inferring React component props
1816,2021-09-08 04:38:23,12,1,"A simple function where the second parameter is optional:

    function makeArr&lt;X, Y&gt;(x: X, y?: Y) {
      if (typeof y === ""undefined"") {
        return [x];
      }
      return [x, y];
    }

If both arguments are provided, the type inference is correct. However, if only the first parameter is provided, typescript infers the type as `unknown[]`. For example:

    const v = makeArr(""400"");

`v` should be `string[]` but it is not.

I've attempted tricks like extending `Y` from a union of any or undefined, but it's not working. Could anyone shed light as to how this can be fixed?",Generics for optional parameters - how can I get this example to work for all cases?
1817,2021-09-08 10:49:40,0,1,,EfficientNet - image recognition and object detection model written in node and typescript
1818,2021-09-08 10:49:40,0,1,,EfficientNet - image recognition and object detection model written in node and typescript
1819,2021-09-08 10:49:41,0,1,,EfficientNet - image recognition and object detection model written in node and typescript
1820,2021-09-08 11:11:11,11,1,"Hi, I just simply want to collect some strings from an array of objects that can also be null. I have something like this (simplified):

    type Field = {
      linkId: string|null
    }
    
    const alotOfFields: Field[] = [
        { linkId: 'a1234' },
        { linkId: 'b1234' },
        { linkId: null },
    ]
    
    const result:string[] = alotOfFields.filter(f =&gt; f.linkId !== null).map(f =&gt; f.linkId);
    
    console.log(result);

Where Typescript complains: *Type 'null' is not assignable to type 'string'* – it seems like it doesn't figure out the data has been filtered and cleared of any nulls. I changed that to `f as string`, would this be an acceptable solution? It feels kinda unsafe, because Typescript even allows this without filtering, which results in nulls inside the array.

I found [type predicates](https://www.typescriptlang.org/docs/handbook/2/narrowing.html#using-type-predicates) but I'm not sure how to best adopt it to my case. Do I need another type where linkId cannot be null just for this filtering? So many hoops to jump through ... this seems to work:

    type FieldHasLinkId = {
        linkId: string
    }
    
    function hasLinkId(field:Field): field is FieldHasLinkId {
        return field.linkId !== null;
    }
    
    const result:string[] = alotOfFields.filter(hasLinkId).map(f =&gt; f.linkId);

What would be a short, good solution for this simple filtering?

[Code on Typescript Playground](https://www.typescriptlang.org/play?#code/C4TwDgpgBAYglhANgEygXigbwFBSouAOwGsBJZALigGdgAnIgcwB9CBXRRbAX22wHp+pKMgD2hYFADuAQwlRgoqAGM6EGcGgyF4aACs2tKADNRdE3ESaGhRgH4o2UJFgIUACRnUAMkTKoMHDw8AhJyKlobRh4+ZXEjGURRYAB5Y3gkZGoqDJQAbQBddCg83GDMfD9wqHZOKG4AGjK8CtD-KgByGQBGACYAZgAWDvqm4KxKsMooDoAjPqGRxuaJturaxFHsAr5BOMIjNWoOYApIpkLixOS03KyAOmNLawAKJ8z0AD4LTPu11AAhGgMBsAJT3AC2MjAby+Jj+VWQoIA3Nh9ocIMcrGd6Bcihhrql0m4Hk8rBA6C8ABZeXxTcFQmHGOHGBH01Fo+KiRAQP6iRgvI4nFF8YxsQjKYBwcRQGk+RFvEkUO6gqjvFBQODUVyZTzyqZYFZqYBsOiEH4oNn+KBAkEcRCo7hAA)",filter non-null item properties with(out) type predicates? (string | null is not assignable to ... string)
1821,2021-09-10 06:48:23,34,1,"Hello everyone, lately I was wondering maybe I should start using typescript instead of plain JavaScript for my react native development.
Although, I understand typescript is more meaningful and can be very helpful in big teams where you need code to be readable and meaningful, if I am a solo developer, it seems like extra code that is redundant.
What are the pros of typescript and why so many developers use it instead of plain JavaScript?
Is it a necessity to know typescript when it comes to real life commercial projects?",What’s the pros of typescript against JavaScript ?
1822,2021-09-10 16:06:53,6,1,"I'm using eslint to lint my react project. I'm using these extensions:

    extends:
      - eslint:recommended
      - plugin:react/recommended
      - plugin:@typescript-eslint/recommended

I've also add this rule to `tsconfig.json`: `""noFallthroughCasesInSwitch"": false`.

But the eslint rule [`no-fallthrough`](https://eslint.org/docs/rules/no-fallthrough) throws error when I don't `break` a `case`.

Now I don't want to switch off features I don't want one by one, especially when there's an update in typescript. So is there a eslint plugin or some other way I can turn these rules off once and for all?",How to disable eslint features that are already handled/disabled by typescript?
1823,2021-09-10 16:55:18,26,1,"So I have alot async functions like the following: 

    const getBook = async (bookName: string): Book (THIS IS WHERE MY ISSUES ARISE){
    const book = getBookFromDatabase(bookName)
    ... I'm not sure if I find something ...
    return book 
    }

Now the issue is that the book is possibly not found. So now all throughout my code I have to start adding a lot of undefineds (return type is Book : undefined, const book: Book | Undefined = getBook('Harry Potter')) and when wanting to use book I run into more issues and it's an endless cycle. Now one way I could prevent this is by implenting this in my getBook function:

    if (!book) throw Error('Book not found') 

But since this will be a pretty common case I'm not sure if it's a good practice to then throw alot of practice. Any advice for this issue or suggested readings? Thganks alot!",Starting learning typescript but running into the same issue where I possibly return undefined
1824,2021-09-11 05:38:49,5,1,"Hello,

I am trying to deploy Nuxt + TS app ([https://github.com/Neutron-Creative/Singlelink](https://github.com/Neutron-Creative/Singlelink)) on heroku but consistently facing problems with TS not getting installed. I tried everything I could find on the internet along with at [typescript.nuxt.org](https://typescript.nuxt.org)

Can somebody help me with what I am missing?

&amp;#x200B;

Here is a snapshot of the error I am getting. Thanks for your time &amp; effort 🙏  


https://preview.redd.it/25i5ykrx9tm71.png?width=1846&amp;format=png&amp;auto=webp&amp;s=37af0cbd90e9c321fbb9ec886a64e37f6994f10f",having troubles with deploying Nuxt + TS on heroku
1825,2021-09-11 16:47:18,13,1,"Hello everyone!

I wish to learn Typescript and how to use it for building backend APIs with Express.js

Searching for courses on Udemy, I found only TS + React ones and other courses weren't in-depth.

Prior Experience - I'm decent at JavaScript and already know my way around Express.js, my company uses TypeScript only and I'm having issues getting up to speed with the development process.

Please suggest me some resources, could be anything videos, books, yt, to get better at TS. 

Thanks!",Looking for resources to learn typescript for backend development (mostly Express.js)
1826,2021-09-12 04:45:01,3,1,"How can I write an `IsTuple` utility type? I tried the following but it doesn't work.

    type IsTuple&lt;T extends ReadonlyArray&lt;unknown&gt;&gt; =
      T extends readonly [...unknown[]] ? true : false;

Here's the behavior I want:

    type Test1 = IsTuple&lt;[number]&gt;;                  // =&gt; true
    type Test2 = IsTuple&lt;[number, string, unknown]&gt;; // =&gt; true
    
    type Test3 = IsTuple&lt;number[]&gt;;                  // =&gt; false -- not working
    type Test4 = IsTuple&lt;(number | string)[]&gt;;       // =&gt; false -- not working

[Playground link](https://www.typescriptlang.org/play?#code/C4TwDgpgBAkgzgFQK5gDYQDwKhAHsCAOwBM4oAlCAQ2IHtDUQBBAJxapAyUIGtDaA7oQB8wqAF4o2PARJkW1OgxBQA2gDpN3PoMKqAuvqgB+KMBZJoALigAzKqjgQA3AChXoSFIhxgARglYRBR0DFVCJABbACMIFn1hZyhklNS0lIB6DIkxc0sPcGgEH2AAJkD4ZDRMcKjYlgAaKF8WAEtCAHMm7X4hBKSsnLMLCHdPIpKAZgrg6owImLiDRPTVtMHxMXtHaABaXah+YCgBWhYedo6Cr2LfABYZqtCACgX6qAAfZvNLgEplpLpDZbBxOKD7Q60Y6nc6XVxAA).","Help - How to tell if type is a tuple of any size, not just an array."
1827,2021-09-12 11:01:20,1,1,"Hi there, as a bit of an exercise in learning typescript, canvas, and classes, I thought that I would try and convert over this CodePen of watercolour splotches. Unfortunately, it looks like I've hit a stumbling block with my execution, and can't manage to make it work properly. 

The original: https://codepen.io/shshaw/pen/zPxMgd

My attempt: https://codepen.io/ryceg/pen/RwgVOBb?editors=1111

My best guess would be that it has something to do with how the canvas' `ctx` is passed / obtained. Thanks in advance for any assistance!",Converting a JS function to a TypeScript class as an exercise
1828,2021-09-13 01:21:48,3,1,"Hello!

As a personal exercise I'm writing types for a Redux (or similar) project.

Action definitions are created with `makeAction`, which creates an action with a type, and optional `data`.

For example, 
```ts
export const LOGIN = makeAction(
    'login',
    (timestamp: Date) =&gt; (timestamp)
);
```
produces
```ts
const LOGIN: {
    type: ""login"";
    create: (timestamp: Date) =&gt; {
        type: ""login"";
        data: Date;
    };
}
```
which one would invoke with `LOGIN.create(Date.now())`.

I'm having an issue where the `makeAction` function isn't properly narrowing on whether there's a build function present (in which case the resulting action would have `data`) or not.

Here's the TypeScript Playground, which should make this clearer:
[PLAYGROUND LINK](https://www.typescriptlang.org/play?#code/C4TwDgpgBAggxsAlgewHYBEIDNGsUtAHgCgoyoAVeA1C8CAGlPIoCEBXRAGwBMIAnKBAAewCKh4BnKOwnZcEHlAA+UABRqAdNoCG-AOaSAXFB2oQAbQC6ASigBeAHynzd+zLk5Ui4s-dtOXgEhUXEpdW1NPUMTXCxggO4+fhgDSTdnOIT0HWAdZjIAfigAbwLyCtBIEyoEFFp6AG5yirI4fghciBMtXTSajiSBVMMM0qruymp6ukhGqB5cnRqcvIBfZtaoNfKTMq3K+hrptFmITYO2jq6esZKJ47rT+g2W7ebiLFkn1CgAWx0AGsICdUCQKrUaGcQmIJNJJMB+Lh9EwIYMgik0jCwtIzJYrKiWKsdISyIkMdi4epelF+pR0ckRukHM4KMSbL41OUdD8zo8ofRSQslgyBIUBoFksQbCZQZgvPh6oRITNBfTJQJnPtyIgsOpFnlRYIAIT2dyyPheRR2bVbOBoBFQDrABylN5265iHqRaLGdVDTGjFluy6Xe2oR0GnSuqNGmm+mwXUOtZ3sfi-e5HUy8tVR17JshrIWXB7ZgWQYvkHaXVPpp0QYBJ7ZCLiSaC21rhx3O10dsOeyZqO7u0O1jOlnnliD5gtFkeHapl1UVkfVg5j+uN8o7HbEYgiMDIfgursugByAHkAPqsACqAEkADLoACiACVXQDgaC1AByS83g+z7vr+ib7sIh7HlAp5QHeT6vh+7hfiCPxchUv5wcBb6-kKaglDoax7MsUAIkiqD6GsYx4QRHJgQeR4ng6LqPheADi95np+QIoTQaHkL+XDIPouA4eUahIH8EAIjofxgCYqwQFRElSXksm0Y0QA)",Help with Types for Typesafe Redux Actions
1829,2021-09-13 19:12:05,44,1,"I haven't found a similar question online so here we go.

&amp;#x200B;

I'm (C# and JS background) learning TS from educative right now. I've just gotten to the explanation of type aliases. The example the following example they give has me wondering when to use an `alias` vs a `class`?

&amp;#x200B;

&amp;#x200B;

```typescript
type Score = { name: string; score: number; };

const tomScore: Score = { name: ""Tom"", score: 70 };
const bobScore: Score = { name: ""Bob"", score: 80 };
const janeScore: Score = { name: ""Jane"", score: 90 };
```",Newbie question: difference between type alias and class?
1830,2021-09-14 09:12:17,11,1,"I've inherited a legacy application. The app had many single JS files which I now have converted to TS. Funtions in the files are directly called by inline JS in pages. I can't realy change any of this...

So fare everything works...

The problem starts when I try to use a ES6+ JS/TS function like `array.findIndex`.

My TS files look like:
```
namespace MYApp.A {
    export function foo() {
        console.log('foo...');
    }
}
```
```
/// &lt;reference path=""A.ts"" /&gt;

namespace MYApp.B {
    // called from inline JS in a HTML page ...can't change this :(
    export function bar() {
        MYApp.A.foo();
        privateFoo();
    }

    function privateFoo(){
        const a = [1,2,3,4,5,6];

        // ERROR:
        // src/B.ts (12,25): Property 'findIndex' does not exist on type 'number[]'.
        // Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.
        const index = a.findIndex( x =&gt; x === 6 );

        return index;
    }
}
```

With this code I get the wollowing error `src/B.ts (12,25): Property 'findIndex' does not exist on type 'number[]'. Do you need to change your target library? Try changing the 'lib' compiler option to 'es2015' or later.`.

So I tried to set the target in my tsconfig to a later version `""target"": ""ES2017""`. But this did not work either.

tsconfig.json
```
{
  ""compilerOptions"": {
    ""noEmitOnError"": true,
    ""noImplicitAny"": true,
    ""target"": ""ES2017""
  },
  ""include"": [
    ""src""
  ]
}
```

build.js:
```
const ts = require('typescript');
const tsconfig = require('./tsconfig.json');
const glob = require('glob');
const fs = require('fs');
const path = require('path');
const os = require('os');
require('console-stamp')(console, { pattern: 'HH:MM:ss.l', label: false, colors: { stamp: 'yellow' } });

function ensureDirectoryExistence(filePath) {
    const dirname = path.dirname(filePath);
    if (fs.existsSync(dirname)) {
        return;
    }
    ensureDirectoryExistence(dirname);
    fs.mkdirSync(dirname);
}

function runTsCompiler(fileNames, options) {
    const compilerHost = ts.createCompilerHost(options);
    const program = ts.createProgram(fileNames, options, compilerHost);
    const emitResult = program.emit();

    const allDiagnostics = ts
        .getPreEmitDiagnostics(program)
        .concat(emitResult.diagnostics);

    allDiagnostics.forEach(diagnostic =&gt; {
        if (diagnostic.file) {
            const { line, character } = ts.getLineAndCharacterOfPosition(diagnostic.file, diagnostic.start);
            const message = ts.flattenDiagnosticMessageText(diagnostic.messageText, '\n');
            console.log(`${diagnostic.file.fileName} (${line + 1},${character + 1}): ${message}`);
        } else {
            console.log(ts.flattenDiagnosticMessageText(diagnostic.messageText, '\n'));
        }
    });

    const exitCode = emitResult.emitSkipped ? 1 : 0;
    console.log(`Process exiting with code '${exitCode}'.`);
}

function compileTs() {
    const files = glob.sync('./src/**/*.ts');
    tsconfig.compilerOptions.outFile = './dest/all.js'

    console.log('Compiling TS...');
    ensureDirectoryExistence('./dest/all.js');
    runTsCompiler(files, tsconfig.compilerOptions);
}

compileTs();
```


package.json:
```
{
    ""name"": ""my-app"",
    ""description"": ""desc"",
    ""version"": ""1.0.0"",
    ""type"": ""commonjs"",
    ""engines"": {
        ""node"": ""&gt;=12.18.0""
    },
    ""scripts"": {
        ""build"": ""node build.js""
    },
    ""devDependencies"": {
        ""console-stamp"": ""^3.0.3"",
        ""glob"": ""^7.1.7"",
        ""typescript"": ""^4.4.3""
    }
}

```

How do I get this code to compile?",Cannot get newsh JS features to work in TS
1831,2021-09-14 10:02:41,30,1,"I just started learning Typescript and I would you to ask if you guys always write the types of the object properties or you just use the normal javascript syntax. 

To be more specific, do you use this syntax:

    const person: {
  name: string;
  age: number;
} = {
  name: 'me',
  age: 37,
};

or this syntax:

    const person = {
  name: 'me',
  age: 37,
};



the first one, though it is more typescript pure and useful, I feel it is an overkill and could easily double the time needed to write code",Do you usually specify object properties types or not?
1832,2021-09-15 08:24:14,1,1,"Hi all,

I am newbie to webpack. I have some runtime chunks, and do not know how to load them !

I have a typescript node application with express framework, i run webpack to build the assets (using ts-loader), commpilation works fine and i see two runtime chunks

    -rw-r--r--  1 kristi.jorgji  1222451753  1776 Sep 15 10:19 runtime.8e860775ee3879b5ecb7.bundle.js
    -rw-r--r--  1 kristi.jorgji  1222451753   740 Sep 15 10:18 server.b8080617c2940a6d2588.bundle.js
    

Config

        optimization: {
            runtimeChunk: {
                name: 'runtime',
            },
        }

I run \`node dist/js/server.b8080617c2940a6d2588.bundle.js\` and nothing happens, i expect to get express server starting.

&amp;#x200B;

Now if i change webpack config to remove runtime chunk, then i get a bundle for server.js that works , i run node on it and express starts.

&amp;#x200B;

How can i use the runtime chunks &gt;?

&amp;#x200B;

The content of server.b8080617c2940a6d2588.bundle.js are:

    ""use strict"";
    (this.webpackChunk = this.webpackChunk || []).push([[377], {
        419: (e, r, s) =&gt; {
            const t = require(""express"");
            var n = s.n(t);
            const a = require(""react"");
            var c = s.n(a);
            const o = require(""react-dom/server"");
            var i = s.n(o), u = n()(), l = c().createFactory((function (e) {
                return c().createElement(""div"", null, e.message)
            })), h = process.env.PORT, v = void 0 === h ? 3e3 : h;
            u.get(""/"", (function (e, r) {
                r.send({message: i().renderToString(l({message: ""hello aliens""}))})
            })), u.listen(v, (function () {
                console.log(""server started at http://localhost:"" + v)
            }))
        }
    }, e =&gt; {
        e(e.s = 419)
    }]);",Webpack help understanding runtime chunks and how to load them
1833,2021-09-15 12:37:28,5,1,"I am just learning typescript and was watching a video that shows creating types based on what is returned by an API request. 

Immediately I was wondering what happens if the API changes and adds a field that didn’t exist previously, wouldn’t this break your application where as not using a type wouldn’t likely.",Api changes with type
1834,2021-09-16 00:05:49,9,1,"[Playground link](https://www.typescriptlang.org/play?#code/MYewdgzgLgBApgGzgFQJ4Ac4QFwwBQDkCAlmANYEwA+MBEwATselAQJQDaAujALwwcipCgBpa9JiwJcA3AChQkWAxAgoAUSR8YAExDAArgFs4YKADo9hk2c1wbUeXMQoMWcwzg6DwOAB4AbzkYEJgSclwACWQAWQAZOOE7B255UJgJZigo2LiAZUYs5NMoVLkAXwA+PDwAQ2BgMRc0TDY+Spgg9MVoeCQIbQBBBgZa1HMAMxUjPBU1O3MAczgNJAcIACFUZFrFgDlakzxmtzY2NND64A4TzB5+FwgLkM8oAwYwGCv5crEu0PCZFw3BEwVCmRYwK4FXOQA)

I have an array of element names I want to extract from the DOM.  I want to do this in a single reduce; however, I get an error when I try to assign to the accumulator.

I understand why and that is because `eles` can one of the HTML types and some of the properties don't exist on the other HTML types (like HTMLScriptElement does not contain `href`).

`eleTypes` can be changed to contain other elements so I don't want to clutter the reduce function with type guards/if statements for each individual element type.  I also don't want to type assert for obvious reasons.  It doesn't seem like I have a choice at all though.

Is there a way to fix this error at all given what I said above?",How do I fix this error which takes place in the array reduce without resorting to type guards or type assertions?
1835,2021-09-16 17:25:12,0,1,[removed],how add the object type an or undefined type in typescript without using object type itself ?
1836,2021-09-16 19:18:14,6,1,"I am about to transform an existing nodejs app to typescript.

Seeing a lot of \`../..\` patterns in the paths I was happy to find \`baseUrl\`. However I was not able to setup a working solution.

My minimal setup will be something like:

src/server.ts

    import * as express from 'express';
    import { greet } from 'a/a';
     
    const app = express();
     
    app.get('/', (request, response) =&gt; {
      response.send(greet);
    });
     
    app.listen(5000); 

src/a/a.ts

    import { x } from 'b/b';
    
    export const greet = x; 

src/b/b.ts

    import val from './b.json';
    export const x = val['greet'];

src/b/b.json

    { ""greet"": ""Hello world!"" }

package.json

    {
      ""name"": ""tsnode"",
      ""version"": ""1.0.0"",
      ""description"": """",
      ""main"": ""???"",
      ""scripts"": {
        ""dev"": ""ts-node ./src/server.ts"",
        ""test"": ""echo \""Error: no test specified\"" &amp;&amp; exit 1""
      },
      ""author"": """",
      ""license"": ""ISC"",
      ""devDependencies"": {
        ""ts-node"": ""^10.2.1"",
        ""typescript"": ""^4.4.3""
      },
      ""dependencies"": {
        ""express"": ""^4.17.1""
      }
    }

So what minimal tsconfig.json makes this code runnable?

thanks",tsconfig.json for using baseUrl and importing json
1837,2021-09-16 19:43:15,4,1,"The question may sound weird but hopefully the example will clarify what I'm trying to do.

So, I've the following piece of code:

    type TypeFalse&lt;R&gt; = new(b: false, ...others: any[]) =&gt; R;
    type TypeTrue&lt;R&gt; = new(b: true, ...others: any[]) =&gt; R;
    
    class Foo {
        public constructor(b: false);
        public constructor(b: true, n: number, k: number);
        public constructor(b: true | false, n?: number, k?: number) {
            if (b) {
                console.log(n! + k!);
            } else {
                console.log('failed');
            }
        }
    }
    
    class Bar {
        public constructor(b: false);
        public constructor(b: true, n: string);
        public constructor(b: true | false, n?: string) {
            if (b) {
                console.log(n!);
            } else {
                console.log(-1);
            }
        }
    }
    
    function funcTrue&lt;R&gt;(c: TypeTrue&lt;R&gt;, ...others: any[]): R {
        return new c(true, ...others);
    }
    
    function funcFalse&lt;R&gt;(c: TypeFalse&lt;R&gt;, ...others: any[]): R {
        return new c(false, ...others);
    }
    
    // Should be invalid code
    funcFalse(Foo, 1, 2);
    funcTrue(Foo, ""a"");
    funcTrue(Bar, 1);
    funcTrue(Foo, 2);
    funcTrue(Foo);
    
    // Should be valid code
    funcTrue(Foo, 1, 2);
    funcTrue(Bar, ""a"");
    funcFalse(Foo);
    funcFalse(Bar);

As you can see I've 2 classes whose constructors ""share"" the first parameter type (eventually I could add more). And what I want is to define two functions that can receive a constructor where the first ""n"" parameters are of known types, but allow those functions receive additional parameters and forward them to the constructor. However, I want typescript to validate the types of those additional arguments so that they match the types of the constructors.

The code above compiles and runs fine, but I want it to fail when the forward arguments don't match. Is there any way to do this in typescript?",Can I have a partial constructor as parameter type of a function?
1838,2021-09-16 23:53:41,7,1,"I have a function that is expected to return an object with keys being passed as an array to the function or return null if nothing is passed in.

I can get the types for the function to work, thats not an issue, but can I somehow get rid of the type casting inside the function body and type it properly?

[Link to playground is here](https://www.typescriptlang.org/play#code/C4TwDgpgBAsiCqA7Alge0VAvFA5AQRygB9cAhQknAYRwG4AoUSKAeQFdgwOAeeKCAB7AIiACYBnWAhToA2gF1iUNmIgAzZIgiiAfFnpRDy1Rq2j+QkRKh8A-FERsANk6gAuA0b6DhYyXCQ0RAUoewBvTyMjWQBpKE0bWUcAWwAjCAAneXk3KHFgDM0AcwYogF9I9wcIADdMhnoAY3R8qEaMiABDYXZODiwoXgtfawCZYMUSFVF1TW0dAApOjKLbXPgASlzermBePUw9CKjkNSgFgEJloo2oY6ijDuA2DIxHFyhOyR2eeB1aKAAekBUConQwAEkoEUIMAoIVzKgzsAABbIcS2SoVKLNRCtDriZxw7DXAB0HVEbEaEAWS0ajQANFAap0nLdDndKlEni8MPcHg9SULOvSGVyBVBZCynDlcOJUMlaqy2BAcGKJVBsUYykywmUNg1ubDefCIISnHCvqwOLt9gDgVA8E55VBUej6BV6A6fnCAO6oDIAa0kVsEkEawlETRaloG7S6PRtHAW01mZgN0bxcNScY63QgPoWGdxrUauYTBaTwAWsnwatwNHkxZaqCcEFJTlQRSWTNSTMaBqAA)

Thanks!",Conditional types as return type of a function. Can I somehow get rid of typecasting here?
1839,2021-09-17 16:04:49,46,1,"I got downvoted for this as a comment to another thread complaining about typescript casting not being “real” casting. But I think this needs to be said.

I feel like there are a lot of programmers out there that don’t realize this (types and casting being an arbitrary statement or “not real”) is true for most languages.

TS and JS are a little special in that TS compiles to a human readable/writable language (JS). So, the bar for modifying TS private/protected props from JS is low.

But, types and access in almost every language are there to _suggest_ (not mandate) how you treat data. The type/access are there _for you_. Language level runtime checking is almost never a thing (it’s inefficient). Being mad at them for being only suggestions is like being mad that you can jump off the bridge because the guardrails are climbable.

And if you think your super secret private value is safe in (for instance) C or Java… well, good luck with that.",Typescript types are real types
1840,2021-09-18 04:03:49,4,1,i'm using sveltekit and typescript. i'm a complete noob with both tools. can someone tell me what's the problem? i'm trying to create a mock endpoint to setup my frontend. i'll deal with the backend later.,TS NOOB: what's wrong here?
1841,2021-09-18 09:57:17,39,1,"Hi guys.  


I realise this is actually vanilla JS but I'm posting in typescript because I would be doing this a lot more simply if I was using just JS. I'm doing this specifically because I need to.

&amp;#x200B;

    let total = [undefined, undefined, 0, 2, 3, undefined, 2]
    
    const thingy = total.reduce((prev, curr) =&gt; {
        if (prev !== undefined) {
            return curr? curr + prev : prev
        }
        return 0
    }, 0)
    
    console.log(thingy)
    
    let total2 = [undefined, undefined, 0, 2, 3, undefined, 2]
    
    const thingy2 = total2.reduce((prev, curr) =&gt; {
            return prev? curr? curr + prev : prev : 0
    }, 0) // fails - if I change this 0 to 1, it works (although 1 higher than it should be)
    
    console.log(thingy2)

1. What have I done wrong with the 2nd one? To me they look the same (I understand there are subtle differences), but the second one breaks if I put the accumulator starting point to 0. I have to start at 1 to stop it from breaking (which of course gives the wrong result).
2. Which style would you rather see in code (disregarding the error)? For my work (I'm new) I'd probably use the 2nd style as that's more similar to how we code at work, we usually lean towards inline logic, I think. But the 1st one is technically more accurate as the first part is only checking for undefined, rather than e.g. undefined or null. The first one I could make even more accurate by nesting if statements, but then it'll get a bit ugly in a different way.
3. Any better solutions?

thanks in advance",Simple reducer with inline ternaries
1842,2021-09-18 10:38:44,12,1,"I have a parameter that is an array of a union type, and I map this array with a function that makes it all the same type. The type of the parameter remains the same however, while I expect it to be narrowed down.

I reproduced this wit ha simple example on [TS Playground](https://www.typescriptlang.org/play?#code/PQKhFgCgAIWgVAFgSwM7QO4HsBOBrVKWYKAYywDtUAXaAMyy2gF5oAKADwC5oKBXALYAjAKY5oAH2g0cyCgHMAlCwB80AN5FoHFtAAMAbi0cA1CYPRgwbT37CxUAL5QooCDDhI00ACZYRVADk1EQgJJDkVLRCAIbirJw8bHai4lIyckoA2gC6ysxqmjDauhwAdAIxAA6cqtDUAJ5VIlh00IEcgSzMrIEZCl0A-CU8AAYAJOocjqOKRpDGZQw4AKIxpIhs-fJ1RdD70tSyCmWRpDHUbIGBc1qOt5DOC5BuoQgo6H4iqBTB0CLIaiIBwecKRGjQSpVeBYADKR0yujYcRwMQaSW2kl4glSilyih421yuy0OBE1D4OAo0BRaIq1VqBXqTRabQ6XR6vW2QxG0AmUxmyhi6CJOQsVmgADkRCIfOhGs0aahUGJqMhKKgylqnC4IhrojEAF5I7jsFJiLHbPF5EnFHSsKEw+HHeScOaWaxasrQIR8Wg0ZAAG0Dvn8Pz+FBRWAwuv25WWaw2WwRCltB0OLtOlHOl2uD3293mTyAA).

Is there a way to fix this without creating a new variable?  
(Not that there is anything wrong with that, I'm asking more out of curiosity.)",Possible to narrow type of parameter after reassignment?
1843,2021-09-18 15:40:41,15,1,"I'm practicing typescript by converting a test project, and I'm just wondering do yall still use plain js in your unit tests or is it normal to write those in ts also?",Is it worth using typescript for Jest or @testing-library/react?
1844,2021-09-19 17:00:54,56,1,"I recently took on a full-stack typescript role, transitioning from a couple of years of writing mainly ruby-on-rails. My current focus has been on React Native through Expo, and I prefer to write things in quite a functional style.

Has anyone got any suggestions for great libraries that all newbie TS developers should know about?","Starting out with a Typescript role, any killer library recommendations I should know about?"
1845,2021-09-19 20:26:06,0,1,"Hi all,

In my react/typescript project the types I add under `src/types/` are correctly being read but when I use them under `src/stories/` I'm getting an error:

&gt; No overload matches this call.

My tsconfig looks like this:

    {
        ""include"": [
            ""./src/**/*""
        ],
        ""compilerOptions"": {
            ""strict"": true,
            ""esModuleInterop"": true,
            ""lib"": [
                ""es6"",
                ""dom""
            ],
            ""noImplicitAny"": true,
            ""noImplicitThis"": true,
            ""strictNullChecks"": true,
            ""moduleResolution"": ""node"",
            ""jsx"": ""react-jsx"",
            ""paths"": {
                ""@mui/styled-engine"": [
                    ""./node_modules/@mui/styled-engine-sc""
                ]
            }
        }
    }


I created a Code Sandbox with the error: https://codesandbox.io/s/infallible-oskar-g43p2?file=/src/stories/index.stories.tsx

Can anyone help me figure out why this error is happening?",Storybook not getting typescript types?
1846,2021-09-21 21:12:04,45,1,"Title tells the tldr.

Just wondered since I am working with microbundle and was recently thinking ""Why did I choose microbundle over tsc?"" and the only answer I have is my great `create-react-library` experience with a following `tsdx` depression but no real argument. (For those who dont know: Both got abandoned, and yeah, I fell for it. twice.)

The only thing i found in the internet was [this reddit post](https://www.reddit.com/r/typescript/comments/gzu67w/creating_typescript_libraries_packages/) which says tsc but not why to choose it over the others. Just

&gt; a good npm library [...] only use npm and tsc.

with the answers be like

&gt; This is solid advice.

Which is great but not really helping with the **why**.

My personal requirements are:
- typescript
- react / tsx compilation
- no garage project with some ~1000 downloads which gets abandoned after some months

[View Poll](https://www.reddit.com/poll/pss7kx)",Compiling ts libraries - Which Bundler / Compiler
1847,2021-09-22 19:03:33,24,1,"tl;dr Has anyone had experience with GraalVM and running JavaScript in the JVM?

I was working on refactoring a monorepo which contains Typescript (React) for the frontend and Java (Quarkus) for the backend services. Sometimes when context switching I find myself reaching for language features from JS when I'm writing Java, or vice versa. Then inspiration struck. 

---

# Context

GraalVM for those not in the know is a project by Oracle which enables polyglot applications on the JVM. So you can have a Java context with a JS context that then has a Ruby context etc.  You can even pass variables between contexts and make method calls into the language context as far as I know. It also enables native binary complination for JVM code. 

Typescript is just a superset of JavaScript with types. I'll spare the details as I'm sure you know this. I was able to setup a basic build chain that compiles TS to JS and then runs with the GraalVM version of the Node binary.

Quarkus is a framework like springboot but uses standard JavaEE / Jakarta and has CDI while also being able to compile native executables with the help of GraalVM. It's newer and I quite like it a lot. So much so that it got our team to switch from TS on the backend and join team Java. 

---

# Idea

I want to transparently comingle TS and Java together in the same project. 

Imagine a world where you have RestEasy Route annotations but you could work with JSON APIs in Typescript. This would make working with nested JSON objects so much more concise.

Imagine the same world where you can do server side rendering of react but have Java be your bff/server. This could replace Jakarta Server Pages with something modern.

Imagine another world where you can take JavaScript in a query, execute it in a sandboxed context and provide results back. Certain databases do this.

You can already do some of this with Kotlin so why not other languages too

As a backend framework it woud kind of be like NestJS but built on the JVM, running as a native executable. So small image size, low memory footprint/high density for clusters  and performant while gaining the speed of TS development.

Part of me wants Blazor / Razor from C# to come to Java. I think this setup would be similar

---


#  Questions

That leaves me with some questions.

JS is JIT compiled or interpreted, how would GraalVM native complination work in that case? 

Assembly Script is a subset of Typescript that compiles to WASM, which GraalVM can run. Does that mean I can use GraalVM to cross compile my wasm and JVM byte code to native executables? Sounds far-fetched but doable

Think it's possible to get Java decorators and injection to work in the Typescript context? 

I think this would be cool because you could have a Java services layer that can be injected into your JS layer. For example, a @POST annotation on a typed method of a TS class that is registered as a bean in cdi that then has a service injected into it.

---

# Conclusion

I'd be interested to read any thoughts or input on this admittedly wacky setup. Suggested reading or other frameworks to look into are more than welcome!

I'm looking for my next fun side project so thought I'd put a feeler out there to guage interest.

---

# Links:

https://www.graalvm.org

https://www.typescriptlang.org

https://quarkus.io

https://en.m.wikipedia.org/wiki/Jakarta_Server_Pages

https://nestjs.com

https://nextjs.org/docs/basic-features/pages

https://quarkus.io/guides/rest-json",GraalVM + Typescript + Quarkus !??
1848,2021-09-22 19:34:58,5,1,"Do I need Visual Studio? I only want to run transpile one project into js. What hoops must I jump through to do that? The instructions I've found assume I have something I don't. I used chocolatey to install typescript, which installed nodejs, but I don't have npm or npx, which are not installs provided by cholocatey. So where do I look next?",Windows 10 - How do I install tsc? Or even npm for that matter? Typerscript is supposedly installed.
1849,2021-09-23 20:04:26,1,1,[removed],Sequelize with typescript - direct field access gives undefined
1850,2021-09-24 20:47:00,5,1,So right now I have a bunch of free time and I was thinking of learning a SPA to become more employable I guess. Should I learn angular or blazor wasm? I already know typescript and js in a deeper manner and I have also experience with restful apis in dotnet core,Learning a SPA in 2021?
1851,2021-09-25 05:49:12,74,1,"**1)** What are the most difficult concepts to grasp in JavaScript for a beginner ?  (not just a beginner to programming it could be a beginner in JS from C#/Java/Python etc)

**2)** Which frameworks you prefer today React ? Angular ? Vue ? Do you happen to code for work without frameworks sometimes or do stuffs in vanilla for small project or others things like that or your 100% typescript with frameworks ? 

**3)** How many weeks/months you set aside each year to learn new important concept/stuffs/frameworks ? For you what's the cutting edge now ? Was it hard or long to pass all the steps from Junior to Intermediate and after Senior ? Do you feel that what seperate a senior from a junior is data structure, experience, and how to manage a project mostly or something else ? sometimes a new kid will know the new shinny frameworks/toys better than a senior but he will lack what compared the senior engineer at any given company ?

**4)** Do you think C#, Java, Php, Web Assembly will ever catch up to Javascript now or to the point where it will replace it completly or with something new  ?",[AskJS] What are the most difficult concepts to grasp in JavaScript for a beginner ? Which frameworks you prefer today React ? Angular ? Vue ?
1852,2021-09-26 19:41:52,9,1,"I made a free and open-source NPM package, [`typed-mixins`](https://www.npmjs.com/package/typed-mixins), to make mixins even easier in TypeScript. I would love to know what you think. 

**Background:** The [official TypeScript documentation's implementation of mixins](https://www.typescriptlang.org/docs/handbook/mixins.html) looks like a pain. You have to jump through some awkward hoops to get the types coerced correctly. This is the problem I wanted to solve - there's a million mixin packages on NPM already, but as far as I know, none of them make the type inference seamless and automatic.

My package makes typing mixins easy:

```
const SuperHero = mixin(Person, [Jumpable, Flyable]);

// hero is automatically typed as Person &amp; Flyable &amp; Jumpable
const hero = new SuperHero();
```

What do you all think? Anything that needs fixing?",Rate my implementation of TypeScript mixins
1853,2021-09-27 14:45:52,0,1,[removed],Help with typescript
1854,2021-09-29 10:38:17,6,1,"When hovering variable with interface, it just shown `var variable: Interface`

When hovering the interface directly, it shown `interface Interface`

When hovering variable with type, it shown `var variable: Type`

When hovering the type directly, it shown:

    type Type = {
        Type: string;
    }

But when adding ""&lt;T = {}&gt; = T &amp;"" in type like this

    type Type&lt;T = {}&gt; = T &amp; { Type: string };

Hovering variable will show

    var variable: {
        Type: string;
    }

and hovering the Type will show

    type Type&lt;T = {}&gt; = T &amp; {
        Type: string;
    }

I still new with typescript, can someone explain it?","What is ""&lt;T = {}&gt; = T &amp;""? It make me able to see the type shape when hovering variable"
1855,2021-09-29 11:05:01,1,1,"[This article](https://medium.com/@ryan.dabler/typescript-and-turing-completeness-ba8ded8f3de3?source=friends_link&amp;sk=e5b5343ec59ca131c5c91f69ee4ac8a4), talks about a common construction of `SomeGeneric&lt;...&gt; extends number ? ... : never`. This is because some of the generic types operate in such a way that TypeScript cannot be sure that the result is numeric despite the fact we know that it is. Without this check, we cannot pass `SomeGeneric&lt;...&gt;` into another generic type that expects a number. This type guard allows us to provide that information to the type checker. ",TypeScript and Turing Completeness
1856,2021-10-01 19:00:38,0,1,,I'm learning typescript and need help with coming up with a solution for this. Would really appreciate the help. Thankyou
1857,2021-10-02 09:39:11,8,1,"I want to scrap websites that don't have Rest APIs nor RSS feeds. I want something that is similar to python's beautiful soup and which does not need selenium or a web browser to work, because I want to run the project on google cloud functions that can't run browsers.",Is there a typescript web scrapper that doesn't use selenium?
1858,2021-10-03 06:40:10,5,1,"Is there a way to type a function that takes a Record and returns a Record to also take a Partial Record and return a Partial Record for those cases?

I've managed to do it with function overloading, but the order here matters (as every Record is also a Partial Record) so it's more error prone, and I have a ton of these methods to define this way.

    type Counter = ""a"" | ""b"" | ""c"";
type Counters = Record&lt;Counter, number&gt;;
type CountersStr = Record&lt;Counter, string&gt;;

function foo(c: Counters): CountersStr;
function foo(c: Partial&lt;Counters&gt;): Partial&lt;CountersStr&gt;;
function foo(c: Counters | Partial&lt;Counters&gt;): CountersStr {
 throw new Error('unimplemented');
}

// Partial&lt;CountersStr&gt;
const y = foo({ 'a': 1 });
// CountersStr
const x = foo({ 'a': 1, 'b': 2, 'c': 3 });

[Playground Code](https://www.typescriptlang.org/play?#code/C4TwDgpgBAwg9gVwHbAgJygXigIgIY5QA+uARoSTgMY4DcAsAFCiSyIroDOWUAShFThoAJgB54yVGgA0UJAgC2pdAD4GzcNAkc0nAMrAM2foJHj2U2Z0MBLJAHM1TJgDNkVYDbhIoLuHAAKKgAuNkkuAEpQ7Sl9Q3U3JA8vHz9AkKgABTw0TzwAG3Nw3RUorJy8wpiuAzQnRkTk719-IOiLLmJy3JsCop1OUvbiuIwAbyYoKahgAAs0OAB3OQhlgFE0BbQAgHJkGwUwfIgFCA5hHYj1AF9nRgB6e+7K-tjalSZBJGsoEB40gJjKA7PA7UIARig1yuTEeYQGtU+3h+AA9-q0gSCwVBwbIdqRsQAmPFUbEAZihVyAA)","Record Partial""ness"" copied out to the return type"
1859,2021-10-04 20:30:15,7,1,"Hello Everyone,

I'm looking at the odata-query-builder code and I'm seeing the following

    export class QueryBuilder {
        orderBy: (fields: string) =&gt; this;
        top: (top: number) =&gt; this;
        skip: (skip: number) =&gt; this;
        count: () =&gt; this;
        expand: (fields: string) =&gt; this;
        select: (fields: string) =&gt; this;
        filter: (predicate: (filter: FilterBuilder) =&gt; FilterBuilder, operator?: string) =&gt; this;
        clear: (fragmentType: FragmentType) =&gt; this;
        toQuery: () =&gt; string;
    }



How does this code actually generate odata queries?  According to the usage I've see, ToQuery should be generating an odata URL, but how?  What am I missing about typescript that's preventing me from understanding this code?",Trouble understanding this code.
1860,2021-10-04 22:21:17,11,1,"Hello  


I'm looking everywhere on how to convert a unit8array to hex and I can't find anything for typescript only javascript.   


Does anyone know how to do this?",converting an Unit8Array to hex
1861,2021-10-05 12:58:39,28,11,I'm pretty new to typescript can someone explain to me or has links that can explain generics visually?,How to visualize generics for beginners
1862,2021-10-05 15:26:16,17,4,"I'm trying to use the [\`autobind\` decorator](https://www.npmjs.com/package/autobind-decorator) today, and I just realized how much effort I need to get them working. Even this particular library says it should ""work out of the box"" in typescript, and a quick google [shows that's not true when you use nextjs](https://github.com/vercel/next.js/issues/4707#issuecomment-817284908).

Which makes me wonder:

**What's so fundamentally complex regarding adding decorators to the language?**

From what I understand, there is a [proposal](https://github.com/tc39/proposal-decorators) that has been worked on for the last 4 years.

From my naive point of view, this is a simple feature, other languages have had it for [decades](https://www.python.org/dev/peps/pep-0318/), and even js and ts have them. There is just no agreed-upon standard.

My intuition is failing me here, and I'd love to understand better the hidden complexity behind decorators in js / ts. What is hard? Isn't it just a function that receives another function? What's wrong with current implementations?",[AskJS] What's so fundamentally complex regarding decorators and TC39?
1863,2021-10-05 18:42:14,7,9,"Is it possible to change the typescript compilation target on a per-file basis, either by setting a value in the docstring of said ts file, or perhaps by placing typescript files in a different directory?

I work in an environment that supports two different JS engines (one of them limited to ES5, the other is current ecmascript 2020). We tell this environment which JS engine to use based on a docstring at the top of the file. Ideally I could use that same docstring to indicate that our ""old"" scripts never run on the new engine (and thus are not compiled to the new target), and vice versa.

I'd love to just port our entire codebase over to using current ecmascript, but there's a lot of red tape and validation work to be done for that, so instead I'm hoping to opt for a phased rollout.",Change Typescript Target on per-file basis?
1864,2021-10-05 21:07:42,16,8,"I'm facing a weird situation where I'm doing the traditional ""add typescript to existing node js backend"" project, and have run into an issue. We have a generic request handler which takes in ""endpoints"" as functions (these actually just return an object, but I digress). This generic request handler then calls the endpoint and returns the data object. Is there some way of mapping the endpoint functions that get passed into the request handler to the data objects that get returned? This is basically a conditional types question, but I can't find any good resources on how to do this so far.  


TLDR: I'm trying to solve this:  
[https://www.typescriptlang.org/play?#code/GYVwdgxgLglg9mABKMBGRAKAlIg3gKESMQHoTEYAnSgUwBsaA3AQzCkQGcoRhh8BffCmjwkKAEyYcBYqXJVaDFm07deA-PigBPAA41EtKOgC8iMCAC2AIxqUA3Fr0Gjks10owwAc0f4yiBCsiNpwIIg6+oiWzF4AYuAQEXARzADWBjQwUAAWdsjg6HCUBWDiADT+5KwAJog5zIwGuswcHF7eFGKFiAC0AHyGNMaVAbX1jQYSfYOuAPxCibAI0bFgCZAYKACClN7SmoJVQ9yUYABqzHScOWF0dQ1NEc4nqPgM7EYgZ5d0pqvxRJbQpYTQBL4-K43O4PSbPKKud7DE7fC5XNwA9ZAiRYIA](https://www.typescriptlang.org/play?#code/GYVwdgxgLglg9mABKMBGRAKAlIg3gKESMQHoTEYAnSgUwBsaA3AQzCkQGcoRhh8BffCmjwkKAEyYcBYqXJVaDFm07deA-PigBPAA41EtKOgC8iMCAC2AIxqUA3Fr0Gjks10owwAc0f4yiBCsiNpwIIg6+oiWzF4AYuAQEXARzADWBjQwUAAWdsjg6HCUBWDiADT+5KwAJog5zIwGuswcHF7eFGKFiAC0AHyGNMaVAbX1jQYSfYOuAPxCibAI0bFgCZAYKACClN7SmoJVQ9yUYABqzHScOWF0dQ1NEc4nqPgM7EYgZ5d0pqvxRJbQpYTQBL4-K43O4PSbPKKud7DE7fC5XNwA9ZAiRYIA)  


If this is impossible, I would love to understand why. I'm somewhat new to typescript, and rewriting this node application has been a great learning experience.",Need help with complicated conditional types. How do I map function input types to specific return types?
1865,2021-10-06 13:33:19,5,0," 

Another month gone by, another great collection of TypeScript videos has come! We’ve brought you first-class videos by know-it-all experts. Let’s see what they have in their pocket for you!

[https://blog.meetupfeed.io/typescript-september-2021/](https://blog.meetupfeed.io/typescript-september-2021/)","Best TypeScript videos from September, 2021"
1866,2021-10-06 19:55:38,10,4,"[link to example](https://www.typescriptlang.org/play?#code/PQKhCgAIUgxBLANgFwKYCcDOkCG704CekA9gGakBGAVqgMbLaXF0kC2ADnvAHYDmkZAAtUkAG45EAV1HlckPvDGoekDuhIcMyYshLzFy1ROmoAdFAjRIAATSdEONJAAqAGkgBpS7a4E2kADeLgDaALoAvuKSMtguIrj4RKQUJDT0jJCEJFKQAO44PMiC+mRIaOgW1jZ+OAGBnlEA1qjEAHJ1shTCouqa2oTALbpCTvlIiJCUoqyceKgAJlUwNXh1QaGekZCzfqguJABqMaImMpBSmIslkAuoFWy8onlC8HRCVLQM2HqQZSgYZa2dD3KToHjYYLhKJ4AgsEhFHC8XgCHrRUzYOSGFSQYbLYDgVAADw4JHQxTIUh4DHgCL+5QwAHl0t8AEKEAAKGi05MIx1MAB53F5IMS0DwFthhnIXAA+AAUZ1QmAAXK5wh5hmrPB5dvMDvyZGrNmEAJTG8JBKCQEHIMHGE6YMz-CryxUnY2myAAXll6JkIWGYR93u9O3YewNJ1NAG5wBEgA)

My IDE/Linter says ""ESLint: Syntax error in type: T[K](jsdoc/valid-types)"". Is this truly invalid?

    /**
     * Filters array of objects by comparing the value of a given property to a given value.
     *
     * @template T, TKey
     * @param {T[]} values The array of objects you want to filter.
     * @param {TKey} key Name of the property/key that will be compared.
     * @param {T[TKey]} compareToValue value used to determine which objects to filter.
     * @returns {T[]} array containing the values of given key.
     */
    export function filterObjectsByPropertyValue&lt;T, TKey extends keyof T&gt;(values: T[], key: TKey, compareToValue: T[TKey]): T[] {
      return values.filter((value: T) =&gt; value[key] === compareToValue);
    }",I'm having trouble documenting the following function with JSDoc. Unable to type a parameter with T[K]
1867,2021-10-07 10:49:17,4,1,"I have a Flow type project and would like typescript definitions generated for this project, any package or method to have them generated?",Can I get type definitions from a project written in Flow
1868,2021-10-07 18:06:40,22,1,"Ive read documentation and am aware that type definition files are required for JS libraries so that TS is aware of the types and therefore can avail of the benefits of static type checking etc… 

But if it’s a TypeScript class being used in another project that’s also in TypeScript, why is a type definition file required?",Why do typescript classes need to have a .d.ts file when being used externally?
1869,2021-10-08 14:13:58,15,1,"Hey everyone! I just want to share a project I've been working on for about \~2 months now, and I'm really proud of it!

I wasn't really satisfied with typedoc, which is the only ""mainstream"" documentation generator out there currently, the design didn't really grab me, the search function doesn't have any filtering options, and the sidebar feels very messy and cluttered, so I created my own generator!

Of course, my generator is also far from perfect, but I do believe it fixes all the problems I listed above.

[https://github.com/ts-docs/ts-docs](https://github.com/ts-docs/ts-docs)

And here's the documentation for the documentation generator, generated by the documentation generator: [https://tsdocs.xyz/](https://tsdocs.xyz/)

Feedback / constructive criticism is very appreciated :)",I created a documentation generator for typescript projects
1870,2021-10-09 06:40:05,7,1,"Hey guys, I'm currently learning TypeScript atm and I am facing this issue right now which I don't know any answer to

So, when I create my class in typescript and compile, I am getting this weird duplication on my javascript file.

&amp;#x200B;

Please take a look at this below code snippet

# This is my TypeScript code

    class Department {
    	private employees: string[] = [];
    
    	constructor(private id: string, public name: string) {
    		this.name = name;
    		this.id = id;
    	}
    	describe(this: Department) {
    		console.log(`This department is ${this.name}`);
    		console.log(`This department is ${this.id}`);
    	}
    	addEmployee(employee: string) {
    		this.employees.push(employee);
    	}
    	printEmployeeInfo() {
    		console.log(this.employees.length);
    		console.log(this.employees);
    	}
    }

This is my compiled JavaScript code

    ""use strict"";
    class Department {
        constructor(id, name) {
            this.id = id;
            this.name = name;
            this.employees = [];
            this.name = name;
            this.id = id;
        }
        describe() {
            console.log(`This department is ${this.name}`);
            console.log(`This department is ${this.id}`);
        }
        addEmployee(employee) {
            this.employees.push(employee);
        }
        printEmployeeInfo() {
            console.log(this.employees.length);
            console.log(this.employees);
        }
    }

As you can see, when compiled, in JavaScript constructor lines, there are duplicates for [this.id](https://this.id) and [this.name](https://this.name)

I have no idea why it's causing this problem

If I do it like this on TypeScript, I don't get any duplication

    class Department {
    	private employees: string[] = [];
    	private id;
    	public name;
    
    	constructor(id: string, name: string) {
    		this.name = name;
    		this.id = id;
    	}
    	describe(this: Department) {
    		console.log(`This department is ${this.name}`);
    		console.log(`This department is ${this.id}`);
    	}
    	addEmployee(employee: string) {
    		this.employees.push(employee);
    	}
    	printEmployeeInfo() {
    		console.log(this.employees.length);
    		console.log(this.employees);
    	}

Any advice or suggestions are appreciated! Thanks again",Question from a super beginner
1871,2021-10-09 14:51:21,10,1,"As title, would appreciate if anyone can share some of the best open source repo that uses react hooks written in typescript with best practices in mind.

I really want to learn deep dive on using typescript for my upcoming project instead of normal js.",Open source react project with typescript best practices
1872,2021-10-09 21:29:38,17,1,"Hi all,

I am working on some projects &amp; [this](https://www.typescriptlang.org/play?all=true#code/C4TwDgpgBAKgTgQwHYGcBmB7OBbAPASSTAFdgoIAPYCJAExSmKQGskMB3JAGigHlSSZStToMmrDkgB8UALxQAFADcEAG2IQAXFEKCAlHJn9gggLAAoUJCgAFOBFoBLAMYJquGOGjCa9RizZOGXkPOVgvKQUEbRgDWRkFACMYuJlEjAxVCGQLC2cMVCEAR2I1MIJyKl8xAMkeXkqRP3FA6QU0JAB+GMRUTBwCeqk9bTsHFzcIAmCZBEMoRPmAbwsoNagOqE7O+QVlbRbJVKglAwQGeGR0LDx8IdX1+2BiOCQNpCSoc5042XkOqJfBj4PQWAC+uXMAHooVAAIIAOigKBKCHsGyYzmAjgKeQKKDIKNK9gAcsRsIkIHAwvsoEhyZS4MclFAAFRQABMeMKUEcKAAyqj7ABRVGqMIQMUKIloiBkilU0HmfI8ubyPmC4kQUWlVQKDl6BQAWgNFhhvIFQu1UoNCgARCa7QZzflsGBHFlyHA4FgANxQfLeiBYhYQAAWCCUOLgkPNACEkbQIGgEMRVMBuQSLTqyvJJbqFEqVVnFuqUDm9QBmQ0AViV5r5FYU1ftNadUBdGDdHu83r9Aaw9hDlIjUawsdhAGEkQArFC45X4siNsUAKXnbzzUtX-N4JIRBLgjiQAHNHGgQEWlwGwivdeuCgolnSENgtFA7auMGGkHaoGDDWfJBX3fO0ABFIwgP8ALNWE7zUB8PiAkDtDtAAxDJoMAr5aFoewUBQVCABkCloAosI7WFXXdT0qR9OB-UDIcyBHSNo0hYtMggBFnCyNFC0zLiEVUDATyiK9UCEkSxMSCT5yyYTRIUZw9CAA) is a helper function that I want to have working without having to explicitly infer on lines 5 &amp; 6. 

I also feel what I did on line 2 is kind of a hack but was the only way to have the type check work, so any opinions on that would be good too.

The function is a simple currying function that checks if two values are the same

    const isEqual = a =&gt; b =&gt; a === b

howeverthis was not enough for me as I wanted a way to apply a function to either parameter &amp; check their outputs are equavlient

    const isEqual = (fn: Transform) =&gt; a =&gt; b =&gt; fn(a) === fn(b)

but then this led me to think that i could have upto two transformation functions, leading to this design

    const isEqual = (fnA:Transform, fnB:Transform | undefiened) =&gt; a =&gt; b =&gt; {
        return (fnB || fnA)(b) === fnA(a)
    }

so this is where I am now. A [function](https://www.typescriptlang.org/play?all=true#code/C4TwDgpgBAKgTgQwHYGcBmB7OBbAPASSTAFdgoIAPYCJAExSmKQGskMB3JAGigHlSSZStToMmrDkgB8UALxQAFADcEAG2IQAXFEKCAlHJn9gggLAAoUJCgAFOBFoBLAMYJquGOGjCa9RizZOGXkPOVgvKQUEbRgDWRkFACMYuJlEjAxVCGQLC2cMVCEAR2I1MIJyKl8xAMkeXkqRP3FA6QU0JAB+GMRUTBwCeqk9bTsHFzcIAmCZBEMoRPmAbwsoNagOqE7O+QVlbRbJVKglAwQGeGR0LDx8IdX1+2BiOCQNpCSoc5042XkOqJfBj4PQWAC+uXMAHooVAAIIAOigKBKCHsGyYzmAjgKeQKKDIKNK9gAcsRsIkIHAwvsoEhyZS4MclFAAFRQABMeMKUEcKAAyqj7ABRVGqMIQMUKIloiBkilU0HmfI8ubyPmC4kQUWlVQKDl6BQAWgNFhhvIFQu1UoNCgARCa7QZzflsGBHFlyHA4FgANxQfLeiBYhYQAAWCCUOLgkPNACEkbQIGgEMRVMBuQSLTqyvJJbqFEqVVnFuqUDm9QBmQ0AViV5r5FYU1ftNadUBdGDdHu83r9Aaw9hDlIjUawsdhAGEkQArFC45X4siNsUAKXnbzzUtX-N4JIRBLgjiQAHNHGgQEWlwGwivdeuCgolnSENgtFA7auMGGkHaoGDDWfJBX3fO0ABFIwgP8ALNWE7zUB8PiAkDtDtAAxDJoMAr5aFoewUBQVCABkCloAosI7WFXXdT0qR9OB-UDIcyBHSNo0hYtMggBFnCyNFC0zLiEVUDATyiK9UCEkSxMSCT5yyYTRIUZw9CAA) that seems to work (produces a compile error if wrong type is applied) but my implementation feels hacky &amp; wondering if anyone could advice a more elegant solution",fancy equals function with strict types
1873,2021-10-10 16:53:40,16,1,"I lot of people have recommended blogs and githubbooks, but I feel like I learn much quicker from vidoes.",Best video tutorial(s) to learn typescript if I'm well versed with JS.
1874,2021-10-11 09:04:47,2,1,"**Monday, October 04 - Sunday, October 10**

###Top Posts

| score | comments | title &amp; link |
|--|--|--|
| 201  | [43 comments](/r/javascript/comments/q2qf5g/made_a_typing_survival_game_in_4kb_of_javascript/)  | [Made a Typing Survival game in 4KB of javascript. Quite challenging, known highscore yet is 111 while my own high score is 92.](https://dobryncat.itch.io/type)|
| 180  | [50 comments](/r/javascript/comments/q3dk0p/major_npm_outage/)  | [Major NPM outage](https://status.npmjs.org/incidents/7pqfqvkwvb58?u=9ls83ts9v472)|
| 153  | [80 comments](/r/javascript/comments/q4zzrm/adonisjs_a_fully_featured_web_framework_for_nodejs/)  | [AdonisJS - A fully featured web framework for Node.js](http://adonisjs.com)|
| 145  | [0 comments](/r/javascript/comments/q4nt4t/github_yewangbesogo_embeddable_sgf_editorviewer/)  | [GitHub - yewang/besogo: Embeddable SGF editor/viewer for the game of Go &amp;#40;aka Weiqi, Baduk&amp;#41;](https://github.com/yewang/besogo)|
| 125  | [8 comments](/r/javascript/comments/q58637/i_have_created_a_robot_that_generates_google/)  | [I have created a robot that generates Google presentations from Wikipedia article](https://github.com/vilmacio/gslides-maker)|
| 114  | [33 comments](/r/javascript/comments/q1u817/game_of_codes_if_frontend_technologies_were/)  | [Game of Codes - if front-end technologies were countries](https://game-of-codes.mdbgo.io/)|
| 106  | [1 comments](/r/javascript/comments/q43tc6/lots_to_see_in_firefox_93/)  | [Lots to see in Firefox 93!](https://hacks.mozilla.org/2021/10/lots-to-see-in-firefox-93/)|
| 99  | [70 comments](https://www.reddit.com/r/javascript/comments/q11tnc/askjs_why_is_multithreading_not_popular_for_web/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Why is multithreading not popular for web applications?|
| 94  | [51 comments](/r/javascript/comments/q396fn/askjs_what_useful_dev_tools_do_you_wish_more/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; What useful dev tools do you wish more people knew about?|
| 72  | [17 comments](https://www.reddit.com/r/javascript/comments/q14s4l/vanillatreeviewer_a_minimalist_file_browser_for/)  | [VanillaTreeViewer: a minimalist file browser for blogs, tutorials, documentation, etc...](https://abhchand.me/vanilla-tree-viewer/)|


&amp;nbsp;

###Most Commented Posts

| score | comments | title &amp; link |
|--|--|--|
| 59  | [87 comments](/r/javascript/comments/q4eblp/askjs_do_you_use_objectsealfreeze_often/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Do you use Object.seal&amp;#40;&amp;#41;/freeze&amp;#40;&amp;#41; often?|
| 22  | [28 comments](https://www.reddit.com/r/javascript/comments/q17pvc/askjs_what_is_the_best_game_engine_for_js_thats/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; what is the best game engine for js, that’s free?|
| 70  | [27 comments](https://www.reddit.com/r/javascript/comments/q0xxob/when_a_javascript_map_object_actually_came_in/)  | [When a JavaScript Map&amp;#40;&amp;#41; Object Actually Came in Handy](https://macarthur.me/posts/when-a-map-came-in-handy)|
| 25  | [22 comments](/r/javascript/comments/q5771a/javascript_stays_most_popular_programming_tech/)  | [Javascript stays most popular programming tech - Times of India](https://timesofindia.indiatimes.com/business/india-business/javascript-stays-most-popular-programming-tech/articleshow/86221595.cms)|
| 0  | [22 comments](https://www.reddit.com/r/javascript/comments/q1ab41/what_is_typescript_and_why_should_you_care/)  | [What Is TypeScript and Why Should You Care?](http://blog.infinidream.net/blog/61558739a7e1c80795908285)|


&amp;nbsp;

###Top Ask JS

| score | comments | title &amp; link |
|--|--|--|
| 16  | [20 comments](/r/javascript/comments/q4d9o4/askjs_do_i_need_to_learn_html_and_css_to_work_as/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Do I need to learn HTML and CSS to work as a backend engineer on a company that exclusively uses Typescript and NodeJS?|
| 13  | [18 comments](/r/javascript/comments/q5di46/askjs_confusion_on_memory_leaks_caused_by_not/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Confusion on memory leaks caused by not clearing the timeout in the fetch handlers|
| 7  | [10 comments](/r/javascript/comments/q1yr1c/askjs_whats_so_fundamentally_complex_regarding/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; What's so fundamentally complex regarding decorators and TC39?|


&amp;nbsp;

###Top Showoffs

| score  |  comment  |
|--|--|
| 4  |  /u/krasimirtsonev said [I think I'm finally ready to share my 8 months long project -&gt; &amp;#91;https://contempas.com/&amp;#93;&amp;#40;https://contempas.com/&amp;#41;     It's entirely made with JavaScript :D I'm using it to prepare and po...](/r/javascript/comments/q4g1yz/showoff_saturday_october_09_2021/hfzcsrh/?context=5) |
| 1  |  /u/psx01073 said [I recently made a game to learn vim and also posted it &amp;#91;here&amp;#93;&amp;#40;https://www.reddit.com/r/vim/comments/q4q8tz/showcasing_vimgore_a_interactive_game_to_learn_vim/&amp;#41;.  You can see the game a...](/r/javascript/comments/q4g1yz/showoff_saturday_october_09_2021/hg2o0k2/?context=5) |
| 1  |  /u/Mr_Stark_OS said [We Watch Wall Inc., a new company looking to innovate in the web technology space recently open-sourced a new unit-test generation library called Fast-Fuzz. The new tool, &amp;#91;released last week on NP...](/r/javascript/comments/pzq8u9/showoff_saturday_october_02_2021/hfc6432/?context=5) |


&amp;nbsp;

###Top Comments

| score  |  comment  |
|--|--|
| 150  |  /u/hobbes64 said [ &gt;	npm ERR! This is probably not a problem with npm  Yeah I’m gonna have to disagree with you buddy](/r/javascript/comments/q3dk0p/major_npm_outage/hfrgyqh/?context=5) |
| 147  |  /u/1940295921 said [Because you're generally not doing highly computational tasks in a browser.  For the times when you are, it is common enough to use web workers, but as you don't have real multi-threading, in that you...](/r/javascript/comments/q11tnc/askjs_why_is_multithreading_not_popular_for_web/hfc01nk/?context=5) |
| 98  |  /u/clitoris_paper_cut said [Facebook down, Twitch hacked, npm out.  What's happening lately?](/r/javascript/comments/q3dk0p/major_npm_outage/hfra2s1/?context=5) |
| 85  |  /u/CreativeTechGuyGames said [Well if that surprises you, wait until you learn about &amp;#91;WeakMap&amp;#93;&amp;#40;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap&amp;#41; which is better suited for th...](/r/javascript/comments/q0xxob/when_a_javascript_map_object_actually_came_in/hfbb21v/?context=5) |
| 59  |  /u/8bit-echo said [Honestly I think learning how to use source maps and a proper debugger saves so much time and effort. Being able to step through code and examine the scope and value of variables in real time is so mu...](/r/javascript/comments/q396fn/askjs_what_useful_dev_tools_do_you_wish_more/hfqhrjb/?context=5) |


&amp;nbsp;",Your /r/javascript recap for the week of October 04 - October 10
1875,2021-10-12 19:01:20,8,1,"```bash  
$ git clone https://github.com/NanoSpicer/typescript-backend-starter.git
$ cd typescript-backend-starter
$ npm run setup
$ npm run seed
$ npm start  
```  

Let me know what do you think!  


# Libraries
  * 🕸 Interfacing – GraphQL
  * 🖥 Server – Express
  * 💾 DatabaseAccess – Knex
  * 🧪 Testing – Jest
  * 💻 Language – TypeScript","I've made a nodejs backend starter with TypeScript, GraphQL, Knex and Jest!"
1876,2021-10-12 20:38:44,6,1,"As part of converting a js project to ts I looked up the options about validating-parsing json data to typesafe Objects and now I feel a bit overwhelmed.

There are some solutions operating as the typings defined in the libs own ""language"". Since the group is not a ts expert, I suspect our solution should use the standard typescript types/interfaces defined, and \[typings\] should not be written in a library specific way.

Is my assumption right?

If yes, could you recommend a library to do typesafe json consuming?

If not, what custom defined typings can offer in return?

&amp;#x200B;

Sorry if this seems a bit messy, but right now I cannot formulate better.",Handling json input in an express app
1877,2021-10-12 21:45:59,0,1,[removed],Help with typescript environment
1878,2021-10-12 21:47:46,0,1,,Running typescript project
1879,2021-10-13 08:53:13,0,1,[removed],Custom utility types in typescript
1880,2021-10-14 14:28:37,13,1,"I remember struggling with this idea the last time I worked on a TypeScript project, so either I've become more clever and wise, or something about a recent version of TypeScript has made this possible. 

Here's the [playground example](https://www.typescriptlang.org/play?#code/HYQwtgpgzgDiDGEAEAxJBvAsAKCXpEAHjAPYBOALkgJbAURkBmCyKJJGO+3Sj7AXEmABXMACMGXfAF8cUvLXpMWqdigQVyAT064eeABR8SgkeIYBKQWxLyks7HYpaYrdgFkSAE2EAbZAC8qiTq8JpkOgBkuvp4ZBAgXiTAvjpeEMx+FNbsdg52RKSUSPDJUFQ2OSSePv5IQQYGFvUAfDGxpcDlSGD1SEYCQqISZM0BbQbovOz2FnbcYAB06Zm+VEFTxoIAjPbz+PEUwmTAPXkWTTj52J3djNvWizZ9KE-sBttzN2VUjABMj2eQVeNmWGRAWTk3y6JH8i18JAA5kZPjhbrCIPCkUY-l90XCEcj7vUAkF-niyhisUTtotjCSyX86ewLEA)

Notice that, in the playground example, I'm exporting a type and a const with the same name, which seems to be a common practice. This is more-or-less emulating a class with static properties/methods, with a few minor differences:

* There is no true constructor, but rather a factory function (if you want to think of it as a constructor at all- it could just be a callable object that just *does stuff* when called).
* It's not a true JavaScript class/function, so there is no prototype, for better and worse.
* You can use this to model types that are not easily represented by actual classes/objects, such as unions, intersections, tuples, etc.

Thoughts? Has this always been possible with TypeScript without casts, or is this enabled by a recent version?",[TS 4.4.3] Did I finally figure out how to create a callable object with properties in a type-safe way (playground link inside)?
1881,2021-10-14 14:40:11,0,1,"Hi guys, I am looking for help in converting typescript GRAPHQL apis into c#?  any help would be highly appreciated, thank you",How to convert BITQUERY GRAPHQL api To C#?
1882,2021-10-14 16:26:32,1,1,"I'm putting together some material to help get more devs on my team up to speed with Typescript and I'd like to collect your opinions. I created this survey with open-ended questions intended for devs currently using typescript:  

[https://docs.google.com/forms/d/e/1FAIpQLSelEaJYXXbcRBH9rnQvp4BBBWcvBBKviz18Yn7-b0SZFVNm-A/viewform?vc=0&amp;c=0&amp;w=1&amp;flr=0](https://docs.google.com/forms/d/e/1FAIpQLSelEaJYXXbcRBH9rnQvp4BBBWcvBBKviz18Yn7-b0SZFVNm-A/viewform?vc=0&amp;c=0&amp;w=1&amp;flr=0)

I'd love to hear what you have to say, and I'll update this post with the results when I collect them.",Typescript learning - what makes the best starter material?
1883,2021-10-14 21:05:20,0,1,"Hello, I have a typescript interface which looks like this :-

interface UserInterface {

	name: string;

	age: number;

	addresses: {

		street: string;

		city: string;

		state: string;

		zip: string;

	}\[\]

}

&amp;#x200B;

I want to extract the type of ""address"" from above. I started off by using the Pick operator :-

type addresses = Pick&lt;UserInterface, 'addresses'&gt;

But this gives the Array of addresses. How do I get the type of a singular address ?",Pick the type of an array ?
1884,2021-10-15 20:33:44,13,1,"I have a method that takes an `unknown` type and tries to validate it as a specific object. One issue is that, at one point, I have is that `Array.isArray()` is narrowing `unknown` and `unknown[]` to `any[]`. Narrowing to `any[]` doesn't break my code, but I would prefer that each of these cases return `unknown[]` from `Array.isArray()`. I want to be forced to provide type information before using items from the array through type guards. With the array narrowed to `any[]`, I can write whatever I want after that point.

Does anyone have any ideas on how to narrow `unknown` or `unknown[]` to `unknown[]` using `Array.isArray()` without casting?

[I have a ts playground showing the issue.](https://www.typescriptlang.org/play?#code/MYewdgzgLgBFCm0BcMCuYDWYQHcwG0BdGAXhiIG4BYAKFoEsAzACgEEAndgQwE8A6ehA7cezBNACUEmAG9aASHFQ+jEOwCiXYAAtm9BAFtSAPhihIIADbw+lkAHNmAcn3wDTgDQxXBqdRoAvrS05tBwiFAATCjoWLhgpOSE-gwswrwCQpy8YhGRUrIKSpEqapo6eoYmZuAQVjZ2ji6Gnt6GfrQBQA)

&amp;#x200B;

https://preview.redd.it/elfitrjncot71.png?width=542&amp;format=png&amp;auto=webp&amp;s=bb4127c97169e9ca5814aea976f3b80a616f5e97",Question about Array.isArray() and unknown[]
1885,2021-10-16 10:29:23,1,1,[removed],How does typescript check type at compilation while js is in fact an interpreted language?
1886,2021-10-16 13:29:33,4,1,"I have a React project where I would like to use some aliases to  refer to some code that live in folders outside the project. These  folders do not have a package.json neither a tsconfig.json, only .ts  files.

This is my tsconfig.json:
```
{
  ""compilerOptions"": {
      ""outDir"": ""./dist/"",        // path to output directory
      ""sourceMap"": true,          // allow sourcemap support
      ""strictNullChecks"": true,   // enable strict null checks as a best practice
      ""module"": ""esnext"",         // specify module code generation
      ""jsx"": ""react"",             // use typescript to transpile jsx to js
      ""target"": ""es5"",            // specify ECMAScript target version
      ""allowJs"": true,             // allow a partial TypeScript and JavaScript codebase
      ""baseUrl"": ""."",
      ""esModuleInterop"": true,
      ""allowSyntheticDefaultImports"": true,
      ""moduleResolution"": ""node"",
      ""resolveJsonModule"": true,
      ""isolatedModules"": true,
      ""paths"": {
        ""@Root/*"": [""./src/*""],
        ""@Common/*"": [""./../common/*""],
        ""@Images/*"": [""./../common/assets/images/*""],
    }
  },
  ""include"" : [""./src/"", ""./../common/""],
  ""exclude"": [""node_modules"", ""dist"", ""config"", "".vscode""]
}
```
However, every time I refer to something with @Common or @Images, which is located outside the project, in a ""common"" folder, then I get a red highlight from VSCode.

Thank you in advance and regards",How to make an alias to point an outside folder? tsconfig.json
1887,2021-10-16 16:56:11,2,1,"Hi everyone,

Here is my problem :

We have different node/typescript projects, some react app and some node servers. Because they all share some typings and logics we made a shared node repository (still in TS) which is being sourced by all of the others projects.

Because the react apps use a bundler, we import directly the typescript files during development and they are being compiled and bundled at the same time as the building of the react app.

However for the servers it's different. We would like to also be able to import the typescript files as well and have them being compiled with the rest of the servers code. However, as we don't use a bundler, we didn't succeed to make it this way. 

Is anyone aware of how to make this work ? For more convenience and more uniformity, we would like to avoid to have to import the compiled JavaScript files of the shared project.


Note : also, sourcing either TS files or compiled JS files can lead to some technical problem like [this one](https://github.com/microsoft/TypeScript/issues/40878) that need some dirty hack like the use of [this library](https://www.npmjs.com/package/add-js-extension) to be fixed


Thanks for you help !",What's the easiest way to compile project with dependency from their source typescript
1888,2021-10-17 11:58:49,0,1,,EfficientNet - image recognition and object detection model written in node and typescript
1889,2021-10-17 11:58:49,0,1,,EfficientNet - image recognition and object detection model written in node and typescript
1890,2021-10-17 11:58:49,0,1,,EfficientNet - image recognition and object detection model written in node and typescript
1891,2021-10-18 10:07:50,1,1," 

Greetings everyone forgive me as I am new to typescript and novice at best.

I need some guidance in a matter. So, basically I have a dynamo db using the aws-sdk and I am getting the data

from POST request as a JSON body containing username, token and token quantity example.

{

   ""username"": xyz"",

   ""token"": ""bitcoin"",

   ""quantity"": 2

}

The data is being passed from post in the event.body parameter.

My already existing database comprises of username, email and password I first use the dynamoDB get method to get the data based on the 

username and then add the data token and quantity as assets property in the dynamodB table using the put method.

Now the problem I am facing is that I need to structure my data like this 

{

   ""username"": ""xyz"",

   ""email"": ""xyz@gmail.com"",

   ""password"": ""MyPassword"",

   ""assets"": {

""bitcoin"": {

""quantity"": 2

}, 

Second I need to update the quantity for the same token and add data if there is a new token added when the data is received from HTTP Post. The put method overwrites the data and I am not sure how to use the update method for this the code is provided as a paste bin for review.

https://pastebin.com/Zf3baYNh

Thanks in advance",Guidance required in updating Dynamo DB database
1892,2021-10-18 13:03:24,7,1,"I have made a recursive function that returns a 'path' for the specified element based on the ID of the element. The data structure is recursive.  
I know something like this would work in JS, but I am not sure how to approach the errors I am getting.  
Any help would be greatly appreciated!  
[TS Playgroand Link](https://www.typescriptlang.org/play?#code/FAFwngDgpgBAEgSygJwIbIMYAswFEA2UAtlAHYgwC8MA3sDDAgCYBcMAziMgqQOYDc9GKVQk2nbn0EMI6MiACSrDlx68h2BPibIyAfjaIU6bHkIlyAbQC6ggL7BgUAB4QA9sgoAzAK6kMIAhupDBePExKAHJQnFBMABRMqCCohkhomDgExPIANIzKEmoAlGykPkQARig2tEIIXjCJyagAdMxUlNTMxTC6ID7IITaCQoQUuuw++CBlFdXII44MGMGcjFRNSSmtmtq6IQA+hzA2xa1hpBFXLvHxe0y9lAB8dQwM-YMh8ZPTFNSXCJMaKxBIPfI9YrSGB2KHLRiNH4xP69T5DU4IfKtbG-Ga2YB2IA)",Recursive Function Problem
1893,2021-10-19 05:33:12,14,1,"In the earlier years of TypeScript, I wrote a few libraries in TypeScript, where in addition to the usual `*.JS` \+ `*.D.TS` files, I also included `*.MIN.JS` \+ `*.JS.MAP` files.

Is this practice completely obsolete/redundant nowadays?

I noticed like some libraries, like Angular 12, for example, complain about still standard `commonjs`, so for the lack of a better distribution, I have my doubts, hence the question.",Should a typescript library include minified JS+MAP files?
1894,2021-10-19 12:04:36,2,1,[removed],Here's a config for your swcrc in nodejs typescript project
1895,2021-10-19 12:12:20,1,1,,Here's a config file for SWC in typescript nodejs projects
1896,2021-10-19 15:44:33,79,1,"Hi,

Recently, I've worked on different projects where I only TypeScript as the programming language. One of major advantages to use the same language is to reduce context switching.

You only need to use one ecosystem: one package manager, one linter, one code formatter, etc. You only need to configure once and share it across all your projects. Saving you a ton of time ;)

&amp;#x200B;

Here is the list you where you can use TypeScript for almost everything:

\- **Frontend development** with React, Next JS supports out of the box TypeScript

\- **Backend development** with Serverless Framework and Express JS

\- **Infrastructure as Code** with AWS CDK

\- **Mobile development** with React Native and Expo framework

\- **Machine learning** with Tensorflow JS

\- **Smart assistant** with Alexa using TypeScript

&amp;#x200B;

TypeScript can now be used everywhere and make the development much smoother with only one programming language to learn. No more context switching between programming language and all the stack is unified.

&amp;#x200B;

Could we use TypeScript for everything? Is TypeScript the only language you need to learn?

&amp;#x200B;

Original post from: [https://creativedesignsguru.com/typescript-everywhere/](https://creativedesignsguru.com/typescript-everywhere/)",TypeScript is the Only Programming Language you Need: TypeScript Everywhere
1897,2021-10-20 14:12:28,0,1,[This brief post](https://lukasborawski.medium.com/defining-typescript-config-types-for-the-mono-repo-application-a39a5b8c7bc2?source=friends_link&amp;sk=6cbdae7ef6e8143e48caf1fac0883ced) describes how to use [Lerna](https://github.com/lerna/lerna) to deal with TypeScript configs for a mono-repo application,Dealing with TypeScript configs for the mono-repo application
1898,2021-10-20 16:46:46,29,1,,I wanna learn typescript from very basics. Where should I start?
1899,2021-10-20 18:26:21,7,1,"The only reason I got into JS was because I was interested in TS, I've learned basic JS concept like control flow, functions, etc can I start learning TS?, is it better to learn OOP and FP alongside TS or should I first learn those concepts in JS and then start TS? thanks",Can I hop into typescript?
1900,2021-10-21 07:50:40,2,1,"I'm currently trying to create a generic data service, but struggling with typing the whole thing in a nice and error-free way. Hoping that I'm just too inexperienced and someone could help me.

So I have a generic DataService class that contains the methods that I use for all models:

    export abstract class DataService&lt;T&gt;  {
        abstract PATH: string;
    
        getAll() {
            return axios.get&lt;AxiosResponse&lt;T[]&gt;&gt;(`${this.PATH}`);
        }
    
        get({ id }: { id: number | string }) {
            return axios.get&lt;AxiosResponse&lt;T&gt;&gt;(`${this.PATH}/${id}`);
        }
    
        create({ data }: { data: object }) {
            return axios.post&lt;AxiosResponse&lt;T&gt;&gt;(`${this.PATH}`, data);
        }
    
        update({ id, data }: { id: number | string, data: object }) {
            return axios.put&lt;AxiosResponse&lt;T&gt;&gt;(`${this.PATH}/${id}`, data);
        }
    
        delete({ id }: { id: number | string }) {
            return axios.delete&lt;AxiosResponse&lt;T&gt;&gt;(`${this.PATH}/${id}`);
        }
    }

Then I have a concrete of the DataService for a specific model that also contains methods that are specific to that model:

    export class AppointmentDataService extends DataService&lt;Appointment&gt; {
        PATH = '/api/appointments';
    
        confirm({ id }: { id: number | string }) {
            return axios.get&lt;AxiosResponse&lt;Appointment&gt;&gt;(`${this.PATH}/${id}/confirm`)
        }
    }

Initially I had the idea to use it in the following way:

    const { data, loading, error, getData } = useDataService&lt;AppointmentDataService&gt;('confirm')

But that was not feasible as I was not able to invoke an instance of the specific data service class as the type is not known during runtime.

So I wrote the following generic implementation of the \`useDataService\` function:

    type dataServiceMethods&lt;T extends DataService&lt;IModel&gt;&gt; = Exclude&lt;keyof T, 'PATH'&gt;
    
    const useDataService = &lt;T extends DataService&lt;IModel&gt;&gt;(service: T, method: dataServiceMethods&lt;T&gt;) =&gt; {
    
        const data: Ref&lt;any&gt; = ref(null);
        const loading = ref(false);
        const error: Ref&lt;any&gt; = ref(null);
    
        const getData = async (params: { id?: any, data?: any }) =&gt; {
            loading.value = true; 
            data.value = null;
            error.value = null;
            await service[method](params) // ERROR: This expression is not callable.
      Type 'unknown' has no call signatures.
                .then(response =&gt; data.value = response.data.data) // ERROR: Parameter 'response' implicitly has an 'any' type.
                .catch(err =&gt; error.value = err.message)  // ERROR: Parameter 'err' implicitly has an 'any' type.
                .finally(() =&gt; loading.value = false)
        };
    
        return {
            data, loading, error, getData,
        };
    };

And an additional implementation of that for each service:

    export const useAppointmentService = (method: dataServiceMethods&lt;AppointmentDataService&gt;) =&gt; {
        return useDataService&lt;AppointmentDataService&gt;(new AppointmentDataService(), method)
    }

That is working so far, but throws some typescript errors, and I'm not so satisfied with the way the 'params' of the data service methods are typed.

Is there a way in which I can eliminate the errors, especially the ""This expression is not callable"" error and maybe even typehint 'params' in a way that the type is inferred from the method that shall be called. I tried to build something with Parameters&lt;&gt; but was not successful here.",Typing a generic DataService
1901,2021-10-21 15:03:38,11,1,I’m curious to see because I’m currently deciding if I should use ktor for a restapi or expressjs + typescript. Just wanted to see what everyone thought. Thanks!,Why did you choose Kotlin for a personal project?
1902,2021-10-21 16:18:59,7,1,"Anyone have any good resources or tutorials on the advanced stuff?

You know how people joke that you can't read anyone else's regexp? That's how I feel about complex types. The simple stuff is easy, but once you get beyond basic generics I'm a bit lost.",Good resources for advanced typescript?
1903,2021-10-22 12:10:51,33,1,"Hello. I'm C# developer (backend and blazor, couple of years in industry). Although I have some experience with java spring boot etc.(microservices for freelance projects, tiny middleware)  I have never worked in enterprise. I want to join JAVA world, I like the ecosystem the community vibrant, the open source, scientific community (although python is also strong)etc. 

So, how would I land a job for java role. I'm 37 have exp with many things in the past (Bsc CS , Msc AI, big data, mobile ionic, react, angular, android, javascript typescript, aws etc.).

I know i can apply for java positions, but i dont want to take a low paid position. Maybe I should first do personal projects with java (spring) and then apply for jobs or should I apply anyway (for mid-senior even that i'm not senior in java, im senior in software engineer). Thanks.",From C#.NET to JAVA
1904,2021-10-24 07:53:18,3,1,"Hello,

Before exposing my question I would like to point out to the fact that I have almost no experience in front end development. I'm a backend developer (C/C++). I only have some knowledge of Javascript, even though very limited.

So I am trying to learn Typescript. I am reading the official handbook from the official website. I have, for moment only managed to write a *very simple* typescript file (only importing an npm module).

In order to achieve that I have added this in the `package.json` file:

```json
""scripts"": {
    ""tsc"": ""tsc""
}
```

What I noticedm is that for the *very simple* `ts` file I created, it created `js` file (which I suppose is normal since it transpiles) in same folder as the `ts` file.

So my question is, is this normal ? Is it the best practice ? Is it okay to output the transpiled files in the same directory ? Or should I be able to tell in the `tsconfig.json` file where it should be outputed ?

Thank you very much in advance for any help.",Typescript transpilation output directory
1905,2021-10-24 20:13:56,0,1,[removed],How to resize image before upload to a server with typescript in .net core web app project ?
1906,2021-10-25 09:38:48,0,1,,Microservice + DDD + typescript
1907,2021-10-25 17:57:03,10,1,"I have a project that's in flow. I'm trying to publish to DefinitelyTyped and noticed everyone is putting up one definitions file, `index.d.ts`, which contains a summary of all the types. 

My script instead goes through my codebase, and generates individual type files for all my components, and the index.d.ts file is just the imports and exports, no type definitions. 


    const glob = require('glob');
    const jsc = require('jscodeshift');
    const flowParser = require('jscodeshift/parser/flow');
    const fs = require('fs');
    const convert = require('@khanacademy/flow-to-ts/dist/convert.bundle.js');
    const ts = require('typescript');
    
    const files = glob.sync('src/**/*.js', {
      root: './',
      ignore: ['src/**/*.*test*.js'],
    });
    
    console.log('Files-found', files.length);
    
    files.forEach((file) =&gt; {
      const FILE_NAME = file.split('/')[file.split('/').length - 1].replace('js', 'ts');
      const flowCode = fs.readFileSync(file, 'utf-8');
    
      const ast = jsc(flowCode, {
        parser: flowParser(),
      });
    
      ast
        .find(jsc.GenericTypeAnnotation, {
          id: { name: 'TimeoutID' },
        })
        .replaceWith('number');
    
      ast
        .find(jsc.GenericTypeAnnotation, {
          id: { name: 'AnimationFrameID' },
        })
        .replaceWith('number');
    
      ast
        .find(jsc.GenericTypeAnnotation, {
          id: { name: 'MediaQueryListListener' },
        })
        .replaceWith('MediaQueryList');
    
      const transformedCode = ast.toSource();
    
      console.warn('FileName', FILE_NAME);
      const typescriptCode = convert.convert(transformedCode, {
        printWidth: 80,
        singleQuote: true,
        semi: false,
        prettier: true,
      });
    
      fs.writeFileSync(`typescript/${FILE_NAME}`, typescriptCode, (err) =&gt; {
        console.log('Error:', err);
      });
    });
    
    const tsFiles = glob.sync('typescript/**/*.ts');
    console.log('tsfiles', tsFiles.length);
    
    const options = {
      declaration: true,
      emitDeclarationOnly: true,
      declarationDir: 'typescript/',
    };
    
    const program = ts.createProgram(tsFiles, options);
    const res = program.emit();
    
    // In case there was some error while generating declaration,
    // throw an error.
    console.log(res.diagnostics);
    res.diagnostics.forEach((obj) =&gt; {
      console.log('file: ', obj.file.fileName);
      console.error('error: ', obj.messageText);
    });",How do I get an index.d.ts file
1908,2021-10-26 03:57:39,2,1,"With my user story, I've been tasked with writing a few lines of code in order to display a certain \`micro-frontend\`  on 5 locales whenever the app is being ran on a test environment. That line of code is: 

    b.ShowRecommendationStrip = true; 

I've added those 5 lines of code into the app:  [https://hastebin.com/mofakeyoge.typescript](https://hastebin.com/mofakeyoge.typescript)

However, when it comes to the unit tests, The previous unit tests (shown in the photo) are failing because the \`ShowRecommendationStrip\` for those 5 locales have been set to true.    


Instead of creating 5 if statements to check if the app is inside the test environment ( [https://hastebin.com/rowutarebu.typescript](https://hastebin.com/rowutarebu.typescript) ), is there an easier way to enforce the DRY principle and not run a check each and every single time? I was looking if there was an easier way to go about doing it inside the \`ProcessOverrides()\` method?   


Still a junior dev, so I'm still learning!

https://preview.redd.it/3cejctt5vpv71.png?width=2225&amp;format=png&amp;auto=webp&amp;s=adf2ebdea1aae05356ad27e4af2d4a1d6902f92d",How to refactor code to easily enforce the DRY Principle
1909,2021-10-26 12:16:11,10,1,"I'm relatively new to TypeScript, trying to figure a way to keep server side route definitions in a file shared between server and browser side code. Alongside HTTP method (GET, POST etc.) and path (e.g. /foo/bar) the routes would contain information about the request and response types, which are at this point for me are JSON, plain text and binary. With JSON, I'd like to have a specific TS type associated with the route, so that a helper function wrapping fetch/axios/etc. calls could statically allow only the correct type to be sent with the request and return the result with a statically known type too.

I think I got most of the way to the point where I want to be, but I got stuck to a TS error I don't know how to solve. I think the problem is that I don't know how to express a ""anything but X or Y"" kind of type restriction - or alternatively, how to describe exactly all the types that can be converted to/from JSON (which sounds like a hard problem) - and that the problem is related to my use of conditional types:

    // This type is meant to associate string constants with TS type info, with
    // 'json' being the catch-all category for the types that are then handled as
    // user-defined JSON-encodable types
    type ExchangeTypeSpecifier&lt;T&gt; =
        T extends string ? 'text' :
        T extends ArrayBuffer ? 'arraybuffer' :
        'json';
    
    // This type exists only because apparently you can't attach a type parameter
    // to a string constant?
    interface ExchangeType&lt;T&gt; { type: ExchangeTypeSpecifier&lt;T&gt; };
    
    // Helper constants to be later passed to a function that constructs
    // a route object with request/response type information
    const text: ExchangeType&lt;string&gt; = { type: 'text' };
    const arraybuffer: ExchangeType&lt;ArrayBuffer&gt; = { type: 'arraybuffer' };
    
    // This one I suppose needs to be a function, so that the caller can produce an
    // object that's tagged with the user-defined type by calling it like json&lt;Foo&gt;()
    function json&lt;T&gt;(): ExchangeType&lt;T&gt; {
        // The line below gives following error: // Type '""json""' is not assignable to type 'ExchangeTypeSpecifier&lt;T&gt;'.
        return { type: 'json' };
    }

TS doesn't like the function json() returning the 'json' constant, and I guess it's because it can't know whether or not the generic type T should be one for which 'json' is the correct constant. What would be the correct way to approach this?

Here's a [link to TypeScript playground](https://www.typescriptlang.org/play?#code/C4TwDgpgBAogHgYwBYEMB2BzCAVcEDKkCAlgGbEQBOAPNgHxQC8AUFG1NlBHMBGgCYBnKIOCVimKAH4oAcl49ZUAFyt2nbrwHCAgpUooQAIQCupUlWlyU+wwCMzFyktXs5AK0EB7NLIDczMwSvJSkKAjQ8MjoWLiQtAwA3lCgkMqwiKiYOHiEECTkVAlQAL4BzAg+oima6VFZsXjUouKYDIxQyakQ6fKaSmUVVcBQNgYgDuZUdZkxOfF646ZTlO2dKXi9Y-aOVAMBpCZoCMDEPlCePgkAFACUM9HZcRDFiWpslBDAJpRo6929S6+UoBEqBAD04Kg+C8AFtoLCvJ8oJV+NBSEiUT4FMAIVDsEh0UcTmc-uEImBgMIWhIMKMBFBFoZlk4ADRQADuSGIyFGABtvFBuWgqVBiCMOV4THz+FA0BAILKaSdLHziLDxcIMZQUoSNpAoGAbCh4SEhmhqnYbEwLt40M0xLS6HcApULSMrQAvG1A6hM4y7VYuvFQAAKKGASCghRlYuEcPFvFl2qgdk+ADdxSAgiKqGEIlAAEpS3jUACSaDAJmA7IA8tWq8Aku8oKakF5+OkaZhWS2JI2Hg15gQiGQKDQK426L23CWBxlHo1IHkCuPqPXgFPe2DmIdjqdzpQSy9J9W6w3q86W22O13HT2+5Xq4O5s9y0+mzP2HPnwuh2+NynZh7iLY930bc9N0vToW0+b5fhgtw3BvfgvyQsUP3SftqwAOm6NCkJ-YB0iIvC8AIsEd26KAADEvC8G1kgxLw71aOlBmooxrQ6ZIrUoVjaRBENKAARnSYtqxeOivHZLjVkY5hISQlDegAcRgbBZF7JS3Gw4iPDtLTFKhWcL302QgSMpTBjdapRJtI9JOuWR1M09lfWk51bncu1qDkrzbnKJTKAAJnEsDuwwdlIrWN4dPYFS5FcqyTPYPTehxFLCLMjL+m0qEbOGKBQoc49nOS9kcUqzRAuEsTQMkv1bADFZ2X9FkqFi4zlK+dtOySjSst0zDrGayYnCG78ctG8Zxr2fKhNskZKAAZlKpyXMG9ltgmQNtrGwNauYIA) for the code above and some additional code for context (to show how I'm constructing the routes).",Keeping types and string constants in sync with conditional types and expressing JSON-convertible types
1910,2021-10-26 13:57:31,6,1,"Hey there,

im writing a node-based editor for neural-nets that (currently) uses tensorflow.js for the creation of the networks themself. Tensorflow.js has a layers api with diffrent factory-functions that each have an interface for their arguments. E.g. 

    interface DenseLayerArgs {
        units: number, 
        useBias?: boolean, 
        ...
    }
    const dense(args: DenseLayerArgs): {
    ...
    }

 My goal is to load all of those factory functions automaticly and create a menu for each thats based on the Args interface. Since its not possible to access properties that might be undefined in plain TS, the solution  seems to be some kind of transformer library (eg. [https://www.npmjs.com/package/ts-reflection](https://www.npmjs.com/package/ts-reflection) ). But i havnt been able to get any custom transformer running with my create-react-app with typescript setup. 

Has anyone been able to get React working with custom transformers or has some other solution for creating a menu from an interface ? 

cheers",Typescript Interface Reflection in React
1911,2021-10-27 01:56:55,5,1,"If I have a Parent component and a Child
Component, and I want the Parent’s children prop to be an array that only allows Child elements, how do I express that in typescript? I expected`children: Child[]` to work but it’s not right.",Children of specific type in React?
1912,2021-10-27 08:47:13,0,1,"Is this a good choice of a global eslint parser in a project with various repos, js, react ts, etc? 

Is this capable of handling js, tsx react or should i dabble with overwrites and use different eslint parser depending on js/ts ?

Thank you","@typescript-eslint/parser good for react repo with both js,js ,ts,tsx?"
1913,2021-10-29 08:12:59,23,1,"There are so many i18n solutions around ,which one do you think has the best typescript support and which would you like to choose ? Thanks!",which solutions do you use for i18n in typescript?
1914,2021-10-29 17:28:52,2,1,[removed],React typescript eslint rule for optional props with defaultprops
1915,2021-10-29 17:32:44,2,1,[removed],"React typescript Eslint rule for optional props to be in defaultProps, withou using propTypes"
1916,2021-10-30 00:48:21,19,1,"I don't know if anyone has done the [Type | Treat Day 5 Intermediate/Advanced](https://www.typescriptlang.org/play?#gist/927ccc66ae3022dc64c4f650109b937a-18), but it took me down a rabbit hole today. It took me longer than I care to admit to reach the solution that I have. So I think there has to be an easier way.

[Here is my solution](https://www.typescriptlang.org/play?#code/PTAEE0HsFcHICcCmp7QHZoJZoOagIagBGkkA1gM4AWkADgDQFoAmoz082eAEvgDZ9IAd0SI0oAJ4wAUCFBV8AN2SEKtRAGNM-UADNI8eQfgHipSsXwVErSOJpDQAW3xoJoHDQoAXCrLDeVIhIBCHYoIHIJOQAdNLS2N7BuvgayABC5qAA3h5iSABcoD6cuIz4tLR8EgAimBQaMGjeRQAUzPWN6C2gaNBORMEAlKAAvAB8oIqQmKygAL4A3PGNaD7O+AAedbq6mBrQfN7uo6AAjAAMy-6gAGKmFJhOVfuYx4wisAIEFBT9yJEQvgQnZqhEhJA8mgkBRGERoN4brNEPwwZ9WHxMGQAZD8MxWFYNm4fqBaJBfpgiHxkHx8ElDMxhOJIqBMWhEHEEs1kqlkNxjAZMuRQIhNkkWBRQEKyDkoYVQAAiGjwEzwBWMTzk7wAYSaPT6A2CjEU+28Twouu6RQNg0M8y59JSaVAACVIC40GlpSKxWJmJLvbkcPlEEUFSYPWl1aSTN58Dg7PVvAA5fBOUPFbylPD2xI850AWQkPmCEm9ovF-qlWSDIaKsCcxfpElgjEbJfgABUJOoiiUuIwOrt9odjtb+rb7dJjupq+RJad+SrBVkAD6u92uL1r0BFjtl8zXORQaCgISubwRSEKFjUiJBYr8ZDQR64Jgi5TNAC0FCbiCcHxUPsVCsuYkqYtioCwHYADawbQogAC6YyTK00RkEMsBxHInaQi4kFSBwrKYLoyAoo8RqSDA8hKCoGy0KAkC6PeZGfr4V4sZghjoZK3iQpEXEfmIl5oGmobxDOyAAJKeu6XDSgWFRjDk0igIxaDKqqRRLqq0rLGpdgRluGZupGiB6dIU7HjAhiIGxxR-k4oHzsRkGBPUcIImeQTiIRmbApefEEBoaS-CxBD4m8mB2DoeyIHw-o3HYIqpCB8EhN26gAMoaJwtCXj4AW8ZCOCYMoIrLvAFAxKAnYKN4sCSmgkCXjgSB0gU8Q3sw1JZU+rTZKp6maQYaHmCMg1qWp6ExBUVS1J0epjbEmo+JazSgAAVKAACsQxDfM9BDXY7bNstGEqVNU0zXN1R1A0S0uNsJF7AcRzuF+ZixEOr2jhI+1qYdNwGdCm6eog50TcDU2rBQkDUjEwSqq0AAGyaQkZ4NfRYHQPd0bAcFwoC8AIwiiGgjB2WI94wJ4oAACTZDNtCxvGiY+Km6bzKA9QeO13go-tciA0dwvqS1QTwJDKli2pcjJgA8grAAK0P2vMIzxHI3DBIgjXhbo6AaGayVCJLyCEV8fDEMgjJEyyELwGQjAaK4VGnqsyjwIFQGSobnom8y16uD1yA3LQVivnggQmNAdMso0KqaIFPY4uFidIMbehG4HNUAOp6yECb2-x8DuCHZ4GDKyVvDznpIOmzSohIjBwzcjJoLAl6kfFrkW9R7I2BxABW-QMUFhDqPApFZ64FAiIYEiIN4nKSaAysmLQACibFZTZaQADyZYgkynJNU12AfADSiDuBWfqSv2b4AGSgNiUjMcf4xDVdamtFTzROYZhRozG+Eh5jahvMGZgKMXaoiIKkMgbR2RCAAGr8GgBmY+MEwGIRGBMKYMxWBDCKNMWYywlgSVTqABWaBpTHyPqfUArQf7MM7D6SsAYsgAH5aowVgOlPWyFrRU3gCMe+Eo66kUMAAcRDKwq6vDWhyIQhwh+mZswKN-mpXh2QYIbzoMEY4ddQAqKBJKFGdhGZmMQPMFGiE2g8SKJ2fBkwyHMHtNo7RIivZaLUprLxoAfHBGkEMa4a8d7CQYZ2Jh7CJFVm9Lw2h9DU5H1AK-bIgjnH8MEbARC8xJjBPgOE6hSR1inEic0Bh0oKDf2kP7Y20V7Ah16v1ABvgiiVO8NUsC4woZyzAAXBAyBMA4GatmcKTwqj-mEnSJpbBl74EwHwP2ph3J+xzk0uIAzdwoiwGUcKoJ3BkgpFSZAjsZR+UHqwIKjIeaSnCCyFG7SKAo1JMCNMBASDKDiFOfwYAspJAYmcLWYBtRuz8vhZAKNuqtOpG8hpgd1JglSGkfKoBLEaQFPAN5FdMWYzSLiyU78KDcPiOS-5oBAWIAYgAJlBaAdGjhAh0gxXYCWwQ3m8wzsnME8AllR3fEjAwjA-Ku3EA3SA5U3icjkLQ+8rK-hEGHsnOBvlqJQoxbCxAfV4XBTRZeOwyAmLhXatbRF8zBhE3wEQawzReH3FspsNM0zGCcE8CJYQNw-IKHKkFbAGg+DQGYNCwyYNCXEC8rXRkiAmoSy4DVXCpJDjW3WYxXY7thkeBmG+IK1yOI3E1XDdMMZl7GP9swMSTdrYaCgbGjiLI14mueWxV5JJLbfHzYQFwlQiZOEgEOTAwRZVgE7JgWgRQah2C7qAF80LlYBW0HwBFazfacgpZS6lDEADMoAGVMoVT7ZAFq7CSmBMgawl5oAMB5g1XiTw05ASPRscILNIBnKcEURtqc-ByH0IYJ56EuVrGRClWt2cA7zOucVG2lhrC2GZA+USJaTUsnaTVG44L1WngjmFFll5sD-pcEimOtMQLfvUGSjdoKwCZD6BQIoW7QAABY92YbdiIFA-4pUAiQ6IVg-6MUyUaE4eS5hFK0Fxd8PiwZARuvihIImcNqTuGSijGpbygq5RREkcKklSU3BPFbXo-GOJzuKO6AE-4qh0gvVmPtrhx2HDmclIKQh+UMWveFYSXFj2bLsJyIAA)

Can someone point me to a better solution? Mine feels a little forced.",Type | Treat Day 5
1917,2021-11-01 18:43:50,5,3,"I want to use modules in my source code (for obvious reasons), but [Chromium doesn't support modules in XHTML documents](https://bugs.chromium.org/p/chromium/issues/detail?id=717643). Is there some to get Typescript (or something else) to generate output without modules?",Strip module declarations from typescript outut?
1918,2021-11-02 16:09:37,4,1,"Sorry, I might be crazy by doing things that I know nothing about it. I love programming &amp; coding but that's not what I took in college. But I've learnt simple HTML and CSS from internet and linux. I hope I found someone who can help me to figure out the mistakes in my typescript file.",I know nothing about typescript &amp; javascript. Can someone help me to correct simple typescript?
1919,2021-11-02 16:25:59,1,1,"Hello everyone,

I have been trying to find a way to **automatically open (click on) a desktop notification that comes from a Chrome extension** and it's been difficult. After days of searching, it seems that typescript is my only option. The problem is that I don't understand it all. Can anyone help me? I'm willing to chat with you and tell you which extension I'm talking about or even share the script with you. I feel like this should be something easy to do but I can't find any solutions anywhere.

Thank you for reading!",Modify extension to automatically open notification
1920,2021-11-03 17:55:57,4,1,"i have a function in my auth service

    login(loginDetails: { username: string, password: string }): Observable &lt; User | ErrorResponse &gt; {
        return this.http.post&lt; User | ErrorResponse &gt;('http://localhost:8080/api/v1/user/login', loginDetails);
    }

backend will return either `User`

    {
        username:""john doe"",
        password:""johndoe@123""
    }

or  `ErrorResponse`

    {
        error:""password incorrect"",
        status:403,
        details:""provided password is incorrect""
    }

the problem i am facing is with the return type of this function, typescript throws error for accessing each of the key for Both of the model

for example

    onSubmit() {
        this.auth.login(this.loginForm.value).subscribe(value=&gt;{
          if(value.username){}
        })
    }

here i am trying to access the returned value of the same login function from auth service. but while accessing username key from the returned value typescript complains that 

    Property 'username' does not exist on type 'User | ErrorResponse'
    Property 'username' does not exist on type 'ErrorResponse' 

same goes for other way around.

What i want is an elegant or standard practice to handle such a situation where recieving function can utilize full type definition",Typescript function returned object with different keys
1921,2021-11-03 20:34:11,0,1,[https://hackernoon.com/migrating-from-javascript-to-typescript-some-tips](https://hackernoon.com/migrating-from-javascript-to-typescript-some-tips),How you can migrate your JavaSript files to TypeScript easily
1922,2021-11-04 13:44:32,4,1,"Hi,
I think the code is self-explanatory since I reduced it to the minimum to show the problem - it doesn't work when I have `{ message: string } | string` in `Record&lt;string..`. Compiler doesn't know the property from the object. How can I make it work? Thanks!

Playground: https://www.typescriptlang.org/play?#code/C4TwDgpgBAKhDOwbggRigXigJQgYwHsAnAEwB5EiBLAOwHMAaKAbygFsF4BDOiALiiVadKAF8oAH0HBq9AHwBYAFCEaiKMATBUAuImSR0WVpsQDWHeN14CA5Ke22xTBwCY7D1EPq3RAbmVVeAIAGwgAOhCCOgAKTwBtey1bAF1wy2sIAEo-KAB6PKgABSICSCJQKFsMnggnEgIEKBoCYCgIAA8qdQIaDRQq7xEpC05agSHc0VtwqGLS8srqsd56xvhm1vaunr7QSEGZYRmY1wBmM4BOLMDe4LDI6LitVES3VJzlZX3oPSQUVyYHD4YjkIZMUZWcbSWQiUSKFR3NpuXRaAwQQHGDRaczsFb8KrvMT+W5qUIRKKxNxvZJpGq8HL5QrAAAW3Sg7IA8gBpL5KH6wNEoM5AyGZCZHehiSQw4QBRFqZFaM6o-TC0V4qE2QnKpz+KCk+4Up4OM7pfGMgoaNkbLm8pRAA

``
type TestType1 = Record&lt;string, { message: string } | string&gt;
const test1: TestType1 = { test: { message: 'test1' }, test2: 'test1string'};
console.log(test1['test'].message); // Property 'message' does not exist on type 'string | { message: string; }'.  Property 'message' does not exist on type 'string'.(2339)
console.log(test1['test2']);

type TestType2 = Record&lt;string, { message: string }&gt;
const test2: TestType2 = { test: { message: 'test2' }};
console.log(test2['test'].message); // this is OK

type TestType3 = { message: string } | string;
const test3: TestType3 = { message: 'test3' }; 
console.log(test3.message); // this is OK

``",Problem with union type in record
1923,2021-11-04 17:01:53,1,1,"[https://jsfiddle.net/NathanFriend/r68puwyw/](https://jsfiddle.net/NathanFriend/r68puwyw/)

I need to stringify a decimal to send it to an API, but when I do it it returns it as string. 
So I want to change toJson function, but it doesn't allow me because is expecting a string for response and not a number.

In looks like in js works fine. How I can manage to do it?",How I can do this using typescript?
1924,2021-11-04 22:06:19,11,1,"Hey typescripters, I need your help.

I have class with mostly static properties and functions. Technically the class is abstract and will always be extended. The static function  of the extending class should always return the current class as a type.

With the help of google I found the Constructor type, with which I can return the current class as return value, even if the extending class just inherits the static function. Here is a small trimmed down snippet of my code for a better explanation:

    type Constructor&lt;T&gt; = {new (): T};

class A {
 protected static foo = 'foo A';
 
 public static printFoo&lt;T&gt;(this: Constructor&lt;T&gt;): T {
  console.log(this.foo); // &lt;-- Compiler throws an error
  return new this();
 }
}

class B extends A {
 protected static foo = 'foo B';
 public prop = 'prop B';
}

A.printFoo();
B.printFoo();

In the static function I want to access the static property foo. But tsc throws an error. If I `@ts-ignore` the line, I get the correct console output. But I would like to have to correct typings, so that I don't have to ignore it.

Does someone know how I can fix that?",Accessing a static property of a generic class in a static function of that class
1925,2021-11-04 23:11:15,1,1,"Almost a year and a half ago I started a TypeScript project and picked the common tools for managing a monorepo: lerna, yarn workspaces, and typescript. All worked ""fine"" using some workarounds, but I was able to have a working environment pretty easily.

Now I find it almost impossible to get it right, since many modules are being ported to esm, and [requires so many changes](https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c) that ends up breaking some library or tool. Like `ts-node` not working with `tsconfig-paths`, or not working at all when importing esm.

Is there any stablished way for creating a TypeScript monorepo that doesn't require experimental tooling, that work with commonjs, esm, and pure ts packages?","I tried to create a TypeScript monorepo, I give up."
1926,2021-11-04 23:14:08,39,1,"Almost a year and a half ago I started a TypeScript project and picked the common tools for managing a monorepo: lerna, yarn workspaces, and typescript. All worked ""fine"" using some workarounds, but I was able to have a working environment pretty easily.

Now I find it almost impossible to get it right, since many modules are being ported to esm, and [requires so many changes](https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c) that ends up breaking some library or tool. Like `ts-node` not working with `tsconfig-paths`, or not working at all when importing esm.

Is there any stablished way for creating a TypeScript monorepo that doesn't require experimental tooling, that work with commonjs, esm, and pure ts packages?","I tried to create a TypeScript monorepo, I give up."
1927,2021-11-05 04:40:22,7,1,"Hi!

I am getting my head around type theory in c#, and I am trying to make types for my API.

Here is the specific data structure that I am trying to make classes for (in JSON):

    {
      ""gameId"": ""abc123"",
      ""gameName"": ""Final Level"",
      ""playerId"": ""steve#2153"",
      ""username"": ""SteveDaBoss""
    }

My API has a lot of endpoints. `gameId` and `gameName` are often used together, and `playerId` and `username` are also often used together. This is why in my backend (which is typescript) I have the following types:


    type GameSpec = {
      gameId: string
      gameName: string
    }

    type PlayerSpec = {
      playerId: string
      username: string
    }

    type JoinGameHTTPBody = GameSpec &amp; PlayerSpec

You can see that an intersection type works well here for typing my API (in typescript).

However, my frontend is a unity client (c#), and I want to have a good API definition in there as well. So far I have made types for the (very commonly used) `PlayerSpec` and `GameSpec`:

    public class GameSpec
    {
      [JsonProperty(""gameId"")]
      public string GameId { get; set; }

      [JsonProperty(""gameName"")]
      public int GameName { get; set; }
    }

    public class PlayerSpec
    {
      [JsonProperty(""playerId"")]
      public string PlayerId { get; set; }

      [JsonProperty(""username"")]
      public string Username { get; set; }
    }


What I want to do now is be able to reuse these to make classes. I know this syntax is not correct, but I want to do something like this:

    public class JoinGameHTTPBody = PlayerSpec &amp; GameSpec

I want to be able to use the class as though I manually typed out the following:


    public class JoinGameHTTPBody
    {

      [JsonProperty(""gameId"")]
      public string GameId { get; set; }

      [JsonProperty(""gameName"")]
      public int GameName { get; set; }

      [JsonProperty(""playerId"")]
      public string PlayerId { get; set; }

      [JsonProperty(""username"")]
      public string Username { get; set; }
    }


I realize c# has a different type system to TypeScript, but it would be _very_ _very_ _very_ convenient to be able to construct my API types with ""composition"" like this.

If this is not possible, what is the next best approach?

Worst case scenario I can write these out manually but _it would suck_

thank you!!","Is it possible to ""merge"" two data classes into another class?"
1928,2021-11-05 14:38:52,12,1,"The difference has something to do with the interplay between object indexing (""mappable types"" in TypeScript documentation) and `readonly` modifiers. But I haven't yet been able to form a good mental model around it.

Here's some example code. I define a function that takes an object that is string-indexable, but all fields are readonly. I did something similar in real code as a ""contract"" to the calling code that I don't intend to mutate the object passed in.

    declare function doSomething(value: { readonly [key: string]: number }): void  

Now, here are four similar-ish type definitions. The are the four combinations of ""interface or type"" and ""readonly field or regular/writable field"":


    interface I1 {
      x: number
    }
    
    interface I2 {
      readonly x: number
    }
    
    type T1 = {
      x: number
    }
    
    type T2 = {
      readonly x: number
    }
    
Now, let's go one layer above our `doSomething` function and write some functions that will pass input params to `doSomething`. This is where I got a little bit surprised and confused:


    // Error: Index signature is missing in type 'I1'.
    function usingI1(value: I1) {
      doSomething(value)
    }
    
    // Works
    function usingReadonlyI1(value: Readonly&lt;I1&gt;) {
      doSomething(value)
    }
    
    // Error: Index signature is missing in type 'I2'.
    function usingI2(value: I2) {
      doSomething(value)
    }
    
    // Works
    function usingReadonlyI2(value: Readonly&lt;I2&gt;) {
      doSomething(value)
    }
    
    // Works
    function usingT1(value: T1) {
      doSomething(value)
    }
    
    // Works
    function usingT2(value: T2) {
      doSomething(value)
    }
    
    // Works
    function usingMutableMapped(value: { [key: string]: number }) {
        doSomething(value)
    }

[Here's the playground link] (https://www.typescriptlang.org/play?#code/LAKABBYCYKYMYBsCGAnGYBmBXAdnALgJYD2O0xAysQLYz4AWhOA5gBQBuSCWMAXGAG8waJFFIIAnmADaAaxgT+AZ3womzALr8cWagCMYKMAF8AlP3bFCUCKFCQwTfIYxI46AJIBGQfYdgAD21dAxQ-CGNwsCinFzdPACZfcH8RMRxJQOD9QyjIlNsCsHwJAAd0ABUfAF5k-yywHRywovyHKJLysAqk2oEoiDTxKSDGkNzWuyKAemmwAFEUFGIUfg8cWACwJUJmHCR8LDRHJTBqQiUdlkcyTvQAcm97gDoo7DwiUjAsK+ZvDi4PDWXlMdX8YiotAY6gB3BgpjyUSiszAAHUVrIlG9cAQSGQfuoAEowUTDf6cOH8YmkjISAA83gAfKD+kUIBCaHRGCxYTwEZMisi5otlqswOtNttdvtDscLmcLr8bsUyg8PAkXtiPnjvr91by+OKEiyBuRIVyYRS+YjBTM5uiUJitbivgSWNT0pJ9VbDR7hgyEsywQ4OVDuWwffyHG1IEK0RisUV3i78b8qgb+FUTWyzZzoTzIzb2nb447Ew5k59U+oehnusbg5BQxaC4D4Ta4w6nUmcVXdeoALJYfBIPQIGADpClcpQOtCOQKZSqdRaMbNEzZ+rsyh58MGqOQYxAA)


Honestly, I feel like TypeScript is screwing this up in two ways:

1. I think that **all** of the functions except the last one should have compile errors. `doSomething` requires the object to have a `number` for every possible string key. None of the types are even close to guaranteeing that!

2. It's clear that the errors I **do** get, are gotten for the wrong reason, because wrapping with `Readonly&lt;&gt;` fixes them.

I can't make heads or tails of what's going on here. Any insights?",TIL another difference between interface and type
1929,2021-11-06 02:35:50,1,1,[removed],typescript error
1930,2021-11-06 12:58:25,10,1,"Title might sound confusing. I made a playground example with comments that should explain it in better details.

[Playground](https://www.typescriptlang.org/play?#code/PTAEGUHsFsFNQK4DsCWkmgC4E8AO8EBnWAE1BQ0wAt4BDXXAGxQGNbM0kBYAKB31ABZbAFVU6UAF5QAclozQAH1kAjBcpkt1skjIDcvXiFABBDJBUArWC0yJiZAGaQATqBboAbrBcckAc1BCTBcKf0JQSEcsGkRxSkhQJFgAdyCQsMJefnhBegB5KylQACUbVxIAHmExTgAadNCAgD4DHiMwAHUqdlAehlgkCJoXeBJIWEIkGTtR2kZGbFBodkwfADoO0AAVWJRoXFdMWiQ7ajDyCOpemWCm-wUKGPhRzAQXSjx4QipIBEYyCp4NBXN98CwUI5WJseMYAJJ2H5-AGgIHPOKcSLRTzzBCTLFCApWGEeIZ2aDYABiGGkAApaC4XLRsAAuISieIAbQAug0Vrg2XlcIVLABKNl3MI8qTNUAAb14oHc6GCoFGhH+mDZJkZzMqkpaxR5elAxnAtDgfR8sEVoFtxhKJ3G0FAsAAHhamPAVEQKJMIoxIP5obaGUzsOtRt4XMRaaL1s4XABRWgsKi02k4xiimXy21K9Wa9a4Ijp-mcrPc0VtJUAX2rhh4Bdgbw+asmmratbajeMSY9B0YBEItH8Np4pNVHkDLiFxQVTdAtDZMlGujqtpUK5UjDxMg3i5YK-8o0G+9tJBX2FgC0gKXPPG7vbAABFJig167HI4bFqsF8CULRhEV+f5AXgWlV1IbQZB3PclFkE9YDPBCZGvW971FHleEnWYO2A4oKWpWlOU0fdZHkBpYPImR1womReWVGchQbHggA)

Thanks in advance",How can I use the union of values of an object passed as argument as a generic of that function.
1931,2021-11-07 15:13:09,0,1,,"This week in Console we interviewed Basile Simon. Basile created a project called The Digital Evidence Preservation Toolkit to help his journalist friends in Belarus fight against Lukashenko! I thought /r/typescript might be interested, since the toolkit is written in Typescript :)"
1932,2021-11-07 18:11:00,24,1,"Since either way, typescript gets compiled to JavaScript, is Typescript just for developers sanity? And scalability?",Is Typescript only for developers view?
1933,2021-11-08 09:20:43,6,1,"Hello

I am wondering if it is possible to have conditional typing based on the value of another property in my object.

Here's my example:
```typescript
export type SchemasConfiguration {
  entityCL?: string;
  entitySubType?: string;
  screenType: 'SINGLE_RECORD_FORM' | 'SEARCH_FORM';
  isUpdate?: boolean;
  configuration?: {
    schema: this.screenType === ""SINGLE_RECORD_FORM"" ? any : undefined;
    uiSchema: this.screenType === ""SINGLE_RECORD_FORM"" ? any : undefined;
    searchSchema?: this.screenType === ""SEARCH_FORM"" ? any : undefined;
    uiSearchSchema?: this.screenType === ""SEARCH_FORM"" ? any : undefined;
    tableConfig?: this.screenType === ""SEARCH_FORM"" ? any : undefined;
  };
  ownerCL?: 'BASE' | 'CUSTOM' | 'DEMO';
}
```


So if for example I have a a configuration where I type SchemaConfiguration, when I create an object which has the value of ""SINGLE_RECORD_FORM"" in screenType I want schema, uiSchema to be required (with any value)

If it is ""SEARCH_FORM"", I want searchSchema, uiSearchSchema and tableConfig to bee required.

Can TypeScript support this?",Does TypeScript support Conditional Typing based on my example?
1934,2021-11-08 21:10:22,3,1,"Hi, I'm a student currently learning angular and typescript for the first time and I cannot figure out how to fix this error. 

I'm getting error message

    Type '(string | undefined)[]' is not assignable to type 'string[]'.
      Type 'string | undefined' is not assignable to type 'string'.
        Type 'undefined' is not assignable to type 'string'.

This is my code 

    export class BookRepository
    {
      private books: Book[] = [];
      private authors: string[] = [];
    
      constructor(private dataSource: StaticDataSource)
      {
        dataSource.getBooks().subscribe(data =&gt; {
          this.books = data;
    
          this.authors = data.map(b =&gt; b.author)
            .filter((a, index, array) =&gt; array.indexOf(a) === index).sort(); ----&gt;error
        });
      }",How can I fix this error?
1935,2021-11-09 10:17:24,3,1,"I am getting a bunch of errors in one of our newly added typescript files. It looks to me like it is trying to analyze a file after transpilation.

The **product.ts** file here does not have any type errors in vscode:

    import type { NextApiRequest, NextApiResponse } from 'next';
    import getConfig from 'next/config';
    import {
      map, pipe, filter,
    } from 'ramda';
    import * as log from '@package/logger';
    import * as apiInstance from '@package/imove-integration';
    import { isEligibleForDisplay } from '@package/ui-lib';
    import { mapProduct } from '@package/ui-mappers';
    import { Product } from '@package/product';
    
    const { publicRuntimeConfig: { apiBase, tenantId } } = getConfig();
    
    const filteredAndMappedResult: (products: Product[]) =&gt; Product[] =
      pipe(
        filter(isEligibleForDisplay),
        map(mapProduct),
      );
    
    export default async function authenticatedProducts(_: NextApiRequest, res: NextApiResponse) {
      try {
        const result: any = await apiInstance.get(
          `${apiBase}/product/products`,
          {
            headers: {
              'content-type': 'application/json',
              'x-tenant-id': tenantId,
            }
          }
        );
    
        res.send(filteredAndMappedResult(result));
      } catch (e) {
        const error: any = e;
        log.error(error);
        res.status(error.status || 400).end(error.message);
      }
    }
    
However when running **npm run build** it gives 29 errors:

    ERROR in /home/username/project/web/packages/site-common/src/pages/api/products.ts
    ./src/pages/api/products.ts 2:4-19
    [tsl] ERROR in /home/username/project/web/packages/site-common/src/pages/api/products.ts(2,5)
          TS7022: '__createBinding' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer.
     @ ./src/pages/api/index.js 13:0-59 13:0-59
    
    ERROR in /home/username/project/web/packages/site-common/src/pages/api/products.ts
    ./src/pages/api/products.ts 2:57-70
    [tsl] ERROR in /home/username/project/web/packages/site-common/src/pages/api/products.ts(2,58)
          TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
     @ ./src/pages/api/index.js 13:0-59 13:0-59
    
    ERROR in /home/username/project/web/packages/site-common/src/pages/api/products.ts
    ./src/pages/api/products.ts 2:83-84
    [tsl] ERROR in /home/username/project/web/packages/site-common/src/pages/api/products.ts(2,84)
          TS7006: Parameter 'o' implicitly has an 'any' type.
     @ ./src/pages/api/index.js 13:0-59 13:0-59
    
    ERROR in /home/username/project/web/packages/site-common/src/pages/api/products.ts
    ./src/pages/api/products.ts 2:86-87
    [tsl] ERROR in /home/username/project/web/packages/site-common/src/pages/api/products.ts(2,87)
          TS7006: Parameter 'm' implicitly has an 'any' type.
     @ ./src/pages/api/index.js 13:0-59 13:0-59
    
    ERROR in /home/username/project/web/packages/site-common/src/pages/api/products.ts
    ./src/pages/api/products.ts 2:89-90
    [tsl] ERROR in /home/username/project/web/packages/site-common/src/pages/api/products.ts(2,90)
          TS7006: Parameter 'k' implicitly has an 'any' type.
     @ ./src/pages/api/index.js 13:0-59 13:0-59


We are using **ts-loader** for **.ts** files and **babel-loader** for **.js** files:

    module: {
        strictExportPresence: true,
        rules: [
          {
            test: /\.js$/,
            exclude: /node_modules/,
            use: {
              loader: 'babel-loader',
            }
          },
          {
            test: /\.tsx?$/,
            loader: 'ts-loader',
            exclude: /node_modules/,
          },
          {
            test: /\.ts?$/,
            loader: 'ts-loader',
            exclude: /node_modules/,
          },
        ]
      },

I have no idea what is going on here other than it looks like a transpiled file is getting type checked. Any idea how to solve this? Do I need to provide more information? Thanks for the help.",babel + webpack = error on line that does not exist
1936,2021-11-09 19:33:38,6,1,"Hey all, I've been trying to learn unit testing with my reactjs and typescript project. I'm posting this here as it seems more like a typescript error.

When I run my unit test on my form input page, it returns the following error:

    SyntaxError: todo-app/src/TypescriptProps.ts: Unexpected reserved word 'interface'. (1:15)
    
        &gt; 1 | export default interface TodoListProps {
            |                ^
          2 |     id: number;
          3 |     description: string;
          4 |     textDecor: string;

The project itself runs fine, I just run into this error when testing my test.  


`TypescriptProps.ts` just contains the part of the interface:

    export default interface TodoListProps {
        id: number;
        description: string;
        textDecor: string;
    }

Then in the `FormInput.tsx` file, I just call it like this:

    interface FormInputProp {
        addTask: (userInput: string ) =&gt; void;
        listOfItems: TodoListProps[];
    }

I don't understand how this is causing an issue if anyone could share their thoughts and advice!",Unexpected reserved word 'interface' error
1937,2021-11-09 19:55:54,5,1,"Hi. I had the following workflow to implement and I did it with the following code. I was wondering if this is the right and more elegant way to implement such a logic using typescript and if there could be any suggestions to improve it further.

&amp;#x200B;

https://preview.redd.it/8dbbdtx7kmy71.png?width=836&amp;format=png&amp;auto=webp&amp;s=6362fe9ab22cc11c1e90be07f4c960737fc13b42

Here is the way I approached it.

    initializeBluetooth(): Observable&lt;boolean&gt; {
        return from(this.checkBluetoothPermissions())
          .pipe(
            switchMap((hasBluetoothPermissions: AndroidPermissionResponse) =&gt; {
              if (!hasBluetoothPermissions.hasPermission) {
                // (1) The app does not have permissions for bluetooth
                return this.askBluetoothPermissions();
              } else {
                // (2) The app has already permissions for bluetooth
                return this.ble.initialize();
              }
            }),
            switchMap((res: AndroidPermissionResponse | { status: 'enabled' | 'disabled' }) =&gt; {
              if ('hasPermission' in res) {
                if (res.hasPermission) {
                  // (3) User has granded permissions for bluetooth
                  return this.ble.initialize();
                } else {
                  // (4) User declined the permissions for bluetooth
                  return of(false)
                }
              }
    
              if ('status' in res) {
                // (5) The app has already permissions for bluetooth (from 2)
                switch (res.status) {
                  case 'enabled': // (6) Bluetooth is enabled 
                    return of(true)
                  case 'disabled': // (7) Bluetooth is disabled 
                    return this.enableBluetooth();
                }
              }
            }),
            switchMap((res: boolean | { status: 'enabled' | 'disabled' }) =&gt; {
              if (typeof res === 'boolean') {
                return of(res);
              }
              if ('status' in res) {
                // (5) The app has already permissions for bluetooth (from 2)
                switch (res.status) {
                  case 'enabled': // (6) Bluetooth is enabled 
                    return of(true)
                  case 'disabled': // (7) Bluetooth is disabled 
                    return this.enableBluetooth();
                }
              }
            })
          )
      }
    

Any ideas or suggestions are very welcomed.",switchMap chain code mentoring/review
1938,2021-11-11 03:00:51,28,1,"Self taught and reasonably familiar with JS/React. I have written TypeScript, but I feel like I lack a systematic understanding of TS. **If I had a week to ace this interview, what are my best course of action here?** 

I have tried a few easy questions of exercism, [typescript-exercises.github.io](https://typescript-exercises.github.io), but my progress is painfully slow and I am afraid I wouldn't get much done in time. 

I also wonder **how much time I should be devoted to learning OOP with TS**. I don't have much experience with OOP in JS. 

According to my sources, my dream company tests more practical problems, e.g. implementing a design. No whiteboarding. 

&amp;#x200B;

Any help deeply appreciated!",How should I prepare for a TypeScript/React front-end interview in a week? It's my dream job!
1939,2021-11-11 10:48:44,14,1,"I have 3 functions

    import dotenv from ""dotenv""
    import bcrypt from ""bcryptjs"";
    import * as jwt from ""jsonwebtoken"";
    
    export function generateToken(payload: string):string {
        const token = jwt.sign(payload, process.env.JWT_SECRET as string, { expiresIn: ""3d"" })
        return token;
    }
    
    interface ComparePass {
        encryptedPwd: string;
        userPass: string;
    }
    
    export function encryptPassword(pwd:string):string {
        const salt = bcrypt.genSaltSync(14);
        return bcrypt.hashSync(pwd, salt)
    }
    
    export function comparePassword({encryptedPwd, userPass}: ComparePass):boolean {
        return bcrypt.compareSync(encryptedPwd, userPass);
    }

I have \`@types/jsonwebtoken\` and \`@types/bcryptjs\` installed as dependencies

And this is the script

     ""dev"": ""nodemon --exec npx ts-node index.ts"",

This his how I'm using two of the three methods above

    import { encryptPassword, generateToken } from './../middlewares/secure';
    
    let { firstName, lastName, otherName, email, phoneNumber, passportUrl, isAdmin, password }: User = req.body;
            password = encryptPassword(password) //here
            const newUserData = { firstName, lastName, otherName, email, phoneNumber, passportUrl, isAdmin, password };
            try {
                const userExists = await UserService.getUserByEmail(email)
                if (userExists) {
                    return res.status(409).json({
                        status: ""error"",
                        message: ""User already exists""
                    })
                }
                const [newUser] = await UserService.createUser(newUserData);
                if (!newUser) {
                    return res.status(400).json({
                        status: ""error"",
                        message: ""Error creating new user""
                    })
                }
                return res.status(201).json({
                    status: ""ok"",
                    message: ""User created successfully"",
                    token: generateToken(newUser.id), //here
                    newUser
                })

However, when I compile typescript I get these errors

&amp;#x200B;

               ^
    TSError: ⨯ Unable to compile TypeScript:
    src/middlewares/secure.ts:2:5 - error TS7022: '__createBinding' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer.
    
    2 var __createBinding = (this &amp;&amp; this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
          ~~~~~~~~~~~~~~~
    src/middlewares/secure.ts:2:58 - error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead? 
    
    2 var __createBinding = (this &amp;&amp; this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
                                                               ~~~~~~~~~~~~~
    src/middlewares/secure.ts:2:84 - error TS7006: Parameter 'o' implicitly has an 'any' type.
    
    2 var __createBinding = (this &amp;&amp; this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
                                                                                         ~
    src/middlewares/secure.ts:2:87 - error TS7006: Parameter 'm' implicitly has an 'any' type.
    
    2 var __createBinding = (this &amp;&amp; this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
                                                                                            ~
    src/middlewares/secure.ts:2:90 - error TS7006: Parameter 'k' implicitly has an 'any' type.
    
    2 var __createBinding = (this &amp;&amp; this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
                                                                                               ~
    src/middlewares/secure.ts:2:93 - error TS7006: Parameter 'k2' implicitly has an 'any' type.
    
    2 var __createBinding = (this &amp;&amp; this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
                                                                                                  ~~
    src/middlewares/secure.ts:5:16 - error TS7006: Parameter 'o' implicitly has an 'any' type.
    
    5 }) : (function(o, m, k, k2) {
                     ~
    src/middlewares/secure.ts:5:19 - error TS7006: Parameter 'm' implicitly has an 'any' type.
    
    5 }) : (function(o, m, k, k2) {
                        ~
    src/middlewares/secure.ts:5:22 - error TS7006: Parameter 'k' implicitly has an 'any' type.
    
    5 }) : (function(o, m, k, k2) {
                           ~
    src/middlewares/secure.ts:5:25 - error TS7006: Parameter 'k2' implicitly has an 'any' type.
    
    5 }) : (function(o, m, k, k2) {
                              ~~
    src/middlewares/secure.ts:9:5 - error TS7022: '__setModuleDefault' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer.
    
    9 var __setModuleDefault = (this &amp;&amp; this.__setModuleDefault) || (Object.create ? (function(o, v) {
          ~~~~~~~~~~~~~~~~~~
    src/middlewares/secure.ts:9:64 - error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead? 
    
    9 var __setModuleDefault = (this &amp;&amp; this.__setModuleDefault) || (Object.create ? (function(o, v) {
                                                                     ~~~~~~~~~~~~~
    src/middlewares/secure.ts:9:90 - error TS7006: Parameter 'o' implicitly has an 'any' type.
    
    9 var __setModuleDefault = (this &amp;&amp; this.__setModuleDefault) || (Object.create ? (function(o, v) {
                                                                                               ~
    src/middlewares/secure.ts:9:93 - error TS7006: Parameter 'v' implicitly has an 'any' type.
    
    9 var __setModuleDefault = (this &amp;&amp; this.__setModuleDefault) || (Object.create ? (function(o, v) {
                                                                                                  ~
    src/middlewares/secure.ts:11:15 - error TS7006: Parameter 'o' implicitly has an 'any' type.
    
    11 }) : function(o, v) {
                     ~
    src/middlewares/secure.ts:11:18 - error TS7006: Parameter 'v' implicitly has an 'any' type.
    
    11 }) : function(o, v) {
                        ~
    src/middlewares/secure.ts:14:5 - error TS7022: '__importStar' implicitly has type 'any' because it does not have a type annotation and is referenced directly 
    or indirectly in its own initializer.
    
    14 var __importStar = (this &amp;&amp; this.__importStar) || function (mod) {
           ~~~~~~~~~~~~
    src/middlewares/secure.ts:14:61 - error TS7006: Parameter 'mod' implicitly has an 'any' type.
    
    14 var __importStar = (this &amp;&amp; this.__importStar) || function (mod) {
                                                                   ~~~
    src/middlewares/secure.ts:21:5 - error TS7022: '__importDefault' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer.
    
    21 var __importDefault = (this &amp;&amp; this.__importDefault) || function (mod) {
           ~~~~~~~~~~~~~~~
    src/middlewares/secure.ts:21:67 - error TS7006: Parameter 'mod' implicitly has an 'any' type.
    
    21 var __importDefault = (this &amp;&amp; this.__importDefault) || function (mod) {
                                                                         ~~~
    src/middlewares/secure.ts:30:24 - error TS7006: Parameter 'payload' implicitly has an 'any' type.
    
    30 function generateToken(payload) {
                              ~~~~~~~
    src/middlewares/secure.ts:35:26 - error TS7006: Parameter 'pwd' implicitly has an 'any' type.
    
    35 function encryptPassword(pwd) {
                                ~~~
    src/middlewares/secure.ts:40:28 - error TS7031: Binding element 'encryptedPwd' implicitly has an 'any' type.
    
    40 function comparePassword({ encryptedPwd, userPass }) {
                                  ~~~~~~~~~~~~
    src/middlewares/secure.ts:40:42 - error TS7031: Binding element 'userPass' implicitly has an 'any' type.

From what I understand so far, it seems \`bcryptjs\` and \`@types/bcryptjs\` aren't talking to each other.

Been staring at this for many hours, still don't know how to fix this.","I can't figure out why I'm getting these errors, please help."
1940,2021-11-11 19:30:50,27,1,"I've been looking at some of the tools available that could improve my React dev workflow and I stumbled accross vite, but after reading about the way it handles Typescript, it doesn't sound so cool? Having to use additional not standard keywords or the lack of typechecking during dev build. They suggest to use the vscode built in support for typescript but as far as I know, vscode actually has very nice type helper features for vanilla js anyways.

So I wonder, is any of you guys using Vite with typescript and can tell me how do you like it?",Is anyone working with Vite?
1941,2021-11-12 00:56:11,14,1,"So, in the following code snippet:

    type Fn1 = (arg: string) =&gt; void;
    type Fn2 = () =&gt; void;
    
    const fn1: Fn1 = (x) =&gt; console.log(x);
    const fn2: Fn2 = () =&gt; 42;
    
    const arr = [fn1, fn2];

what would you expect the type of `arr` to be? My expectation would be something like `Array&lt;Fn1 | Fn2&gt;`; but typescript believes that it's `Fn1[]`. So it loses the type information about `fn2`, and marks `arr[1]()` as an error.

[Link to playground](https://www.typescriptlang.org/play?ts=4.4.4&amp;ssl=7&amp;ssc=24&amp;pln=1&amp;pc=1#code/C4TwDgpgBAYgdgRigXigCgIYCcDmAuKAZ2CwEs4cBKFAPigDcB7UgEwG4AoUSWOAJhTpqyOk1acOAY0ZxiUAGaIC8JKjQAPYXWmzGAGwgA6PYxwbKnHXMV9l-QWi1QALHwlXgUbFkEBtRQgANAr8ALqc3r4IoY5AA)

Is this behaviour expected?",Array losing type information about its members — is this expected
1942,2021-11-12 15:08:05,5,1,"I'm trying to figure out how async works with promises and I'm curious about the **getData()** method. It's first called in the constructor and the **loading** variable is set to a pending Promise - are all async Promises pending despite the data having been returned and worked on in getData()?

**loading** is next called in getProducts. If **loading** has been assigned a pending promise, am I right in thinking it's calling the getData() method from within getProducts()? In that case, it's storing a reference to getData()? I'm a tad confused with this code.

in getData(), forEach() will return undefined. Is this why the returned Promise from getData() is &lt;void&gt;?

So I'm just delving into typescript but prmoises have me a bit confused on top of everything going on

    import { Product, Order } from './entities'

    export type ProductProp = keyof Product

    export abstract class AbstractDataSource {
      private _products: Product[]
      private _categories: Set&lt;string&gt;
      public order: Order
      public loading: Promise&lt;void&gt;

      constructor() {
        this._products = []
        this._categories = new Set&lt;string&gt;()
        this.order = new Order()
        this.loading = this.getData()
      }

      async getProducts(sortProp: ProductProp = 'id', category? : string): Promise&lt;Product[]&gt; {
        await this.loading
        return this.selectProducts(this._products, sortProp, category)
      }

      async getData(): Promise&lt;void&gt; {
        this._products = []
        this._categories.clear()
 
        const rawData = await this.loadProducts()
        rawData.forEach(p =&gt; {
          this._products = this._products.concat(p)
          this._categories.add(p.category)
        })
      }

      protected selectProducts(prods: Product[], sortProp: ProductProp, category?: string): Product[] {
        return prods.filter(p =&gt; category === undefined || p.category === category)
            .sort((p1, p2) =&gt; p1[sortProp] &lt; p2[sortProp] ? -1 : p1[sortProp] &gt; p2[sortProp] ? 1 : 0)
      }

      async getCategories(): Promise&lt;string[]&gt; {
        await this.loading
        return [...this._categories.values()]
      }

      protected abstract loadProducts(): Promise&lt;Product[]&gt;
      abstract storeOrder(): Promise&lt;number&gt;
    }",I would like some help with async and the promises they return. Code is inside...
1943,2021-11-12 18:40:01,8,1,"I've been toying around with some code that allows to define interfaces/types that can be automatically checked at runtime with typeguards. It also creates types for TypeScript's type system.

I've been looking for something like this, but really haven't found anything similar.  
This might mean that my research was not so good or that this is actually useless.

Working code example:

    const MyInterfaceDefinition = {
        a: TypeString,
        b: TypeBoolean,
        c: TypeNumber,
        d: TypeNull,
        e: TypeUndefined,
        f: or(TypeString, TypeNumber),
        g: or(TypeString, TypeUndefined),
        h: optional(TypeString),
        i: array(TypeNumber),
        j: {
            a: TypeString,
        },
    } as const
    
    type MyInterfaceType = TypescriptTypeOf&lt;typeof MyInterfaceDefinition&gt;
    
    // data from unknown source
    const a: unknown = {
        a: 'str',
        b: true,
        c: 1,
        d: null,
        e: undefined,
        f: 'str',
        g: 'str',
        h: undefined,
        i: [1, 2, 3],
        j: {
            a: 'myNestedValue',
        },
    }
    
    if (matches(MyInterfaceDefinition, a)) {
        // now typescript knows this is of type MyInterfaceType
        console.log(a.j.a) // 'myNestedValue'
    
        const b: MyInterfaceType = a // perfectly valid
    }

Right now it only features these types, but it could be expanded to also handle stuff like dates, tuples and so on.

What do you think?  
Does something similar exist?  
Is this useless?",[Library] Automatic type guards for user-defined interfaces... useful? useless?
1944,2021-11-13 02:22:29,0,1,,Resolve types using the typescript plugin for CSS modules available in vite
1945,2021-11-13 02:27:53,7,1,"Hello. Please take a look at [this](https://www.typescriptlang.org/play?strictNullChecks=false&amp;ts=4.4.4#code/FAjGBsEMGdoAgIIG9hzXUB7AdtALgE4CuoemBAFAJQrp0Y7SbgCmAdOJgOYUBEAktgCWeIZHBwAbuKIteAGjgU8ACyHwYcSNgCeVNtPCyqAblT000FniIAHZWuinzFrLmbtOPXgDUZLLQAzPBYCOCsbWwUlVXUtDV19Q2MzOgBfYAzgCBh4ACE4FgAPEOwAE3hkFyl-AC44bCIAWwAjUJM4AHpOuAAVAh04IWFRcSEAL2GuOFj4Mi1dWOwuAEJqt3xiUnJqWgtwu1DqVP2Njw5uPgAxYfEaozlFWYN-Z3TMkECibFIhHHDrHYKJgWgAreraPR7NAg0EvB5wAC8cAArGYstgWAB3OB5Y4gbpwACiRVsLFILDKcECtwkyQCcRRcDaoEgRCsMxUkDwAHJ4FiuXgGNgaVwiARKUNsJyAhE7GxgIT+EKseQANb8lQsaX0obwbCYIXDERicATSX-M2YuAARgAzGw4IqegAJTBYliSUJPRxwMqYFjQbA8oVWFhNGaYOCqghq4XQdSlPDgQaQUAETCwLTgCTayRCDPYJravDQNhAA) example.

It's a rather unusual design pattern where initialization of fields within a subclass happen via an external method that is called by the constructor of the super class. I'll leave a separate comment explaining the motivation for this because it's a can of worms, but this pattern was derived after a tremendous amount of trial and error after many months of refactoring a massive project. 

In the example, `B.value` is not initialized and `strictNullChecks` is turned off in the tsconfig. So the value set in the external `setup` method sticks. But if `value` is initialized on line 13, then by the time the final value is printed in the constructor of `B` will be the initialized value rather than the value that was set in the `setup` method.

BUT... when I try to run this code locally, I get a different outcome! The `value` field is ALWAYS initialized. When a value isn't explicitly set, it is re-initialized to `undefined`. [Here](https://imgur.com/a/3xiRTQo) is a couple screenshots of that happening.

Any ideas why there's a discrepancy in behavior? I'm using typescript 4.4.4 in both environments and tsc 4.4.4 is globally installed.",When and under what conditions do class fields get initialized?
1946,2021-11-13 15:12:20,40,1,"This is become a bit of an issue or us and curious what you guys do about this.

We have backend and frontend systems that have radically different dependencies. 

We use a multi-module setup powered by yarn/lerna but might be migrating to pnpm (which look pretty slick btw, check it out if you like multi-module repos).

What we normally do is setup our dependencies like this

acme-api-backend
acme-api-frontend
acme-api-interfaces

The acme-api-backend will implement the backend API.  

The 'acme' is your company name.

Then we have acme-api-frontend which implements the REST API via fetch, axios, or XMLRPC or whatever. 

then we have acme-api-interfaces that JUST has the request/response interfaces.

Both acme-api-backend and acme-api-frontend depend on acme-api-interfaces. 

The acme-api-interfaces depends on nothing except typescript.

But it's a pain to set this up every time and some of our junior engineers don't really understand why this is necessary and it's always a pain when spinning up new engineers.

One idea I had was to just drop acme-api-interfaces and make acme-api-backend a peerDependency to acme-api-interfaces.

I *think* it should compile this way with Typescript.  

I've needed to do this with other packages too. For example, we've often use a union type of the Firebase node SDK (backend) and the Firebase browser SDK (frontend) so the same code can be used in either place.

The problem is that we JUST need the types not the npm dependencies. 

If there were a way to just pull in the types that would solve this problem completely. 

I guess, in theory, it could be possible to extend npm to support a new typesDependency whereby you're just analyzing the package.json and only pulling in 'types' but that's a pain to setup.

What are you guys doing about this?","Major problem with typescript, you can't use the interfaces of a package without pulling in all of their dependencies."
1947,2021-11-18 03:49:08,15,1,[removed],Is it possible to use typescript in the browser?
1948,2021-11-18 21:08:02,21,1,"As a simplified example of my problem, I want to run all generic functions from an array and collect their results ([palyground](https://www.typescriptlang.org/play?#code/GYVwdgxgLglg9mABAJ3AQQDYYDwBUB8AFKGAM4BcKApgIYAmCGAnooYQJSIC8+iu7AbQC6nAN4AoRFOpQQyJCVIA6ALY0ADsXDdeJDuwDc4gL7jxAenOIoVUlEpgQKgEZVkw8RAR3rtqNxR0LEIBSWkOHUQARgAmAGYAGjCpCJ5EAHIaZwh0hKlLRDdkOGREAAs3KmTWTjSoVCppRAKaMDpyyvERAyA)):

    function runAll&lt;T&gt;(funs: readonly (() =&gt; T)[]) {
        return funs.map(fun =&gt; fun());
    }
    
    // test: number[]
    const test = runAll([
        () =&gt; 123,
        () =&gt; 'abc',  // error here
        () =&gt; true    // and here
    ]);

Unfortunately, only the first function can be passed here, presumably because `T` is inferred as `number` from the first value in the array. The other two are rejected by the type checker.

I'd like to get rid of the type errors and have `test`'s type inferred as `number | string | boolean` in this case. Can anybody suggest a good way to achieve this?

Thanks!",Infer return types of all functions in array?
1949,2021-11-19 06:18:03,13,1,"As you probably know, it's possible to configure typescript to also analyze the .js files.

Of course you can't use TS specific code in those files, but it will provide type checking and you can type the code with annotations or in .d.ts files. Which is far better than writing JS code without it.

When React builds, it flags the eslint errors, but it only catches the typescript errors that are in typescript files. I would expect the build to also catch errors in the JS files since it's how the ts.config is configured. 

Anyone have an idea?","Typescript in React, with .js extensions"
1950,2021-11-19 07:56:46,2,1,I'm trying to create a synthesizer for a project but I keep hitting dead ends since my I'm new to the language.,How to make a basic piano synth using typescript and css?
1951,2021-11-20 11:06:19,38,1,"As the title says, I've been working on a project with nestjs and mongodb and using mongoose to model my schema.

  
What I was hoping was that when i do \`new this.myModel({name: false})\` where \`name\` is a \`String\` in my schema, TS would scream at me about this, but that just didn't happen.

&amp;#x200B;

So I looked into the \`index.d.ts\` for mongoose and the type for \`Model.new\` looks like this:  
\`new(doc?: AnyKeys&lt;T&gt; &amp; AnyObject, fields?: any | null, options?: boolean | AnyObject)\`  
So while typescript does help me with intellisense that there is a \`name\` field i can pass whatever i want to it and TS is happy with that.  


What am I missing?",Why is mongoose typed so loosely?
1952,2021-11-20 15:59:14,3,1,"With TS 4.5 now having [Tail-Recursion Elimination on Conditional Types](https://devblogs.microsoft.com/typescript/announcing-typescript-4-5/#tailrec-conditional), I'm wanting to convert my recursion types to use tail recursion where possible. But I've run into a problem with one of my types.

This is the original type:

    /**
     * Get all the required keys on the types in the tuple.
     */
    export type RequiredKeysOf&lt;Ts extends readonly [unknown, ...unknown[]]&gt; =
      Ts extends readonly [infer Head, ...infer Rest]
        ? Head extends Record&lt;RecordProperty, unknown&gt;
          ? Rest extends readonly [unknown, ...unknown[]]
            ? RequiredKeys&lt;Head&gt; | RequiredKeysOf&lt;Rest&gt;
            : RequiredKeys&lt;Head&gt;
          : never
        : never;

Using the accumulator pattern that the release notes mentions, I tried this:

    /**
     * Get all the required keys on the types in the tuple.
     */
    export type RequiredKeysOf&lt;Ts extends readonly [unknown, ...unknown[]]&gt; =
      RequiredKeysOfHelper&lt;Ts, never&gt;;

    /**
     * Tail-recursive helper type for RequiredKeysOf.
     */
    type RequiredKeysOfHelper&lt;
      Ts extends readonly [unknown, ...unknown[]],
      Acc
    &gt; = Ts extends readonly [infer Head, ...infer Rest]
      ? Head extends Record&lt;RecordProperty, unknown&gt;
        ? Rest extends readonly [unknown, ...unknown[]]
          ? RequiredKeysOfHelper&lt;Rest, Acc | RequiredKeys&lt;Head&gt;&gt;
          : RequiredKeys&lt;Head&gt;
        : never
      : Acc;

This new type look equivalent to the original type to me but obviously it's not as it causes type errors in my codebase.

Is anyone able to point out to me where I went wrong and how to fix it?",Help me make this recursive type tail-recursive.
1953,2021-11-20 17:16:51,41,1,"It's a pain in the *** to always keep types updated.

Basically, each time I change my DB models, I need to change the related type in typescript.",How do you keep backend models and frontend types synchronized?
1954,2021-11-21 17:14:05,2,1,"Hi,

Not done a lot of testing before with typescript.  I'm writing some minimal unit tests for API controller endpoints.

Here is my first draft at a test:

    test('viewInfo Success', () =&gt; {
            const req = {params: 1}
    
            const res = {} Response
    
            res.send = jest.fn().mockReturnValue({data: 'someData})
    
            const result = controller.viewInfo(req as any as Request, res)
    
            expect(result).toEqual(XXX)
        })

I keep getting a syntax error, missing semicolon when I try to typecast the mock request and response.

          93 |         const res = {} as Response
             |                       ^

Similarly, if I try to move the typecasting (like with the request) I get Unexpected token, expected "",""

    97 |         const result = controller.viewBalance(req as any as Request, res as Response)
              |                                                   ^

\^ That arrow is pointing at the first \`a\` in \`as any...\`

Mocking the request.params object is also causing me trouble, requiring me to cast as \`any\` and then as \`Request\`

Can someone walk me through what is going on here?  Is testing typescript controller endpoints always this difficult?

Thanks for the help.",Having trouble testing with Jest
1955,2021-11-22 00:14:24,10,1,,Algebraify -- Ergonomic and type-safe algebraic effects for typescript and javascript
1956,2021-11-22 03:16:12,1,1,,Algebraify -- Ergonomic and type-safe algebraic effects for typescript and javascript
1957,2021-11-22 03:17:55,2,1,,Algebraify -- Ergonomic and type-safe algebraic effects for typescript and javascript
1958,2021-11-23 08:05:15,4,1,"Hi all,

I'm trying to create a rule that requires all classes that have a decorator to require a getter that has another decorator.

    // this is OK
    @DecoratorA
    class A {
        ...
        @DecoratorB
        get thisIsRequired() {
            ...
        }
        ...
    }
    
    // this is also OK
    class A {
        ...
    }
    
    // this should throw an error as it doesn't have @DecoratorB
    @DecoratorA
    class A {
        ...
    }
    
    // this should throw an error because the getter should be thisIsRequired
    @DecoratorA
    class A {
        ...
        @DecoratorB
        get thisIsRequiredBlaBla() {
            ...
        }
        ...
    }

So far, my solution was to do something like that:

* DecoratorA checks if a class has the property \_required and thisIsRequired.
* DecoratorB sets \_required = true

The problem with this solution is that it only works at runtime.

I'm pretty new to typescript and would like some ideas on how I could do that.",Require a class to have a getter with a decorator
1959,2021-11-23 14:03:03,36,1,"Will I be able to use typescript with node, gulp, react, etc. as easily as I would use javascript?

Should I follow a javascript tutorial/course to get the fundamentals, or look for typescript fundamentals course?

Should I even use typescript?",Should I learn js before learning ts? Just starting?
1960,2021-11-23 14:46:45,3,1,"I have a function that accepts 2 parameters of a certain type, and will return the same type. This function accepts multiple types (different class instances) so I use overloading to create the signatures. However, in the implementation when I try to narrow with `if (a instanceof Foo) {...}`, it only narrows `a` and not the other params or return type, even though they should be identical as described in the overload signature.

Might sound a bit confusing so here's a [Playground link](https://www.typescriptlang.org/play?#code/MYGwhgzhAEAaCa0DeBYAUNawD2A7CALgE4CuwB2RAFAA4kBGIAlsNAB7QC80ADADTQ6jFtACeXXgEpkAX3Ry06UJBgIAWsnSYc+YmQrUhzVh279BDY2InmjIgF43pSBQvQB6AFSetn6AHkANwBTIhBsMAATJlwAc193dAAzElxyJjxoJOxsKjAALjh4AXpChEky+ABuZNT0zOzcgqK1Esq1CpaatBS0ggzcLJy8yugAHxa2ovGWzoQZ9U0MaCYk6DyV3TA04Ow18qXMTDAq6Hd3aAA5MCIibAB3YMjoCiKtI-pT86vsAmhcG53R6Rd6YIjBAgkIiDXDBe4tKiSL4XAAqAAsmDAIGjsCQQM96MFoNtoKE7kR3jJSSAIETUMtjsiroCHk8XtgWqDoJ8zhdLr9-izgVzwZDof84UVEUz0ZjoNjcfjuUSSWTKJT5OgPN5fNAAOLBWFEFi6lHGtkEDEwMA0Gh3MDANHckh-WnBAC2MGCIUG90otIStT6AyG2AATAAeFGktgEQ2RVSICbqAB8I2gKKmKM60fpmFW6zAm0I22Au328GcXJOvJ+fwBt1ZIIZ3KZ-PrQqeIohUJhkoQ0trAGUGARRDQiWqKcsqcEaXTq22BQ2gV2Wzzvu3BY3hS3Rb2JfD1IPviP6GOJ6TG9PMK4gA).

Is there a better approach to type this?

Thanks in advance",How to narrow function parameters and return type based on another parameter's type
1961,2021-11-25 05:20:36,11,1,"Hi everyone. I wrote a library with decorator based utils for writing tests in typescript. Write a single class and sawp between mocha, jest or other libraries easily. Has basic support for playwright too.

Repo: [https://github.com/AdityaHegde/typescript-test-utils](https://github.com/AdityaHegde/typescript-test-utils)

Any suggestions are welcome.",Decorator based test utils for typescript
1962,2021-11-25 19:46:40,3,1,"    type A = {
        b: ( c: string ) =&gt; void 
    }
    
    const a: A = {
        b: () =&gt; null
    }

[https://www.typescriptlang.org/play?ssl=7&amp;ssc=2&amp;pln=1&amp;pc=1#code/C4TwDgpgBAglC8UDeAoK6oCMBcUAUUAxrgM7ABOAlgHYDmUAlAgHxQBuA9pQCZQoC+KFIQ7UyUAIa44iVBiy48TeK2oBXADYaBQlEA](https://www.typescriptlang.org/play?ssl=7&amp;ssc=2&amp;pln=1&amp;pc=1#code/C4TwDgpgBAglC8UDeAoK6oCMBcUAUUAxrgM7ABOAlgHYDmUAlAgHxQBuA9pQCZQoC+KFIQ7UyUAIa44iVBiy48TeK2oBXADYaBQlEA)

Are all parameters always optional then? I see no ? after c to specifiy it as optional.

If yes, can someone explain why it's like this?",call signatures: Parameters are always optional?
1963,2021-11-26 00:39:00,1,1,"So I'm making a nestjs app and I'm trying to do some path mapping, but when I do I start getting errors because of decorators, but I have experimental decorators set on my tsconfig files, this is my first app with nest so I don't know if it is an issue with nest *perse* but I think it would have to be with ts compiler, I usually when using typescript set  module esnext that seems to be the main difference and I couldnt find any info on restrictions of path mapping on the TS docs, I share my tsconfig.json for reference, but could anyone share some light on this issue, maybe just say if it is something with nestjs? thanks

    {
      ""compilerOptions"": {
        ""module"": ""commonjs"",
        ""declaration"": true,
        ""removeComments"": true,
        ""emitDecoratorMetadata"": true,
        ""experimentalDecorators"": true,
        ""allowSyntheticDefaultImports"": true,
        ""target"": ""es2017"",
        ""sourceMap"": true,
        ""outDir"": ""./dist"",
        ""baseUrl"": ""./"",
        ""incremental"": true,
        ""skipLibCheck"": true,
        ""strictNullChecks"": false,
        ""noImplicitAny"": false,
        ""strictBindCallApply"": false,
        ""forceConsistentCasingInFileNames"": false,
        ""noFallthroughCasesInSwitch"": false
      }
    }",Conflict with path mapping and experimentalDecorators
1964,2021-11-26 07:37:15,6,1,"I am using react and material UI with typescript

the error was uncaught

and this is the code block:

    20 | &lt;Paper className={classes.root}&gt;
      21 |     &lt;form autoComplete=""off"" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}&gt;
      22 |         &lt;Typography variant=""h6""&gt;Create a new post&lt;/Typography&gt;
    &gt; 23 |         &lt;TextField name=""creator"" variant=""outlined"" label=""Creator"" fullWidth value={postData.creator} onChange={(e) =&gt; setPostData({...postData, creator: e.target.value})}      /&gt;
         | ^  24 |         &lt;TextField name=""title"" variant=""outlined"" label=""Title"" fullWidth value={postData.title} onChange={(e) =&gt; setPostData({...postData, title: e.target.value})}      /&gt;
      25 |         &lt;TextField name=""message"" variant=""outlined"" label=""Message"" fullWidth value={postData.message} onChange={(e) =&gt; setPostData({...postData, message: e.target.value})}      /&gt;
      26 |         &lt;TextField name=""tags"" variant=""outlined"" label=""Tags"" fullWidth value={postData.tags} onChange={(e) =&gt; setPostData({...postData, tags: e.target.value})}      /&gt;

This is my first time using typescript.",TypeError: Cannot read properties of undefined (reading 'creator')
1965,2021-11-26 21:14:44,26,1,,Kysely — A type-safe SQL query builder for typescript
1966,2021-11-29 07:27:46,0,1,[removed],FxTS - A functional and handling lazy evaluation and concurrency for typescript
1967,2021-11-29 15:47:15,0,1,,FxTS - A functional and handling lazy evaluation and concurrency for typescript
1968,2021-11-30 00:02:03,0,1,[removed],"can't import other files in library when using node 15, typescript 4, target esnext ."
1969,2021-11-30 01:04:01,1,1,[removed],"can't import other files in library when using node 15, typescript 4, target esnext ?"
1970,2021-11-30 15:32:38,7,1,"Hi all

I'm using TypeScript/React. I have TypeScript set to strict mode and set up my eslint to airbnb which is supposed to enforce trailing commas and single quotes for strings etc. However it is not being enforced. My eslint extension is working for things like unused imports (although this is more recommended, e.g. highlighted orange) but not most of the stuff I'd expect.

If I'm honest I'm not sure at what point typescript strict mode ends and eslint begins.

I would certainly expect to have to have a return type for functions and methods on strict mode though, but apparently it's not necessary.

At the moment most things seem optional instead of enforced, what might I be doing wrong?",Increasing strictness of TypeScript
1971,2021-11-30 20:38:08,7,1,"Sorry if the title isn't really explicit enough.

The problem I have is with the `EyeDropper` javascript class that seems to be too new for typescript to have it yet.

The only way I found typescript to accept it was to do this:

    type EyeDropper = {
      open: () =&gt; Promise&lt;{ sRGBHex: string }&gt;
    };

    declare function EyeDropper(): void;

    ...

    (new EyeDropper() as EyeDropper).then(...);


Is it possible to have the function declaration + type declaration all in one in order to avoid the cast?",Is there a way to get around casting with declare for new?
1972,2021-12-01 14:51:45,0,1,[removed],FxTS - A functional and handling lazy evaluation and concurrency for typescript
1973,2021-12-01 20:09:03,15,1," 

Hello typescript community!   
I am currently trying to learn typescript and am bit struggling to find ways to do it. I work as a test automation engineer.  In a couple of months I am expected to pass a senior level interview for typescript, but the problem is that I feel like Im nowhere near that level. I constantly google how to make an interface or define a type. I've never made a proper class in typescript. Im struggling to remember things like arrow function syntax. I remember when I passed and interview for an intermediate level I learned a few things and completely forgot them after. And the funny thing is - I've been working with typescript daily for over a year by now. And our codebase is huge. And even when I look back at the things I made I have no idea how I did that.   
So I spend time every day learning something, but Im struggling to actually learn anything because I dont really don't know where typescript is used apart from web development and testing web. And I hate web development with a burning passion. I want to do some advanced concepts, but even a promise is a pain to make for me. Im just completely lost as to how can I learn this language. At this point Im just learning because that what Im stuck with in my project and right now I have no clue how I still have a job with knowledge in the language that is close to 0. I guess im just really good at googling stuff, but its time to get good at the language itself, because while I can do most of the stuff by reading documentation and googling, it takes more time than it really should.

Im looking for some tips what can I do to actually learn the language. Im familiar with coding and this like the 10th language that I've used, but everytime I open my project I just look at a blank screen and try to come up with ways - how can I make a method that will return a promise that I can later work with so I can learn promises etc. 

And no. I will not make webpages. Anything but that.",Hard stuck - no idea how to learn typescript to hit senior level
1974,2021-12-02 16:46:30,0,1,[removed],FxTS - A functional and handling lazy evaluation and concurrency for typescript
1975,2021-12-02 16:48:20,0,1,,FxTS - A functional and handling lazy evaluation and concurrency for typescript
1976,2021-12-02 18:51:56,16,1,"I have been looking into the following projects:

[https://github.com/grantila/typeconv/](https://github.com/grantila/typeconv/)  
[https://github.com/airtasker/spot](https://github.com/airtasker/spot)  
[https://github.com/vega/ts-json-schema-generator](https://github.com/vega/ts-json-schema-generator)

But I can't seem to find a solution for turning my TS library (built with tsc and compiled with webpack into a split-file isomorphic js API) into a usable openapi.json (or .yml) file with which I could generate serverside RESTful code from (my goal).

Has anyone here used any of these projects or accomplished the same goal I am looking to achieve? I want something minimally intrusive to my existing code that will provide all of the openapi spec necessary for parameters and return types to be attached to named routes.","Anyone using decorators, or some other form of inline documentation, to generate an openapi spec file based on a typescript library?"
1977,2021-12-02 20:46:26,0,1,,I made a bare-bones chatbot api template using express and typescript.
1978,2021-12-03 18:01:19,18,1,"Hello, I have been trying to figure out why I'm getting this error for quite a while.

I have this function that has 1 input and based on if that input is defined or not, I either return one data or the other.

for some reason, in the function itself, I get an error that input has implicitly any type but the weird part is, that when I use that function, the output type is correct.

[typescriptlang](https://www.typescriptlang.org/play?#code/MYGwhgzhAEAiYBcwBkwE8CmAnaBvAUNNOAHYDmAXNBAlgJbn6HTAD2JNWArsAq1gApSlarQZkAlHmZEEACzoQAdMOgBeYmEZEAvvj342HBNAAmIddBIYA7nEQp02AQHIMJFxIDcTBGgAOGNAAwmAgIABCYMAA1gA8ACoAfJYERAKmDqiYWFTwSNnYElQCUmopCT46PvgYAB7+-CZ+gdAAykgIQRpp0IlJAsBhIABG0TFUoeFRsf3F0AKl6hXezIPDY7EA-FRcJKYYAGYMGKbzS+X2BU5YVTWG7DTQh3vAVB2I3QtD4ZsxZSlenRDgsAIQ-UbjKS9IhYDAILhYEhmEA+XTMOEIpEsDbjDIgVbVJhGJ4vZEaDJZG55Kk5AELeaccTLMy07AqLRkGokkyHACMljJwAEZO80AA9OKGSymYwec8AEyC16lLwSqX5Rw5IA)

if you hover on f1 or f2, you can see that the types are correct.

My question is, how can I fix the error?",value implicitly has any type
1979,2021-12-04 10:32:04,0,1,,FxTS - A functional and handling lazy evaluation and concurrency for typescript
1980,2021-12-04 11:55:25,4,1,"I'm experimenting with TypeScript compiler API. Right now I'm trying to make a simple transformer which does the following:

1. It looks at all function calls in the code.
2. From each call it finds the definition of the function (if possible).
3. If this declaration is annotated with a special comment, it wraps the call with some extra logic, e.g. logging.

Step 2 is what I'm having trouble with. I just can't find any TS API methods that can reliably find a definition from a function call:

    import * as ts from 'typescript'
    
    var transformer = context =&gt; {
        var visit: ts.Visitor = node =&gt; {
            if (ts.isCallExpression(node)) {
                // How do I find the definition of 'node', given that
                // it can be imported from somewhere or used as a method
                // on some object?
            }
        }

        return node =&gt; ts.visitNode(node, visit);
    }

Any advice is appreciated!",TypeScript compiler API: find a function definition from its call?
1981,2021-12-04 16:42:30,4,1,"I am trying to create a overload for a function:
```typescript
export type Command =
  | ContextMenuCommand
  | SlashCommand
  | LegacyCommand
  | ExtraLegacyCommand&lt;unknown[]&gt;

export function createCommand&lt;
  T extends ContextMenuCommand | SlashCommand | LegacyCommand
&gt;(command: T): T
export function createCommand&lt;
  T extends unknown[],
  U extends ExtraLegacyCommand&lt;T&gt;
&gt;(command: U): U
export function createCommand(command: Command) {
  return command
}
```
However I cannot seem to make use of the generic array overload:
```typescript
export default createCommand&lt;[commandName: string | null]&gt;({...})
```
As this results in the following error:
```typescript
Type '[commandName: string | null]' does not satisfy the constraint '(UserApplicationCommandData &amp; { execute(interaction: ContextMenuInteraction&lt;""cached""&gt;, t: TFunction): Promise&lt;...&gt;; }) | (MessageApplicationCommandData &amp; { ...; }) | (ChatInputApplicationCommandData &amp; { ...; }) | LegacyCommand'.
  Type '[commandName: string | null]' is not assignable to type 'LegacyCommand'.
    Type '[commandName: string | null]' is not assignable to type 'LegacyCommandData'.
```
[Playground link](https://tsplay.dev/mAvakW)",Function overload using generic as discriminant?
1982,2021-12-05 07:00:29,0,1,[removed],FxTS - A functional and handling lazy evaluation and concurrency for typescript
1983,2021-12-05 07:01:15,0,1,,FxTS - A functional and handling lazy evaluation and concurrency for typescript
1984,2021-12-05 07:03:00,0,1,,FxTS - A functional and handling lazy evaluation and concurrency for typescript
1985,2021-12-05 11:06:09,2,1,[removed],typescript Newbie's Q.
1986,2021-12-05 11:54:48,5,1,"TLDR; Why is

    type RootStackParamList = { Home: undefined; Game: undefined };

is valid for `Record&lt;string, object | undefined&gt;` type parameter, but

    interface RootStackParamList { Home: undefined; Game: undefined; };

is not?

I'm using `react-navigation` in a react native project. While giving types to the create function:

    const { Navigator, Screen } = createNativeStackNavigator&lt;RootStackParamList&gt;();

If `RootStakParamList` is a `type`, everything works fine. But if its an interface, typescript throws an error:

    Index signature for type 'string' is missing in type 'RootStackParamList'

The function signature is for `createNativeStackNavigator` takes a type parameter `&lt;ParamList extends ParamListBase&gt;` where

    type ParamListBase = Record&lt;string, object|undefined&gt;;

Why is this so?","Confusion in why a ""type"" is valid but not an ""interface"" as a type parameter"
1987,2021-12-05 12:35:46,0,1,[removed],FxTS - A functional and handling lazy evaluation and concurrency for typescript
1988,2021-12-05 12:47:43,0,1,[removed],FxTS - A functional and handling lazy evaluation and concurrency for typescript
1989,2021-12-05 16:02:11,0,1,,FxTS - A functional and handling lazy evaluation and concurrency for typescript
1990,2021-12-06 10:03:59,2,1,"**Monday, November 29 - Sunday, December 05**

###Top Posts

| score | comments | title &amp; link |
|--|--|--|
| 201  | [16 comments](/r/javascript/comments/r6gvo2/advent_of_rust_a_24part_series_mapping_node_js/)  | [Advent of Rust: a 24-part series mapping node, JS, and TS concepts to Rust. Day 1 is Rust's nvm, rustup.](https://vino.dev/blog/node-to-rust-day-1-rustup/)|
| 176  | [49 comments](/r/javascript/comments/r8pwoz/really_async_json_interface_a_nonblocking/)  | [Really Async JSON Interface: a non-blocking alternative to JSON.parse to keep web UIs responsive](https://github.com/federico-terzi/raji)|
| 173  | [3 comments](https://www.reddit.com/r/javascript/comments/r587iw/4x_smaller_50x_faster_rewriting_asciinema_in_rust/)  | [4x smaller, 50x faster - Rewriting asciinema in Rust and SolidJS](https://blog.asciinema.org/post/smaller-faster/)|
| 104  | [54 comments](/r/javascript/comments/r81zdg/react_state_management_in_2022_return_of_the_redux/)  | [React state management in 2022 — Return of the Redux](https://medium.com/@kolbysisk/react-state-management-in-2022-return-of-the-redux-87218f56486b)|
| 88  | [9 comments](/r/javascript/comments/r6l074/floating_ui_a_new_lowlevel_positioning_library/)  | [Floating UI — a new, low-level positioning library for tooltips, popovers, dropdowns and more with React and React Native support](https://www.floating-ui.com/)|
| 83  | [7 comments](/r/javascript/comments/r72j1k/how_to_create_a_simple_node_server_to_enrich_your/)  | [How to create a simple node server to enrich your GitHub profile with dynamic images](https://medium.com/@albertodeagostini.dev/how-to-add-random-images-in-github-profile-page-74aedf268464)|
| 69  | [8 comments](https://www.reddit.com/r/javascript/comments/r50qqq/react_state_museum_examples_to_help_portray_the/)  | [React State Museum - Examples to help portray the how, why, which, pros, and cons of various state management systems in the React ecosystem](https://github.com/GantMan/ReactStateMuseum)|
| 65  | [61 comments](/r/javascript/comments/r7o0ha/immutablejs_is_not_dead/)  | [Immutable.js is not dead!](https://github.com/immutable-js/immutable-js/issues/1689#issuecomment-863599993)|
| 62  | [9 comments](/r/javascript/comments/r6j1ad/storybook_64new_features_perf_gains_and_improved/)  | [Storybook 6.4—new features, perf gains and improved ergonomics](https://storybook.js.org/blog/storybook-6-4/)|
| 61  | [8 comments](/r/javascript/comments/r9ojjt/askjs_confused_about_sending_requests_in_http1/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Confused about sending requests in HTTP1 and HTTP2|


&amp;nbsp;

###Most Commented Posts

| score | comments | title &amp; link |
|--|--|--|
| 16  | [46 comments](https://www.reddit.com/r/javascript/comments/r4x6ff/askjs_how_to_know_when_to_use_asynchronous_code/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; How to know when to use Asynchronous Code|
| 0  | [23 comments](https://www.reddit.com/r/javascript/comments/r5o7f9/askjs_tell_me_about_a_wtf_moment_you_encountered/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Tell me about a WTF moment you encountered in JavaScript|
| 0  | [20 comments](/r/javascript/comments/r7gqjy/what_are_the_differences_between_var_let_and_const/)  | [What are the differences between var, let, and const](https://www.strictmode.io/articles/var-vs-const-vs-let)|
| 11  | [14 comments](https://www.reddit.com/r/javascript/comments/r50dcc/askjs_best_tutorials_for_learning_typescript_as/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Best tutorials for learning TypeScript as an experienced JavaScript developer?|
| 8  | [14 comments](https://www.reddit.com/r/javascript/comments/r5i4qz/favorite_javascript_utilities_in_a_single_line_of/)  | [Favorite JavaScript utilities in a single line of code](https://1loc.dev/)|


&amp;nbsp;

###Top Ask JS

| score | comments | title &amp; link |
|--|--|--|
| 36  | [6 comments](https://www.reddit.com/r/javascript/comments/r66nhi/askjs_confused_about_how_crud_apis_should_look/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; confused about how CRUD apis should look like for different authentication approaches|
| 30  | [12 comments](https://www.reddit.com/r/javascript/comments/r5rxw0/askjs_does_anybody_out_there_still_use_the/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Does anybody out there still use the Prototype javascript library?|
| 14  | [5 comments](https://www.reddit.com/r/javascript/comments/r5tzks/askjs_what_issues_do_you_have_with_firestore/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; What issues do you have with Firestore &amp;amp; Redux at scale?|


&amp;nbsp;

###Top Showoffs

| score  |  comment  |
|--|--|
| 1  |  /u/i_like_idli said [I made yet another react state management thing called &amp;#96;csar&amp;#96;. Reducer based, Small, no react context, async reducers, dispatch inside reducers, can be configured to work with redux dev tools....](/r/javascript/comments/r8ktql/showoff_saturday_december_04_2021/hna31la/?context=5) |


&amp;nbsp;

###Top Comments

| score  |  comment  |
|--|--|
| 68  |  /u/arendjr said [Our company is in a bit of a unique situation. We have some complex processing logic that we need to run on both the client and server to keep everything in sync. Because it is also pretty performance...](/r/javascript/comments/r81zdg/react_state_management_in_2022_return_of_the_redux/hn3rsqm/?context=5) |
| 59  |  /u/StoneCypher said [God, no  The things that replaced it have been replaced in turn by things that are now obsolete  That library was gathering dust before Obama was president](/r/javascript/comments/r5rxw0/askjs_does_anybody_out_there_still_use_the/hmortq1/?context=5) |
| 50  |  /u/VividTomorrow7 said [This seems very niche to me. How often are you really going to load a json blob so big that you need to make a cpu process asynchronous? Almost never in standard applications.](/r/javascript/comments/r8pwoz/really_async_json_interface_a_nonblocking/hn7m1kn/?context=5) |
| 46  |  /u/lhorie said [Personally I don't care so much if something is dead as much as I care about whether it is done. Done software is underrated.](/r/javascript/comments/r7o0ha/immutablejs_is_not_dead/hn12yj3/?context=5) |
| 29  |  /u/jsoverson said [edit: I'll update this comment with each of the days as they're posted.  * Day 1: &amp;#91;from nvm to rustup&amp;#93;&amp;#40;https://vino.dev/blog/node-to-rust-day-1-rustup/&amp;#41; * Day 2: &amp;#91;from npm to cargo...](/r/javascript/comments/r6gvo2/advent_of_rust_a_24part_series_mapping_node_js/hmt5g5o/?context=5) |


&amp;nbsp;",Your /r/javascript recap for the week of November 29 - December 05
1991,2021-12-06 11:09:41,25,1,"#Background

I started building a game engine a few years ago. It started as a game in JavaScript, and later I abstracted an engine out of it. Been building on it ever since. It's HUGE. Original code was a mess. Giant multi-thousand-line files with no abstraction. All written for ES4 compatibility. Nothing was abstracted and specific game logic was mixed in with engine stuff. Eventually I needed to clean up. I started abstracting logic into classes and moving them into files. Then after having enough type problems, I got fed up and transcribed the JavaScript into TypeScript. This would have been a great time to fix all of the circular dependencies, but I ended up building a monster where circular dependencies are the essence of the architecture. 

Everything seemed to work fine, until it didn't. One day it slapped me in the face and I've been cleaning up for weeks with no end in sight.

#The Architecture, and the Mistake

I made two serious errors:

1. Assuming that because my code built and worked, that the circular dependencies were not going to be a problem.
2. Deliberately creating circular dependencies for convenience.

The engine exported a single index.ts file that exported every other public class. But internally, every class that used any other class would get them from that same file. So the dependencies were inherently circular by design. One day, one of the classes simply couldn't find the class it was supposed to extend, and nothing I did could fix that. And by the way, TypeScript doesn't just tell you that there's a design flaw in your code. Stuff just won't work. But luckily as the sole developer, I knew what the problem was. What I don't understand is why this took so long to surface.

There are many items where a circular dependency kind of makes sense. For instance, the concept of a `GameMode` (rules for running a game type, like CTF, deathmatch, etc) use to be part of a `GameInstance` (the game itself, containing the game loop, references to objects, etc). Splitting them into two different files resulted in a circular dependency. I could have just kept both items in the same file, but there are other, nastier circular dependencies to worry about. 

Each `GameObject` needs to have a reference to the `GameInstance`, but the `GameInstance` must also have references to all of the `GameObject`s. It doesn't make that much sense to have those classes in the same file, because they're completely distinct concepts, not to mention pretty hefty.

By relying on circular dependencies, I'd built the entire game engine like this. There were literally hundreds of circular references to deal with. Every time I fix one circular reference, two more appear. A complete nightmare that the reference checker tool didn't see before. 

#How to Save Yourself

1. Add this under the `""scripts""` section in your package.json: `""dependency-test"": ""npx madge --circular --extensions ts ./src""`. You could also have the command run before other tests. For instance: `""test"": ""npm run dependency-test &amp;&amp; jest""`
2. Think about architecture from the start. Take time to sketch some diagrams and make sure you aren't relying on circular dependencies. 
3. If you really have a circular reference, you can often break it using abstractions or interfaces. For example if `Cat`s and `Dog`s can interact with each other, had `Cat ↔ Dog` relying on each other, then create interfaces `ICat` and `IDog` and make `Cat → IDog` and `Dog → ICat`. I personally really find this inconvenient for a number of reasons (mainly that it duplicates some code and makes updating things more tedious, especially during a major refactor where methods keep changing or moving), but it's nowhere near as bad as spending weeks (maybe months) to clean up an unknowable number of circular dependencies that are ticking timebombs.
4. Classes can be broken up so that the part that actually requires a circular dependency is in a different file that isn't referred to by the referred class. One of the things I started doing is using [decorators](https://www.typescriptlang.org/docs/handbook/decorators.html) for just that. Still feels like extra work thrown out just for the sake of appeasing the transpiler gods. But these are the tools we have, and these are the rules we're stuck with. 

Do the right thing, or find out the hard way like me.",PSA: Don't make the same mistake I did. Avoid circular dependencies from the start.
1992,2021-12-06 21:44:25,7,1,"I just started learning TS (I know some JS from learning React and doing other NodeJS projects).

I’m doing a little [“Hello World” example](https://code.visualstudio.com/docs/typescript/typescript-compiling) to learn how to compile TS. Currently, it transpiles into JS in the same directory.

I know how to set an output directory, but my question is: what am I supposed to name this directory? Do I call it build?

Similarly, what are the best practices for organizing my typescript projects so I can keep them in mind now?",What Directory Name for Transpiled Code?
1993,2021-12-07 09:30:36,7,1,"Hi Coders,

I published an article introducing OpenAPI and some of its use cases:

https://betterprogramming.pub/4-use-cases-of-openapi-which-are-good-to-know-1a041f4ad71e?gi=5b6d570ddc99

I discuss some of its most valuable uses, and also show how to leverage it for generating typescript types for the API.

I'd be happy to answer questions and read your thoughts!",OpenAPI (and TypeScript)
1994,2021-12-08 03:11:49,41,12,"I am curious why I need to add the additional conditional type `K extends keyof O ? K : never` when `K` was initially constrained as `K extends keyof O`.

*this works*

    type Pk&lt;O, K extends keyof O&gt; = O[K] extends number ? (K extends keyof O ? K : never) : never;

*this doesn't work*

    type Pk&lt;O, K extends keyof O&gt; = O[K] extends number ? K : never;

[https://www.typescriptlang.org/play?ts=4.4.4#code/C4TwDgpgBACg1gHgPIBooGkoQB7AgOwBMBnKOCEAewDMokA+KAXjoG10BdLXAkqfAK4BbAEYQATgFgAUFCgB+DNzxFS5KrSQy5cxem06AXPwgA3CQeP4zEgNwyZ1AfgDGwAJaV8UAOYRg8MhomDgqfOo0dPQAFJQiAFbGqGQUxoHJ6PQAlFbCYuJQAN4G4v4C4t5x8azqHPbSAL4O0qCQsHAATEFKobxqFJEMzGycyn38eRayChiWJubi9Y7Obp7efgGd3SE8qikaUbEJSWjqaVsZ2bmiEkUlZRVQVTUUdTINQA](https://www.typescriptlang.org/play?ts=4.4.4#code/C4TwDgpgBACg1gHgPIBooGkoQB7AgOwBMBnKOCEAewDMokA+KAXjoG10BdLXAkqfAK4BbAEYQATgFgAUFCgB+DNzxFS5KrSQy5cxem06AXPwgA3CQeP4zEgNwyZ1AfgDGwAJaV8UAOYRg8MhomDgqfOo0dPQAFJQiAFbGqGQUxoHJ6PQAlFbCYuJQAN4G4v4C4t5x8azqHPbSAL4O0qCQsHAATEFKobxqFJEMzGycyn38eRayChiWJubi9Y7Obp7efgGd3SE8qikaUbEJSWjqaVsZ2bmiEkUlZRVQVTUUdTINQA)",Why is this nested conditional required when K is already constrained?
1995,2021-12-08 13:35:35,0,1,[deleted],I've copy/pasted an example code from [Vue](https://v3.vuejs.org/guide/typescript-support.html) on how to use defineComponent. Why doesn't TS react on line 15 where I try to split a number? It doesn't recognise any of the auto defined types from data(). Everything's 'any'.
1996,2021-12-08 15:54:53,7,0,"Hello everybody!

I’ve been learning C# since June last year in a school type setting. I did well and got good grades. We learnt the basics, OOP, did mobile development with xamarin, made MVC 5 web apps, learnt SQL and used entity framework, Linq and so on. Everything was going well. Then I took a three month internship working with Java, MySQL, Angular and typescript. Now I’m back in the classroom and I feel like I know nothing and I still need to pass the final exam. 

So my question is, what’s the shortcut to relearn everything? I just want my C# brain back but now it’s stuck in the other stack. All those people who say don’t mix languages were right. 

Anyways, any suggestions of how to get the old grey lump back in order in the shortest possible time would be appreciated. 

Cheers",Help! What’s the fastest way to relearn C#?
1997,2021-12-09 12:43:21,0,1,"I have several React applications, which all should use the same atomic components (e.g. `&lt;Button&gt;` or `&lt;Modal&gt;`,...)

Now, a quick Google search returns that the best bundler tool for libraries is rollup. Nevertheless, i tried it with webpack 5 which however fails when running in development mode (known issue on Github issue). Therefore, i went now with rollup then.

After some playing around etc, here is my setup
```
├──src/
│   └── components/
│   │      │      └── index.tsx
│   │      ├── Button/
│   │      │      └── Button.tsx
│   │      ├── Input/
│   │      └── Header/
│   └── types/
│          ├── declaration.d.ts
│          └── global.d.ts
├── rollup.json
├── package.json
└── tsconfig.json
```
- `Button.tsx` contains has a `type ButtonProps = {...}`
- `declaration.d.ts` contains types like `declare module ""*.css"";` to make the IDE happy
- `global.d.ts` contains self made type declaration that I use across my whole library, but also would like to use in my applications (which import the library).

By my understanding, when building a library, there should be one single `index.d.ts` file, which takes all typescript definitions from the `.src/` directory.

However, whenever I run `tsc` with my setup to output definitions inside the `lib/` directory, typescript
1. ignores all `*.d.ts` files (but shouldn't this be included as well since these are my library definitions?)
2. creates for each `*.ts` file a `*.d.ts` file (but shouldn't it generate one single `*d.ts` file which we then specify in the package.json)

I know my questions may sound confusing, but I'm more confused myself after tinkering for several days now :-(",Confusion in building a react library with typescript
1998,2021-12-09 21:43:07,0,1,"I am trying to get started with some basics.

I am in a scratch directory under my `npm`-based project and I have a file `foo.tsx` containing only:

    globalThis.t = {};
    globalThis.t[0] = &lt;p&gt;Foo.&lt;/p&gt;;

So this is a quite simple and basic attempt to lay down some JSX and see what JS it gets compiled into. When I use `tsc` it says I need to specify `--jsx` if I am going to use JSX, which seems fairly reasonable. So I try it and it says I have to choose from about four or five flavors of JSX translation. Based on what I am trying to do with the output and someone's friendly post, I decide on the translational flavor `react`. Fine. So, the obvious way to put that in an argument would be (after eliminating the standard construct that uses the equal sign),

    npx tsc --jsx react foo.tsx

But this still produces error TS2304: Cannot find name 'React'.

How can I use `tsc` to compile my JSX for feeding into
[ReactDOMServer](https://reactjs.org/docs/react-dom-server.html)? Blogger
[Anup Shinde](https://www.anupshinde.com/posts/react-typescript-server-render/)
says that `react` is the correct flavor of translation.",Translating JSX with tsc
1999,2021-12-09 22:16:43,0,1,"This is kinda of out there but i am having a weird problem with typescript.

I was coding peacefully using vscode in a typescript project until my vscode crashed, after restarting it, i got a small error window popping but didn't pay much attention to it and since then, my typescript is working very very very slow.

Anything related to typescript intellisense, autocompletion, type checking, import, etc. is taking a very long time.

I thought it was a problem with vscode so i decided to re-install it (full clean) but nothing changed.

At one point, i gave up and decided to install atom instead, but hell and beyond, same thing there, everything was taking a long ass time, i know nothing about atom but i could tell that intellisense and autocompletion was as slow as with vscode.

I am stuck because i can't keep working, not only i don't receive any more help but it works against me now, having lingering warnings and errors, if i ever work on more than one file at a time, everything is frozen.

I went and looked at the `tsserver.log` file and tried one autocomplete and then after that, deleting a code error and wait for it to process, here are the results:

`Perf 355  [23:02:20.572] 80::completionEntryDetails: elapsed time (in milliseconds) 4173.7848`

`Perf 746  [23:14:07.969] 194::encodedSemanticClassifications-full: elapsed time (in milliseconds) 4133.2560`

More than 4 seconds each.",My typescript is very slow
2000,2021-12-10 08:26:09,0,1,"https://www.typescriptlang.org/play?#code/IYIwzgLgTsDGEAJYBthjAgsgewCYFNkAeAFQD4EBvAWACgElsA7SKAV3mygApdgJgAfgBcCAArAoEAJbBi5AJRU6DBrGZhsyfADpk2AObcARACE0+Ri2gcIXJHO25jCgNwrVAeRAArfPB00MGkDJm4IAAtpMAAaBD4BNw8AXzpU2joUIIQAQQR8AA8IfCZcDBwCYhyKGnoEADc5NnxRVmkmAwQAXgRjAgAzYDZkCGN3OqZmABF8QeGIEQQ2jvH0zNR0BFNlOvVrdk4eBKFRCSlZYlMyJVrVBm8-AKCQsMjouOOkurW6xuRm1rQdqdHp9WZDEZjDyTJgzOYjRbLAyrOiZDRaXT6IxMfAAd1y3EoDSaLV6ONxxjiMLhEIgomM5OMCGSCi+e002j0hm45K2hOJ-1JDLxlIQ1PB83pjOZrNcQA

Apparently the flow of execution is:
- current constructor
- field initializers
- super-class constructor

It's counterintuitive, or is it just me?",Here's one to pick your brain (field initializers vs super class constructors)
2001,2021-12-11 19:23:31,0,1,"this is the error I get :

    Property 'isValid' does not exist on type 'ObjectIdConstructor'

This is the code of update functionality in the controller folder in nodejs/express project :

    export const updatePost = async (req: any, res: any) =&gt; {
          const { id: _id } = req.params;
          const post = req.body;
    
          if(!mongoose.Types.ObjectId.isValid(_id)) return res.status(404).send('no post with that id');
    
          const updatedPost = await PostMessage.findByIdAndUpdate(_id, {...post, _id }, { new: true });
    
          res.json(updatedPost);1
    
    }

i assume it is a typescript error, correct me if I am wrong?

thank you for reading",Mongoose validation error! Property 'isValid' does not exist on type 'ObjectIdConstructor'
2002,2021-12-12 07:40:00,0,1,"[https://imgur.com/a/u66OXti](https://imgur.com/a/u66OXti)

&amp;#x200B;

Getting this error, I have installed the project using npx create-react-app --template typescript &lt;project\_name&gt;. Suddenly this error came up. Please help and suggest ways to resolve this.",How to solve this issue. Please help.
2003,2021-12-12 13:22:02,0,1,"Hello! I’m a programmer with Java background. And have been struggling with the differences between ESM modules, CommonJS, import vs require. 

I love the features that typescript have over javascript, but I can’t even get a simple script to run in a new ts project. Is there a resource I should be using for this? It’s affecting my imports and code reusability and I’ll really like to understand what I should be using.

Please send help.",Unable to run ‘.ts’ - ESM modules and CommonJS
2004,2021-12-12 13:41:38,0,1,"All these days I've been blaming VSCode and Typescript compiler for being very slow. I discovered today that vscode type suggestions and imports are like lightening fast in large nestjs project. But in my projects which I initiate using tsc --init and only change node specific parts such as emitted es version, module resolution and few more, the type suggestions and error reporting is painfully slow. 

What could be the reason? I tried using the same tsconfig as nestjs, it improved a little but not as fast as it is in nestjs.",My new typescript project is painfully slow than a large nest js project
2005,2021-12-12 15:01:00,0,1,"    interface Foo {
      [index: number]: number;
      lastName: string;
    }
    
    //Works. Expected
    const foo1: Foo = {
      0: 1,
      1: 2,
      2: 3,
      lastName: 'Duck',
    };
    
    //Works. Unexpected
    //Shouldn't it throw a error here &lt;---
    const foo2: Foo = {
      lastName: 'Duck',
    };

Shouldn't it throw an error at the indicated part since since it's not structurally compatible (I need at least one value for the `index` key)?

My best guess is that this something related to `Foo` somehow being an `Array` (but is it? since `Array.isArray()` is false so I guess I'm off) and thus values are optional for the `index` key (ie `Array` can be empty)

See [playground](https://www.typescriptlang.org/play?#code/JYOwLgpgTgZghgYwgAgGIHt3IN4ChnIDaoAJhAB4BcyIArgLYBG0AutXU9ANz7IA2cAM5gAcnHoRqwqKADmPAL64A9MoDq6KAGtBAOmQBRcgAcICSCVwJ0IYchiYAjNQxYAvDl4AGao4A0vM7IAEwBBMHUAMxh-EKi4pLIAOQAIrQIWkkBCjwq6po6+gCqIBSm5hCWqgDKABbotHwkIElgyMBtYLVQ6ADuyHDI0D1QyLXQKAA8ALSzVjZ2DugRaJjIHngEAsJiEtSp6ZnZuXnWtuh8ELp86LIAFACCUFBwAJ66wIJPL693S8EASgBuCAA)",Structurally incompatible but no error?
2006,2021-12-12 20:55:41,0,1,"Following up on my [post from a few weeks ago](https://www.reddit.com/r/javascript/comments/r50dcc/askjs_best_tutorials_for_learning_typescript_as/), I've started to learn TypeScript. When you read through the documentation or go through the tutorials, you find that there is a lot you *can* do with TypeScript. I'm curious as to how much of TypeScript you actually use, i.e. incorporate into your projects.

I come from a plain JS and React background, and much of TS just seems unnecessarily... ceremonial?

I can appreciate defining types for core functions, but I struggle to understand the real-world gains (outside of some nice autocompletes here and there) provided by buying into the language wholesale.

So my question is, how much of TypeScript do you use in your projects? And if you implement more than the basics, what clear wins do you get as you incorporate more and more of TypeScript into your project? TIA",[AskJS] How heavy do you lean into TypeScript?
2007,2021-12-12 21:55:52,0,1,"Basically need help understanding how to get the typescript compiler to understand what I am trying to do in the `FIXME` comment as seen below.

```
    namespace Random {
        export declare const number: (a: number, b: number) =&gt; number;
        export declare const character: () =&gt; string;
        export declare const word: (length: number) =&gt; string;

        declare const numberArrayFn: (cfg: Config) =&gt; number;
        declare const stringArrayFn: (cfg: Config) =&gt; string;

        interface RandomOptions {
            typ: ""number"" | ""string"";
            start: number;
            range: number;
    }

        type Config = Omit&lt;RandomOptions, ""typ""&gt;;

        // FIXME: current signature is (number, RandomOptions)=&gt;(number | string)[]
        // I need it to infer the return type depending on whether
        // cfg.typ == ""string"" or cfg.typ == ""number""
        export const array = (length: number, cfg: RandomOptions) =&gt; {
            return Array.from({ length }, () =&gt; {
                return (cfg.typ == ""number"" ? numberArrayFn : stringArrayFn)(cfg);
            });
        };
    }
```

[playground link](https://tsplay.dev/wj4K7m)",Type signature help needed: Return type of function needs to be more intelligent
2008,2021-12-13 10:04:42,1,1,"**Monday, December 06 - Sunday, December 12**

###Top Posts

| score | comments | title &amp; link |
|--|--|--|
| 310  | [20 comments](https://www.reddit.com/r/javascript/comments/rde18s/algorithms_and_data_structures_implemented_in/)  | [Algorithms and data structures implemented in JavaScript with explanations and links to further readings](https://github.com/trekhleb/javascript-algorithms)|
| 290  | [117 comments](https://www.reddit.com/r/javascript/comments/rcrkr0/tailwind_css_v30_is_here_bringing_incredible/)  | [Tailwind CSS v3.0 is here — bringing incredible performance gains, huge workflow improvements, and a seriously ridiculous number of new features.](https://tailwindcss.com/blog/tailwindcss-v3)|
| 284  | [43 comments](https://www.reddit.com/r/javascript/comments/raanic/i_struggled_to_understand_rerendering_and/)  | [I struggled to understand re-rendering and memoization in React for a long time. Today I wrote the article I wish I had read many years ago. The information is concise and to the point. I hope it helps someone.](https://medium.com/@kolbysisk/understanding-re-rendering-and-memoization-in-react-13e8c024c2b4)|
| 215  | [94 comments](/r/javascript/comments/rb9g4j/what_people_in_tech_had_to_say_about_javascript/)  | [What people in tech had to say about JavaScript when it debuted in 1995](https://superhighway.dev/javascript-25-years-1995)|
| 164  | [25 comments](/r/javascript/comments/rbv9pe/react_has_shipped_experimental_support_for_custom/)  | [React has shipped experimental support for custom elements and they are looking for feedback](https://github.com/facebook/react/issues/11347#issuecomment-988970952)|
| 144  | [151 comments](https://www.reddit.com/r/javascript/comments/rdvjk1/did_react_win_the_201_framework_wars/)  | [Did React Win the 201* Framework Wars?](https://gist.github.com/tkrotoff/b1caa4c3a185629299ec234d2314e190)|
| 108  | [117 comments](/r/javascript/comments/rey2pu/askjs_how_heavy_do_you_lean_into_typescript/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; How heavy do you lean into TypeScript?|
| 99  | [10 comments](https://www.reddit.com/r/javascript/comments/rci1vf/payload_launches_new_feature_to_autogenerate/)  | [Payload launches new feature to auto-generate TypeScript interfaces](https://payloadcms.com/blog/announcing-generated-types)|
| 98  | [8 comments](/r/javascript/comments/rb02fs/fighting_tls_fingerprinting_with_nodejs/)  | [Fighting TLS fingerprinting with Node.js](https://httptoolkit.tech/blog/tls-fingerprinting-node-js/)|
| 93  | [12 comments](https://www.reddit.com/r/javascript/comments/rc1onj/visual_studio_code_november_2021/)  | [Visual Studio Code November 2021](https://code.visualstudio.com/updates/v1_63)|


&amp;nbsp;

###Most Commented Posts

| score | comments | title &amp; link |
|--|--|--|
| 31  | [46 comments](/r/javascript/comments/reshld/askjs_looking_to_start_making_a_pokemon_game_in_js/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Looking to start making a Pokemon game in JS|
| 0  | [24 comments](https://www.reddit.com/r/javascript/comments/re1vv5/why_you_should_stop_using_ui_frameworks/)  | [Why You Should Stop Using UI Frameworks](https://medium.com/nerd-for-tech/why-you-should-stop-using-ui-frameworks-9289f0569a57)|
| 9  | [23 comments](https://www.reddit.com/r/javascript/comments/rdckiu/askjs_is_stimulus_js_worth_learning/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; is stimulus js worth learning?|
| 0  | [15 comments](/r/javascript/comments/rb6cyv/why_you_should_checkin_your_node_dependencies/)  | [Why you should check-in your node dependencies](https://www.jackfranklin.co.uk/blog/check-in-your-node-dependencies/)|
| 1  | [13 comments](https://www.reddit.com/r/javascript/comments/rag06m/askjs_input_values_are_returned_as_empty_even/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Input values are returned as empty even after being triggered by a new function|


&amp;nbsp;

###Top Ask JS

| score | comments | title &amp; link |
|--|--|--|
| 22  | [10 comments](/r/javascript/comments/rbhmzb/askjs_resourcesroadmap_for_javascript/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Resources/Roadmap for Javascript|
| 13  | [2 comments](/r/javascript/comments/rf7ih7/askjs_any_javascript_game_engines_to_make_an_arpg/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Any JavaScript game engines to make an ARPG? IE: Diablo 1?|
| 8  | [12 comments](/r/javascript/comments/reh7rl/askjs_making_motion_graphic_animations_with/)  | `[AskJS]` &amp;#91;AskJS&amp;#93; Making motion graphic animations with javascript?|


&amp;nbsp;

###Top Showoffs

| score  |  comment  |
|--|--|
| 1  |  /u/ravi_sojitra said [Yeah, I wrote a blog on how and why we open sourced our nodejs code generator&amp;#40;it generates production ready source code in less than 5 mins&amp;#41;.   https://dev.to/dhiwise/we-open-sourced-our-nodej...](/r/javascript/comments/r8ktql/showoff_saturday_december_04_2021/hng4dzs/?context=5) |
| 1  |  /u/DiamondSkysXD said [I’m new here! 😖](/r/javascript/comments/r8ktql/showoff_saturday_december_04_2021/hnkc97u/?context=5) |
| 1  |  /u/kars0nn said [I wrote a program that updates your Instagram bio with whatever song you’re listening to &amp;#40;scuffed code, i wrote this in one night&amp;#41; https://github.com/kars0nn/Spotigram](/r/javascript/comments/r8ktql/showoff_saturday_december_04_2021/hnlxsqj/?context=5) |


&amp;nbsp;

###Top Comments

| score  |  comment  |
|--|--|
| 111  |  /u/PravuzSC said [Although I have mixed feelings about some aspects of React, No other framework can really measure up to React, in all aspects. Some can outperform &amp;#40;Svelte, Solid especially&amp;#41;, some come with mo...](/r/javascript/comments/rdvjk1/did_react_win_the_201_framework_wars/ho3vtth/?context=5) |
| 108  |  /u/ILikeChangingMyMind said [Javascript in 1995 was *very*, *very* different.  Basically all it could do was form validation.  Things we now take for granted, like promises, DOM APIs, and even just consistent event handling APIs ...](/r/javascript/comments/rb9g4j/what_people_in_tech_had_to_say_about_javascript/hnn85m0/?context=5) |
| 82  |  /u/-pertinax- said [After initial skepticism i tried it out on a project about 8 months ago and have been using it since.  Bought TailwindUI which has probably paid for itself 10x over in saved time, not to mention overa...](/r/javascript/comments/rcrkr0/tailwind_css_v30_is_here_bringing_incredible/hnwl32o/?context=5) |
| 73  |  /u/shuckster said [The days of ""multimedia"".](/r/javascript/comments/rb9g4j/what_people_in_tech_had_to_say_about_javascript/hnn8ey4/?context=5) |
| 64  |  /u/Crypticsafe5 said [Auto complete is pretty nice, but it's just the surface. When you type your data, you have checks against the types, and it has more than a few times pointed out issues that I had previously thought w...](/r/javascript/comments/rey2pu/askjs_how_heavy_do_you_lean_into_typescript/hoana8g/?context=5) |


&amp;nbsp;",Your /r/javascript recap for the week of December 06 - December 12
2009,2021-12-13 16:29:55,1,1,[removed],using socket.io in multiplayer game development with typescript
2010,2021-12-13 18:04:06,0,1,"Greetings wizards, I am attempting to create a function that cleanly chunks an input array. I am starting from [this repo](https://github.com/paytonrules/typescript.koans) and attempting to rely on reduce over loops.

here are the included tests:

    _.chunk([""a"", ""b"", ""c"", ""d""], 2) =&gt; [[""a"", ""b""], [""c"", ""d""]]
    _.chunk([""a"", ""b"", ""c"", ""d""], 3) =&gt; [[""a"", ""b"", ""c""], [""d""]]
    _.chunk([""a"", ""b"", ""c""]) =&gt; [[""a""], [""b""], [""c""]]

and here's my code, which executes just fine in my node.js repl:

    function chunk(chunks, size) {
        let chunkSize = size || 1
        let numChunks = Math.ceil(chunks.length/chunkSize)
        let reducer = (chunx, chnk) =&gt; {
            let newChunk = chunks.slice(chnk * chunkSize, chnk * chunkSize + chunkSize)
            chunx.push(newChunk)
            return chunx;
        }
        return [...Array(numChunks).keys()].reduce(reducer, [])
    }

of course, js=&gt;ts is easy but executing ts in my repl is not as easy

(I am coming back to TS after a long voyage through the seas of LISP/Clojure)

here's my attempt at adding Type safety to ""chunk"":

    export function chunk(chunks: string[], size: number): string[][] {
        let chunkSize = size || 1
        let numChunks = Math.ceil(chunks.length/chunkSize)
        let reducer = (chunx: string[][], chnk: number) =&gt; {
            let newChunk: string[] = chunks.slice(chnk * chunkSize, chnk * chunkSize + chunkSize)
            chunx.push(newChunk)
            return chunx;
        }
        return [...Array(numChunks).keys()].reduce(reducer, [])
    }

running `npm run test:watch` blows up with  `TypeError: Array(...).keys(...).slice is not a function`

what am I missing to get my test framework (mocha) to accept this test, which runs in my node repl?",Stuck on Chunk
2011,2021-12-15 09:57:04,0,1,"I'm new to both typescript and React, so i keep stumbling upon simple syntax. I would very much appreciate if someone could shed some light on the following:

\`const \[name, setName\] = useState&lt;string&gt;(""Jon Doe"")\`

I understand that the above code makes sure that name can only be a string and the setName function can only accept strings. What i dont understand is how this actually works under the hood. 

I understand that when you call the useState() function, a state variable and a function to update that variable are created. How does passing a TS generics thinggy make that happen? 

So i went into the node\_modules folder of a typescript project, looked at the react folder and found the definition of useState in umd/react.development.js and it's defined like this:

\`\`\` function useState(initialState) {

var dispatcher = resolveDispatcher();

return dispatcher.useState(initialState);

  }\`\`\`

I'm sure there is more to the actual definition of useState, but i dont see any types or generics defined there. Anything will help! Thanks",Typescript-React-useState
2012,2021-12-16 19:15:26,0,1,"In React components I often use early returns to guard against variables being undefined. But when I then use that variable in an event handler, TypeScript still complains that it is possibly undefined. Is there any way to make TypeScript understand?

[Codesandbox: https:\/\/codesandbox.io\/s\/typescript-early-return-question-578xv?file=\/src\/App.tsx](https://preview.redd.it/u2f7ub6xey581.png?width=1200&amp;format=png&amp;auto=webp&amp;s=b5121e8d192297090c6845932c06d97dc3a5d98e)",Question about guards in React components
2013,2021-12-17 16:59:58,0,1,[removed],lets get schwifty with typescript
2014,2021-12-17 18:50:59,0,1,[removed],I created a typescript discord bot template for people to use!
2015,2021-12-18 01:12:03,1,1,[removed],IllusionTS typescript game library example showcase 2
2016,2021-12-18 18:13:10,0,1,"[Playground Link](https://www.typescriptlang.org/play?#code/MYGwhgzhAEDKD2BbApgYXFaBvAUNaAJshMAE4CWADgC7nwB2AXNBNRfQOYDcOe0wDVqQCuwavFIAKAJTY++agAtyEAHRESFGnXrQAvNADkGslVoNDPfAF9e+ehMRgQAWWRL4BGXPz4B9CHgQZFUQeA5JACIlFWZI6ABqaBiIaXloUndhUl0U9WJTbQYraFs+AHpy2EV4YRACekNqZOUYACNkaA4wtucAFVaWcnpgTuCAD3JgZxAATxYBSmQCVQrygDl4aGRSUglVaABVemRxpbFlgH4+MF34AHc3DwJ9aG89AD4fX39A4NDwlEUnFEi0VNISvhMtRsrlWvlNGYdCUyrZgs1Aih0JAIAB5NoAK2QYleJ3ucCQaAwEBkPF+QRCYQimKpOPxRLEqgcpCcrncNS80jS9P+TMkLOxUHZxOoqlue0e-M8MjSvHRLEp0pJBiw0D4Ji05iY0EiBqRDEiABo+NzeU8BcwAGbCEZG7y4Xz8QQMgERaKtEFJFJpT3Q2FgtRmor0FHW-CVFLQFRdHr9QYQYajaATKYzeYkeBLFZrAYKmACRCUcjgI3bO6kA4AUTOMuWq3w8oe9s8zHeXw9P29osB-tiJtBwchGSyOQjCMKRpRfBwthFjMBLK1sttzm7guFQ-XzM1hJlcruiueKqAA)

    class SomeClass {
      description: string;
    
      constructor() {
        this.description = 'description';
      }
    
      normalMethod() {
        console.log(""this: "" + this)
        return this.description;
      }
    
      arrowMethod = () =&gt; {
        console.log(""this: "" + this);
        return this.description;
      }
    
    }
    let someClassObject = new SomeClass();
    console.log(someClassObject.normalMethod()) //All good.
    console.log(someClassObject.arrowMethod()) //All good. Why?_______________________________________________________________________________ 
    let someObject = { 
      description: ""description"",
      normalMethod: function() {
        console.log(""this: "" + this)
        return this.description;
      },
      //this is globalThis since lexically scoped.
      //Throws compilation error. Expected.
      arrowMethod: () =&gt; {
        console.log(""this: "" + this);
        return this.description;
      }
      
    }
    console.log(someObject.normalMethod()) //All good.
    console.log(someObject.arrowMethod()) //Error. Makes sense
    ___________________________________________________________

Qn: Why does the `this` in the class refer to the instance of `SomeClass`?  Shouldn't the `this` be `globalThis` due to lexical scope?

PS: I understand lexical scoping as ""Lexical Scoping defines how variable names are resolved in nested functions: inner functions contain the scope of parent functions even if the parent function has returned.""

My best guess: It has something to do with `SomeClass` being a function while `someObject` is literally just an instance of anonymous class",Why does this in a class and object literal behave differently?
2017,2021-12-19 09:22:57,0,1,"I have a `span` inside `button` where I want to listen on click but don't want to propagate the click on it upwards towards the button. So I was trying to use `e.stopPropagation` on `span` but found myself in a problem.

My code looks like:

```ts
import React from 'react'

export const Component = () =&gt; {
    return (
        &lt;button
            type=""button""
            onClick={() =&gt; { console.log('lol') }}
        &gt;
            &lt;span&gt;Empty docs...&lt;/span&gt;
            &lt;span
                role=""button""
                onClick={(e: React.MouseEvent&lt;HTMLSpanElement, MouseEvent&gt;) =&gt; {
                    e.stopPropagation()
                    console.log('delete')
                }}
            &gt;
                ❌
            &lt;/span&gt;
        &lt;/button&gt;
    )
}
```

It works on [Typescript Playground perfectly fine](https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wChSkAPSWONCAOwGd4BhXSBpB+AXjgAUASji8AfHADepOLLhEYAVygNBMuRoA8AI0UwYjdRuNwYATzBJeAIl37G1oybmNWAG2BoA1r0nDREpJ0jEwQbkgAdG4QAOYC+NFu+CIAvilOGmIZzppMYCgMYgCi4OZwACYQaEwRtZoA9HkFWc7GufkM2a2yOOE2dgYMjt3Orh7evgJIAFyIxDARALIQikxIRQBu3DCaABIAKosAMgDKHUXhINsANHDLq+tbPGIi4lJdI3KRLBBgAAo4fIxFAwYCMYQfT7BZhhSLROL4cpIcIwJDJSHONIY2QtKFyQAy5Ni4A0moUPg0BoxcbIhKQUkA)

However, in VSCode, it gives me an error:

```ts
(JSX attribute) DOMAttributes&lt;HTMLSpanElement&gt;.onClick?: MouseEventHandler&lt;HTMLSpanElement&gt; | undefined
Type '(e: MouseEvent&lt;HTMLSpanElement, MouseEvent&gt;) =&gt; void' is not assignable to type 'MouseEventHandler&lt;HTMLSpanElement&gt;'.
  Types of parameters 'e' and 'event' are incompatible.
    Type 'MouseEvent&lt;HTMLSpanElement, MouseEvent&gt;' is not assignable to type 'MouseEvent&lt;HTMLSpanElement, MouseEvent&lt;Element, MouseEvent&gt;&gt;'.
      Type 'MouseEvent' is missing the following properties from type 'MouseEvent&lt;Element, MouseEvent&gt;': nativeEvent, isDefaultPrevented, isPropagationStopped, persistts(2322)
index.d.ts(1463, 9): The expected type comes from property 'onClick' which is declared here on type 'DetailedHTMLProps&lt;HTMLAttributes&lt;HTMLSpanElement&gt;, HTMLSpanElement&gt;'
No quick fixes available
```

I even typed `span` as `MouseEventHandler&lt;HTMLSpanElement&gt;` but then it gives me the following error on `e.stopPropagation`:

&gt; Property 'stopPropagation' does not exist on type 'MouseEventHandler&lt;HTMLSpanElement&gt;'.ts(2339)

It also gives me this error on `onClick`:

```
(JSX attribute) DOMAttributes&lt;HTMLSpanElement&gt;.onClick?: MouseEventHandler&lt;HTMLSpanElement&gt; | undefined
Type '(e: MouseEventHandler&lt;HTMLSpanElement&gt;) =&gt; void' is not assignable to type 'MouseEventHandler&lt;HTMLSpanElement&gt;'.
  Types of parameters 'e' and 'event' are incompatible.
    Type 'MouseEvent&lt;HTMLSpanElement, MouseEvent&gt;' is not assignable to type 'MouseEventHandler&lt;HTMLSpanElement&gt;'.
      Type 'MouseEvent&lt;HTMLSpanElement, MouseEvent&gt;' provides no match for the signature '(event: MouseEvent&lt;HTMLSpanElement, MouseEvent&gt;): void'.ts(2322)
index.d.ts(1463, 9): The expected type comes from property 'onClick' which is declared here on type 'DetailedHTMLProps&lt;HTMLAttributes&lt;HTMLSpanElement&gt;, HTMLSpanElement&gt;'
```

How do I fix it?",Unable to type event on a `span` inside a `button`?
2018,2021-12-19 09:54:05,0,1,"I have a monorepo with the following file structure:

```
➜  yw git:(master) tree
.
├── package.json
├── packages
│   ├── common
│   │   ├── package.json
│   │   ├── src
│   │   │   ├── add.ts
│   │   │   ├── index.ts
│   │   │   └── multiply.ts
│   │   └── tsconfig.json
│   └── server
│       ├── package.json
│       └── src
│           └── index.ts
└── tsconfig.json
```

Inside `packages/common/src/add.ts` I have:

```
export const add = (a: number, b:number) =&gt; {
    return a + b
}
```

I have the multiply version also defined in `packages/common/src/multiply.ts`.

In `packages/common/src/index.ts` I imported and re-exported the modules

```
export * from './add'
export * from './multiply'
```

The content of `packages/common/package.json` is:

```
{
  ""name"": ""common"",
  ""version"": ""1.0.0"",
  ""main"": ""dist/index.js"",
  ""typings"": ""dist/index.d.ts"",
  ""type"": ""commonjs"",
  ""license"": ""MIT"",
  ""devDependencies"": {
    ""typescript"": ""^4.5.2""
  },
  ""scripts"": {
    ""build"": ""tsc""
  }
}
```

In `common` project I run `yarn` and then `yarn build`, which generated `packages/common/dist` with content:

```
➜  yw git:(master) ✗ tree packages/common/dist
packages/common/dist
├── add.d.ts
├── add.js
├── add.js.map
├── index.d.ts
├── index.js
├── index.js.map
├── multiply.d.ts
├── multiply.js
└── multiply.js.map
```

now in `packages/server/src/index.ts` I have:

```
import { add } from 'common';

console.log(add(1,2))
```

And in `packages/server/package.json`, I have:

```
{
  ""name"": ""server"",
  ""version"": ""1.0.0"",
  ""main"": ""dist/index.js"",
  ""typings"": ""dist/index.d.ts"",
  ""license"": ""MIT"",
  ""dependencies"": {
    ""common"": ""1.0.0""
  },
  ""devDependencies"": {
    ""typescript"": ""^4.5.2""
  },
  ""scripts"": {
    ""build"": ""tsc""
  }
}
```

So in `server` project, I am depending on `common` - as can be seen in the dependency. 
This works, because when I run `npx ts-node packages/server/src/index.ts` it consoles log 3.

The question now is, how can I change the dependency definition in `packages/server/src/index.ts` from:

```
import { add } from 'common';

console.log(add(1,2))
```

to 

```
import { add } from 'common/add';

console.log(add(1,2))
```

That is, import from the `add` module directly: `import { add } from 'common/add';`.

Any ideas on how to achieve this?",How do I import an individual module in a monorepo project in JavaScript/NPM
2019,2021-12-19 15:29:46,0,1,"I have a mono repo with backend folder and a frontend folder. Both use typescript, frontend is in React.

Now I'm using the same ts configuration for frontend + backend. So I'm debating if I should move typescript dependency and .tsconfig to the root folder and have it shared between both the front-end or back-end.

Is this a good idea? Or is bad practice and will bite me in the ass later?",Is it bad practice to have the same .tsconfig for both backend and frontend?
2020,2021-12-20 11:49:31,0,1,"Hello,

working with typescript to build a node.js API server.Currently I'm using RxJs to handle data and Axios to make backend http requests.

In your opinion, does it make sense, considering that RxJs includes the Ajax module which theoretically should allow me to do everything that I do with Axios?",[AskJS] RxJs + Axios: does it make sense?
2021,2021-12-20 16:03:02,0,1,"**Last August, discord.js V13 was released, and with that the new features of discord: Interactions. However all popular frameworks like ""Discord akairo"" and ""Commando"" have been deprecated at this time. Indeed the amount of work for the updates was too important. At this moment, Sheweny was born.**

The idea for ""Sheweny"" came to me when I wanted to start coding a bot with discord.js V13 and had to update my code. It took me a while to figure out how the interactions worked and it turned out to be pretty complex. I also noticed that around me programming beginners had difficulty updating their bot, to the point of not changing the version for some. At this point I started to code Sheweny. The goal was to make it easy for everyone, even beginners, to do a discord bot.

Main features of Sheweny :

- Modular and reloadable commands, inhibitors, events and interactions.

- Flexible command handling and creation.

- Interactions support like slash-commands, buttons, select-menus, modals.

- Powerful and thorough command arguments parsing.

- Development mode to limit errors

- Full javascript and typescript support 

During the development of this framework the main difficulty was to create reusable classes everywhere in order to be able to develop new functionalities very quickly. Indeed the interactions are young at discord and new functionalities come out very often. Thanks to its very modular structure the framework can be updated very easily. This allows Sheweny to be each time the first framework to support new discord features !

Here's the [Github repository](https://github.com/Sheweny/framework) if you'd like to review the code. Also here is the [Github organization](https://github.com/Sheweny) for discover more projects like CLI, Website etc.

Sheweny was my first big project and I was very happy to see people like it. If some people have ideas, improvements or comments to make on the project, I will be very happy to listen to them. Thanks for taking the time to read this article and thanks to everyone who contributed to the project, from the star left on the github to the people who contributed the code❤️

*Sorry for the English mistakes, French is my native language*",[AskJS] Sheweny: A framework for create discord bots !
2022,2021-12-20 19:53:45,0,1,"Hi, so I have want to have this dynamically determine the return type based on the value of a boolean parameter.

In this example I made is if it isSchemaA is true, it returns a value of type A, and otherwise returns a value of type B.

I'm unable to do it because there are errors like { a: number } is not assignable to type AorB&lt;IsSchemaA&gt;

The only way to make it work is to assert the return ""as AorB&lt;IsSchemaA&gt;"" but is there a way that the assertion is not needed? Thanks

[https://www.typescriptlang.org/play?#code/FASwdgLgpgTgZgQwMZQAQEFUG9itQgLlTAFcBbAI1gG5gBfUSWRFVAIW11QqNMpvrBgSAPZgAzhFQBzKBAAqATwAOUTAF5UACgCURDQD5tOPIVQBGADT0dtURKmyFKqB026ibo1pPciVm1pgCBdUJVUAJTkSGDAAHgBJcQBlJAALKDIETCgAD2gwABNxbhERABsoBDAjTSTUjKyc-KgikogYEjQAfgxUTyD7SVRoYc1ElPTM7NQ8guLSiqqarS4QScbsonqppuA9MJcoiBj4nc30WqNfEDhtdYbp9B1OPDwYaNiZOXC1XVo8Ax3p8wN9nKo2P96IMxMNFKhNKMIFoOl1bMJYVIAF4IkZQSRaRDlcRQWxAA](https://www.typescriptlang.org/play?#code/FASwdgLgpgTgZgQwMZQAQEFUG9itQgLlTAFcBbAI1gG5gBfUSWRFVAIW11QqNMpvrBgSAPZgAzhFQBzKBAAqATwAOUTAF5UACgCURDQD5tOPIVQBGADT0dtURKmyFKqB026ibo1pPciVm1pgCBdUJVUAJTkSGDAAHgBJcQBlJAALKDIETCgAD2gwABNxbhERABsoBDAjTSTUjKyc-KgikogYEjQAfgxUTyD7SVRoYc1ElPTM7NQ8guLSiqqarS4QScbsonqppuA9MJcoiBj4nc30WqNfEDhtdYbp9B1OPDwYaNiZOXC1XVo8Ax3p8wN9nKo2P96IMxMNFKhNKMIFoOl1bMJYVIAF4IkZQSRaRDlcRQWxAA)

    interface A {
      a: number;
    }
    interface B {
      b: number;
    }
    
    type AorB&lt;IsSchemaA extends boolean&gt; = IsSchemaA extends true ? A : B;
    
    const test = &lt;IsSchemaA extends boolean&gt;(
      isSchemaA: IsSchemaA
    ): AorB&lt;IsSchemaA&gt; =&gt; {
      if (isSchemaA) {
        return { a: 3 };
      }
      return { b: 3 };
    };
    
    const y = test(true);
    const z = test(false);",How to dynamically determine the return type based on the value of a boolean parameter?
2023,2021-12-20 23:22:59,1,1,[removed],Funny react rules in typescript eslint break rendering children
2024,2021-12-21 01:41:51,0,1,"Promises suck and here's why:

Basic promise code:

```javascript
const x = new Promise((resolve)=&gt;setTimeout(resolve(1),100))
( async ()=&gt; console.log(await x) )()
```
The same code with callbacks:
```javascript
const awaitX = (resolve)=&gt; setTimeout(()=&gt;resolve(1),100)
awaitX((result)=&gt; console.log(result))
```

* The promise code has extraneous information: `new`, `Promise` and `async`
* The callback code has extraneous information in `(result)=&gt; console.log(result)` vs `console.log(await x)`.  
However this is only due to the syntactical sugar built into javascript's `await`.  Similar syntactical sugar could and should be implement for callbacks.  It's probably fairer to compare this to `.then((result)=&gt; console.log(result))` which has an extraneous `then`

The callback code is simpler than the promise code and has the added benefit of not requiring an entire promise library's code, nor learning how to use promises.  All javascript programmers should learn about callbacks, irrespective if they use promises or not.

When I started my javascript journey, I spent a lot of time learning and trying to understand promises as promises was touted as the way to go.  Only after I mastered them, did I start to learn about callbacks - mainly due to functional programming.  Once I understood callbacks, I realised promises are not required and do more harm than good.  The same way classes are not required.

One argument that will be made for promises is that they force more structure than callbacks.  However if structure is the goal, then there are other simpler and better ways to achieve that outcome.  For example a simple naming convention could be used to identify all promise-like callbacks.  Or a typescript type could be used to standardise `resolve` and `reject` callbacks.

Promises seek to reduce the complexity of infinity by providing limited structure, however after implementing promises infinity remains and so they solve nothing, but they do introduce a raft of additional problems and complexity.

A far better solution to the problem of infinity, is to educate developers to understand javascript and how to use it well, clearly and concisely.  And as callbacks are fundamental to javascript it's far better to learn callbacks than promises.

Promises taught me a lot about asynchronous programming, but I feel if I had invested equivalent effort into understanding callbacks first, I would have arrived at the destination sooner, with far less frustration on the way.

Anyway, that's my opinion, I'm sure not everyone will agree - but I thought I would share it for junior devs and encourage them to understand callbacks before learning promises as I wish someone had told me that.",[AskJS] unpopular opinion: promises suck
2025,2021-12-21 12:12:04,0,1,[removed],Do people want run time type safety in typescript?
2026,2021-12-23 18:17:07,0,1,,I made a library to create idiomatic and automatic json decoders based on typescript types - instrumental for creating robust web apps
2027,2021-12-24 03:31:46,0,1,"Hello!

I am trying to create a bunch of factory functions that have a certain constraint. The factories will have similar signatures, and they return a different subtype of the same base type.

See the code reproduced on [TS Playground here](https://www.typescriptlang.org/play?#code/JYOwLgpgTgZghgYwgAgEJwM4oN4F8BQoksiKAKgBagDmAjMhAB6QgAmGamO+yvyIcALYQAXMgxgoNfAXxgAngAcUAMURgA9lHnIAvMgA8ZBswhsO6LAD4AFAEo9V5GXz4EGkBORgqIOmoRNbTEAoJ19e0dkbB4+d08wb186MUoaen1sAWExACIAIw183II+ZFjeKAgwAFcoECT0mXwgA).

```
interface Base {}

interface Thing1 extends Base {
    text: string
}

type Factory = &lt;T extends Base&gt;() =&gt; T

const thing1Factory: Factory = () =&gt; {
      ~~~~~~~~~~~~~ // Type '() =&gt; Thing1' is not assignable to type 'Factory'.

    const thing1: Thing1 = {text: ""hello""} 
    
    return thing1
}
```

This is the full error.

Type '() =&gt; Thing1' is not assignable to type 'Factory'.
  Type 'Thing1' is not assignable to type 'T'.
    'Thing1' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint 'Base'.

I've googled a fair amount but I don't understand the error. What does ""T could be instantiated with a different subtype"" mean, and how is it relevant? It sounds like that's kind of describing what I want to achieve.

Thanks!","Implementing function types with a generic, getting error `'T' could be instantiated with a different subtype of constraint.`"
2028,2021-12-24 08:40:07,0,1,"Hi everyone, super new to typescript and I'm just trying to simply loop through a response from a post request. But I'm getting 'property length does not exist on type never'

    function getMatters() {
 var uri = ""test"";

    axios({
        method: 'post',
        url: uri,
        data: {
 'UserID': 'fakedata',
 'Environment' : 'fakedata'
        }
        })
        .then(function (response) {
 let data = response.data;
            console.log(data.length); // what's going on here? I can't loop through the response.data either
        })
        .catch(function (response) {
            console.log(response);
    });
}

How do I initialize the [response.data](https://response.data) property to not 'never'? Or do cast it after? I'm not sure. I've tried both but no avail",Stuck on this loop??
2029,2021-12-24 22:08:07,0,1,"I'm bundling with webpack and normally I use ts-loader for ts files and babel for js


    {
    	test: /\.jsx?$/,
    	use: 'babel-loader',
    	exclude: /node_modules/
    },
    {
    	test: /\.tsx?$/,
    	use: 'ts-loader',
    	exclude: /node_modules/
    }


But I've noticed a lot of tutorial use babel-loader for both and just adding @babel/preset-typescript to .babelrc


    {
        test: /\(.jsx?|.tsx?)$/,
        use: 'babel-loader',
        exclude: /node_modules/
     },

     //.babelrc
       plugins: [""@babel/preset-env"", ""@babel/preset-typescript""]

Do y'all go for approach #1, #2 or something else entirely?",Do you guys compile with ts-loader or babel-loader?
2030,2021-12-25 00:51:22,0,1,"Try these on the playground:

[https://www.typescriptlang.org/play?#code/DYUwLgBAhhC8EFYBQpICM4QMwG4kG0oAaCNAXU3zRKjKSQghXGk2VVMywONIvio06jIA](https://www.typescriptlang.org/play?#code/DYUwLgBAhhC8EFYBQpICM4QMwG4kG0oAaCNAXU3zRKjKSQghXGk2VVMywONIvio06jIA)",Destructuring Assignment Array Matching bug?
2031,2021-12-25 09:30:07,0,1,"How would one scope an override, so typescript doesn't recognize it outside of a specific file.

For example declaring this:

```ts
declare module ""fastify"" {  
 export interface FastifyInstance {  
 someSupport(): string;  
  }  
}
```

Inside a something.ts makes typescript autocomplete it everywhere.

What if I want typescript to only override `FastifyInstance` inside `something.ts`? And everywhere else someSupport is not available?",Scoped override declare module only for file
2032,2021-12-28 18:46:57,0,1,[removed],Any way to make typescript faster?
2033,2021-12-28 23:11:15,0,1,"Hi everyone, I got some issues with a school assignment and  I would love to get some help. The assignment is to make a Pokédex with the help of API in typescript.

The main Api exist out:

\[{

""id"":1,""

name"":""bulbasaur"",

""href"":""https://pokedex.herokuapp.com/OP.Name/pokemon/1""},

{""id"":2,

""name"":""ivysaur"",

""href"":""https://pokedex.herokuapp.com/ OP.Name/pokemon/2""},

etc until id 150 }\]

The Api [https://pokedex.herokuapp.com/OP.Name/pokemon/1](https://webprogrammeren-2021.herokuapp.com/OP.Name/pokemon/1) exist out stuff like:

{""name"":""bulbasaur"",

""id"":1,

""shape"":""quadruped, 

""english\_flavor\_text"":""A strange seed was planted on its back at birth.\\fThe plant sprouts and grows with this POKéMON,""

}\]

Now I am able to request the name of a Pokémon based on their id . But I am unable to get any other info because I don’t know how to request the href of the Pokémon based on the id the user requests. If anyone could explain or show me how I can access the href based on the user request I would greatly appreciate it.",Help with HREF IN API
2034,2021-12-30 06:26:06,0,1,"Did I make a mistake? I wanted java because I see more open minded community (.net was all about what MS provides) and more jobs in Europe (or even USA). Although I could get better salary in c# cuz I already know it better than java, I was thinking that in the future I'm more safe with java (also do angular currently). Some trends show that c# is uprising and java doesnt although is still higher. 

I was in .bet blazor wasm. Didn't like it. Very small community and no jobs there. Now with java and angular typescript I feel like investing for the future. Have you seen any trends in job market lately regarding .net or java (spring) ? I'm 100% remote. 

I don't mind language verbosity, I don't care about how more ""clean"" is c# (if it is) I focus on product get job done, have great libraries and open source stuff that can help me. 

I love the Mac+intellij+java+typescript combination. Can't say the same for win+vs+MS. (rider Mac wasn't option then, cuz no blazor wasm debugging). 

Imagine that every time I was making a little tiny change on blazor front , I had to rebuild the application together with backend. Of course loosing all state lage etc. (now they added hot reload but it's buggy)",Coming from C# to java world.
2035,2021-12-30 22:56:08,0,1,"Hello everyone !  


I'm a bit new to typescript, and yesterday, playing with a bit complicated generic function, I found that arrays passed as generic arguments are described as Arrays and not Tuples. Though, I can make it interpreted as tuple when asserted with the 'const' keyword. But specifying cont everywhere in my code doesn't sound ok. In my opinion, there is probably a way to infer the array as a tuple, with conditional generics or something else, but I can't seem to find the solution.  


Here is a codesandbox that shows the issue more specifically : [https://codesandbox.io/s/infering-tuples-passed-in-generics-jkz2e?file=/src/App.tsx](https://codesandbox.io/s/infering-tuples-passed-in-generics-jkz2e?file=/src/App.tsx)  


Any advices appreciated ;)",Asking : could I infer tuple from array when passed as argument of a generic function?
2036,2021-12-31 03:16:36,0,1,"I am in the process of trying to migrate a js express app to typescript. I have gotten ts-node installed and working. I began experiencing an issue when trying to use a private npm package, I am still developing the package so it's still just installed locally.

&amp;#x200B;

I am getting **TSError x Unable to compile javascript** in my build/index file.

Here is snippet of the error i am getting: 

`/home/user/.nvm/versions/node/v16.13.0/lib/node_modules/ts-node/src/index.ts:750`

`return new TSError(diagnosticText, diagnosticCodes);`

`^`

`TSError: ⨯ Unable to compile TypeScript:`

`../local_package/build/index.js:3:17 - error TS2339: Property '__createBinding' does not exist on type 'typeof import(""/home/rigo/code/local_package/build/index"")'.`

`3 (this &amp;&amp; this.__createBinding) ||`

`~~~~~~~~~~~~~~~`

`../local_package/build/index.js:19:17 - error TS2339: Property '__exportStar' does not exist on type 'typeof import(""/home/rigo/code/local_package/build/index"")'.`

`19 (this &amp;&amp; this.__exportStar) ||`

I stumbled across an article that had similar errors, but it was with regards to the ts-node being run over compiled code. The code I am importing from the local package is compiled typescript code.

&amp;#x200B;

Would that be causing the issue?  My code works when I running in node as javascript files, but fails when running through ts-node.

Incase i have an issue with my typescript config files I have provided both this projects as well as the package i am importing.

&amp;#x200B;

**This Project:** 

*Note: The project is predominantly Javascript files, and have config file set-up to allow js files as we will be slowly migrating the project over. Some files may never change to ts.* 

 `{`  
 `""compilerOptions"": {`  
 `""target"": ""es6"" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,`  
 `""jsx"": ""react"" /* Specify what JSX code is generated. */,`  
 `""module"": ""commonjs"" /* Specify what module code is generated. */,`  
 `""allowJs"": true /* Allow JavaScript files to be a part of your program. Use the \`checkJS\` option to get errors from these files. */,`  
 `""checkJs"": true /* Enable error reporting in type-checked JavaScript files. */,`  
 `""esModuleInterop"": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables \`allowSyntheticDefaultImports\` for type compatibility. */,`  
 `""forceConsistentCasingInFileNames"": true /* Ensure that casing is correct in imports. */,`  
 `/* Type Checking */`  
 `""strict"": false /* Enable all strict type-checking options. */,`  
 `""skipLibCheck"": true /* Skip type checking all .d.ts files. */`  
  `}`  
`}`  


**Imported Package:**

`{`  
 `""compilerOptions"": {`  
 `""jsx"": ""react"",`  
 `""target"": ""es6"" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,`  
 `""module"": ""commonjs"" /* Specify what module code is generated. */,`  
 `""rootDir"": ""library_v2"" /* Specify the root folder within your source files. */,`  
 `""declaration"": true /* Generate .d.ts files from TypeScript and JavaScript files in your project. */,`  
 `""declarationMap"": true /* Create sourcemaps for d.ts files. */,                                /* Specify a file that bundles all outputs into one JavaScript file. If \`declaration\` is true, also designates a file that bundles all .d.ts output. */`  
 `""outDir"": ""./build"" /* Specify an output folder for all emitted files. */,`  
 `""esModuleInterop"": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables \`allowSyntheticDefaultImports\` for type compatibility. */,`  
 `""forceConsistentCasingInFileNames"": true /* Ensure that casing is correct in imports. */,`  
 `""strict"": true /* Enable all strict type-checking options. */,`  
 `""skipLibCheck"": true /* Skip type checking all .d.ts files. */`  
  `}`  
`}`",TS Node - Error using Local Typescript Package
2037,2021-12-31 09:32:34,0,1,"    //Buggy version
    
    const asyncVerifySession = async (
        fastify: FastifyInstance
        request: FastifyRequest,
        reply: FastifyReply
      ) =&gt; {}
    
    //correct version
    
    const asyncVerifySession = async (
        request: FastifyRequest,
        reply: FastifyReply
      ) =&gt; {}

If I have understood correctly, the buggy version has fastify assign that decoration function like fastify = request and request = reply. There is probably nothing I could have done but to read docs more carefully, but is there a way typescript could have told that there is in a error when it assigns request: FastifyRequest to fastify: FastifyInstance. 

Also I am not sure I understand the whole assign process to this function in general, what is it called when you create these functions were some other component then adds parameters in?",How could I have prevented wasting time on debugging in this case?
2038,2021-12-31 19:56:22,0,1,"    import axios, { AxiosResponse } from ""axios""
    
    const baseUrl: string = ""http://localhost:4000""
    
    export const getTodos = async (): Promise&lt;AxiosResponse&lt;ApiDataType&gt;&gt; =&gt; {
      try {
        const todos: AxiosResponse&lt;ApiDataType&gt; = await axios.get(
          baseUrl + ""/todos""
        )
        return todos
      } catch (error) {
        throw new Error(error)
      }
    }

I grabbed that code from [https://www.freecodecamp.org/news/how-to-build-a-todo-app-with-react-typescript-nodejs-and-mongodb/](https://www.freecodecamp.org/news/how-to-build-a-todo-app-with-react-typescript-nodejs-and-mongodb/)

What are these 2?

AxiosResponse&lt;ApiDataType&gt;

Promise&lt;AxiosResponse&lt;ApiDataType&gt;&gt; // This code is even more confusing because of 2 levels.

Thank  you.",What is the greater/less than symbol use for?
2039,2022-01-02 13:15:02,0,1,"I am web app developer (mostly APIs). I am using Nodejs with typescript mostly. I am so tired of JS craziness, memory leaks, bad resource managment, bad OO support etc. 

And I want to switch to Java because I think its more stable, has solid foundation. Is there any cons for Java too? 

Also I am using Nestjs as framework, Mikro as ORM and GraphQL for API in Nodejs. I know best framework is Spring for Java but what about for ORM? I also check some GraphQL packages for Spring and found the best one is Spring GraphQL but I think is not released. Why spring has very late adaption for GraphQL?

Have I wrong expectation from Java? Should I switch to Java or stay with Nodejs?

Thanks for every comments!",Switching to Java
2040,2022-01-03 05:49:22,0,1,"Hello I'm new to typescript and fabricjs.  

I'm referring to this Custom controls, polygon demo ([http://fabricjs.com/custom-controls-polygon](http://fabricjs.com/custom-controls-polygon)) to create an editable polygon in angular. I'm having trouble converting this to TS, specifically when it adds the **pointIndex** property to the Control class, and accessing it in the **polygonPositionHandler** function. I get the error: Object literal may only specify known properties, and 'pointIndex' does not exist in type 'Partial&lt;Control&gt;'.

Any kind of help/links to read would be greatly appreciated. Thanks!",fabricjs Custom Controls in Typescript
2041,2022-01-03 14:46:57,0,1,"I just have come across standard and ts-standard.

[https://github.com/standard/ts-standard](https://github.com/standard/ts-standard)

Is it used for real? Does anyone using that tool?

Is there an additional benefit to choose one over another (not to mention avoiding bike shredding)?",ts-standard vs @typescript-eslint/recommended vs ???
2042,2022-01-03 18:51:02,0,1,"There's so many wonderful tools in the ecosystem that make the developer's job much easier. Typescript, npm, pnpm, parcel, webpack, node, babel... but actually getting them to work together is so incredibly hard.

Typescript is very nice on its own, but having to resolve implicit type inclusion sucks so much. You don't want to include DOM types in your Node library? Well now you just disabled the import of \\@types! Wanna use ES6 imports? Yeah suddenly it doesn't work because somewhere down the node\_modules tree some package uses commonjs require  
s.. All the solutions are some old answers on stackoverflow that don't apply anymore or don't work, and in the end, the problem is solved by removign node\_modules and reinstalling.

Oh you wanna bundle libraries into your chrome web extension? Just copypaste this &gt;200 lines long webpack config. Wait, you also want to use &lt;insert a tool like sass, typescript&gt;? Well then either learn the ins-and-outs of webpack or just use Parcel. But that doesn't support webextension manifest v3..

PNPM is also a really nice tool, useful when you don't want to redownload hundreds of megabytes of npm packages every time you run npm install  
. The downside is that you always have to google for solutions for using it in your projects. Same applies for yarn.

And these problems go on and on and on. With each added tool and library the amount of workarounds increase and it gets more complicated.

Everything seems so simple on the surface but it's a giant mess and it breaks somewhere down the line. Nobody teaches how stuff actually works or how to set it up, they just post a template or copypaste boilerplate or a cli tool instead of making it easy to just install a library and use it (create-react-app, vue-cli comes to mind). It's just a giant mess and i don't know how to get out of it without losing my mind. Does anyone else experience this? How does one get out of this?

(btw i don't mean any disrespect to the tool developers)",[AskJS] Do you also spend more time configuring tooling and resolving package problems than actually working?
2043,2022-01-04 03:45:01,0,1,"I recently came across a case and started googling and came across this [https://stackoverflow.com/questions/23414090/what-is-the-difference-between-up-casting-and-down-casting-with-respect-to-class](https://stackoverflow.com/questions/23414090/what-is-the-difference-between-up-casting-and-down-casting-with-respect-to-class), I think it would be ideal to add it to PHP.

  
Or something similar to Typescript with the keyword `as`: 

[https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#type-assertions](https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#type-assertions)",Any possibility to add Downcasting and Upcasting to PHP?
2044,2022-01-04 13:10:42,0,1,"I would like to see how widespread kotlin/js is. Is it worth introducing into a mainstream project or not?

I am also interested in why people choose/like to use kotlin/js over react or angular+typescript (so comments are welcome).

Also do you use it together with React or something else?

Thanks

[View Poll](https://www.reddit.com/poll/rvu1ra)",Do you use kotlin/js?
2045,2022-01-04 13:17:23,0,1,"In firebase, you can update a nested object with this syntax

    interface Data: {
      id: string;
      members: Record&lt;string, boolean&gt;;
    }
    
    const oldData: Data = {
      id: '123',
      members: {
        'member01': true,
        'member02': false,
       }
    }
    
    const memberId = 'member01';
    
    await firestoreDocRef.update({
      [`members/${memberId}`]: false
    });

Is there any way to make typescript understand this syntax? I would like to still type-check other properties, for example if I was also setting the id field. As it stands TS tends to just ignore/allow the \['members/member01'\] part of it?",Firebase interfaces
2046,2022-01-04 13:23:44,0,1,"Hello. So I have been trying to get this to work for an unreasonable amount of time without success, so finally I thought I'd ask for some help here. **TL;DR** provided at the bottom.

**[Here is the github repository for this project](https://github.com/barca-reddit/typescript-vscode-esbuild)** which I have setup for this, and it has the following structure:

&amp;nbsp;

    typescript-vscode-esbuild
    ├─ src
    │  ├─ assets
    │  │  └─ js
    │  │     └─ client.ts (included in tsconfig.frontend.json)
    │  └─ utils
    │     └─ db.ts (included in tsconfig.backend.json)
    │  ├─ server.ts (included in tsconfig.backend.json)
    │  ├─ tsconfig.backend.json
    │  ├─ tsconfig.frontend.json
    ├─ tsconfig.json
    └─ package.json

&amp;nbsp;

As you can see, there is a [`tsconfig.json`](https://github.com/barca-reddit/typescript-vscode-esbuild/blob/master/tsconfig.json) inside the root directory, which contains references to the backend and frontend tsconfig files inside the `src` folder

&amp;nbsp;

    {
        ""compilerOptions"": {
            // ...
        },
        ""references"": [
            { ""path"": ""./src/tsconfig.backend.json"" },
            { ""path"": ""./src/tsconfig.frontend.json"" },
        ],
    }

&amp;nbsp;

- [`tsconfig.backend.json`](https://github.com/barca-reddit/typescript-vscode-esbuild/blob/master/src/tsconfig.backend.json) points to `src/server.ts` &amp; `src/utils/db.ts` via the `includes` setting.

- [`tsconfig.frontend.json`](https://github.com/barca-reddit/typescript-vscode-esbuild/blob/master/src/tsconfig.frontend.json) points to `src/assets/js/client.ts` via the `files` setting.

&amp;nbsp;

Additionally these two config files will have different `target` and `module` settings since backend is for Node, and with frontend we are targeting a browser environment.

&amp;nbsp;

So I have two goals here:

&amp;nbsp;

1. Make VSCode Intellisense and type/error checking work with the tsconfig files.

2. Run the typescript compiler in `watch` mode, but only to do the type checking, without any emits. I am using ESBuild to handle all compilation, however, it does not provide any type checking so we still rely on the `tsc` compiler for that (just the type checking, nothing else).

&amp;nbsp;

---

&amp;nbsp;

Here is the problem, I can not get both #1 and #2 (goals) to work together at the same time. If you wonder how I ended using project references (`references`), the sole reason for that is to keep VSCode happy. Previously I had two different `tsconfig` files, one in the root directory, and one in the src directory which targeted the backend and the frontend respectively, using a combination of `files`, `includes` and `excludes`. But I could not manage to get VSCode to recognize the backend files as part of it's respective `tsconfig` file, and it was reporting these files are ""not part of a TypeScript project."", only the frontend file was working.

Using project references makes this problem go away as far as VSCode is concerned, however now I am dealing with a whole set of different problems. I don't want the `tsc` compiler to produce any emits, I use ESBuild as a compiler instead. I just need to run it in `watch` mode for type checking.

&amp;nbsp;

- `npx tsc -p tsconfig.json` does not respect `target` or `module` settings for it's references, only works if you add these properties in the root file itself but we don't want that.

- `npx tsc -p src/tsconfig.backend.json` (or frontend) won't work, because referenced files can't have `noEmit` and must have `composite` enabled.

- `npx tsc --build` has `--dry` mode but it can not be used in combination with `watch` so it only runs once. It also produces other unneeded files.

&amp;nbsp;

---

&amp;nbsp;

**TL;DR** - Basically what I am trying to achieve is to have a TypeScript project with separate configurations for my server-side code, and another one for the browser. I don't want the TypeScript compiler to produce any emits because I will handle those myself with ESBuild. And finally, type checking has to work both in VSCode and in `watch` mode via the `tsc` CLI.

Any help would be greatly appreciated, cheers!",Need help setting up a TypeScript project with multiple configuration files in VSCode.
2047,2022-01-04 22:41:46,0,1,I'm looking to do part-time gigs while I work on my career to make some extra money but I can't really find jobs other than fill time developer jobs which I'm not looking for. Does anyone know a website or place I can see gigs where it's paid contribution to open source project or private entities wanting work done? I don't know where to look other than creating a Fivver page or UpWork.,"Where to find part time, freelance jobs for a NodeJS &amp; typescript dev?"
2048,2022-01-05 11:53:18,0,1,"Quick question: Do I need to learn javascript to any extent before starting with typescript or can I just start with it directly, many of my friends that work in the industry tell me that typescript is better to know and learn, I want to add interactivity to my website and also create and app that enters that website, can Typescript do that?? 

Thanks&lt;3",Beginner Level
2049,2022-01-05 14:50:52,0,1,,Santa's Letters: A fun Christmas 2D game written in typescript
2050,2022-01-05 21:00:31,0,1,[This brief post](https://iskenxan.medium.com/solve-any-external-library-error-in-typescript-with-module-augmentation-850be741fda2?source=friends_link&amp;sk=c69dccbfcb7510ff818dbd94759e7a2e) covers how to use module augmentation to solve any type errors you might encounter when working with external libraries.,Solve external library errors in TypeScript with module augmentation
2051,2022-01-06 00:44:57,0,1,"[this](https://www.typescriptlang.org/play?#code/KYDwDg9gTgLgBDAnmYcCSBnAEgFQLIAyAogDbAC2wAdjADw4B8cAvHABQQBGAVgFxwBDKogCULJl25wAlhjg4A3AChQkWAmSoAYtKoATHAKgBzYDADyPYAGMYeAWHpNWAbzgBtANIyqcANbAiBAAZvIAuvw4XmFwoDDUenKYuISkFNR0usHAUHBETAD87ERwAD5wAK76wMG6wHpi-FTAAG45cAC+yirg0PDWEFQY8LIpxGSUNCxwtN5xCXIBQaFjaZMwhsYAcgKU9mAANPKxIPH6cqsTGZs7ew7RDGwY-J5izEwc-EKi-BAycjhxHAIAA6EgQawCEi3VDMVgYbqqPoaFDobD4cbpGj7JzTNxeHz+QIhcIvE5nRJwYZQXTGOBFZIYtYZWiXLEbATbXbAfbuKKeMJhJhNVrtLpKAZDEbo1JXbHfab0ckLdhLEls9Y3bn7ETuIVsEGGoaRET8Rmy9k4xhAlxKOD2uBQMwVKC+SzcGwwNhDEHkBzeoGjJlyr1UETh5TiiWDYYeThHAQxVhBi3rezCNhwABEnAqMBggyzRyzAizIgUQA) is my code and although if I hover over the last line ,it seems to behave propely, the compiler tells me that `Type 'T[K]' cannot be used to index type 'HTMLElementTagNameMap'.(2536)`",Why can I not index the HTMLElementTagNameMap like this?
2052,2022-01-06 18:57:58,0,1,"I just encountered [this](https://stackoverflow.com/questions/51523509/in-typescript-how-do-you-make-a-distinction-between-node-and-vanilla-javascript) problem because TS would complain that the error object does not have a [`code`](https://nodejs.org/api/errors.html#errorcode) property.

This issue is almost three years old and the best solution to date is to create an ugly typeguard to narrow the type down and turn off unsafe-any to use it?

Is there a way to make the compiler aware that it's running in Node? I did set the target according to the [Node target mapping](https://github.com/microsoft/TypeScript/wiki/Node-Target-Mapping).

This is really frustrating and I gotta be honest with you, folks. It really feels like I just keep spending hours and hours trying to make the compiler happy without any real benefit to the actual project...","try/catch in TypeScript is such a gigantic pain in the ass. Even worse if used in Node, holy hell..."
2053,2022-01-07 07:02:46,0,1,"Hey r/typescript!   


Typescript noob here.  


I'm running into an issue where typescript does not want to recognize a type that I created.   


So I defined a type in payloadType. Either IInit | SpellList | ISessionData | string

`type payloadType = IInit | SpellList | ISessionData | string;`  


In emitData, I want to define the callback data type to the payload type.   
 `payload ? { payload, sessionId, collectionType } : sessionId,`  


 However, when I create a function in sessionFunctions, the typescript error is:  


 Argument of type '(data: ISessionData) =&gt; void' is not assignable to parameter of type '(data: payloadType) =&gt; void'.  
  Types of parameters 'data' and 'data' are incompatible.  
Type 'payloadType' is not assignable to type 'ISessionData'.  
Type 'string' is not assignable to type 'ISessionData'.ts(2345)   


even though ISessionData is listed within payloadtype.  


And when I change 

`data: ISessionData) =&gt; {`  
 `data.spellList.forEach((spell: SpellList) =&gt; {`  
 `localStorage.setItem(`  
 `\`dungeonbot-session-${sessionId}-spell-${spell.id}\`,`  
 `JSON.stringify(spell)`  
          `);`  
        `});`

to data: payloadType,  


it then says that SpellList is not on payload type, even though I explicitly state that it is.   


So I'm at a loss here on what to do aside from using data:any.   


Any guidance would be appreciated please and thank you!

`import { Socket } from ""socket.io-client"";`  
`import { Ref } from ""vue"";`  
`import { IInit, ISessionData, SpellList } from ""../interfaces/initiative"";`  
`export enum SessionFunctionTypes {`  
 `GET_INITIAL = ""GET_INITIAL"",`  
 `NEXT = ""NEXT"",`  
 `PREVIOUS = ""PREVIOUS"",`  
 `ROUND_START = ""ROUND_START"",`  
 `EDIT = ""EDIT"",`  
 `DELETE_DATA = ""DELETE_DATA"",`  
 `CREATE_NEW = ""CREATE_NEW"",`  
 `RE_ROLL = ""RE_ROLL"",`  
`}`  
`export enum collectionTypes {`  
 `INITIATIVE = ""initiative"",`  
 `SPELLS = ""spells"",`  
 `ALL = ""all"",`  
`}`  
`type payloadType = IInit | SpellList | ISessionData | string;`  
`async function emitData(`  
 `socket: Ref&lt;Socket&gt;,`  
 `emit: SessionFunctionTypes,`  
 `sessionId: string,`  
 `callback: (data: payloadType) =&gt; void,`  
 `payload?: payloadType,`  
 `collectionType?: collectionTypes`  
`): Promise&lt;void&gt; {`  
 `socket.value.emit(`  
 `emit,`  
 `payload ? { payload, sessionId, collectionType } : sessionId,`  
 `(responseData: any) =&gt; {`  
 `callback(responseData);`  
    `}`  
  `);`  
`}`  
`export const sessionFunctions = {`  
 `async [SessionFunctionTypes.GET_INITIAL](`  
 `socket: Ref&lt;Socket&gt;,`  
 `sessionId: string`  
 `): Promise&lt;void&gt; {`  
 `await emitData(`  
 `socket,`  
 `SessionFunctionTypes.GET_INITIAL,`  
 `sessionId,`  
 `(data: ISessionData) =&gt; {`  
 `data.spellList.forEach((spell: SpellList) =&gt; {`  
 `localStorage.setItem(`  
 `\`dungeonbot-session-${sessionId}-spell-${spell.id}\`,`  
 `JSON.stringify(spell)`  
          `);`  
        `});`  
 `data.initiativeList.forEach((initiative: IInit) =&gt; {`  
 `localStorage.setItem(`  
 `\`dungeonbot-session-${sessionId}-initiative-${initiative.id}\`,`  
 `JSON.stringify(initiative)`  
          `);`  
        `});`  
      `}`  
    `);`  
  `},`  
 `async [SessionFunctionTypes.NEXT](`  
 `socket: Ref&lt;Socket&gt;,`  
 `sessionId: string`  
 `): Promise&lt;void&gt; {`  
 `await emitData(`  
 `socket,`  
 `SessionFunctionTypes.NEXT,`  
 `sessionId,`  
 `(data: IInit) =&gt; {`  
 `console.log(data);`  
      `}`  
    `);`  
  `},`  
 `async [SessionFunctionTypes.PREVIOUS](`  
 `socket: Ref&lt;Socket&gt;,`  
 `sessionId: string`  
 `): Promise&lt;void&gt; {`  
 `await emitData(`  
 `socket,`  
 `SessionFunctionTypes.PREVIOUS,`  
 `sessionId,`  
 `(data: IInit) =&gt; {`  
 `console.log(data);`  
      `}`  
    `);`  
  `},`  
 `async [SessionFunctionTypes.ROUND_START](`  
 `socket: Ref&lt;Socket&gt;,`  
 `sessionId: string`  
 `): Promise&lt;void&gt; {`  
 `await emitData(`  
 `socket,`  
 `SessionFunctionTypes.ROUND_START,`  
 `sessionId,`  
 `(data: ISessionData) =&gt; {`  
 `console.log(data);`  
      `}`  
    `);`  
  `},`  
 `async [SessionFunctionTypes.EDIT](`  
 `socket: Ref&lt;Socket&gt;,`  
 `sessionId: string,`  
 `collectionType: collectionTypes,`  
 `payload: ISessionData`  
 `): Promise&lt;void&gt; {`  
 `await emitData(`  
 `socket,`  
 `SessionFunctionTypes.EDIT,`  
 `sessionId,`  
 `(data: IInit | SpellList | ISessionData) =&gt; {`  
 `console.log(data);`  
      `},`  
 `payload,`  
 `collectionType`  
    `);`  
  `},`  
 `async [SessionFunctionTypes.DELETE_DATA](`  
 `socket: Ref&lt;Socket&gt;,`  
 `sessionId: string,`  
 `collectionType: collectionTypes,`  
 `dataId: string`  
 `): Promise&lt;void&gt; {`  
 `await emitData(`  
 `socket,`  
 `SessionFunctionTypes.DELETE_DATA,`  
 `sessionId,`  
 `(data: IInit) =&gt; {`  
 `console.log(data);`  
      `},`  
 `dataId,`  
 `collectionType`  
    `);`  
  `},`  
 `async [SessionFunctionTypes.CREATE_NEW](`  
 `socket: Ref&lt;Socket&gt;,`  
 `sessionId: string,`  
 `collectionType: collectionTypes,`  
 `payload: IInit | SpellList`  
 `): Promise&lt;void&gt; {`  
 `await emitData(`  
 `socket,`  
 `SessionFunctionTypes.CREATE_NEW,`  
 `sessionId,`  
 `(data: IInit) =&gt; {`  
 `console.log(data);`  
      `},`  
 `payload,`  
 `collectionType`  
    `);`  
  `},`  
 `async [SessionFunctionTypes.RE_ROLL](`  
 `socket: Ref&lt;Socket&gt;,`  
 `sessionId: string,`  
 `collectionType: collectionTypes,`  
 `dataId: string`  
 `): Promise&lt;void&gt; {`  
 `await emitData(`  
 `socket,`  
 `SessionFunctionTypes.RE_ROLL,`  
 `sessionId,`  
 `(data: IInit) =&gt; {`  
 `console.log(data);`  
      `},`  
 `dataId,`  
 `collectionType`  
    `);`  
  `},`  
`};`",Defined type is not assignable to the types I defined
2054,2022-01-07 22:29:56,0,1,"Having issues with types as shown [here](https://www.typescriptlang.org/play?#code/MYewdgziA2CmB0w4EMBOAKAlAWAFB4EswAXWVAM2WFgAIBVABwBNlSAFVEBs4gTwGFw5AgHMAPAGkasAB6kwTCDQDWsXiHI0AEgBUAsgBkAonAC2sEjuQiAcsnN7kDAHw0A3nhpeaxa3fMAXDQSANye3qzEqAD8QRBRRCI0AD40AK4KsMJgsEwANOFewrDQTEGq6pq6hiaw5pZ+9rCODADaEgC6BbjeNABuyNBpsEHVxmYWxFa2TS3tHa0VGtr643WT0-7NTvMdYbgAvnh4TLBIaLTkGcDEBOA0DGhNpKgAyolwktJyFooqassxrV6lNGg4nM50MByCIgowWOxONxUHxBGBhOIJM5MEE+iACEx9o9UM8yO8wCI4Og3D4wSMaAAiUhyC7IBl5GjFUpBBmcADuEHZ-UGwx5aWYrFgDJoBxw+FwVzANzuYBoqFgxDSqDA5MpsC+snkfyWVVWwI2dJakJx9AliK4PAEQlEklcHh63nVmu17kKvVpM0CjOZvnVbO6-u8XLKjP5gojkeFQ3pDPFCKlfqOh2OCuut3uXq1YAAgqgSbwsHC7bAOA6UU70S6TSsahMGoHti5Wh1fR6vIWfa0-b0ab4OzyQ6yhdGeXGhQNk2Lq9Ks70OngDkA).

Essentially, as a single parameter the compiler has no issue being able to infer the object fields, correctly narrowing dowm the options. However as return type (single or otherwise) or as an array parameter, I can't quite get the compiler to recognise what I want is valid. Any suggestions?","Compiler complains regarding Generic Interface as return type/array param variable, not narrowing/infering valid contraits/logic"
2055,2022-01-08 13:41:20,0,1,[removed],Hi! A tool or doc that helps on the compliance with a specific version of typescript? Please some guidance. Thanx in advance!
2056,2022-01-08 18:14:32,0,1,"What's the difference? When would I actually write a .d.ts file? Or are they only meant to be submitted to package repositories?

I built a fully flushed out React Native app without even having to bother with a single .d.ts file. I recently began converting my node backend to typescript and realized I had to install .d.ts files for certain libraries, but not others. Why?

One more thing. I'd like to have the same types for my React Native front end and Node backend without having to update it in multiple spots. What's the best way to handle this?",".d.ts files vs .ts, can someone clear this up for me?"
2057,2022-01-09 06:16:40,0,1,[removed],Typescript is more trendy today!! I have a plan of learning typescript ✌🏼
2058,2022-01-09 14:55:13,0,1,"In the example below, the 'Obj.inGroups' property doesn't type check like I would expect when used in 'ObjClass'.  Assignments/usage in 'ObjClass' are being treated only as strings.  

How can I get proper auto-complete and type checking for the 'inGroups' property when used in 'ObjClass'?

    class Group {}
    
    type GroupKeys&lt;T&gt; = {
    	[K in keyof T]: T[K] extends Group ? K : never;
    }[keyof T];
    
    class Obj&lt;T&gt;
    {
        inGroups: GroupKeys&lt;T&gt;[] = []
    }
    
    class ObjClass extends Obj&lt;GroupHolder&gt;
    {
        // ERROR: Type 'string[]' is not assignable to type 'GroupKeys&lt;GroupHolder&gt;[]'
        inGroups = ['groupA']
    
        // works as intended; 'groupA' and 'groupB' are valid, 'notAllowed' is not
        localInGroups: GroupKeys&lt;GroupHolder&gt;[] = ['groupA', 'notAllowed'] 
    
        addGroup() {
            this.inGroups = ['groupB']
            this.inGroups = ['notAllowed'] // allowed, but should not be
    
            this.localInGroups = ['groupB'] // works as intended
            this.localInGroups.push( 'alsoNotAllowed' ) // works as intended
        }
    }
    
    class GroupHolder
    {
        groupA!: Group
        groupB!: Group
    }

[TS Playground Example](https://www.typescriptlang.org/play?#code/MYGwhgzhAEDiBOB7ArgB2gbwL4FgBQ+ALgJ6oCmcSaA0mcRADwAqAfNALyb4CQA2tdACWAO2gBrOogBm0JgF0AXLP5zoZAB6EywgCYwEKdAH5oApcLIA3MvADc+LLwnFpsufYJ5QkGAHkARgBWzCz4GPjQkULCBmgQSrGotPQhvKqcaQ74+N5Q0AGBAMLgeRpaun5BDIkAEoggOjaheOF4UdGJMBkA5ADmVKgAgt2qAPSjsqQU3RCE8CK9ad1CMMKIhNA+gr3CYP4gFISI0CTk0N2JyYy19Y3wLEsRUU+RIIjAYCAAkjED8ZSGK7VAZ1BpNNIcaC8PoDYYAGnOa0IgxAbwA7mQdCNoONoGjEPAxDBINFyo0dNk2lEwDodIkABQASi4VPakUIAAtBBAAHQiTqQ6H9QwAIRGLzZnO5fN+hi6UO6SJR6Mx2Nx+MJEAR-mQGwgHJQDWgSMpbKiUt5bw+31lcUFMNFaomGqJmxgIjJmIl7QtPKtnx+nR5qGQ+vp50+EEQADl1srEBisdBmeqCa6SR7tOSJbg8LmciV9CDbjYwhLhWhBgBCBIDcsDEU1gFoBxAA)",Generic not type checking as expected?
2059,2022-01-10 05:14:55,0,1,[removed],Error while deploying typescript discord bot to Heroku
2060,2022-01-10 15:34:49,0,1,,ez-mapper.js a simple object mapper for javascript and typescript
2061,2022-01-10 15:38:08,0,1,,ez-mapper.js a simple object mapper for typescript
2062,2022-01-11 10:28:04,0,1,[This beef post](https://iskenxan.medium.com/ambient-modules-in-typescript-what-they-are-and-how-to-work-with-them-8eed3e95441f?source=friends_link&amp;sk=a23769309c7c000eff505da80ec6293a) explores ambient modules in TypeScript. What they are and how to work with them.,Ambient Modules in TypeScript: What they are and how to work with them
2063,2022-01-11 23:48:39,0,1,"Hi, I am new to TypeScript. I have an object which I want to validate is the same structure/shape as some interface. I am using a type guard function to do this. Here is my current code:

    interface City {
        ""name"": string,
        ""country"": string
    }
    
    const isCity = (object: unknown): object is City =&gt; {
        return !!object &amp;&amp; typeof object === 'object' &amp;&amp; 'name' in object &amp;&amp; typeof object['name'] === 'string'
    }

What I am trying to do here is that I am using the JavaScript `in` operator to check that the key `name` is in the object. Then I am trying to see if that key `name` is of type `string`. However, it gives me the following error at `object['name']`:

    Element implicitly has an 'any' type because expression of type '""name""' can't be used to index type '{}'.
      Property 'name' does not exist on type '{}'.ts(7053)

I would assume TypeScript would know that the key `name` is in the object because I used the `in` operator to check this but it gives me an error. How can I resolve this?

Here is a [TS Playground](https://www.typescriptlang.org/play?#code/JYOwLgpgTgZghgYwgAgMLDAT2QbwFDKHIBEIcAthMQFzIDOYUoA5gDQFHEID2AruFEw16jFngC+ePDxANkwOuizIAvMgAU3AEYArCAjC1+AaxDcA7iACUtbXoPy6aDNhUA+XB0JQIYXlBBkAEIgu30wZAAySOQsAAcIbhhkMIcVdOQAclSwTKiYzLJKPNAU3XD82MwEpLL7MABtQooITIBdVQzMhiYQZkyJIA) for the code.",How to check that an 'unknown' object has a specific key and that the key is a specific type?
2064,2022-01-12 16:37:03,0,1,[removed],"in typescript, how to call JavaScript code?"
2065,2022-01-14 07:27:29,0,1,,EfficientNet - image recognition and object detection model written in node and typescript
2066,2022-01-14 07:27:29,0,1,,EfficientNet - image recognition and object detection model written in node and typescript
2067,2022-01-14 07:27:29,0,1,,EfficientNet - image recognition and object detection model written in node and typescript
2068,2022-01-16 11:28:04,0,1,[removed],Show r/typescript: A confusion-free global clock
2069,2022-01-16 20:12:45,0,1,"I'm new to TypeScript and Node.js stuff, would appreciate some advice about this.

I want to do all three of these things at the same time:

 - Use a DefinitelyTyped version of a JavaScript library
 - Use ECMAscript modules (`export` and `import`) in my TypeScript &amp; JavaScript code
 - Run it in a web browser without using Browserify, Webpack, etc

The library I'm using is D3.js ([website](https://d3js.org/), [npm](https://www.npmjs.com/package/d3), [DefinitelyTyped github](https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/d3), [DefinitelyTyped.org](http://definitelytyped.org/docs/d3--d3/modules/d3.html)). I'm using Visual Studio Code as my TypeScript editor / IDE.


&amp;nbsp;


# Setup to reproduce the problem

1. Create new empty folder on disk.
1. Run `npm init`.
1. Run `npm install d3 --save`.
1. Run `npm install @types/d3 --save-dev`.
1. Add a minimal HTML file, which is shown later in this post.


Add a simple tsconfig.json file:

    {
        ""compilerOptions"": {
            ""target"": ""ES2021"",
            ""strict"": true
        }
    }

After running the TypeScript compiler once, the important parts of folder structure should look like this:

	root_folder/
	├── node_modules/
	│   ├── @types/
	│   │   └── d3/
	│   │       ├── index.d.ts
	│   │       └── package.json
	│   └── d3/
	│       ├── dist/
	│       │   └── d3.js
	│       └── package.json
	├── index.html
	├── main.js
	├── main.ts
	├── package.json
	└── tsconfig.json


&amp;nbsp;


# Attempt 1 - import `""d3""`


This way Typescript likes it, but Chrome isn't happy.

Here is index.html:

    &lt;html&gt;
    &lt;body&gt;
        &lt;script type=""module"" src=""main.js""&gt;&lt;/script&gt;
    &lt;/body&gt;
    &lt;/html&gt;

Here is main.js:

    import * as d3 from ""d3"";
    console.log(d3);
    d3.select(""body"");

Result:

- TypeScript compiles without errors.

- Chrome produces an error from line one of the JavaScript file:

        Uncaught TypeError: Failed to resolve module specifier ""d3"". Relative references must start with either ""/"", ""./"", or ""../"".


&amp;nbsp;


# Attempt 2 - import relative path to .js file

TypeScipt does not like this way. In Chrome, the ""failed to resolve module specifier"" error goes away, but the import does not actually work.

index.html is the same as before:

    &lt;html&gt;
    &lt;body&gt;
        &lt;script type=""module"" src=""main.js""&gt;&lt;/script&gt;
    &lt;/body&gt;
    &lt;/html&gt;

In main.js, use a relative path to the d3.js file in node_modules folder:

    import * as d3 from ""./node_modules/d3/dist/d3.js"";
    console.log(d3);
    d3.select(""body"");

Result:


- The TypeScript compiler produces this error :

        main.ts:1:21 - error TS7016: Could not find a declaration file for module './node_modules/d3/dist/d3.js'.

  I have tried all possible values of the [moduleResolution](https://www.typescriptlang.org/tsconfig#moduleResolution) TypeScript compiler option, which does not make a difference.

- Despite the TypeScript compiler giving an error, it does actually transpile the .ts file into a .js file. In Chrome, the `import` statement appears to work. But when I log the `d3` object, it's a module without any functions inside it:

        Module {Symbol(Symbol.toStringTag): 'Module'}

  So the call to `d3.select()` fails with:

        main.js:3 Uncaught TypeError: d3.select is not a function


&amp;nbsp;


# Attempt 3 - use `&lt;script&gt;` tag instead of  import

This method works but prevents me from using ECMAScript modules.

In index.html, add D3 using the relative path to the .js file in in a &lt;script&gt; tag:

    &lt;html&gt;
    &lt;body&gt;
        &lt;script src=""node_modules/d3/dist/d3.js""&gt;&lt;/script&gt;
        &lt;script type=""module"" src=""main.js""&gt;&lt;/script&gt;
    &lt;/body&gt;
    &lt;/html&gt;

In main.js, don't do any `import` statemehts:

    console.log(d3);
    d3.select(""body"");

Result:


- Typescript compiles without errors.

- Web browser works correctly.

- I can't use exports or imports. For example if I add the line

        export const n = 1;

  then Typescript says 

        main.ts:4:13 - error TS2686: 'd3' refers to a UMD global, but the current file is a module. Consider adding an import instead.


&amp;nbsp;

Does anyone have suggestions about what I should do? Thank you!!",Braindead question about how to use a DefinitelyTyped library installed via npm in a web browser
2070,2022-01-17 05:12:51,0,1,"hey fellas already kind of irritated at this web development stack BS.. so please forgive my frustration..... 

 I can't believe that this typescript/javascript crap was/is/and forever will be the de facto standard of the web..... but i digress....

I'm having trouble figuring out what this error means but i'm sure it can be resolved with another ""easy hack""..... As everything lately seems to be fixed with another little ""easy hack"".......

Getting this error for some dumb reason i'm sure.

&amp;#x200B;

&gt;Uncaught ReferenceError: exports is not defined  
&gt;  
&gt;at app.js:2  
&gt;  
&gt;(anonymous) @ app.js:2

all i did was export a function to test typescript out.  


core/CoreTest.ts

`export const testFunction = function () : void {`

`console.log(""This is a core test"");`

`}`

and then i called it here...

app.ts

`import { testFunction } from './core/CoreTest';`

`testFunction();`

Not sure why something that should be so easy is made to be so complicated.... and people think C/C++ is hard.....",Uncaught ReferenceError: exports is not defined
2071,2022-01-17 12:50:50,0,1,"Here's a minimal example with the problem I'm having ([playground link](https://www.typescriptlang.org/play?#code/C4TwDgpgBAYg9nKBeKBvAUFLUwCc5gCMAXFAEYIA2EAhgHYA0m2eBATKXQK4C2ZEuJgF8A3OnTVgUAGYJS8RCgzYc+IqWC4uEJitZgOUAAwA6AKzCxk8jVzyEyNMyz6SMmpQDOO56vakAWjZzS3FrfVIAawgQOGlYBDFZXCgACn0oAEs6GQQASjRcuABtfQBdRzJbUrUykSghdCA)). Sorry if this is may be a simple problem, but I'm very new to TypeScript.

    type Foo = {
        prop1: boolean,
        prop2: number,
    };

    let foo: Foo = {
        prop1: true,
        prop2: 0.5,
    };
    let bar: Foo = {
        prop1: false,
        prop2: -2.5,
    };

    let prop: keyof Foo;
    for (prop in foo) { foo[prop] = bar[prop]; }

I think I know why this problem is happening. Typescript doesn't seem to be capable to infer that I am assigning bar.prop1  to foo.prop1 and bar.prop2 to foo.prop2 (there's nothing wrong here, I'm assigning a boolean to a boolean and a number to a number). Typescript seems to think that that I could possibly be assigning bar.prop1 to foo.prop2 (because it can't know at compile time what is the dynamical value of what goes inside the square brackets), so it errors.

How can I solve this? Do I actually have to remove the loop and manually set all the properties of one object to the other? My real code has way more properties than this, so I would prefer to not do that if possible.","I think I know why I'm having this problem, but I have no idea how to solve it (Type 'number | boolean' is not assignable to type 'never')"
2072,2022-01-17 21:10:28,0,1,"Let's say I have this TypeScript code:

```typescript
enum EVENT {
  FIRST_EVENT = ""game:first_encounter"",
}

const EventHandler: keyof typeof Event = {
    [EVENT.FIRST_EVENT]: (data: any) =&gt; {
        console.log(`Hello there, ${data.blue_player}`);
    }
}

const data = { blue_player: 'Blue McBlue', event: EVENT.FIRST_EVENT}
const eventName: EVENT = data.event;

EventHandler[eventName](data);
```

I have an error with `EventHandler` near the top.

    Type '{ ""game:first_encounter"": (data: any) =&gt; void; }' is not assignable to type '""prototype"" | ""AT_TARGET"" | ""BUBBLING_PHASE"" | ""CAPTURING_PHASE"" | ""NONE""'.

I also have an error of with `eventName` on the last line with: 

    Element implicitly has an 'any' type because index expression is not of type 'number'

https://www.typescriptlang.org/play?#code/KYOwrgtgBAogajAcgFSgbwFBSgMQJIBKAysgPrxKoC8UARAOYCGEwAXAGYCWATgM4AupUAGMA9mBD9g3WgBoMAXwwYxIAbABuofgAlGIACYAbaaygBrYAE9R7KPysAHYLc3aoNTNmwBtCigA6fGIyf2QAXTMACgNGfkYzfSsASg8APnQsb2zVXlETAKNReiiAAx1gIyL7AAtpYFkoABI0WPiAgCMjMGBSRyNGK2kFUuSAbizsJSUVUTV+KDbGD3QoLp6+gaHuMwByACFu4CgAWWFDnt3G4C1JMzCgwhJyBBQlXIWb7URmNlhX6iLOKMAJfSQTDAwW66fTGaQ+MH8H4scIxYHjIA

See what I mean? How can I correctly type this?",How to type a constant with string-defined functions?
2073,2022-01-17 22:24:33,0,1,"Hi,

I'm struggling with a type. Basically, my goal is to get a type from a map of types indexed by an enum using the argument of a function that is typeof the enum:

    interface Foo {
        x: string
    }
    
    interface Bar {
        y: number
    }
    
    enum Baz {
      FOO = ""foo"",
      BAR = ""bar""
    }
    
    type TypeMap = {
        [Baz.FOO]: Foo
        [Baz.BAR] : Bar
    }
    
    // Obviously this isnt correct, assume is third party function in actual impl.
    function genericFunction&lt;T&gt;(){ return {} as T};
    
    function getTypeFromMap&lt;T extends typeof Baz&gt;(argument: T[keyof typeof Baz]){
        type argumentType = typeof argument
        return genericFunction&lt;TypeMap[argumentType]&gt;()
    }
    
    const test = getTypeFromMap(Baz.BAR) // Is not type Bar but union type Bar | Foo

Link to playground here:

[https://www.typescriptlang.org/play?#code/JYOwLgpgTgZghgYwgAgGIHt3IN4FgBQyRyAHgFzIDOYUoA5gQL4EGiSyIoBCcUOBxZAE8KIAK4BbAEbQmLfBHETkPAF79CaAPJbkAXmQAiGJkMAaASoCCAJX1GpvQ3PwEwQgA4oAKp4gBZOA97PE0iAG01ADpUHQBdCgx0Swjorls45AoeKBcCGDEQBDBgdBBkOkVoYARUQuLSkAAebwA+AAoASmxkKAgwMShy7EZkOEpkb0YAbnkCopKyiv7fL1QodAlAjxbkCBJIEAATCfcvdBgVOFUO3jpJRTAKb3CAawghC+QziC+1OO6KW+fjGUHuEkeqxQBh+XzuD3AQL6AyGyxA1Vq9UWzSh23C8Ih4ChcQ6nTy+AQZWo3wg1IMlTAUPWm227TStk6QA](https://www.typescriptlang.org/play?#code/JYOwLgpgTgZghgYwgAgGIHt3IN4FgBQyRyAHgFzIDOYUoA5gQL4EGiSyIoBCcUOBxZAE8KIAK4BbAEbQmLfBHETkPAF79CaAPJbkAXmQAiGJkMAaASoCCAJX1GpvQ3PwEwQgA4oAKp4gBZOA97PE0iAG01ADpUHQBdCgx0Swjorls45AoeKBcCGDEQBDBgdBBkOkVoYARUQuLSkAAebwA+AAoASmxkKAgwMShy7EZkOEpkb0YAbnkCopKyiv7fL1QodAlAjxbkCBJIEAATCfcvdBgVOFUO3jpJRTAKb3CAawghC+QziC+1OO6KW+fjGUHuEkeqxQBh+XzuD3AQL6AyGyxA1Vq9UWzSh23C8Ih4ChcQ6nTy+AQZWo3wg1IMlTAUPWm227TStk6QA)

What do I change in order to make test be determined to the right type?",Using function argument to dynamically get type from a map
2074,2022-01-18 11:41:14,1,1,[removed],"‎ELI5 Newbie starting React js, why do people recommend typescript before React?"
2075,2022-01-18 12:54:48,0,1,"Hi everyone,

i'm new to Typescript and till now i love it. 

But i have one problem using TS + Mongoose. I'll wanted to split up my file with schema, types, methods and statics in different files. I've found a tutorial for this: [https://medium.com/swlh/using-typescript-with-mongodb-393caf7adfef](https://medium.com/swlh/using-typescript-with-mongodb-393caf7adfef)

But there are some mistakes in this tutorial. Within statics, the writer uses this, but this is not defined in his functions. So i had to add this in function parameters. I added them with type: this: Model&lt;IUserDocument&gt;

Is this the right way? Has anyone else a link where it is described how to split files for mongoose schemas and how to do it correct?

Thanks a lot, getting gray hairs already....",Typescript + Mongoose + Seperate Files
2076,2022-01-19 01:50:59,0,1,"I would like to add certain constraints to a list of parameters for a function dealing with file upload. The function should be configurable in such a way that it produces:

* a single result or an array of results, based on a passed option
* each result can be either a File object, or a specifically parsed file, based on another option.

Using conditional types, I created a simpler case, when a function receives the options and correctly infers the type of the result.

[link to playground](https://www.typescriptlang.org/play?#code/C4TwDgpgBAYglgGwgJQgQwCYQE4FkLAAWA9hlALwBQUUAPlAOTboYCCAzq9tmiAEIBXAGZCcDanUbNMHPnAB2abCADKwbAoDm4mvSYsOAETTA0AVWQAZHZP0z2AFQgAPYAwDclLy7DFswKFBIKAB5MGA4Ynl2CigAbwlpLDwCEgwAfgAuWEQUFhx8IlJPGjQEBGIAd1wBBAiwJCyoACNiYiQ0eU8AX09KIOgwiKj2GD8uHn5hUWxYhJokgtTSbLs2Tm5eQRExHr6B0PDI6IB1OCJDCCEFCAxUTCWisnJ4xPyUp+z4JHvkwrS9l4DkNjqM-DU6nAGhBvhAYi95lAyhVqrV6khsuoBBBAf1wNBYQ4eNEhH4ALa3BzECZbaY4OYSa5IRQU7LsdRaEpQADGUWAEHkwGyNKmO2wuIOhOJ7FJ2ApGCpag08k0DJoTIFaFZUHZys0XN5goFQp1HJVuLxwVQ7DRAB4HFAXPz5BgYiCRgA+WIOp0C12HYbRMbYEXbGZQdISa1o4OhunYe1ezISH2uP1uo4jM4XK43O7vf6kCMSGjRurBqWdGXkynEJVaRNQZM0UtwmN+AAKCDQClhif2+KgZeAsc2opm9sdaZdGcDYJDY7DOC9VBoqed-vdQfBaKhSFhMUjLZySCJVdl8qpcbFAG0ALpNksniBnkk1hXUxfxgdWtvlvyVm+cq1vWKqTr6M4BqC2aEJc1zyLcvyPGkK4plOG6zqCwYQuiMK5IeT6AdWwEfqBmj3o+x5EReIFmvqQKDsOwZdj28h9uu6ZQZ6FBoRBm6ZtueC7tCB7FlRuQUc2Lawn0lAAPRyVAJwhMgADSKiUIa7I6nAZIiQI8jcoGsTgdO-Fzh6AAUYBKFq7DZA4ACU2TDo25BeoizDAAI2DyPE3RIjEBkANbyFUfloDErkOB67hQApUAICAWiBMQgT4uw3IaOEUCyjpekIHA3LnCAlC9F4WkBPy7IAGplAAjLE7C6fphmBpZcRQIsHxpKsSQcNeMwMAANEi5RVDhe4QJi2DYlA3SOXFCUKDMMTUe+V5fred6aSMVVwsAdUIAATE1LX7gZRnHB1XUFssGB9QYGyTEu2AMPNi3xYpK04GtuSvsRl6fi98a7dE+21WUADMZ0FTCl3tZ13WFg9UhPcYpgWNYH1Ld98irc+AM0aRdFg9p1WHWUAAssOtVdUQ3ciE3CRigSzdAC241AP3YH9SD3kAA)

However, what I can't figure out how to do is to add a callback to the list of options, such that the type of its argument is inferred from the types of the other fields of the options object. For example:

    // here typescript would be happy
    const options1 = {
      readerMethod: 'readAsArrayBuffer',
      allowMultiple: true,
      onChange: (result: FileTransformedToArrayBuffer[]) =&gt; console.log(result)
    }
    
    // while here typescript should complain that the type of the onChange callback is wrong 
    const options1 = {
      readerMethod: 'readAsArrayBuffer',
      allowMultiple: true,
      onChange: (result: File) =&gt; console.log(result)
    }

Here's the [playground](https://www.typescriptlang.org/play?#code/C4TwDgpgBAYglgGwgJQgQwCYQE4FkLAAWA9hlALwBQUUAPlAOTboYCCAzq9tmiAEIBXAGZCcDanUbNMHPnAB2abCADKwbAoDm4mvSYsOAETTA0AVWQAZHZP0z2AFQgAPYAwDclLy7DFswKFBIKAB5MGA4Ynl2CigAbwlpLDwCEgwAfgAuWEQUFhx8IlJPGjQEBGIAd1wBBAiwJCyoACNiYiQ0eU8AX09KIOgwiKj2GD8uHn5hUWxYhJokgtTSbLs2Tm5eQRExHr6B0PDI6IB1OCJDCCEFCAxUTCWisnJ4xPyUp+z4JHvkwrS9l4DkNjqM-DU6nAGhBvhAYi95lAyhVqrV6khsuoBBBAf1wNBYQ4eNEhH4ALa3BzECZbaY4OYSa5IRQU7LsdRaEpQADGUWAEHkwGyNKmO2wuIOhOJ7FJ2ApGCpag08k0DJoTIFaFZUHZys0XN5goFQp1HJVuLxwVQ7DRAB4HFAXPz5BgYiCRgA+WIOp0C12HYbRMbYEXbGZQdISa1o4OhunYe1ezISH2uP1uo4jM4XK43O7vf6kCMSGjRurBqWdGXkynEJVaRNQZM0UtwmN+AAKCDQClhif2+KgZeAsc2opm9sdaZdGcDYJDY7DOC9VBoqed-vdQfBaKhSFhMUjLZySCJVdl8qpcbFAG0ALpNksniBnkk1hXUxfxgdWtvlvyVm+cq1vWKqTr6M4BqC2aEJc1zyLcvyPGkK4plOG6zqCwYQuiMK5IeT6AdWwEfqBmj3o+x5EReIFmvqQKDsOwZdj28h9uu6ZQZ6FBoRBm6ZtueC7tCB7FlRuQUc2Lawn0lAAPRyVAJwhMgADSKiUIa7I6nAZIiQI8jcoGsTgdO-Fzh6AAUYBKFq7DZA4ACU2TDo25BeoizDAAI2DyPE3RIjEBkANbyFUfloDErkOB67hQApUAICAWiBMQgT4uw3IaOEUCyjpekIHA3LnCAlC9F4WkBPy7IAGplAAjLE7C6fphmBpZcRQIsHxpKsSQcNeMwMAANEi5RVDhe4QJi2DYlA3SOXFCUKDMMTUe+V5fred6aSMVVwsAdUIAATE1LX7gZRnHB1XUFssGB9QYGyTEu2AMPNi3xYpK04GtuSvsRl6fi98a7dE+21WUADMZ0FTCl3tZ13WFg9UhPcYpgWNYH1Ld98irc+AM0aRdFg9p1WHWUAAssOtVdUQ3ciE3CRigSzdAC241AP3YH9SD3l4XgJYYIQAKIqAAcgwDrKWplrQGY7AQGYDTEJgHa2WS7CmRhXHRCuesxAAZK8NBRAAwoQnSaNNUCWcwNp1C5f7AImjkUF6ABuxBwBguKVVAAhK7CKsVJgJkcZBW7sFZNk8Fr2SK8rqvq5r2sxe77mmzye23Y7AQIgFkWB-IoXhYFQ4u-2X2JclKqpelkCZdlAR5c1BVFSVEhx3ZAB0FtWyqED2y7i1lX0CWUEHeFIKHasYB1bwPD1Kxo-Yg1iMNEhM6ikLQjN2Jb2b8iW9btsj-nXz-dKxObSDYqZ16WntBAvcVJoF9oo5ZWLUAA) with my failed attempt to make it work. Is this achievable with typescript? It feels like it should be; but I am struggling. Could someone please help?",Can typescript infer types of arguments for a callback based on other options passed to a function?
2077,2022-01-20 01:15:18,0,1,[removed],Need help with typescript syntax
2078,2022-01-20 01:46:41,0,1,"I have the following code, where I want to use `formatSelectedValue` to take in either a string or a number, and return it formatted somehow with the same type:

    type FormatSelectedValue = {
      (item: number): number;
      (item: string): string;
    };

Inside my react component I want to have the `useCallback` do the formatting and return the JSX. The actual code is a little more complex but i've simplified it.

    import React, { useCallback } from 'react';
    
    type FormatSelectedValue = {
      (item: number): number;
      (item: string): string;
    };
    
    type RenderValue = {
      (item: number): JSX.Element;
      (item: string): JSX.Element;
    };
    
    interface Props {
      formatSelectedValue: FormatSelectedValue;
    }
    
    const Component: React.FC&lt;Props&gt; = ({ formatSelectedValue }) =&gt; {
      const doFormat = useCallback&lt;RenderValue&gt;(
        // error on this line where I call formatSelectedValue
        (selected) =&gt; &lt;div&gt;{formatSelectedValue(selected)}&lt;/div&gt;,
        [formatSelectedValue],
      );
    
      return doFormat('1');
    };
    
    export default Component;

I get the following error where I call `formatSelectedValue(selected)`

    No overload matches this call.
      Overload 1 of 2, '(item: number): number', gave the following error.
        Argument of type 'string | number' is not assignable to parameter of type 'number'.
          Type 'string' is not assignable to type 'number'.
      Overload 2 of 2, '(item: string): string', gave the following error.
        Argument of type 'string | number' is not assignable to parameter of type 'string'.
          Type 'number' is not assignable to type 'string'.

I'm having some trouble understanding why the overload can't apply at this level as well.

&amp;#x200B;

Playground link: [https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAJQKYEMDGMA0cDecCuAzkgMIoA25ARugNZwC+cAZlBCHAORSoacDcAKEEwAnmCRwAYtBAoYAZSTkkGJABMAahXySAvLkFw4ACmAwkIAFxwAdvhBUkUAJQ37j50ONmL1uIQwUMC2AOZuAUEhoUIMQiLiksi26s7a5LpwBjhGpuaW7g5OrjYAUgoAGgB0AKIqIEi2MN55fjaBwWER5dV1lo3NgnHCIRZQzOiSAApsYISGxsyy8koqalo6SDYyUHKKyqoWGxlIscJoELaBcCTskLYDNsjoMFVSJAA8MxBzAHxZpjwS12KwO63SmQYLiy-xyxguV3g6ggOz2AKIpAo1DoH2SqSgEKQvxMuR8xDWR2hen+H3UwAAbr8cMC9qtDhpCSZyez1C4GB8APR0xmYUlwADaLNBFI5mwAuqLjC54sYeDB8FBbHBkaj5CZOABGTjKobxJAAD0gsG1SAm+HI8Fu4EuAyEQA](https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAJQKYEMDGMA0cDecCuAzkgMIoA25ARugNZwC+cAZlBCHAORSoacDcAKEEwAnmCRwAYtBAoYAZSTkkGJABMAahXySAvLkFw4ACmAwkIAFxwAdvhBUkUAJQ37j50ONmL1uIQwUMC2AOZuAUEhoUIMQiLiksi26s7a5LpwBjhGpuaW7g5OrjYAUgoAGgB0AKIqIEi2MN55fjaBwWER5dV1lo3NgnHCIRZQzOiSAApsYISGxsyy8koqalo6SDYyUHKKyqoWGxlIscJoELaBcCTskLYDNsjoMFVSJAA8MxBzAHxZpjwS12KwO63SmQYLiy-xyxguV3g6ggOz2AKIpAo1DoH2SqSgEKQvxMuR8xDWR2hen+H3UwAAbr8cMC9qtDhpCSZyez1C4GB8APR0xmYUlwADaLNBFI5mwAuqLjC54sYeDB8FBbHBkaj5CZOABGTjKobxJAAD0gsG1SAm+HI8Fu4EuAyEQA)",[HELP] Can't understand why function overload won't let me pass the argument properly
2079,2022-01-20 09:31:56,0,1,"I have a use case where I need to combine multiple functions, and then call a specific function from a third function.   


Code:

&amp;#x200B;

    const combineFunctions = &lt;T extends Record&lt;keyof T, T[keyof T]&gt;&gt;(funcs: T) =&gt; {
      return (key: keyof T, params: Parameters&lt;T[keyof T]&gt;): ReturnType&lt;T[keyof T]&gt; =&gt; funcs[key](params)
    }
    
    interface AddNumbersArgumentsType {
      a: number
      b: number
    }
    
    type AddNumbersReturnType = number
    
    const addNumbers = (params: AddNumbersArgumentsType): AddNumbersReturnType =&gt; {
      return params.a + params.b
    }
    
    interface CombineStringWithNumberArgumentsType {
      c: string
      d: number
    }
    
    type CombineStringWithNumberReturnType = string
    
    const combineStringWithNumber = (params: CombineStringWithNumberArgumentsType): CombineStringWithNumberReturnType =&gt; {
      return params.c + params.d
    }
    
    const funcs = {
      addNumbers,
      combineStringWithNumber
    }
    
    const funkies = combineFunctions&lt;typeof funcs&gt;(funcs)
    
    const a = funkies('addNumbers', [{ // Here Paramters util function forces me to send an array
      // Here it should autocomplete only correct params from AddNumbersArgumentsType
      // But it gives me an option of all arguments all functions take
    }]) // =&gt; Return type is not gotten correctly, but is a combinations of all functions return types

Main problems being

* Parameters util forces me to use an array while I just want to get the type of params
* Arguments autocomplete for all params from all functions instead of taking argument types specific to the function
* Same problem with return type as with arguments

[You can see the code running here](https://www.typescriptlang.org/play?ssl=37&amp;ssc=99&amp;pln=1&amp;pc=1#code/MYewdgzgLgBKC2AjAlmApgMQK5mFZ4EMAvDADwAqMaAHlGmACZEBKaoATo2QNZoCeIAGYwKAGlEBtPoJEUAugD5FACiE5gEAFyiAlCUUwA3gFgAUDBgc0ULBzAwVMnTOGiJABwCGHL-G0wAAo%20fjZoHBCU0gJuCoq6Omy29hT8HmhRrnJKBjDquBDR-PIq3r7%20uuYAvubmqPQcQl7AaDAAgoyMAHJYSOEQbRwA5r0MUBCp6cbmll46YL2I4TMwiPOLy2Y1ZuZQaa0d3RsRSXZgk62kC30ctWagkLBenT03RKSlIf46h69LEYMRvAxhN9gl2i9jhBTil9rlTBYrDYzjAyn4IAA6LwwADUqK%20mMQ1Tu9XCTRaMAAwiAkKg0ABlKAcVBDADqyCgAAs-uFAaMwOMLtNEcAdNBmWAhitGOsbsSdmY9lNqbT0IyJWyOdzjjDznDSOKWXcHtA4DSUGqmSz2VyeRwSI40d8qea6errVq7XzgQLQelwSqLQyrZKbdqbrqhcRDAjLNZkg4nZjgLj8eVMYx5eYTbB8poHbGYM8jm8xCsEEH3aHPccs-dCLmcDxkGh3mbVZgNPhCGQlWg3HmIKpB5UFTmiw78s3WyoAOTFu0QWcSSRGGAAenXMAAEuFWsFyg0iFh8AAbPJdggOIQgDgtIjAmBQEAwCAMRhFhw%20Xz8Fabnd7jAHKvpyIBYKeH5eCeIAIB4p5hDA4CnvwZocNYeBpuieQcDSEIlv8AzDPygr7H%20W4AEInkBsBDMgABurYwI%20XgOCAHjdqxIheKe54%20ECIJFjxF64BxRBQF4fDVPI%20j-tGMC6k%20cLIEQYAgDRan0A4nDoVAyESIgVHKROFaoF4omIVxQl5uZ8Yon2EBAA)

&amp;#x200B;

If someone has any ideas on how to solve it, that would be really helpful. Thanks in advance :)",Need some help with passing around generics and getting the correct types back
2080,2022-01-20 10:07:22,0,1,,Latest java to typescript converter online by kalkicode
2081,2022-01-20 10:15:10,0,1,,New java to typescript converter online by Kalkicode
2082,2022-01-20 14:15:16,0,1,"Hey, r/typescript!

I’ve built two React hooks that will help you in making your apps more accessible. Both hooks are:

* 🪶 Ultralight: \~0.45kb (gzipped).
* ⌨️ Type-Safe: Written in TypeScript.
* ⚙️ SSR Safe: Prevents potential markup mismatches during hydration and sets the most appropriate initially returned value in accordance with the accessibility best practices.

## 🪝 usePrefersReducedMotion()

🗄 Repository: [GitHub](https://github.com/anatoliygatt/use-prefers-reduced-motion)  
💻 Live Demo: [CodeSandbox](https://codesandbox.io/s/demo-for-anatoliygatt-use-prefers-reduced-motion-68910)

`usePrefersReducedMotion()` detects whether the user has requested the operating system to minimize the amount of animation or motion it uses.

This hook can help you in making your apps more accessible to people with a *motion-triggered vestibular spectrum disorder*.

You can read more about the `prefers-reduced-motion` media query and the accessibility issues it helps solve [here](https://web.dev/prefers-reduced-motion/).

## 🪝 usePrefersColorScheme()

🗄 Repository: [GitHub](https://github.com/anatoliygatt/use-prefers-color-scheme)  
💻 Live Demo: [CodeSandbox](https://codesandbox.io/s/demo-for-anatoliygatt-use-prefers-color-scheme-llkul)

`usePrefersColorScheme()` detects whether the user has requested the operating system to use a light or dark color theme.

This hook can help you in making your apps more accessible to people with *low vision*.

You can read more about the `prefers-color-scheme` media query and the accessibility issues it helps solve [here](https://web.dev/prefers-color-scheme/).

&amp;#x200B;

🙋🏼‍♂️ I hope you will find these useful! Feedback and questions are welcome.",I’ve built two type-safe React hooks that will help you in making your apps more accessible
2083,2022-01-20 14:16:25,0,1,"Im fairly new to typescript and i am in the process on converting my JS to TS, and struggling to figure out how to define class methods that have properties attached to them.

So basically when you add the static property caching to my classes, the 'ServiceThatAddsCaching' that i extend from will do some fancy magic under the hood to cache that function and adds a 'cache' property to those functions. Typescript is inferring the type of the function but not recognizing the cache property. How can I explicitly say that this class function also has properties attached to it?

    class Services extends ServiceThatAddsCaching {
        
        static caching = {
            test: cacheOptions
        }
    
        test(string) {
            console.log(string)
        }
    
        anotherFunction() {
            this.test('hello') //works
            this.test.cache.drop() // property cache does not exist on type
        }
    }",[HELP] Class methods with properties
2084,2022-01-20 20:15:51,0,1,,typescript features to avoid
2085,2022-01-21 11:11:36,0,1,"I am a beginner at typescript, and I cannot figure out how to make my axios get request to an api work with it. 

This is the error.

    //the code
        const [value, setValue] = useState("""")
        const [cities, setCities] = useState(null)
    
        const handlechange =(e: { target: { value: SetStateAction&lt;string&gt;; }; }) =&gt; {
            setValue(e.target.value)
        }
    
        useEffect(() =&gt; {
            axios.get(""http://localhost:5000"")
                .then(res =&gt; console.log(res))
                .catch(err =&gt; console.log(""request failed""))
        }, []) 
    
        const data: object = {
            text: value
        }
    
        const checker = () =&gt; {
            axios.get(""https://raw.githubusercontent.com/russ666/all-countries-and-cities-json/master/countries.json"")
            .then(res =&gt; setCities(res))
        } 
    //error is 
    
    Argument of type 'AxiosResponse&lt;any, any&gt;' is not assignable to parameter of type 'SetStateAction&lt;null&gt;'.
      Type 'AxiosResponse&lt;any, any&gt;' provides no match for the signature '(prevState: null): null'.ts(2345)

I realise that I need to make an interface however, this is just a sample of the json data the api stores

    {
      ""Afghanistan"": [
        ""Herat"",
        ""Kabul"",
        ""Kandahar"",
        ""Molah"",
        ""Rana"",
        ""Shar"",
        ""Sharif"",
        ""Wazir Akbar Khan""
      ], ...}

As you see, I don't know how you can make an interface from that data

i wanted to do:

    interface Cities{
        city: string
    }

But then I realised this would not make sense

any help?",Axios request with typescript
2086,2022-01-21 13:04:56,0,1,"I seem to have fallen into a bit of analysis paralysis with all the options out there.  
I have been using rollup but finding some plugins that have lost support.  

I wonder what people are using these days for their builds? 

Are you using different builder solutions for frontend and backend; dev and production; etc?

 At the moment I am using rollup with plugins that offer support for umd,  the official typescript compiler, TSlint, terser and looking at adding a CSS in JS, PostCSS (and plugins) and arrange of static analysers.

I am wondering if I should use Eslint for node (cjs) and then something like Webpack for the frontend?",Advice on build scripts and tooling
2087,2022-01-21 16:45:25,0,1,"I'm learning TypeScript and was just curious what the convention, or best practice, is currently for setting the type.

I refer to [this repo](https://github.com/typescript-cheatsheets/react#function-components) quite a bit for implementing it in React.

There is says the following:

    // Declaring type of props - see ""Typing Component Props"" for more examples
    type AppProps = {
      message: string;
    }; /* use `interface` if exporting so that consumers can extend */
    
    // Easiest way to declare a Function Component; return type is inferred.
    const App = ({ message }: AppProps) =&gt; &lt;div&gt;{message}&lt;/div&gt;;
    
    // you can choose annotate the return type so an error is raised if you accidentally return some other type
    const App = ({ message }: AppProps): JSX.Element =&gt; &lt;div&gt;{message}&lt;/div&gt;;
    
    // you can also inline the type declaration; eliminates naming the prop types, but looks repetitive
    const App = ({ message }: { message: string }) =&gt; &lt;div&gt;{message}&lt;/div&gt;;

I currently have something like the following for one of my components:

    const Navigation = (props: {navBrand: {value: string, href: string}, navItems: {value: string, href: string}[]}): JSX.Element =&gt; {
      return (
        ...
      )
    };

Which seems a bit length and hard to read.

I considered doing something like the following to make it more readable, but I don't think it really helps at all:

    const Navigation = (
      props: {
        navBrand: {
          value: string, 
          href: string
        }, 
        navItems: {
          value: string, 
          href: string
        }[]
      }
    ): JSX.Element =&gt; {
        return (
          ...
        );
    };
    
    export default Navigation;

So I thought I'd ask what the established convention is when it comes to determining when it is acceptable to inline the type declaration versus not.",Convention question related to inline vs declaring Interface or Type
2088,2022-01-21 20:40:17,0,1,[removed],Best typescript tutorial;
